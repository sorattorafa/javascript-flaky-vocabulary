//
https://github.com/jhipster/generator-jhipster/blob/5068452382f00ef2444858bc827630d1a1a7dc23/generators/client/templates/react/src/test/javascript/e2e/modules/administration/administration.spec.ts.ejs

// blob: 5068452382f00ef2444858bc827630d1a1a7dc23

// project_name: jhipster/generator-jhipster

// flaky_file:
/generators/client/templates/react/src/test/javascript/e2e/modules/administration/administration.spec.ts.ejs

// test_affected:
https://github.com/jhipster/generator-jhipster/blob/5068452382f00ef2444858bc827630d1a1a7dc23/generators/client/templates/react/src/test/javascript/e2e/modules/administration/administration.spec.ts.ejs
// start_line: 28
// end_line: 88

describe('Administration', () => {
  let navBarPage: NavBarPage;
  let signInPage: SignInPage;

  before(async () => {
    await browser.get('/');
    navBarPage = new NavBarPage();
    signInPage = await navBarPage.getSignInPage();
    <%_ if (authenticationType !== 'oauth2') { _%>
    await signInPage.waitUntilDisplayed();

    await signInPage.username.sendKeys('admin');
    await signInPage.password.sendKeys('admin');
    await signInPage.loginButton.click();
    await signInPage.waitUntilHidden();

    <%_ } _%>
    await waitUntilDisplayed(navBarPage.adminMenu);
  });

  <%_ if (authenticationType !== 'oauth2') { _%>
  it('should load user management', async () => {
    await navBarPage.clickOnAdminMenuItem('user-management');
    const heading = element(by.id('user-management-page-heading'));
    await waitUntilDisplayed(heading);
    // Title should be equal to 'Users'
    expect(await heading.isPresent()).to.be.true;
  });
  <%_ } _%>

  it('should load metrics', async () => {
    await navBarPage.clickOnAdminMenuItem('metrics');
    expect(await element(by.id('metrics-page-heading')).getText()).to.eq('Application Metrics');
  });

  it('should load health', async () => {
    await navBarPage.clickOnAdminMenuItem('health');
    expect(await element(by.id('health-page-heading')).getText()).to.eq('Health Checks');
  });

  it('should load configuration', async () => {
    await navBarPage.clickOnAdminMenuItem('configuration');
    expect(await element(by.id('configuration-page-heading')).getText()).to.eq('Configuration');
  });

<%_ if (databaseType !== 'no' && databaseType !== 'cassandra') { _%>
  it('should load audits', async () => {
    await navBarPage.clickOnAdminMenuItem('audits');
    expect(await element(by.id('audits-page-heading')).getText()).to.eq('Audits');
  });

<%_ } _%>
  it('should load logs', async () => {
    await navBarPage.clickOnAdminMenuItem('logs');
    expect(await element(by.id('logs-page-heading')).getText()).to.eq('Logs');
  });

  after(async () => {
    await navBarPage.autoSignOut()
  });
});