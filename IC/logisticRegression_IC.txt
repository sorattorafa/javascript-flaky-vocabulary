,level_0,it,'should render with a null child',const,wrapper,mount,SpeedDial,defaultProps,icon,"
      ",SpeedDialAction,tooltipTitle,"""One""",null,"""Three""","
    ",assert,strictEqual,find,length,2,describe,'actions navigation',function,this,timeout,5000,testCombination,async,dialDirection,firstKey,combination,firstFocusedAction,foci,resetDialToOpen,getDialButton,simulate,'keydown',keyCode,keycodes,isActionFocused,true,`focused action initial ${,} should be ${,}`,forEach,arrowKey,i,previousFocusedAction,1,expectedFocusedAction,combinationUntilNot,slice,0,getActionButton,`focused action after ${,join,"','",await,immediate,'considers the first arrow key press as forward navigation','up','down','right','left','ignores array keys orthogonal to the direction','does not wrap around',import,isChromatic,from,'storybook-chromatic/isChromatic',Desktop,'./desktop',Mobile,'./mobile',Sidebar,'../sidebar/Sidebar',Panel,'../panel/panel',Preview,'../preview/preview',panels,'../panel/panel.stories',previewProps,'../preview/preview.stories',mockDataset,'../sidebar/treeview/treeview.mockdata',store,'./persist',realNavProps,title,'Title',url,'https://example.com',stories,withRoot,menu,PlaceholderBlock,styled,div,color,background,'hotpink',position,'absolute',top,right,bottom,left,width,'100%',height,display,'flex',justifyContent,'center',alignItems,overflow,'hidden',class,PlaceholderClock,extends,Component,state,count,componentDidMount,interval,setInterval,setState,1000,componentWillUnmount,clearInterval,render,children,props,return,"
        ",h2,style,"'rgba(0,0,0,0.2)'",fontSize,'150px',lineHeight,margin,'-20px',"
          ",propTypes,PropTypes,node,isRequired,string,MockNav,"""hotpink""",pre,JSON,stringify,"
  ",MockPreview,"""deepskyblue""",MockPanel,"""orangered""",MockPage,"""cyan""",mockProps,Nav,Notifications,pages,options,isFullscreen,false,showNav,showPanel,panelPosition,path,'/story/UI-DesktopLayout-noNav',viewMode,'story',storyId,'UI-DesktopLayout-noNav',panelCount,realProps,actions,onSelect,toggleVisibility,togglePosition,selectedPanel,"""test2""",storiesOf,'UI|Layout/Desktop',module,addParameters,component,addDecorator,withKnobs,storyFn,mocked,boolean,'mock',number,'height',1200,'width',if,local,set,`storybook-layout`,minHeight,minWidth,'Error Recovery','should have installed the react-overlay-editor editor handler',let,browser,aboutPage,new,File,__dirname,'../','pages','hmr','about.js',replace,'</div>','div',try,webdriver,context,appPort,'/hmr/about',waitForElementByCss,'iframe',2000,expect,getReactErrorOverlayContent,toMatch,"/style=""cursor: pointer;""/",restore,check,elementByCss,'body',text,/This is the about page/,finally,close,'should detect syntax errors and recover','p',toBe,'This is the about page.',waitFor,10000,/Unterminated JSX contents/,'should not show the default HMR error overlay',bodyHtml,getAttribute,'innerHTML',includes,'webpack-hot-middleware-clientOverlay',toBeFalsy,'should show the error on all pages','/hmr/contact',/This is the contact page/,'should detect runtime errors on the module scope','export','aa=20;\nexport',/aa is not defined/,'should recover from errors in the render function','return',"'throw new Error(""an-expected-error"");\nreturn'",/an-expected-error/,'should recover after exporting an invalid page','export default',"'export default ""not-a-page""\nexport const fn = '",/The default export is not a React Component/,'should recover after a bad return from the render function','export default () => /search/ \nexport const fn = ',/Objects are not valid as a React child/,'should recover from errors in getInitialProps in client','/hmr','#error-in-gip-link',click,/an-expected-error-in-gip/,erroredPage,'error-in-gip.js','throw error','return {}',/Hello/,'should recover after an error reported via SSR','/hmr/error-in-gip','should recover from 404 after a page has been added',newPage,'/hmr/new-page',/This page could not be found/,'new-page.js',write,"'export default () => (<div id=""new-page"">the-new-page</div>)'",hasElementById,'new-page',throw,Error,'waiting',/the-new-page/,delete,`Focus router wrapper after navigation to regular page (from index)`,cy,visit,`/`,waitForAPIorTimeout,`onRouteUpdate`,changeFocus,assertRouterWrapperFocus,navigateAndWaitForRouteChange,`/page-2/`,flakeyIt,'should unmount nodes',"
			",span,foo,bar,"
		",scratch,toSnapshot,spy,args,to,deep,equal,'rootId: 1','Update timings 2','Remove 4','Remove 3','should mount after filtered update',renderer,applyFilters,regex,type,Set,'dom',Foo,Bar,"
				",'Add 3 <Bar> to parent 2','Update timings 1','should find filtered nodes',findVNodeIdForDom,firstChild,'should filter by dom type #1','Add 1 <Fragment> to parent 1','should filter by dom type #2','Add 2 <Foo> to parent 1','should filter by fragment type','fragment',Fragment,asdf,'Add 2 <div> to parent 1','Add 3 <Foo> to parent 2','Add 4 <div> to parent 3','should filter on update',update,Parent,setI,useState,'Add 2 <Parent> to parent 1',act,'Update timings 3','should update filters after 1st render','Remove 2','Add 3 <div> to parent 1','Add 4 <Foo> to parent 3','Add 5 <div> to parent 4','Add 6 <span> to parent 3','Add 7 <span> to parent 3','should update filters after 1st render with unmounts',h1,"
					",'Add 4 <div> to parent 1','Add 5 <Foo> to parent 4','Add 6 <div> to parent 5','Add 7 <h1> to parent 6','Add 3 <Foo> to parent 7','Add 8 <div> to parent 3','Add 9 <span> to parent 4','Add 10 <span> to parent 4',3,'Remove 5','Remove 9','Remove 10',4,'Add 11 <Foo> to parent 1','Add 3 <Foo> to parent 11','HTMLDataListElement',in,window,xit,'should allow <input list /> to pass through as an attribute',input,"""range""",min,"""0""",max,"""100""",list,"""steplist""",datalist,option,50,100,html,firstElementChild,outerHTML,sortAttributes,"'<input type=""range"" min=""0"" max=""100"" list=""steplist"">'",'should re-render nested components',doRender,alt,Outer,is-alt,Inner,sinon,prototype,'render','componentDidMount','componentWillUnmount',j,constructor,super,_constructor,componentWillMount,componentDidUnmount,inner,'_constructor','componentWillMount','componentDidUnmount',"""bar""",have,been,calledOnce,rerender,not,called,calledTwice,secondCall,calledWith,'bar',and,returned,match,attributes,getAttributes,eql,'2',innerHTML,"'<div foo=""bar"" j=""2"" i=""2"">inner</div>'",calledThrice,thirdCall,'3',"'<div is-alt=""true""></div>'","'<div foo=""bar"" j=""4"" i=""5"">inner</div>'",'should re-render nested functional components','should be invoked for components on unmount',reset,show,proto,calledBefore,'should be invoked normally on unmount',test,"""effect debounce is honored""",assertions,Promise,resolve,reject,var,a,mobx,observable,box,values,exprCount,d,reaction,get,newValue,push,delay,150,fireImmediately,setTimeout,40,300,301,5,600,6,toEqual,catch,e,'strict mode checks',t,x,extras,allowStateChanges,7,throws,resetGlobalState,end,itIf,skip,is,'> 16.8.3','cleanup on unmount',Wrap,FriendStatus,friend,unmount,ChatAPI,unsubscribeFromFriendStatus,property,'callCount',firstArg,'enables the submit button when a query is typed',getByTestID,'time-machine-submit-button',should,'be.disabled','flux-editor',within,'.react-monaco-editor-container','be.visible',focused,'yo',force,TYPE_DELAY,'not.be.disabled','disables submit when a query is deleted','time-machine--bottom',then,"'from(bucket: ""foo"")'",'{selectall} {backspace}','shows the empty state when the query returns no results',"`from(bucket: ""defbuck"")
  |> range(start: -10s)
  |> filter(fn: (r) => r._measurement == ""no exist"")`",'empty-graph--no-results','exist','can save query as task even when it has a variable',taskName,'tax',"`from(bucket: ""defbuck"")
  |> range(start: -15m, stop: now())
  |> filter(fn: (r) => r._measurement == `",'toolbar-tab','.variables-toolbar--label',`)`,'save-query-as','task--radio-button','task-form-name','task-form-schedule-input','4h','task-form-save',`task-card`,'contain','Onboarding',user,TestUser,beforeEach,flush,fixture,'user',u,'onboarding/0','Can Onboard to Quick Start',server,route,'POST','api/v2/setup',as,'orgSetup','init-step--head-main',contains,'Welcome to InfluxDB 2.0','credits','Powered by','InfluxData','onboarding-get-started',location,'pathname','include','onboarding/1','nav-step--welcome','Welcome',parent,'span',$span,'checkmark','nav-step--setup','Initial User Setup','have.class','current','nav-step--complete',$el,'unclickable','admin-step--head-main','Setup Initial User','next','.cf-button--label','Continue','input-field--username',username,'input-field--password',password,'input-field--password-chk','input-field--orgname',org,'input-field--bucketname',bucket,'be.enabled',wait,'@orgSetup',xhr,orgId,responseBody,'onboarding/2','button--advanced','button--conf-later','button--quick-start','equal','/orgs/','Can onboard to advanced','match',/orgs\/.*\/buckets/,'Can onboard to configure later','raw script editing','switch-to-script-editor','.CodeMirror','imports the appropriate packages to build a query','functions-toolbar-tab',$CM,$cm,cm,CodeMirror,wrap,doc,'flux',getValue,eq,'','flux-function from','flux-function range','flux-function math.abs','flux-function math.floor','flux-function strings.title','flux-function strings.trim',Doc,'@flux',actual,expected,"`
        import""${",STRINGS_TITLE,package,"}""
        import""${",MATH_ABS,"}""
        ${",FROM,example,"}|>
        ${",RANGE,MATH_FLOOR,STRINGS_TRIM,fluxEqual,'be.true','can use the function selector to build a query',`${,}|>${,'flux-function mean',MEAN,'can filter aggregation functions by name from script editor mode','.cf-input-field','covariance','toolbar-function','have.length','visualize with 360 lines',numLines,360,writeData,lines,'can view time-series data',`selector-list m`,'selector-list v',`selector-list tv1`,'selector-list max',VIS_TYPES,'view-type--dropdown',`view-type--${,`vis-graphic--${,'single-stat','single-stat--text','raw-data--toggle','raw-data-table','can view table data & sort values numerically','selector-list sort',`view-type--table`,'.table-graph-cell__sort-asc','not.exist','.table-graph-cell__sort-desc','_value-table-header',el,columnIndex,'data-column-index',prev,Infinity,"`[data-column-index=\""${","}\""]`",each,val,num,Number,isNaN,'should set the default bucket in the dropdown to the selected bucket','.cf-overlay--dismiss','selector-list defbuck','delete-data-predicate','dropdown--button','defbuck','selector-list _monitoring','_monitoring','selector-list _tasks','_tasks','visualize tables',signin,body,'org','bucket','routes',orgs,explorer,}/${,}${,"`[data-column-index=""${","}""]`",'updating',oldLabelName,'attributum (атрибут)',oldLabelDescription,'(\u03944) Per attributum intelligo id quod intellectus de substantia percipit tanquam ejusdem essentiam constituens. ',oldLabelColor,'#D0D0F8',newLabelName,'attribut (атрибут)',newLabelDescription,"""(\u03944) J'entends par attribut ce que l'entendement perçoit d'une substance comme constituant son essence. """,newLabelColor,'#B0D0FF',Organization,'@org',createLabel,description,`orgs/${,}/settings/labels`,'can update a label','label-card','div.cf-resource-card--contents','div.cf-resource-card--row','div.cf-label',invoke,'attr','style',hex2BgColor,'overlay--header','text','Edit Label','button','overlay--container','create-label-form--name',clear,'create-label-form--description','color-picker--input','create-label-form--submit','from the Dashboard view',createDashboard,createCell,cellResp,dbID,orgID,cellID,createView,'resourceIDs',"""creates a query, edits the query, edits the cell's default name, edits it again, submits with the keyboard, then chills""",ResourceIDs,'@resourceIDs',}/dashboards/${,}/cells/${,}/edit`,'mem','topLeft','cached','bottomLeft','thrillbo-swaggins','sum','empty-graph--no-queries','Submit','giraffe-layer-line','overlay','Name this Cell',"'[placeholder=""Name this Cell""]'",'A better name!','.veo-contents','save-cell--button',"""Uncle Moe's Family Feedbag{enter}""",'should sort the bucket names alphabetically',buckets,Bucket,'7902bd683453c00c','e483753c9bdb47bf',name,'alpha',retentionRules,createdAt,'2019-11-05T08:57:54.459819-08:00',updatedAt,'2019-11-05T08:58:09.593805-08:00',links,labels,'/api/v2/buckets/7902bd683453c00c/labels',logs,'/api/v2/buckets/7902bd683453c00c/logs',members,'/api/v2/buckets/7902bd683453c00c/members','/api/v2/orgs/e483753c9bdb47bf',owners,'/api/v2/buckets/7902bd683453c00c/owners',self,'/api/v2/buckets/7902bd683453c00c','/api/v2/write?org=e483753c9bdb47bf&bucket=7902bd683453c00c','7f44462ac794c7c1','bucket1','2019-10-15T11:10:27.970567-07:00','/api/v2/buckets/7f44462ac794c7c1/labels','/api/v2/buckets/7f44462ac794c7c1/logs','/api/v2/buckets/7f44462ac794c7c1/members','/api/v2/buckets/7f44462ac794c7c1/owners','/api/v2/buckets/7f44462ac794c7c1','/api/v2/write?org=e483753c9bdb47bf&bucket=7f44462ac794c7c1','a8fee6b433c16f86','zebra','2019-11-05T08:57:59.280485-08:00','2019-11-05T08:57:59.280486-08:00','/api/v2/buckets/a8fee6b433c16f86/labels','/api/v2/buckets/a8fee6b433c16f86/logs','/api/v2/buckets/a8fee6b433c16f86/members','/api/v2/buckets/a8fee6b433c16f86/owners','/api/v2/buckets/a8fee6b433c16f86','/api/v2/write?org=e483753c9bdb47bf&bucket=a8fee6b433c16f86','adbb0107da2d7d38','buck2','2019-10-18T14:05:24.838291-07:00','2019-10-18T14:05:24.838292-07:00','/api/v2/buckets/adbb0107da2d7d38/labels','/api/v2/buckets/adbb0107da2d7d38/logs','/api/v2/buckets/adbb0107da2d7d38/members','/api/v2/buckets/adbb0107da2d7d38/owners','/api/v2/buckets/adbb0107da2d7d38','/api/v2/write?org=e483753c9bdb47bf&bucket=adbb0107da2d7d38','e2871ad8f92e752a','disco inferno','2019-11-05T08:58:16.873502-08:00','/api/v2/buckets/e2871ad8f92e752a/labels','/api/v2/buckets/e2871ad8f92e752a/logs','/api/v2/buckets/e2871ad8f92e752a/members','/api/v2/buckets/e2871ad8f92e752a/owners','/api/v2/buckets/e2871ad8f92e752a','/api/v2/write?org=e483753c9bdb47bf&bucket=e2871ad8f92e752a','000000000000000a','system','System bucket for task logs','expire',everySeconds,259200,'0001-01-01T00:00:00Z','/api/v2/buckets/000000000000000a/labels','/api/v2/buckets/000000000000000a/logs','/api/v2/buckets/000000000000000a/members','/api/v2/orgs/','/api/v2/buckets/000000000000000a/owners','/api/v2/buckets/000000000000000a','/api/v2/write?org=&bucket=000000000000000a','000000000000000b','System bucket for monitoring logs',604800,'/api/v2/buckets/000000000000000b/labels','/api/v2/buckets/000000000000000b/logs','/api/v2/buckets/000000000000000b/members','/api/v2/buckets/000000000000000b/owners','/api/v2/buckets/000000000000000b','/api/v2/write?org=&bucket=000000000000000b',results,getSortedBucketNames,expectedResult,'Searching buckets','search-widget','tasks','bucket-card','Sorting by Retention','retention-sorter',first,'Collectors',}/load-data/telegrafs`,'from the org view','can create a telegraf config',newConfig,'New Config',configDescription,'This is a new config testing','table-row','Create Configuration','telegraf-plugins--System',getByInputName,'name','description','.cf-button','Create and Verify','streaming','Listen for Data','Finish','resource-card','when a config already exists',telegrafConfigName,'Config Description',createTelegraf,reload,'can update configuration name and delete a configuration',newConfigName,'This is new name','collector-card--name',trigger,'mouseover','collector-card--name-button','collector-card--input','{enter}','context-menu',last,'context-menu-item','empty-state','can view setup instructions for a config','setup-instructions-link','setup-instructions','sorting & filtering',telegrafs,'bad','apple','cookie',bucketz,'MO_buckets','EZ_buckets','Bucky',firstTelegraf,secondTelegraf,thirdTelegraf,firstBucket,secondBucket,thirdBucket,'can filter telegraf configs and sort by bucket and name','should have no results','a','not.contain','bucket-sorter',sort,'bucket-name',index,include,reverse,'name-sorter','can create a dashboard from empty state','empty-dashboards-list','add-resource-dropdown--button','add-resource-dropdown--new',}/dashboards`,'dashboard-card','can create a dashboard from a Template',createDashboardTemplate,'add-resource-dropdown--template','template--Bashboard-Template','template-panel','create-dashboard-button','When tasks already exist','@token',token,createTask,'can edit a task','task-card--slide-toggle','active','not.have.class',newName,'Task','task-card','task-card--name','task-card--name-button','notification-success','can delete a task','context-delete-menu','context-delete-task','empty-tasks-list','Searching and filtering','click-me','beepBoop',createAndAddLabel,}/tasks`,'can click to filter tasks by labels',`label--pill ${,'bEE',"""clears title tag if empty title is defined""",done,ReactDOM,Helmet,"
            ",Existing Title,meta,"""keywords""",content,"""stuff""",container,requestAnimationFrame,document,"""Existing Title""","
                ",""" ""","""""",'Administration',navBarPage,NavBarPage,signInPage,SignInPage,before,'/',getSignInPage,authenticationType,'oauth2',waitUntilDisplayed,sendKeys,'admin',loginButton,waitUntilHidden,adminMenu,'should load user management',clickOnAdminMenuItem,'user-management',heading,element,by,'user-management-page-heading',isPresent,be,'should load metrics','metrics','metrics-page-heading',getText,'Application Metrics','should load health','health','health-page-heading','Health Checks','should load configuration','configuration','configuration-page-heading','Configuration',databaseType,'no','cassandra','should load audits','audits','audits-page-heading','Audits','should load logs','logs','logs-page-heading','Logs',after,autoSignOut,'visual snapshot tests',getAllScenarioNames,scenarioName,snapshotConfig,getSnapshotConfig,}__desktop`,preparePageForSnapshot,THEME,light,VIEWPORT,desktop,snapshot,}__mobile`,mobile,'rtl',}__dark`,dark,interactions,interaction,}__${,behavior,page,250,'Masonry > Scrolls','Loads more when it gets to the bottom of the viewport',setViewport,3000,goto,'http://localhost:3001/Masonry?deferMount=1&manualFetch=1',serverItems,$$,selectors,staticItem,initialServerItemCount,20,evaluate,dispatchEvent,CustomEvent,'trigger-mount',PIN_INSERTION_TIME,NEXT_FETCH,gridItems,gridItem,afterLoadItemCount,ok,initialFetchCount,TEST_FETCH_COUNTS,scrollTo,scrollMaxY,newFetchCount,gridItemsAfter,'Masonry > Null items','Should not throw an error when null/undefined items are inserted','http://localhost:3001/Masonry',initialErrors,ERROR_COUNT,insertTrigger,$,insertNullItems,afterErrors,"""change language""",resolvers,createResolversStub,GQLResolver,Mutation,updateSettings,variables,expectAndFail,settings,locale,"""es""",pureMerge,changeLocale,configureContainer,generalContainer,saveChangesButton,createTestRenderer,languageField,getByLabelText,"""Language""",onChange,getByType,"""form""",onSubmit,disabled,SinonStub,"'should render with the user, root and tooltip classes'",shallow,Tooltip,className,"""woofTooltip""","""Hello World""",Hello World,childAt,hasClass,'woofTooltip',classes,root,popperChildren,getPopperChildren,tooltip,'should have contributors listed in each group',clickButton,elementFinder,ElementFinder,getWebElement,webElement,executeScript,'arguments[0].click()',getContributorNames,contributors,all,css,'h3',map,c,names1,toBeGreaterThan,groupButtons,names2,names3,names4,'Open/Close Component',closedHeight,'100px',openHeight,'200px',beforeAll,openCloseHref,sleepFor,'should be open',toggleButton,openClose,getToggleButton,getComponentContainer,'Closed',getCssValue,containerHeight,toContain,'The box is now Open!','should be closed','Open','The box is now Closed!','should log animation events',loggingCheckbox,getLoggingCheckbox,manage,logging,Type,BROWSER,animationMessages,filter,message,'Animation','should be active with a blue background',statusSlider,'Inactive','backgroundColor',activeColor,bgColor,'Active','should remove the hero from the list when clicked',heroesList,enterLeave,getHeroesList,total,hero,auto,'should filter down the list when a search is performed',filterStagger,formInput,getFormInput,'Mag',newTotal,toBeLessThan,'should focus the menu panel if all items are disabled',fakeAsync,createComponent,SimpleMenuWithRepeater,FakeIcon,componentInstance,items,item,detectChanges,openMenu,tick,500,activeElement,overlayContainerElement,querySelector,'.mat-mdc-menu-panel','should focus the menu panel if all items are disabled inside lazy content',SimpleMenuWithRepeaterInLazyContent,'should not change value on click when click action is noop',TestBed,resetTestingModule,configureTestingModule,imports,MatSlideToggleModule,declarations,SlideToggleBasic,providers,provide,HAMMER_GESTURE_CONFIG,useFactory,gestureConfig,TestGestureConfig,MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,useValue,disableToggleValue,testComponent,debugElement,slideToggleDebug,query,By,'mat-slide-toggle',slideToggle,inputElement,'input',nativeElement,labelElement,'label',toggleTriggered,dragTriggered,checked,'Expect slide toggle value not changed','Expect toggle once','Expect toggle twice','OverlayKeyboardDispatcher',keyboardDispatcher,OverlayKeyboardDispatcher,overlay,Overlay,OverlayModule,TestComponentModule,inject,kbd,o,afterEach,OverlayContainer,overlayContainer,ngOnDestroy,'should track overlays in order as they are attached and detached',overlayOne,create,overlayTwo,add,_attachedOverlays,'Expected both overlays to be tracked.','Expected one to be first.','Expected two to be last.',remove,'Expected two to now be first.','Expected one to now be last.','should dispatch body keyboard events to the most recently attached overlay',overlayOneSpy,jasmine,createSpy,'overlayOne keyboard event spy',overlayTwoSpy,keydownEvents,subscribe,dispatchKeyboardEvent,ESCAPE,toHaveBeenCalled,'should dispatch targeted keyboard events to the overlay containing that target',overlayOnePane,overlayElement,'should complete the keydown stream on dispose',overlayRef,completeSpy,'keydown complete spy',undefined,dispose,'should stop emitting events to detached overlays',instance,'keyboard event spy',attach,ComponentPortal,TestComponent,toHaveBeenCalledTimes,detach,'should stop emitting events to disposed overlays','should adjust position of centered option if there is little space above',selectMenuHeight,256,selectMenuViewportPadding,8,selectItemHeight,48,selectedIndex,16,lineHeightEm,1.125,expectedExtraScroll,triggerHeight,idealSpaceAboveSelectedItem,actualSpaceAboveSelectedItem,idealScrollTop,topMostPositionForPerfectCentering,formFieldTopSpace,getBoundingClientRect,formField,formFieldTop,}px`,control,setValue,'chips-4',scrollContainer,'.cdk-overlay-pane .mat-select-panel',whenStable,Math,ceil,scrollTop,`Expected panel to adjust scroll position to fit in viewport.`,checkTriggerAlignedWithOption,'should adjust position of centered option if there is little space below',bottomMostPositionForPerfectCentering,formFieldBottomSpace,formFieldBottom,difference,abs,"'should fall back to ""above"" positioning if scroll adjustment will not help'",'56px','coke-0',overlayPane,'.cdk-overlay-pane',triggerBottom,overlayBottom,'.mat-select-panel',`Expected panel not to be scrolled.`,floor,`Expected trigger bottom to align with overlay bottom.`,select,_transformOrigin,`bottom`,`Expected panel animation to originate at the bottom.`,'should align a centered option properly when scrolling while the panel is open',heightBelow,400,heightAbove,setScrollTop,scrolledSubject,next,"'should fall back to ""above"" positioning properly when scrolled'",marginTop,'2000px',1400,innerHeight,startingWindowHeight,"'should align the first option to the trigger, if nothing is selected'",menuItemHeight,triggerFontSize,triggerLineHeightEm,groupFixture,triggerTop,'.cdk-overlay-pane mat-option',optionTop,platform,Platform,TRIDENT,0.1,'Expected trigger to align with the first option.',else,"""should navigate Player One/Team One then back separately""",retries,testPlayerNavigated,screen,playerOne,gotoTeamsTab,driver,testTeamNavigated,teamOne,backTeams,loadedTeamList,gotoPlayersTab,backPlayers,loadedPlayersList,goalType,} create and delete`,client,app,logIn,addSource,isVisible,'button=End Goal',waitForVisible,'button=Start Goal',formMonkey,FormMonkey,'form[name=new-goal-form]',fill,'My Goal',goal_amount,manual_goal_amount,ends_at,'12/12/2030',isExisting,'span=My Goal',} change settings`,'li=Visual Settings','form[name=visual-properties-form]',testSet1,layout,'standard',background_color,'#FF0000',bar_color,bar_bg_color,text_color,bar_text_color,font,'Roboto',waitForWidgetSettingsSync,testSet2,'condensed','#7ED321','#AB14CE','#DDDDDD','#FFFFFF','#F8E71C','Open Sans','@flaky Click-to-select',mock14Pts,'1',134,y,116,'7',270,160,'10',324,198,'35',685,341,gd,createGraphDiv,destroyGraphDiv,plotMock14,layoutOpts,mock,require,'@mocks/14.json',defaultLayoutOpts,clickmode,'event+select',dragmode,'select',hovermode,'closest',mockCopy,Lib,extendDeep,Plotly,plot,data,_click,clickOpts,resetEvents,DBLCLICKDELAY,1.01,selectedPromise,_clickPt,coords,toBeDefined,'coords needs to be defined','coords.x needs to be defined','coords.y needs to be defined',_immediateClickPt,assertSelectedPoints,expectedPtsPerTrace,expectedPts,traceNum,Array,isArray,for,_fullData,selectedpoints,assertSelectionCleared,fullDataItem,toBeUndefined,'selects a single data point when being clicked',failTest,'clears entire selection when the last selected data point',desc,'is clicked','is clicked while add/subtract modifier keys are active',shiftKey,testData,deselectPromise,35,'cleanly clears and starts selections although add/subtract mode on','supports adding to an existing selection','supports subtracting from an existing selection','can be used interchangeably with lasso/box select',drag,SELECT_PATH,relayout,'dragmode','lasso',LASSO_PATH,10,670,330,695,350,altKey,doubleClick,650,'works in a multi-trace plot',12,13,'scatter',mode,'markers',marker,size,9,21,'scattergl',136,369,245,183,470,'is supported in pan/zoom mode','zoom','retains selected points when switching between pan and zoom mode','pan','is supported by scattergl in pan/zoom mode',230,340,'deals correctly with histogram\'s binning in the persistent selection case','@mocks/histogram_colorscale.json',firstBinPts,secondBinPts,thirdBinPts,clickFirstBinImmediately,shiftClickSecondBin,concat,shiftClickThirdBin,clickFirstBin,141,358,239,351,347,'ignores clicks on boxes in a box trace type','@mocks/box_grouped_horz.json',1100,450,clickPtImmediately,clickPt,clickBox,610,342,565,329,'is disabled when clickmode does not include \'select\'','and dragmode is ','event','is supported by',testCase,'histrogram',355,'box','violin','@mocks/violin_grouped.json',166,187,'ohlc','@mocks/ohlc_first.json',669,165,'candlestick','@mocks/finance_style.json',331,162,'choropleth','@mocks/geo_choropleth-text.json',440,163,'scattermapbox','@mocks/mapbox_0.json',195,mapboxAccessToken,'@build/credentials.json',MAPBOX_ACCESS_TOKEN,'trace type ',traceType,customLayoutOptions,layoutOptions,customConfigOptions,config,configOptions,"""Focus management""",testsContainerElement,createElement,"""div""",documentElement,appendChild,"""brings focus to overlay if autoFocus=true""",autoFocus,inline,isOpen,"""text""",attachTo,assertFocus,""".pt-overlay-backdrop""","""does not bring focus to overlay if autoFocus=false""","""body""","""autoFocus element inside overlay gets the focus""","""input""","""returns focus to overlay if enforceFocus=true""",buttonRef,HTMLElement,focusBtnAndAssert,focus,notStrictEqual,button,ref,enforceFocus,"
                    ","""returns focus to overlay after clicking the backdrop if enforceFocus=true""",canOutsideClickClose,createOverlayContents,BACKDROP_SELECTOR,"""mousedown""",`.${,Classes,OVERLAY_CONTENT,"""does not result in maximum call stack if two overlays open with enforceFocus=true""",anotherContainer,temporaryWrapper,"""inputId""",bringFocusSpy,"""bringFocusInsideOverlay""",setProps,"""#inputId""","""click""",isTrue,removeChild,"""does not return focus to overlay if enforceFocus=false""","""doesn't focus overlay if focus is already inside overlay""",textarea,HTMLTextAreaElement,"""textarea""","""does not focus overlay when closed""","""button""",selector,MochaDone,'should activate the new registered user',modifiedDateSortButton,getModifiedDateSortButton,waitUntilClickable,deactivatedButton,getUserDeactivatedButtonByLogin,'user_test','should login with admin account',getTitle,loginPageTitle,setUserName,setPassword,login,isHidden,loginWithOAuth,success,'alert-success',"""should set current date when pressing the Now button""",comp,createFormComponent,schema,"""string""",format,"""date-time""",uiSchema,SimulateAsync,"""a.btn-now""",now,Date,getTime,timeDiff,formData,at,most,'invokes optional onRenderCell prop per item render',onRenderCellMock,jest,fn,List,mockData,onRenderCell,onPagesUpdated,IPage,'@flaky should only transition the layout when both traces and layout have animatable changes by default',transition,duration,xaxis,range,yaxis,react,methods,_fullLayout,_basePlotModules,'plot','transitionAxes',Axes,'drawOne',addSpies,'red',assertSpies,'just trace transition',Plots,'transitionFromReact','just layout transition',Registry,'call','relayout','xaxis.range','black','both trace and layout transitions',easing,'cubic-in-out',ordering,'layout first','function','traces first','both trace and layout transitions under *ordering:traces first*','@flaky should transition layout when one or more axis auto-ranged value changed',assertAxAutorange,msg,exp,autorange,'axes are autorange:true by default',30,"'must transition autoranged axes, not the traces'",'axes are now autorange:false',"'transition just traces, as now axis ranges are set'",'axes are still autorange:false','@flaky should not transition layout when axis auto-ranged value do not changed','y-axis is autorange:true by default',"'do not transition autoranged axes, just the traces'",'y-axis is still autorange:true','_storeDirectGUIEdit',_preGUI,0.12852664576802508,2.128526645768025,'xaxis.autorange','yaxis.range',9.26751592356688,20.73248407643312,'yaxis.autorange','y-axis is now autorange:false','@flaky can drag root-level colorbars in editable mode',newPlot,z,'heatmap',editable,colorbar,1.02,0.5,getCBNode,dpos,toBeWithin,0.591,0.01,0.045,'@flaky can drag marker-level colorbars in editable mode',showscale,'@flaky can drag colorbars linked to color axes in editable mode',coloraxis,'coloraxis','@flaky has no hover effects for titles that used to be blank',editTitle,'x','xaxis.title.text','XXX','y','yaxis.title.text','YYY','g','title.text','TTT',checkTitle,'@flaky should update ranges of date and category axes','2018-01-01','2019-01-01','2020-01-01','b','c','x2','y2',grid,rows,columns,pattern,'independent',xaxis2,yaxis2,'2018-06-01','2019-06-01',1.5,promise,fullLayout,xa,xr,r2l,xa2,xr2,15,switchContextToWebview,setImplicitWaitTimeout,defaults,long,sleep,splashscreen,contexts,console,error,"""Could not find webview in contexts:""","""Stopping tests as webview context was not found.""",quit,webviewContext,_,indexOf,'WEBVIEW',log,'webview context:',setAsyncScriptTimeout,"""should delete a postcard""",'#editButton',asserters,isDisplayed,short,eval,"'document.querySelector(\'#myPostcards .row paper-fab[icon=""delete""]\').click()'",'#myPostcards',eventually,contain,message2,"""should be one postcard remaining after delete""","'document.querySelectorAll(""#myPostcards .row:not([hidden])"").length'",'should keep the position within the viewport on repeat openings','-100px',panelLeft,toBeGreaterThanOrEqual,`Expected select panel to be inside the viewport.`,`Expected select panel continue being inside the viewport.`,initTest,suite,showLongItems,renderStory,'DropdownContainer',"'various aligns, portals, items and scrolls'",setCaptureElements,TEST_CONTAINER,ignoreElements,BUTTONS,' button',innerScrollTest,capture,'shot',executeJS,innerScroll,'#inner-scroll',scrollHeight,scrollLeft,scrollWidth,gemini,'short Items','items','inner scroll','long Items',TOLERANCE_OVERRIDE_BECAUSE_OF_EDGE,3.5,'Select','Input based select',child,setUrl,'/select/simple-input-based-select.html','.ring-select','[data-test=ring-popup]','selectPopup','.ring-input',mouseMove,800,1024,'Select button','/select/select-with-a-customized-filter-and-an-add-item-button.html','Select with filter','/select/simple-select-with-default-filter-mode-enabled.html','Multi-value select with options descriptions','/select/multiple-select-with-a-description.html',setTolerance,'.ring-button','ie','Disabled in IE because of weird rendering artefact',"'tooltips should be placed dynamically, with the dynamic placement option'",support,ttContainer,"'<div id=\""dynamic-tt-test\""/>'",'overflow','position','top',appendTo,topTooltip,"'<div style=\""display: inline-block; position: absolute; left: 0; top: 0;\"" rel=\""tooltip\"" title=\""Top tooltip\"">Top Dynamic Tooltip</div>'",'#dynamic-tt-test',placement,'auto','show','.tooltip','.bottom','top positioned tooltip is dynamically positioned bottom','hide',rightTooltip,"'<div style=\""display: inline-block; position: absolute; right: 0;\"" rel=\""tooltip\"" title=\""Right tooltip\"">Right Dynamic Tooltip</div>'",'right auto','.left','right positioned tooltip is dynamically positioned left',leftTooltip,"'<div style=\""display: inline-block; position: absolute; left: 0;\"" rel=\""tooltip\"" title=\""Left tooltip\"">Left Dynamic Tooltip</div>'",'auto left','.right','left positioned tooltip is dynamically positioned right','Calculates correct virtual bounds when masonry is offset with custom virtual bounds',VIRTUALIZED_TOP,`http://localhost:3001/Masonry?virtualize=1&scrollContainer=1&virtualBoundsTop=300&virtualBoundsBottom=300&offsetTop=${,initialGridItems,scrollToY,afterGridItems,'Masonry > External cache','Masonry','http://localhost:3001/Masonry?virtualize=1&externalCache=1','MasonryInfinite','http://localhost:3001/MasonryInfinite?virtualize=1&externalCache=1','should only mount visible items on remount - %s',initialMountCount,ITEM_MOUNT_COUNT,clientHeight,updatedMountCount,toggleMountTrigger,toggleMount,updatedCount,toBeLessThanOrEqual,'TimezonePicker','passes basic a11y tests','timezone-picker',standard,accessibilityReport,analyzeAccessibility,toHaveNoAccessibilityIssues,'provides appropriate zone options if standard time',} ${,dropdown,keyboard,'new york',press,'ArrowDown','Enter',value,$eval,textContent,labelToShortCode,'EST','provides appropriate zone options if daylight savings time',daylight,'EDT','selects day when typed','datepicker',selectedValue,'    /  /  ','2019/03/10',`desktop`,`mobile`,`dark`,identifier,viewport,target,createCDPSession,metrics,send,'Page.getLayoutMetrics',contentSize,'content height',image,screenshot,clip,VIEWPORT_WIDTH,toMatchImageSnapshot,customSnapshotIdentifier,'sorts string column','data-table-columns',TABLE_ROOT,initial,getCellContentsAtColumnIndex,COLUMN_COUNT,matchArrayElements,'one','two','three','four',sortColumnAtIndex,asc,restored,'selects range - verifies end of year','datepicker-range',"'[data-baseweb=""calendar""]'","'[data-id=""monthYearSelectButton""]'","'[data-id=""monthYearSelectMenu""]'",$$eval,"'ul[role=""listbox""] li'",'December 2019',"'[aria-label=""Choose Wednesday, December 25th 2019. It\'s available.""]'","'[aria-label=""Choose Tuesday, December 31st 2019. It\'s available.""]'",'2019/12/25 – 2019/12/31','should update the preSelection state when a day is selected with mouse click',getOnInputKeyDownStuff,shouldCloseOnSelect,monthsShown,TestUtils,Simulate,keyDown,nodeInput,key,'ArrowLeft',37,which,day,findRenderedDOMComponentWithClass,datePicker,calendar,'react-datepicker__day--today',findDOMNode,copyM,'weeks',preSelection,testFormat,'should handle onInputKeyDown ArrowLeft',subtract,'days','should handle onInputKeyDown ArrowRight','ArrowRight',39,'should handle onInputKeyDown ArrowUp','ArrowUp',38,'should handle onInputKeyDown ArrowDown','should handle onInputKeyDown PageUp','PageUp',33,'months','should handle onInputKeyDown PageDown','PageDown',34,'should handle onInputKeyDown End','End','years','should handle onInputKeyDown Home','Home',36,'should not preSelect date if not between minDate and maxDate',minDate,moment,'day',maxDate,'onInputKeyDown Enter','should update the selected date',callback,result,'should update the selected date on manual input',change,'02/02/2017','should not update the selected date if the date input manually it has something wrong','Backspace','should not select excludeDates',excludeDates,'should not select dates excluded from filterDate',filterDate,date,'should reset the keyboard selection when closed',setOpen,'should retain the keyboard selection when already open','should open the calendar when an arrow key is pressed',open,"""should update the preSelection state when a day is selected with mouse click""",dayOfMonth,utils,getDate,getKey,"""ArrowLeft""","""react-datepicker__day--today""","""ArrowDown""",addWeeks,formatDate,expectMessages,toCheck,Msg,windows,linux,backup,navigate,'All Messages',extractMessages,'Windows','Linux','Backup','create a message',createMessage,windows1,windowsServerToken,'has one message in windows app','has no message in linux app','deletes all backup messages and navigates to all messages','#delete-all',backup3,backupServerToken,waitForExists,'.message .title','has echo plugin',waitForCount,$table,innerText,cell,Col,Name,'test plugin',Token,hiddenToken,parseInt,ID,'create a new imaging request',runWithPouchDump,'imaging',authenticateUser,'/imaging/edit/new',andThen,currentURL,fillIn,'.patient-input .tt-input','Lennex Zinyando - P00017',triggerEvent,'blur','.imaging-type-input .tt-input','Chest Scan','.radiologist-input .tt-input','Dr Test','.result-input input','Check is clear','textarea','Patient is healthy','button:contains(Add)',waitToAppear,'.modal-dialog','.modal-title','Imaging Request Saved','Imaging Request was saved successfully','button:contains(Ok)',findWithAssert,'button:contains(Update)','button:contains(Return)','button:contains(Complete)','.test-patient-summary','Patient summary is displayed','should preseve state after HMR update',$iframe,contentWindow,__runCosmosLoader,'.CodeMirror-line:eq(4)','have.text',"'        ""value"": 4'",'calls the onCompleted prop after the mutation is complete',onCompletedFn,checker,toHaveBeenCalledWith,React,mutation,onCompleted,createTodo,MockedProvider,mocks,fail,'timeout passed','should return teams paginated user list',admin,seed,res,post,'/api/users.list',getJwtToken,json,status,200,'should require admin for detailed info',email,'changes the render after code change',codeToDelete,'</Button>','@container','.CodeMirror textarea','{backspace}',repeat,} Harder${,'@preview','Push Me Harder','.page-header--container','Create','dropdown--item From a Template','card-select-Bashboard-Template','testing image export formats',plan,mockList,FORMATS,run,'should respond to drag interactions',_mock,relayoutCallback,'relayoutCallback',originalX,0.3037383177570093,5.303738317757009,originalY,6.1,newX,newY,1.7,4.95,precision,toBeCloseToArray,buttonPan,selectButton,_modeBar,'pan2d',isActive,"'initially, zoom is active'",'switched on dragmode',on,'plotly_relayout',mouseTo,220,objectContaining,'xaxis.range[0]',any,'xaxis.range[1]','yaxis.range[0]','yaxis.range[1]','supports 1D and 2D Zoom',centerX,centerY,b,l,r,bBox,'supports axis constraints with zoom','yaxis.scaleanchor','yaxis.scaleratio',24,7.6,23.6,0.2,15.8,'data-referenced annotations should update on drag',assertAnnotation,xy,ann,d3,'g.annotation-text-g',translate,Drawing,getTranslate,annotations,327,312,277,262,2.5,'@flaky Test select box and lasso per trace:',makeAssertPoints,keys,callNumber,'(call #',') ',pts,selectedData,points,'selected points length',p,k,msgFull,'selected pt ',' - ',' val',typeof,'number',toBeCloseTo,makeAssertSelectedPoints,trace,'selectedpoints array for trace ',makeAssertRanges,subplot,tol,') select box range ',ranges,toBeCloseTo2DArray,'for ','x coords','y coords',makeAssertLassoPoints,') lasso points ',lassoPoints,_run,dragPath,afterDragFn,dblClickPos,eventCounts,assertSelectionNodes,assertEventCounts,' (before dblclick)',' (after dblclick)','should work on scatterternary traces',assertPoints,fig,'@mocks/ternary_simple',addInvisible,445,235,0.25,380,180,BOXEVENTS,'scatterternary select',LASSOEVENTS,'scatterternary lasso','scatterternary lasso after relayout','should work on scattercarpet traces','@mocks/scattercarpet','scattercarpet select','scattercarpet lasso','@noCI should work on scattermapbox traces','lon','lat',assertRanges,'mapbox',assertLassoPoints,'@mocks/mapbox_bubbles-text',370,120,21.99,34.55,38.14,25.98,'scattermapbox select',13.28,25.97,14.33,25.71,'scattermapbox lasso',NOEVENTS,'scattermapbox pan',LONG_TIMEOUT_INTERVAL,'should work on scattergeo traces','geo','scattergeo',lon,lat,showlegend,28.13,61.88,50.64,'scattergeo select',56.25,56.24,5.63,'scattergeo lasso','scattergeo pan','should work on scatterpolar traces','r','theta','@mocks/polar_subplots',45,'scatterpolar select','scatterpolar lasso','should work on choropleth traces','location','z','@mocks/geo_choropleth-text',870,geo,scope,'europe',emptyChoroplethTrace,locations,'GBR',26.507354205352502,'IRL',86.4125147625692,43,54,19.11,63.06,7.31,53.72,280,190,'choropleth select',5.50,65.25,12.90,51.70,'choropleth lasso','choropleth pan','should work for bar traces','curveNumber','@mocks/0',4.9,0.371,0.368,5.1,0.356,5.2,0.336,5.3,0.309,5.4,0.275,5.5,0.235,5.6,0.192,5.7,0.145,0.485,0.409,0.327,0.24,0.149,0.059,0.473,0.258,0.146,0.036,49,51,52,53,55,56,57,4.87,5.74,0.53,0.02,'bar lasso',0.41,0.37,5.22,0.31,'bar select','should work for date/category traces','2017-01-01','2017-02-01','2017-03-01','2017-02-02',x0,y0,x1,y1,'date/category lasso','date/category select','should work for histogram traces','pointIndices','@mocks/hist_grouped',1.8,2.2,3.2,1.66,3.59,2.17,0.69,'histogram lasso','histogram select','should work for box traces','@mocks/box_grouped',boxpoints,'all','day 2',0.3,0.7,'day 1',0.6,11,0.71,0.1875,'box lasso','box select','should work for violin traces','@mocks/violin_grouped',0.9,0.8,0.27,'violin lasso','violin select','should work on traces with enabled transforms',transforms,'filter',operation,'>','aggregate',groups,'marker.size',aggregations,func,'avg',395,'transformed trace select (all points selected)','@flaky Skip dimensions which are not plain objects or whose `values` is not an array',mock1,newDimension,680,dimensions,'S',label,constraintrange,random,'This is not a plain object','This is not an array',querySelectorAll,'.axis','@flaky should be able to toggle visibility',line,restyle,'visible','legendonly','.gl-canvas-context',readPixel,108,'@flaky snaps ordinal constraints',mostOfDrag,105,newDashArray,getDashArray,initialDashArray0,checkDashCount,mouseEvent,'mouseup',snapDelay,2.75,210,240,260,0.75,1.25,2.25,290,'@flaky supports axis constraints with zoom',8.2,24.2,0.12,16.1,'@flaky should change plot type with incomplete data',toThrow,'@flaky should not scroll document while panning',sceneTarget,scroll,amt,WheelEvent,'wheel',deltaY,cancelable,touchDrag,start,touchEvent,'touchstart','touchmove','touchend',assertEvent,defaultPrevented,addEventListener,'.nsewdrag','@flaky should remove fill2d','@mocks/gl2d_axes_labels2.json',80,'none','@gl @flaky Test hover and click interactions',makeHoverFn,'plotly_hover',hover,makeClickFn,'plotly_click',makeUnhoverFn,initialElement,elementFromPoint,canceler,nowElement,'mouseout','plotly_unhover','emitted plotly_unhover',assertEventData,'points length',pt,Object,arrayContaining,'pointNumber','data','fullData','xaxis','yaxis','event data keys',uid,'string',' - uid',domain,' - xaxis',' - yaxis',' - x',' - y',curveNumber,' - curve number',String,pointNumber,' - point number',makeRunner,pos,opts,_hover,_unhover,noUnHover,eventData,g,'g.hovertext',noHoverLabel,assertHoverLabelStyle,assertHoverLabelContent,nums,purge,'should output correct event data for scattergl',hoverlabel,'yellow',hoverinfo,bgcolor,'blue',bordercolor,'green',634,321,15.772,0.387,'0.387',"'rgb(0, 0, 255)'","'rgb(255, 0, 0)'",fontFamily,'Arial',fontColor,"'rgb(255, 255, 0)'",'should output correct event data for scattergl in *select* dragmode','should output correct event data for scattergl in *lasso* dragmode','should output correct event data for scattergl with hoverinfo: \'none\'','scattergl with hoverinfo','should output correct event data for pointcloud',mock2,540,4.5,"'rgb(0, 128, 0)'","'rgb(255, 255, 255)'",'pointcloud','should output correct event data for heatmapgl',mock3,'heatmapgl',family,"'rgb(68, 68, 68)'",'should output correct event data for heatmapgl (asymmetric case) ','D','E','F','cyan','pink',"'rgb(0, 0, 0)'",'should output correct event data for scattergl after visibility restyle',mock4,435,216,18,"'rgb(44, 160, 44)'",'scattergl before visibility restyle',run2,106,"'rgb(255, 127, 14)'",'scattergl after visibility restyle','should output correct event data for scattergl-fancy','markers+lines','scattergl fancy before visibility restyle',426,'scattergl fancy after visibility restyle','should output correct event data contourgl','contourgl','@flaky should respond to drag interactions on plot area','@mocks/polar_scatter.json',mid,relayoutNumber,resetNumber,_drag,p0,dp,'.polar > .draglayer > .maindrag',_assertRange,rng,polar,radialaxis,_assertDrag,eventCnts,plotly_relayout,'polar.radialaxis.range','- event data','incorrect number of plotly_relayout events triggered - ',_assertBase,extra,'base range',' ',11.1,_reset,_doubleClick,'(reset ',')',plotly_doubleclick,'doubleclick event #',_plot,5.24,'from center move toward bottom-right','from center move toward top-left',3.1,8.4,'from quadrant #1 move top-right',345,7.0,'from right edge move left','from center to not far enough','from quadrant #1 to not far enough','from right edge to not far enough','no new relayout events after *not far enough* cases','@flaky should cleanly clear and restart selections on double click when add/subtract mode on','@mocks/0.json',_assertSelectedPoints,67,68,69,70,71,72,73,74,selPts,'selectedpoints','@flaky should still be responsive if the plot is edited',fillParent,responsive,'y[0]',testResponsive,'@flaky being sized relative to data vertically is getting lower ','when being dragged to expand the y-axis',shapes,ysizemode,shapeNodeBeforeDrag,getFirstShapeNode,heightBeforeDrag,shapeNodeAfterDrag,bbox,25,assertShapeFullyVisible,'@flaky should persist the position of every nodes after drag in attributes nodes.(x|y)',arrangement,move,nodes,getElementsByClassName,'sankey-node',nodeId,'freeform','node ',' has not changed x position',' has not changed y position',continue,' has changed x position',' has changed y position','Test removal of gl contexts','@gl Plots.cleanPlot should remove gl context from the graph div of a gl2d plot',_plots,_scene,cleanPlot,'@gl Plotly.newPlot should remove gl context from the graph div of a gl2d plot',firstGlplotObject,firstGlContext,firstCanvas,scatter2d,gl,canvas,instanceof,WebGLRenderingContext,secondGlplotObject,secondGlContext,secondCanvas,parentNode,isContextLost,'@gl should display correct hover labels of the second point of the very first scatter3d trace',multipleScatter3dMock,ptData,'x: 0','y: 0','z: 0','\n','trace 0','@gl should honor *hoverlabel.namelength*','hoverlabel.namelength','tra','@flaky should sort z data based on axis categoryorder for ','@mocks/heatmap_categoryorder',mockLayout,out,_calc,categoryorder,'category ascending',out1,_xcategories,_ycategories,'applies if styled is imported from baseui package',"`
// @flow
import {styled} from 'baseui';
const Component = styled('div', {color: 'red'});`",Fixture,codemod,dir,transformed,read,toMatchInlineSnapshot,"`
""
// @flow
import {styled} from 'baseui';
// $FlowFixMe
const Component = styled('div', {color: 'red'});""
`",'applies if styled function name is aliased',"`
// @flow
import {styled as baseStyled} from 'baseui';
const Component = baseStyled('div', {color: 'red'});`","`
""
// @flow
import {styled as baseStyled} from 'baseui';
// $FlowFixMe
const Component = baseStyled('div', {color: 'red'});""
`",'does not apply if styled is not imported from baseui package',"`
// @flow
import {styled} from 'styletron-react';
const Component = styled('div', {color: 'red'});`","`
""
// @flow
import {styled} from 'styletron-react';
const Component = styled('div', {color: 'red'});""
`",'does not apply if no flow pragma in file',"`
import {styled} from 'baseui';
const Component = styled('div', {color: 'red'});`","`
""
import {styled} from 'baseui';
const Component = styled('div', {color: 'red'});""
`",'does not apply if styled has existing type annotations',"`
// @flow
import {styled} from 'baseui';
const Component = styled<{foo: string}>('div', {color: 'red'});`","`
""
// @flow
import {styled} from 'baseui';
const Component = styled<{foo: string}>('div', {color: 'red'});""
`",'does not apply if styled already has $FlowFixMe comment',"`
// @flow
import {styled} from 'baseui';
// $FlowFixMe
const Component = styled('div', {color: 'red'});`","'applies any as prop type if base is element string, and fn style arg'","`
// @flow
import {styled} from 'baseui';
const Component = styled('div', p => ({color: 'red'}));`","`
""
// @flow
import {styled} from 'baseui';
const Component = styled<any>('div', p => ({color: 'red'}));""
`","'does not apply type argument if base is element string, and obj style arg'","`
""
// @flow
import {styled} from 'baseui';
const Component = styled('div', {color: 'red'});""
`","'applies any as prop type if base is component, and fn style arg'","`
// @flow
import {styled} from 'baseui';
function Base() {
  return <div>base</div>;
}
const Component = styled(Base, p => ({color: 'red'}));`","`
""
// @flow
import {styled} from 'baseui';
function Base() {
  return <div>base</div>;
}
const Component = styled<typeof Base, any>(Base, p => ({color: 'red'}));""
`","'applies base type if base is component, and obj style arg'","`
// @flow
import {styled} from 'baseui';
function Base() {
  return <div>base</div>;
}
const Component = styled(Base, {color: 'red'});`","`
""
// @flow
import {styled} from 'baseui';
function Base() {
  return <div>base</div>;
}
const Component = styled<typeof Base>(Base, {color: 'red'});""
`",'does not apply change if no flow pragma exists','does not apply change styled call is not imported from baseui','does not mutate if styled call already has type annotations',"`
// @flow
import {styled} from 'baseui';
const Component = styled<{}>('div', p => ({color: 'red'}));`","`
""
// @flow
import {styled} from 'baseui';
const Component = styled<{}>('div', p => ({color: 'red'}));""
`",'appends object expression to args if no style object provided',"`
// @flow
import {styled} from 'baseui';
const Component = styled('div');`","`
""
// @flow
import {styled} from 'baseui';
const Component = styled('div', {});""
`",'handles styled call wrapped in another function',"`
// @flow
import {styled} from 'baseui';
const Component = something(styled('div', p => ({color: 'red'})));`","`
""
// @flow
import {styled} from 'baseui';
const Component = something(styled<any>('div', p => ({color: 'red'})));""
`",'applies if styled base is component',"`
// @flow
import {styled} from 'baseui';

type CustomTheme = {color: string};

function A(props) {
  return <div className={props.className}>abcd</div>;
}

const B = styled<typeof A, {}, CustomTheme>(A, props => {
  return {color: props.$theme.color};
});`","`
""
// @flow
import { styled, createThemedStyled } from 'baseui';

type CustomTheme = {color: string};

function A(props) {
  return <div className={props.className}>abcd</div>;
}

const themedStyled = createThemedStyled<CustomTheme>();

const B = themedStyled<typeof A, {}>(A, props => {
  return {color: props.$theme.color};
});""
`",'applies if styled base is element string',"`
// @flow
import {styled} from 'baseui';

type CustomTheme = {color: string};

const Component = styled<{}, CustomTheme>('div', props => {
  return {color: props.$theme.color};
});`","`
""
// @flow
import { styled, createThemedStyled } from 'baseui';

type CustomTheme = {color: string};

const themedStyled = createThemedStyled<CustomTheme>();

const Component = themedStyled<{}>('div', props => {
  return {color: props.$theme.color};
});""
`",'handles in-line theme types',"`
// @flow
import {styled} from 'baseui';

const Component = styled<{}, {color: string}>('div', props => {
  return {color: props.$theme.color};
});`","`
""
// @flow
import { styled, createThemedStyled } from 'baseui';

const themedStyled = createThemedStyled<{color: string}>();

const Component = themedStyled<{}>('div', props => {
  return {color: props.$theme.color};
});""
`","'handles duplicated themes, deduplicates createThemedStyled calls'","`
// @flow
import {styled} from 'baseui';

type CustomTheme1 = {height: string};
type CustomTheme2 = {width: string};

const A = styled<{}, CustomTheme1>('div', props => {
  return {height: props.$theme.height};
});

const B = styled<{}, {color: string}>('div', props => {
  return {color: props.$theme.color};
});

const C = styled<{}, CustomTheme2>('div', props => {
  return {width: props.$theme.width};
});

const D = styled<{}, {color: string}>('div', props => {
  return {color: props.$theme.color};
});

const E = styled<{}, CustomTheme2>('div', props => {
  return {width: props.$theme.width};
});`","`
""
// @flow
import { styled, createThemedStyled } from 'baseui';

type CustomTheme1 = {height: string};
type CustomTheme2 = {width: string};

const themedStyled = createThemedStyled<CustomTheme1>();

const A = themedStyled<{}>('div', props => {
  return {height: props.$theme.height};
});

const themedStyled2 = createThemedStyled<{color: string}>();

const B = themedStyled2<{}>('div', props => {
  return {color: props.$theme.color};
});

const themedStyled3 = createThemedStyled<CustomTheme2>();

const C = themedStyled3<{}>('div', props => {
  return {width: props.$theme.width};
});

const themedStyled4 = createThemedStyled<{color: string}>();

const D = themedStyled4<{}>('div', props => {
  return {color: props.$theme.color};
});

const E = themedStyled3<{}>('div', props => {
  return {width: props.$theme.width};
});""
`",'handles multiple different themes',"`
// @flow
import {styled} from 'baseui';

type CustomTheme1 = {color: string};
type CustomTheme2 = {size: string};

const A = styled<{}, CustomTheme1>('div', props => {
  return {color: props.$theme.color};
});

const B = styled<{}, CustomTheme2>('div', props => {
  return {color: props.$theme.color};
});`","`
""
// @flow
import { styled, createThemedStyled } from 'baseui';

type CustomTheme1 = {color: string};
type CustomTheme2 = {size: string};

const themedStyled = createThemedStyled<CustomTheme1>();

const A = themedStyled<{}>('div', props => {
  return {color: props.$theme.color};
});

const themedStyled2 = createThemedStyled<CustomTheme2>();

const B = themedStyled2<{}>('div', props => {
  return {color: props.$theme.color};
});""
`",'handles multiple duplicate themes',"`
// @flow
import {styled} from 'baseui';

type CustomTheme = {color: string};

const A = styled<{}, CustomTheme>('div', props => {
  return {color: props.$theme.color};
});

const B = styled<{}, CustomTheme>('div', props => {
  return {color: props.$theme.color};
});`","`
""
// @flow
import { styled, createThemedStyled } from 'baseui';

type CustomTheme = {color: string};

const themedStyled = createThemedStyled<CustomTheme>();

const A = themedStyled<{}>('div', props => {
  return {color: props.$theme.color};
});

const B = themedStyled<{}>('div', props => {
  return {color: props.$theme.color};
});""
`",'font values in Blocks',"`const Foo = () => (
    <React.Fragment>
      <Block font=""font1100"" />
      <Block font=""font1000"" />
      <Block font=""font900"" />
      <Block font=""font800"" />
      <Block font=""font700"" />
      <Block font=""font600"" />
      <Block font=""font500"" />
      <Block font=""font470"" />
      <Block font=""font460"" />
      <Block font=""font450"" />
      <Block font=""font400"" />
      <Block font=""font350"" />
      <Block font=""font300"" />
      <Block font=""font250"" />
      <Block font=""font200"" />
      <Block font=""font100"" />
    </React.Fragment>
  );`",transform,"`
""const Foo = () => (
    <React.Fragment>
      <Block font=\\""font1450\\"" />
      <Block font=\\""font1050\\"" />
      <Block font=\\""font950\\"" />
      <Block font=\\""font850\\"" />
      <Block font=\\""font750\\"" />
      <Block font=\\""font650\\"" />
      <Block font=\\""font550\\"" />
      <Block font=\\""font450\\"" />
      <Block font=\\""font400\\"" />
      <Block font=\\""font350\\"" />
      <Block font=\\""font300\\"" />
      <Block font=\\""font250\\"" />
      <Block font=\\""font200\\"" />
      <Block font=\\""font150\\"" />
      <Block font=\\""font100\\"" />
      <Block font=\\""font100\\"" />
    </React.Fragment>
  );""
`",'direct usage of font values',"`const Foo = styled('div', props => ({
    ...props.$theme.typography.font300
  }));`","`
""const Foo = styled('div', props => ({
    ...props.$theme.typography.font200
  }));""
`",'direct usage of values with destructured `$theme`',"`const Foo = styled('div', ({$theme}) => ({
    ...$theme.typography.font300
  }));`","`
""const Foo = styled('div', ({$theme}) => ({
    ...$theme.typography.font200
  }));""
`","'direct usage of values with destructured ""typography"" value'","`const Foo = styled('div', ({$theme: {typography}}) => ({
  ...typography.font300
}));`","`
""const Foo = styled('div', ({$theme: {typography}}) => ({
  ...typography.font200
}));""
`",'direct usage of values with destructured direct value',"`const Foo = styled('div', ({$theme: {typography: {font300}}}) => ({
    ...font300
  }));`","`
""const Foo = styled('div', ({$theme: {typography: {font200}}}) => ({
    ...font200
  }));""
`",'override style function',`const Foo = <Block overrides={{ Block: { style: ({$theme}) => ({ ...$theme.typography.font200 })}}} />`,"`""const Foo = <Block overrides={{ Block: { style: ({$theme}) => ({ ...$theme.typography.font100 })}}} />""`",'override style function 2',`const Foo = <Button overrides={{ BaseButton: { style: ({$theme}) => ({ ...$theme.typography.font200 })}}}>Foo</Button>`,"`""const Foo = <Button overrides={{ BaseButton: { style: ({$theme}) => ({ ...$theme.typography.font100 })}}}>Foo</Button>""`",'typography components','labels',"`import {Label1, Label2} from ""baseui/typography"";
const Foo = () => {
  return (
    <div>
      <Label1>Hello there!</Label1>
      <Label2>Hello there!</Label2>
    </div>
  );
}
export default Foo;`","`
""import {Label3, Label2} from \\""baseui/typography\\"";
const Foo = () => {
  return (
    <div>
      <Label3>Hello there!</Label3>
      <Label2>Hello there!</Label2>
    </div>
  );
}
export default Foo;""
`",'paragraphs',"`import {Paragraph1, Paragraph2} from ""baseui/typography"";
const Foo = () => {
  return (
    <div>
      <Paragraph1>Hello there!</Paragraph1>
      <Paragraph2>Hello there!</Paragraph2>
    </div>
  );
}
export default Foo;`","`
""import {Paragraph3, Paragraph2} from \\""baseui/typography\\"";
const Foo = () => {
  return (
    <div>
      <Paragraph3>Hello there!</Paragraph3>
      <Paragraph2>Hello there!</Paragraph2>
    </div>
  );
}
export default Foo;""
`",'captions',"`import {Caption1, Caption2} from ""baseui/typography"";
const Foo = () => {
  return (
    <div>
      <Caption1>Hello there!</Caption1>
      <Caption1 color=""primary"">Hello there!</Caption1>
      <Caption2>Hello there!</Caption2>
    </div>
  );
}
export default Foo;`","`
""import {Paragraph4, Label4} from \\""baseui/typography\\"";
const Foo = () => {
  return (
    <div>
      <Paragraph4 color=\\""contentSecondary\\"">Hello there!</Paragraph4>
      <Paragraph4 color=\\""primary\\"">Hello there!</Paragraph4>
      <Label4 color=\\""contentSecondary\\"">Hello there!</Label4>
    </div>
  );
}
export default Foo;""
`",'respects local aliases',"`import {Paragraph1 as Paragraph} from ""baseui/typography"";
const Foo = () => {
  return (
    <div>
      <Paragraph>Hello there!</Paragraph>
    </div>
  );
}
export default Foo;`","`
""import {Paragraph3 as Paragraph} from \\""baseui/typography\\"";
const Foo = () => {
  return (
    <div>
      <Paragraph>Hello there!</Paragraph>
    </div>
  );
}
export default Foo;""
`",'updates caption colors even with local aliases',"`import {Caption1 as Caption} from ""baseui/typography"";
const Foo = () => {
  return (
    <div>
      <Caption>Hello there!</Caption>
      <Caption color=""primary"">Hello there!</Caption>
    </div>
  );
}
export default Foo;`","`
""import {Paragraph4 as Caption} from \\""baseui/typography\\"";
const Foo = () => {
  return (
    <div>
      <Caption color=\\""contentSecondary\\"">Hello there!</Caption>
      <Caption color=\\""primary\\"">Hello there!</Caption>
    </div>
  );
}
export default Foo;""
`",'does not update','similarly named variables',"`const font100 = ""foo""; const Foo = <div>{font100}</div>;`","`""const font100 = \\""foo\\""; const Foo = <div>{font100}</div>;""`",'similarly named object properties',`const typography = { font100: { fontSize: '12px' } };`,"`""const typography = { font100: { fontSize: '12px' } };""`",'similarly named object assignments',`const $theme = {typography: {font100: {}}};`,"`""const $theme = {typography: {font100: {}}};""`",'Recommended config',cli,CLIEngine,useEslintrc,cwd,'example-config',configFile,'example-config/.eslintrc.js',resolvePluginsRelativeTo,getConfigForFile,'example-config/fixture.js',rules,toMatchObject,Plugin,configs,recommended,plugins,'simple type',source,"`
      // @flow
      export type FirstT = number;
    `",output,parseFileToOutline,"`
Array [
  Object {
    ""children"": Array [],
    ""lineStart"": 3,
    ""name"": ""FirstT"",
  },
]
`",'single type',"`
      // @flow
      export type PropsT = {
        a: string,
        b: number,
      };
    `","`
Array [
  Object {
    ""children"": Array [
      Object {
        ""lineStart"": 4,
        ""name"": ""a"",
      },
      Object {
        ""lineStart"": 5,
        ""name"": ""b"",
      },
    ],
    ""lineStart"": 3,
    ""name"": ""PropsT"",
  },
]
`",'multiple types',"`
      // @flow
      export type FirstT = {
        a: string,
        b: number,
      };

      export type SecondT = {
        a: string,
        b: number,
      };
    `","`
Array [
  Object {
    ""children"": Array [
      Object {
        ""lineStart"": 4,
        ""name"": ""a"",
      },
      Object {
        ""lineStart"": 5,
        ""name"": ""b"",
      },
    ],
    ""lineStart"": 3,
    ""name"": ""FirstT"",
  },
  Object {
    ""children"": Array [
      Object {
        ""lineStart"": 9,
        ""name"": ""a"",
      },
      Object {
        ""lineStart"": 10,
        ""name"": ""b"",
      },
    ],
    ""lineStart"": 8,
    ""name"": ""SecondT"",
  },
]
`",'only includes exported types',"`
      // @flow
      export type FirstT = {
        a: string,
        b: number,
      };

      type SecondT = {
        a: string,
        b: number,
      };
    `","`
Array [
  Object {
    ""children"": Array [
      Object {
        ""lineStart"": 4,
        ""name"": ""a"",
      },
      Object {
        ""lineStart"": 5,
        ""name"": ""b"",
      },
    ],
    ""lineStart"": 3,
    ""name"": ""FirstT"",
  },
]
`",'applies aria-controls when provided',aria-controls,"""panel""","""title""","
        content
      ",panel,"'[aria-controls=""panel""]'",toBeNull,'calls onChange on enter key press',header,getByText,'title',fireEvent,calls,'calls onChange on space key press',32,'calls onChange on click','does not render content when not expanded','does render content when expanded',expanded,'titlecontent','does render content when not expanded but renderAll is true',renderAll,'provides expected props to children function',StatefulPanelContainer,initialState,'sets specified item active',nextActive,nextItems,setItemActive,active,'sets parent item active when child set active','A','A A','A B','B','B A','B B','unsets non active items','custom getUniqueIdentifier',info,getId,'applies expected accessibility attributes to img element','user name',Avatar,src,"""valid-img-src.png""",'img','alt','does not render img element if image fails to load',"""user name""","""invalid-img-src.png""",triggerLoadError,'test-style',parse,'applies expected accessibility attributes to root when loaded',triggerLoad,'aria-label','role','applies expected accessibility attributes to root if image fails to load','renders user first 2 initials when image fails to load','UN','only renders 2 initials if more names exist when image fails to load','user name surname','only renders 1 initial if one name exists when image fails to load','U','only renders initial from name if src is not provided','resets noImageAvailable flag when src is updated',TestCase,showImg,setShowImg,"
          ",'valid-img-src.png',onClick,toggle,"
        ",beforeStyle,afterStyle,'block','it runs without flow error when we override Initials',CustomInitials,StyledInitials,0_o,CustomAvatar,overrides,Initials,'it provides flow error if we not provide all required props for StyledRoot',CustomRoot,rest,BrokenCustomRootComponent,Root,CustomRootComponent,StyledRoot,'renders themed backgroundColor if provided',Block,backgroundColor,"""primary200""",'renders themed color if provided','renders overflowX styling if provided with scrollX value',"""scrollX""",'renders overflowY styling if provided with scrollY value',"""scrollY""",'renders overflow styling if provided any other value',"""auto""",'renders flexWrap styling as expected',flexWrap,'applies event handlers','applies expected styles if responsive array is provided',marginLeft,'scale100','scale200','scale300','scale400','applies expected styles if responsive array has less than number of breakpoints','renders themed font if provided',"""font200""",'does not throw if provided unknown font prop',"""not-a-real-font""",'applies correct accessibility attributes to root element',ariaLabel,'Breadcrumbs navigation',Breadcrumbs,aria-label,StyledLink,href,"""#""",Parent Page,Sub-Parent Page,"

        ",Current Page,"
      ","`[aria-label=""${","}""`","'ignores null, true, and false'",Separator,'data-testid','separator',separators,queryAllByTestId,'click event on child element triggers parent handler',handler,buildSimpleWrapper,buttons,of,'does not clobber click handler on child element',parentHandler,childHandler,ButtonGroup,Button,second,"'if disabled, click events do not call provided handler'",'sets no children as selected if selected prop is null value',selected,'aria-checked','false','sets no children as selected if selected prop is empty array','sets appropriate child as selected if selected prop is a number','true','sets appropriate child as selected if selected prop is zero','sets appropriate child as selected if selected prop is an array',selectedIndices,'should respect isSelected value if the consumer passes the prop to Button',queryByTitle,isSelected,"""testButton""",'testButton',toBeTruthy,'should handle null children',one,two,'renders with default props','default mode','does not update state when clicked',clickChildAtIndex,expectSelectedValueAtIndex,'radio mode','sets button selected when initially clicked',MODE,radio,'sets button unselected on second click','sets button unselected when another child is clicked','sets initial selected','handles provided state reducer',stateReducer,'checkbox mode',checkbox,'maintains selection when another child is clicked','provides expected props to children render function',StatefulContainer,toHaveProperty,'onClick','selected','calls provided click handler',childProps,'does not call state reducer if mode is not set','calls state reducer if mode is set','Clicking a button should work',data-testid,"
      Submit
    ",getByTestId,'Form should submit normally',form,Submit,"
    ",submit,'Form should not submit when button is loading',isLoading,"
        Submit
      ",'basic render',startEnhancer,"""start""",endEnhancer,"""end""",'start','end','renders with components overrides',NewStartEnhancer,StartEnhancer,'renders with loading spinner',"'[aria-busy=""true""]'",'onClick called with event',"""onClick doesn't fire while loading""",'Card - basic functionality',action,"""#test""",Link to a Place&nbsp;&nbsp;&nbsp;&gt;,headerImage,headerImg,thumbnail,thumbnailImg,'Card title',Card,Card body,toHaveLength,'Card - header image object','Card Alt Desc',srcSet,"}, ${",} 1.5x`,img,'src','srcSet','Card - no images','renders provided label',Checkbox,'calls provided event handlers',onMouseEnter,onMouseLeave,onMouseUp,onMouseDown,onFocus,onBlur,"
        label
      ",mouseEnter,mouseLeave,mouseUp,mouseDown,blur,'only fires one click event',onAncestorClick,'should provide all needed props to children render func','should provide initial state as part of state','calls onChange when text is entered',handleChange,TestBaseProvider,Combobox,mapOptionToString,'calls onBlur when input loses focus',handleBlur,'calls onFocus when input enters focus',handleFocus,'opens listbox when text is entered','ul','opens listbox when arrow down is pressed','does not call onChange selection changes','calls onChange with selected value when enter key pressed','calls onChange with selected value when option clicked',selectedItem,"'li[aria-selected=""true""]'",'opens listbox on focus','does not open listbox on focus if no options',closed,'closes listbox on option click','li','closes listbox on blur','clears input on value state set to empty string',v,'value','clears input on value state set to arbitrary string',updateValue,'abc','does not change input value while keyboard nav if autocomplete is false',autocomplete,'can close listbox on submission',closeListbox,'forwards inputRef from props',inputRef,createRef,isFocused,current,'is sortable by default',column,AnchorColumn,'column',mapDataToValue,'hello','https://baseweb.design',sortable,'is not filterable by default',filterable,'applies provided sortable value','cell renders provided value',Cell,renderCell,'baseweb','cell renders provided elementAs',elementAs,'builds expected sort function',makeValue,'C',sortFn,'is not sortable by default',CustomColumn,'is not sortable if no sortFn provided','applies provided sortable value if sortFn exists','is not filterable if neither renderFilter nor buildFilter provided','applies provided filterable value if renderFilter and buildFilter exist',renderFilter,buildFilter,params,'cell renders according to provided renderCell',CustomCell,DatetimeColumn,'is filterable by default','2011-04-11T10:20:30','04-11-2011 10:20 30:00','cell renders provided value based on formatString',formatString,'dd/MM/yyyy','11/04/2011','sets filter params for range of datetimes',`2011-04-${,padZero,}T10:${,}:30`,mockSetFilter,Filter,setFilter,'Apply',filterParams,DATETIME_OPERATIONS,RANGE_DATETIME,isEqual,'sets filter params for range of dates',"""[data-baseweb='select'] div div""",RANGE_DATE,isSameDay,'sets filter params for range of times',RANGE_TIME,isSameHour,isSameMinute,'sets filter params for selected weekdays','Categorical',checkboxes,"'input[type=""checkbox""]'",WEEKDAY,selection,'sets filter params for selected months',MONTH,'sets filter params for selected quarters',QUARTER,'sets filter params for selected halves',HALF,'sets filter params for selected years',`200${,}-04-10T10:${,YEAR,2003,2007,NumericalColumn,'applies provided filterable value','cell renders provided value with default options',1999.888,'2000','cell renders positive value according to accounting format',NUMERICAL_FORMATS,ACCOUNTING,'$1999.89','cell renders negative value according to accounting format','($1999.89)','cell renders value according to percentage format',PERCENTAGE,'1999.89%','cell renders value formatted by passed format function',`EUR ${,'EUR 1999.888','cell renders value according to provided precision','1999.888','can call setFilter with expected selection',inputs,"'div[data-baseweb=""input""] input'",exclude,'≥ 1 and ≤ 2','can exclude the range','Exclude range','≥ 1 and ≤ 4','Single Value','Exclude value',filterParamsSecond,'= 3','builds default filter function for integers',lowerValue,upperValue,excludeKind,'range',eqE,'builds default filter function for floats',1.1,2.6,3.6,"'builds accounting filter function for floats, 2 digits'",2.95,'builds accounting filter function for floats',2.954,StringColumn,"""hello""",'renders expected number of rows',controlRef,'800px','900px',StatefulDataTable,COLUMNS,ROWS,getRows,'bright','glossy','Add Filter',getAllByRole,'option','dry','brittle','splitByQuery handles alphabet characters',splitByQuery,'Ghostbusters','host','G','busters','splitByQuery handles numeric characters','123456','23','456','splitByQuery handles other characters','prefix[p]suffix','[p]','prefix','suffix','splitByQuery handles query at start position','startend','splitByQuery handles query at end position','splitByQuery handles capitalization','Spotted Hyena','hy','Spotted ','Hy','ena',StatefulCalendar,highlightedDate,CalendarContainer,'calendar-container','passes provided event handlers to children',onDayMouseOver,onDayMouseLeave,2019,StatefulDatepicker,Input,'root','correctly filters when date === startDate',filterMonthsList,monthItems,getFilteredMonthItems,formatMonthLabel,month,monthLabels,'0','January','February','March','April','4','May','5','June','6','July','August','8','September','9','October','November','11','December','correctly filters when startDate === endDate','if using destructured utils function','should behave the same as date-helpers version',destructuredReturn,MIDNIGHT,'yyyy-MM-dd',helpersReturn,'format','when passing a locale','should return different values based on the locale',helpers,'05/15/2020','month',es,'mayo','when passing','fullOrdinalWeek',"'should return a date like Friday, May 15th 2020'",dateHelpers,"'Friday, May 15th 2020'",momentHelpers,'weekday','should return a date like Friday','Friday','dayOfMonthNumber','should return a date like 15','15','monthNumber','should return a date like 5','fullDate','should return a date like 2020/05/15','slashDate','2020/05/15','isOnOrAfterDay','should return true if the second provided date is on or after the start of the day of the first provided date',isOnOrAfterDay,'Tue Apr 12 2011 00:00:00 GMT-0500','Tue Apr 12 2011 11:21:31 GMT-0500','Tue Apr 11 2011 00:00:00 GMT-0500','Tue Apr 11 2011 11:21:31 GMT-0500','isOnOrBeforeDay','should return true if the second provided date is on or before the start of the day of the first provided date',isOnOrBeforeDay,'differenceInCalendarMonths','should return the difference in calendar months',differenceInCalendarMonths,2020,'formatDate','should format date','MMM','Apr','should apply locale to format if provided','MMMM','abril','isSameYear','should show if dates are same year',isSameYear,'should return false if either date is falsy','isSameMonth','should show if dates are same month',isSameMonth,'isSameDay','should show if dates are same day','isStartOfMonth','should show if date is start of month',isStartOfMonth,'isEndOfMonth','should show if date is end of month',isEndOfMonth,31,'getWeekdayMinInLocale','should get the first letter of the weekday in the provided locale',getWeekdayMinInLocale,'mi','getWeekdayInLocale','should get the weekday name in the provided locale',getWeekdayInLocale,'miércoles','getMonthInLocale','should get the name of the provided month number in the provided locale',getMonthInLocale,'enero','isOutOfBounds','if both minDate and maxDate are provided','should show if the date is above the max or below the min',isOutOfBounds,'isDayDisabled','if maxDate and minDate are provided','should return true if the date is outside of the max and min',isDayDisabled,includeDates,'if excludedDates is provided','should return true if the date is in excludedDates','if includedDates is provided','should return true if the date is not in includedDates','if filterDate is provided','should return true if filterDate returns false',getYearForDate,'monthDisabledBefore','if minDate is provided','should return true if the minDate falls on a later month than one month before the provided date',monthDisabledBefore,26,'if includeDates is provided','should return true if every date in includeDates falls on later month than one month before the provided date','monthDisabledAfter','if maxDate is provided','should return true if the maxDate falls on a earlier month than one month after the provided date',monthDisabledAfter,'should return true if every date in includeDates falls on a earlier month than one month after the provided date',29,'getEffectiveMinDate','if only minDate is provider','should return minDate',getEffectiveMinDate,'if only includeDates is provided','should return the earliest includeDate','if minDate and includeDates are provided','should return the earliest includeDate thats on or before the minDate','getEffectiveMaxDate','if only maxDate is provider','should return maxDate',getEffectiveMaxDate,'if maxDate and includeDates are provided','should return the earliest includeDate thats on or after the maxDate','applyTimeToDate',time,'if date is not provided','should return the time',applyTimeToDate,'if date is provided',"'should apply the hours and minutes of the time to the date, and set the seconds to zero'",'applyDateToTime',applyDateToTime,"'should apply the year, month, and day of the date to the time'",'min','should return the earliest date in the provided array',dates,'max','should return the latest date in the provided array','setDate','should set the provided day number on the provided date',setDate,'getDate','should return the day of month number for the provided date','addWeeks','should add the provided number of weeks to the provided date','subWeeks',subWeeks,'addYears','should add the provided number of years to the provided date',addYears,2021,'subYears',subYears,'subDays','should subtract the provided days from the provided date',subDays,'isDayInRange','should return true if the provided is between the start date and end date',isDayInRange,'getStartOfWeek','if a locale is not provided','should return the start of the week',getStartOfWeek,returnValue,assertValue,'object',toISOString,'if a locale is provided','should return the start of the week in the provided locale','getEndOfWeek','should return the end of the week',getEndOfWeek,23,59,999,'setSeconds','should set the seconds',setSeconds,'setMinutes','should set the minutes',setMinutes,'setHours','should set the hours',setHours,'setMonth','should set the month',setMonth,'setYear','should set the year',setYear,'getMinutes','should get the minutes',getMinutes,'getHours','should get the hours',getHours,'getMonth','should get the month',getMonth,'getYear','should get the year',getYear,'getStartOfMonth','should get the start of the month',getStartOfMonth,'getEndOfMonth','should get the end of the month',getEndOfMonth,'addDays','should add days to the provided date',addDays,'addMonths','should add months to the provided date',addMonths,'subMonths','should subract months from the provided date',subMonths,'isBefore','should return true if the first date is before the second',isBefore,'isAfter','should return ture if the first date is after the second',isAfter,'parseString','should convert the provided string back into a date according to the provided format string',parseString,'2020.03.01','yyyy.MM.dd','when passing locale','should parse based on the locale','jueves 02 2020','EEEE dd yyyy','dddd DD YYYY','es','parse','should convert the provided string back into a date according to the provided generic date-io format','2019/01/01','set','should apply the provided values to the provided date',year,hours,minutes,seconds,'getQuarter','should get the quarter of the provided date',getQuarter,'isEqual','should return true if the dates are equal','isValid','should return true if the provided value is a valid date object',isValid,'messed up stuff',NaN,'Item 1','Item 2',Item,'item',getAllByTestId,'label override',CustomLabel,"""label""",Child: ,Label,StatefulListContainer,'children function receives onChange handler',event,newIndex,newState,oldIndex,childrenOnChangeProp,toHaveBeenLastCalledWith,'stateReducer',mockReturnValueOnce,targetRect,STATE_CHANGE_TYPE,"""root""",StatefulList,'renders nothing when closed',Drawer,anchor,"""right""","
        Hello world
      ",queryByText,'Hello world','renders content when open','renders backdrop with opacity 0 when showBackdrop is false',showBackdrop,Backdrop,'backdrop',backdrop,'hides content when close button clicked',onClose,"
        Drawer Body
      ",closeSource,CLOSE_SOURCE,closeButton,'hides content on backdrop click','disables close feature',closeable,'Drawer Body','override components',DrawerContainer,'drawer-container',DrawerBody,'drawer-body',Close,'close','applies expected accessibility attributes to button',FileUploader,'renders progress bar if progressAmount provided',progressAmount,getByRole,'progressbar','renders content message if progressMessage provided','uploading...',progressMessage,'renders spinner if progressMessage provided',"""uploading...""",Spinner,'spinner',"'does not render spinner if progressAmount is zero, render progress bar'",spinner,queryByTestId,'does not render progress bar if progressAmount not provided',queryByRole,'renders error message if errorMessage provided','error!',errorMessage,'renders cancel button if progressAmount provided','Cancel','renders cancel button if progressMessage provided','renders retry button if errorMessage provided',"""error!""",'Retry Upload','renders retry button if progressAmount and errorMessage provided','renders error message if progressAmount and errorMessage provided','renders retry button if progressMessage and errorMessage provided','renders error message if progressMessage and errorMessage provided','flexGridItemMediaQueryStyle',testProps,flexGridColumnCount,flexGridColumnGap,flexGridRowGap,flexGridItemIndex,flexGridItemCount,snapshotName,'2 columns no gaps','1px','2px','2 columns with gaps','2 columns with gaps end of row','2 columns with gaps end of column','2 columns with gaps end of row and column','2 columns with gaps row ends early',flexGridItemMediaQueryStyle,$theme,LightTheme,toMatchSnapshot,'getResponsiveValue',testCases,'10px','20px',getResponsiveValue,'flexGridItemStyle',snapshotProps,'no props',$flexGridColumnCount,$flexGridColumnGap,$flexGridRowGap,$flexGridItemIndex,$flexGridItemCount,'non-responsive','responsive columns','4px','responsive columns and gaps',ResponsiveT,ScaleT,flexGridItemStyle,'renders with expected styles',FlexGridItem,testStyle,"`
Object {
  ""flexGrow"": 1,
  ""marginBottom"": 0,
  ""marginRight"": 0,
  ""width"": ""calc((100% - 0px) / 1 - .5px)"",
}
`",'renders with expected style overrides',"`
Object {
  ""color"": ""red"",
  ""flexGrow"": 1,
  ""marginBottom"": 0,
  ""marginRight"": 0,
  ""width"": ""calc((100% - 0px) / 1 - .5px)"",
}
`",'passes FlexGrid props to children',MockFlexGridItem,reduce,acc,camelToKebab,baseElement,FlexGrid,Item 1,Item 2,prettyDOM,'FlexGridItem with flexGridColumnCount',"'Renders label, caption, and error for the Input component'",'Label test',caption,'Caption test',FormControl,'renders error message if provided','Error test','accepts node for label and caption','accepts node for error','Renders error if error and positive and caption are provided',consoleWarn,warn,positive,'Positive test',Textarea,'Renders label and caption for the Textarea component',"""Label test""","""Caption test""",required,'Renders label and caption for the Checkbox component','Renders label and caption for the RadioGroup component',RadioGroup,Radio,"""1""",First,"""2""",Second,"""3""",Third,'renders provided overrides',ControlContainer,'control-container',Caption,'caption',"""caption""",'counter is visible','example',maxLength,counter,'counter is zero','counter is hidden','example 2','override counter','50/100','should render component',HeaderNavigation,hello world,'hello world','applies root overrides',"
        hello world
      ",'test','i18n-interpolation',startDate,"'Jan 1, 2020'",endDate,"'Jan 15, 2020'",translation,'Selected date range is from ${startDate} to ${endDate}.',expectation,`Selected date range is from ${,} to ${,}.`,getInterpolatedString,'flattenFragments',ul,li,flattenFragments,'no wrapper',Wrapper,'with wrapper','getMediaQuery',getMediaQuery,1280,'@media screen and (min-width: 1280px)','getMediaQueries',getMediaQueries,small,320,medium,large,'@media screen and (min-width: 320px)','@media screen and (min-width: 600px)','getMediaQueries stable breakpoint order','camelToKebab','testString','test-string','renders an icon with viewBox and title',viewBox,'0 0 23px 23px','Test',Icon,fillRule,"""evenodd""",clipRule,"""M6 12C6 11.4477 6.44772 11 7 11H17C17.5523 11 18 11.4477 18 12C18 12.5523 17.5523 13 17 13H7C6.44772 13 6 12.5523 6 12Z""",svgElement,'svg','viewBox',titleElement,'does not pass extraneous attributes to svg elements',consoleError,$test,"""123""",Icons,BaseInput,onKeyDown,onKeyUp,toBeCalledTimes,code,'KeyA',keyUp,'BaseInput - should not take default value prop','calls focus handler when autoFocus is true','applies ref from inputRef prop',useRef,useEffect,'applies expected autocomplete attribute if type is password',"""password""",'autocomplete','new-password','applies provided autocomplete attribute','current-password',autoComplete,'renders input element','renders enhancers','applies useRef ref',HTMLInputElement,'applies createRef ref',MaskedInput,"""(123) 456-7890""",mask,"""(999) 999-9999""",'renders children fn','provides onChange handler to children fn','renders input',StatefulInput,'handles change events','Utils - getSharedProps','id',adjoined,ADJOINED,none,SIZE,default,placeholder,'placeholder',getSharedProps,'getSharedProps returns correct object','renders layer content',onMount,Layer,'accepts custom mountNode',setMounted,"""mount-node""",mountNode,"
            ",'mount-node','renders layers-manager as expected',appContent,'app-content',layerContent,'layer-content',LayersManager,AppContainer,'app-container',LayersContainer,'layers-container',appContainer,layersContainer,'renders multiple layers',contentOne,'content 1',contentTwo,'content 2',strong,Hello world,'configures rendering order when index is provided','renders tether content',onPopperUpdate,anchorRef,popperRef,This is anchor,TetherBehavior,This is popper,'This is anchor','This is popper','toPopperPlacement should convert from popover placements to popper placements',toPopperPlacement,'rightTop','right-start','rightBottom','right-end','top-start','topRight','top-end','parsePopperOffset','parsePopperOffset should handle valid integer inputs',parsePopperOffset,'parsePopperOffset should round float inputs',10.1,15.24,'parsePopperOffset should be resilient to null input','does not render popover if getChildMenu is undefined','content',MaybeChildMenu,getChildMenu,resetParentMenu,tagName,'DIV','renders popover if getChildMenu is provided',child menu,ChildMenuPopover,Body,'child-menu-popover','renders basic menu',Menu,NewOption,"""option""",Option,'basic renders',OptionList,mockItem,NewListItem,"""list-item""",ListItem,custom,'prop','list-item',OptionProfile,subtitle,imgUrl,'renders with custom image component',MockComponent,"""mock-image-element""",getProfileItemImg,'mock-image-element',"""mock-list-item-element""",ListItemProfile,'mock-list-item-element','renders with props','item1','item2',getItemLabel,StatefulMenu,'scrolls down to second item',mockReturnValue,offsetTop,Utils,scrollItemIntoView,'scrolls down to subsequent item','scrolls up to fist item','scrolls up to subsequent item',"'scrolls down to subsequent item, \
  and item should occur in the center of the view'","'scrolls up to subsequent item, \
  and item should occur in the center of the view'",Modal,ModalBody,'close button triggers close',Modal Body,'disables close',DialogContainer,'dialog-container',Dialog,'dialog',role,"""mycustomrole""",dialog,"'[role=""mycustomrole""]'",'raises no errors when operating on select in modal',StatefulSelect,'AliceBlue','#F0F8FF','AntiqueWhite','#FAEBD7','Aqua','#00FFFF','Aquamarine','#7FFFD4','Azure','#F0FFFF','Beige','#F5F5DC',ValueContainer,labelKey,"""id""",valueKey,"""color""",'basic inline rendering',Notification,'renders dropdown',Pagination,Select,'handles prev button click',onPageChange,onPrevClick,'Prev',nextPage,currentPage,prevPage,'next button click',onNextClick,'Next','clamp',clamp,'add gaps to a string',addGaps,'4111111111111111','4111 1111 1111 1111','378282246310005','3782 822463 10005','sanitize number',sanitizeNumber,'4111',' 4111/ ','kkk4-1-1-1abc','5555555555554444 1234','5555555555554444','abc4111 1111 1111 1111 333 444','4111111111111111333','getCaretPosition',getCaretPosition,'4111 22','41112','411122','41113 2222','41112222','411132222','4111222','41112345','4112345','411 2345',CustomBody,onMouseEnterDelay,onMouseLeaveDelay,PLACEMENT,topLeft,popperOptions,showArrow,triggerType,TRIGGER_TYPE,dismissOnClickOutside,dismissOnEsc,onOpen,'dismisses on click outside',firstRender,'isOpen','onClickOutside',onClickOutside,secondRender,'disables dismiss on click outside','dismiss on escape','onEsc',onEsc,'disables dismiss on escape','hover trigger type events','onMouseEnter','onMouseLeave','onFocus','onBlur',third,fourth,fifth,'click trigger type events','calls onOpen/onClose callbacks',mockClear,'null stateReducer',ProgressBar,75,'should render label',getProgressLabel,showLabel,'can navigate between steps',setCurrent,ProgressSteps,Step,"""step 1""",step 1 content,"""step 2""",step 2 content,"""step 3""",step 3 content,'step 1','step 2','step 3','step 1 content','step 2 content','step 3 content','sets expected child radio checked','disables children if disabled','disabled prop on children take priority','radio-group focus and a11y management','sets the initial state',getByDisplayValue,StatefulRadioGroup,"""numbers""",three,toBeChecked,toHaveAttribute,'tabindex','-1',toHaveFocus,'focus selected radio',userEvent,tab,'focus first radio if no value is selected','passes additional props to children','foo','passes intial state to children','sets clicked child checked','radiogroup','checked','applies correct accessibility attributes to the root element',EmoticonRating,'sets correct accessibility attributes to the radio elements','radio','sets correct accessibility attributes to radio elements when read only',readOnly,'aria-disabled','can update active radio on click','cannot update rating on click when read only',StarRating,'sets correct accessibility attributes to radio elements','renders correctly',AutosizeInput,"""test""",'renders provided options',ReactRefT,onItemSelect,getOptionLabel,maxDropdownHeight,'1000px',multi,searchable,TYPE,innerRef,SelectDropdown,'aria-selected','renders default highlighted option','renders tag by default',MultiValue,Tag,'tag',"
        test
      ",tag,'testDelete','clicking tag action calls removeValue',removeValue,Action,'action','opens and closes dropdown with StatefulSelect',ControlRefT,BaseProvider,theme,setDropdownOpen,'Select...','opens and closes dropdown with Select','setInputValue','correctly sets the input value','dragons','unicorns','elves',setInputValue,'item not included','calls onInputChange when input value changes',onInputChange,'removes selected tag on clear',ClearIcon,'clear-icon','select flow allows custom keys in options objects','sets controlRef from props','provides props to children render func',StatefulSelectContainer,actualProps,'calls onChange handler with correct params','id2','label2','should provide default styled components to render',StyledControlContainer,StyledValueContainer,Placeholder,StyledPlaceholder,SingleValue,StyledSingleValue,TagComponent,InputContainer,StyledInputContainer,StyledInput,InputSizer,StyledInputSizer,SelectArrow,StyledSelectArrow,StyledClearIcon,SearchIconContainer,StyledSearchIconContainer,SearchIcon,SearchIconComponent,OptionContent,StyledOptionContent,'renders StyledSingleValue','renders custom SingleValue','single-value','renders expected nav items',Navigation,nav,'Colors','Sizing','Typography','renders titles correctly modified by mapItem',Title,New ,mapItem,'New Colors','New Sizing','New Typography','calls mapItem exactly once for each item',mockImplementation,'provides expected props to child fn',activeItemId,'activeItemId','onChange',StatefulNavigation,'passes additional props to child fn',StatefulSliderContainer,allProps,childFn,'renders text content',SnackbarElement,"""message""",'message',"'preserves non styletron props when extending with ""withStyle""'",StyledComponentElement,StyledComponent,withWrapper,Styled,"""something useful""",ExtendedStyledComponent,withStyle,withStyletronProvider,withThemeProvider,'something useful','styled',StyledMockButton,colors,primary400,"""test-button""",debug,'test-button',getComputedStyle,"'rgb(175, 175, 175)'",'styled can be called with single string argument',ADiv,'styled override prop',styleFn,$color,"""one""","""two""",$style,"""three""",borderTopLeftRadius,borderTopRightRadius,borderBottomRightRadius,borderBottomLeftRadius,"""four""","""red""","""five""","""blue""",button1,classList,colorRedClass,button2,colorBlueClass,button3,button4,button5,'five','styled flow','it provides flow error if accessing property not defined in props type',P,hello,world,'it provides flow error if accessing property not defined in default theme type',primary9000,'it provides flow error if returning invalid style object',invalid,'it provides expected flow error if base is react component',C,'it provides flow error if accessing property not defined in custom theme type',T,custom400,themedStyled,createThemedStyled,custom9000,'it provides props flow error using createThemedStyled','withStyle flow',Q,'themedWithStyle flow',themedWithStyle,createThemedWithStyle,'useStyletron flow','it provides flow error if argument is not a StyleObject',A,useStyletron,"
          hello
        ",'themedUseStyletron flow',themedUseStyletron,createThemedUseStyletron,'longhand border properties','it accepts border style from theme in longhand property',ProperBorderStyleType,borderTopWidth,borders,border100,borderWidth,borderTopStyle,borderStyle,borderTopColor,borderColor,StringBorderStyleType,'expandBorderStyles',shorthandStyles,'3px','solid',expandBorderStyles,borderBottomWidth,borderBottomStyle,borderBottomColor,borderLeftWidth,borderLeftStyle,borderLeftColor,borderRightWidth,borderRightStyle,borderRightColor,TableBuilder,DATA,TableBuilderColumn,"""Foo""",row,"""Bar""",'Hey','tr','renders expected number of columns',headCells,'th','renders expected number of anchors',anchors,'href','https://example.com/b','banana','renders sorted results ascending',sortColumn,sortOrder,'ASC',SortAscIcon,'sort-asc-icon',SortDescIcon,'sort-desc-icon',SortNoneIcon,'sort-none-icon',"""foo""",numeric,'renders sorted results descending','DESC','renders sorted results none','executes onSort with column id when header is clicked',mockOnSort,onSort,'exposes row and column data to overrides',mockTableHeadCellStyle,mockTableBodyRowStyle,mockTableBodyCellStyle,TableHeadCell,TableBodyRow,TableBodyCell,$colIndex,$col,'Foo',$rowIndex,$row,'renders aria label for column header',tableHeadAriaLabel,"""Foo Aria Label""","'Foo Aria Label, ascending sorting'","'Bar, ascending sorting'",'renders loading message','Loading...','renders empty message',emptyMessage,"""No data""",'No data','does not render unset empty message',Table,'ID','does not display filter content by default',Content,'displays filter content on click','does not display filter content if disabled','does display close button when enabled',hasCloseButton,'Close','does close filter when when closed is clicked','calls provided onSelectAll handler',onSelectAll,selectAll,'Select All','calls provided onReset handler',onReset,'Reset','displays triangle down when direction is ASC',SortableHeadCell,direction,"""ASC""",down,"'[title=""Sort ascending""]'",'fillClickTarget prop enable sort on cell click',fillClickTarget,'columnheader',"'without fillClickTarget prop, no sort on cell click'",'displays triangle up when direction is DESC',"""DESC""","'[title=""Sort descending""]'",'calls provided onSort fn on click','does not call provided onSort fn on click if disabled','row','applies correct aria attributes to table container','grid','aria-colcount',toString,'aria-rowcount','applies correct role attribute to table head cell',headers,'applies correct role attribute to table body','rowgroup','applies correct role attribute to table cell',cells,'gridcell','Tab Link 1','Tab Link 2','Tab Link 3','Tab 1 content','Tab 2 content','Tab 3 content','basic render w/ SEO','basic render with initial state',activeKey,'onChange functionality','stateReducer functionality','basic rendering',Tab,'tab','component overrides',"""mock""",'onSelect and onClick are called on a click event','onSelect and onKeydown are called on a Enter keydown event','onClick is not called when the tab is disabled','onSelect nor onKeydown is not called on key presses when the tab is disabled','renders provided children','does not render a11y attributes if disabled',onActionClick,'presentation','calls action callback on click',actionClickMock,'passes flow check with tag enum',TagWrapper,kind,TagKindT,'handles no children',getTextFromChildren,'handles one child',123,'123','handles multiple children','foo123','ignores non-joinable children','calls onClick handler when clicked','renders the content',StatefulComponent,'provides expected arguments to children fn',StatefulTextarea,'handles changes','Basic functionality','textarea value','Placeholder','autoFocus sets the initial focus state','setting value to null renders input placeholder',Case,TIME,TimePicker,nullable,"""placeholder""","'[data-id=""selected""]'",'1:30 AM','onChange value is accurate for NZ',renderComponent,'Select a timezone.','(GMT+13) Pacific/Fakaofo',toBeCalledWith,'Pacific/Fakaofo',offset,780,'onChange value is accurate for HI','(GMT-10) Pacific/Honolulu','Pacific/Honolulu','onChange value is accurate for UTC','(GMT+0) Europe/London','Europe/London','basic toast functionality',Toast,'alert','handles close click',CloseIcon,waitForElementToBeRemoved,'handles non-closable','anchor',popoverMargin,StatefulTooltip,anchorElement,findByText,accessibilityType,ACCESSIBILITY_TYPE,'mock-id',TreeView,'Node 1','onToggle invoked',onToggle,'keyboard copy keys still bubble',parentElement,preventDefault,ctrlKey,bubbles,'TreeLabel override should override default icons as well',CustomTreeLabel,hasChildren,isExpanded,isFocusVisible,'+','-',TreeLabel,ExpandIcon,'expand-icon',"""sibling's leaf at the root""",getPrevId,'sibling at the second level',"""sibling's last leaf""",'sibling at the root','parent at the root','parent at the second level','for nodeId that is in a non-expanded branch','for non-existent nodeId','getParentId',getParentId,"'deep, direct parent'","'deep, skip first sibling'",'getNextId','child at the root',getNextId,'child at the second level','sibling','sibling when children are not expanded','next closest ommer','root ommer','getFirstChild',getFirstChildId,'deep','leaf','leaf with siblings','getEndId',getEndId,'getExpandableSiblings',getExpandableSiblings,'Label 8','Label 9','Label 11','Label 12','getCharMatchId','prefix match',getCharMatchId,'Label 5','full text match','caption 1',ParagraphXSmall,"""primary""",'caption 2',LabelXSmall,'display',DisplayLarge,'h1',HeadingXXLarge,'h2',HeadingXLarge,HeadingLarge,'h4',HeadingMedium,'h5',HeadingSmall,'h6',HeadingXSmall,'label 1',LabelLarge,'label 2',LabelMedium,'paragraph 1',ParagraphLarge,'paragraph 2',ParagraphMedium,'performs deep merge on target',baz,quux,ret,deepMerge,'can handle three way merge',source1,source2,'merges array and object properties absent in target correctly','get overrides active state and value',"`{
      Root: {
        style: ({ $theme }) => ({
          outline: \`\${$theme.colors.warning200} solid\`,
          backgroundColor: $theme.colors.warning200
        })
      },
      Tag: {
        props: {
          overrides: {
            Action: {
              style: ({ $theme }) => ({
                outline: \`\${$theme.colors.warning200} dashed\`,
                backgroundColor:
                  $theme.colors.warning200
              })
            }
          }
        }
      }
    }`",parseOverrides,"`({ $theme }) => ({
  outline: \`\${\$theme.colors.warning200} solid\`,
  backgroundColor: $theme.colors.warning200
})`",nestedValue,"`({ $theme }) => ({
  outline: \`\${\$theme.colors.warning200} dashed\`,
  backgroundColor: $theme.colors.warning200
})`",'toggleOverrideSharedProps','adding them',"`{
    Root: {
      style: ({ $theme }) => {
        return {
          outline: \`\${$theme.colors.warning200} solid\`,
          backgroundColor: $theme.colors.warning200
        };
      }
    }
  }`",toggleOverrideSharedProps,'$isActive',"`({
  $theme,
  $isActive
}) => {
  return {
    outline: \`\${$theme.colors.warning200} solid\`,
    backgroundColor: $theme.colors.warning200
  };
}`",'removing them',"`{
    Root: {
      style: ({ $theme, $isActive }) => {
        return {
          outline: \`\${$theme.colors.warning200} solid\`,
          backgroundColor: $theme.colors.warning200
        };
      }
    }
  }`","`({
  $theme
}) => {
  return {
    outline: \`\${$theme.colors.warning200} solid\`,
    backgroundColor: $theme.colors.warning200
  };
}`",'overrides',getAstPropValue,`() => { color: 'black'}`,NotActiveNotInAST,`() => { color: 'pink'}`,Custom,customProps,properties,computed,decorators,'Root','Identifier',shorthand,'ObjectProperty',expression,raw,"""'black'""",rawValue,innerComments,leadingComments,loc,trailingComments,'StringLiteral','ExpressionStatement','color','LabeledStatement',directives,'BlockStatement',parenStart,parenthesized,generator,'ArrowFunctionExpression','ObjectExpression','get theme AST primitives','getAstThemeWrapper',generate,generateThemeWrapper,inputFill,jsxText,'light-theme',"`<ThemeProvider theme={createTheme(light-theme, {
  colors: {
    inputFill: ""yellow""
  }
})}>Hey</ThemeProvider>`",'getCode',"'stateful, hooks enabled component'",getCode,'Hello','Input value attribute.',stateful,'e => setValue(e.target.value)',Function,propHook,what,'e.target.value',into,`() => ({ color: 'black'})`,componentName,'Input',providerValue,provider,getProvider,'lightThemePrimitives',importsConfig,'baseui/input',named,"`import * as React from ""react"";
import { Input } from ""baseui/input"";
import {
  ThemeProvider,
  createTheme,
  lightThemePrimitives
} from ""baseui"";

export default () => {
  const [value, setValue] = React.useState(""Hello"");
  return (
    <ThemeProvider
      theme={createTheme(lightThemePrimitives, {
        colors: { inputFill: ""yellow"" }
      })}
    >
      <Input
        value={value}
        onChange={e => setValue(e.target.value)}
        overrides={{
          Root: { style: () => ({ color: ""black"" }) }
        }}
      />
    </ThemeProvider>
  );
}`",'returns fixture elements',hasAssertions,fixtures,getFixtures,cosmosConfig,fixtureId,getElement,toJSON,stringifyFixtureId,FixtureId,'returns fixture info',getFixtures2,absoluteFilePath,rootDir,}/src/__fixtures__/Controls.tsx`,fileName,'Controls',parents,relativeFilePath,'src/__fixtures__/Controls.tsx',rendererUrl,'http://localhost:5000/_renderer.html?_fixtureId=%7B%22path%22%3A%22src%2F__fixtures__%2FControls.tsx%22%7D',playgroundUrl,'http://localhost:5000/?fixtureId=%7B%22path%22%3A%22src%2F__fixtures__%2FControls.tsx%22%7D',treePath,}/src/Counter/Counter.fixture.tsx`,'Counter','default','http://localhost:5000/?fixtureId=%7B%22path%22%3A%22src%2FCounter%2FCounter.fixture.tsx%22%2C%22name%22%3A%22default%22%7D','src/Counter/Counter.fixture.tsx','http://localhost:5000/_renderer.html?_fixtureId=%7B%22path%22%3A%22src%2FCounter%2FCounter.fixture.tsx%22%2C%22name%22%3A%22default%22%7D','small number','http://localhost:5000/?fixtureId=%7B%22path%22%3A%22src%2FCounter%2FCounter.fixture.tsx%22%2C%22name%22%3A%22small%20number%22%7D','http://localhost:5000/_renderer.html?_fixtureId=%7B%22path%22%3A%22src%2FCounter%2FCounter.fixture.tsx%22%2C%22name%22%3A%22small%20number%22%7D','large number','http://localhost:5000/?fixtureId=%7B%22path%22%3A%22src%2FCounter%2FCounter.fixture.tsx%22%2C%22name%22%3A%22large%20number%22%7D','http://localhost:5000/_renderer.html?_fixtureId=%7B%22path%22%3A%22src%2FCounter%2FCounter.fixture.tsx%22%2C%22name%22%3A%22large%20number%22%7D',}/src/CounterButton/CounterButton.fixture.tsx`,'CounterButton','http://localhost:5000/?fixtureId=%7B%22path%22%3A%22src%2FCounterButton%2FCounterButton.fixture.tsx%22%7D','src/CounterButton/CounterButton.fixture.tsx','http://localhost:5000/_renderer.html?_fixtureId=%7B%22path%22%3A%22src%2FCounterButton%2FCounterButton.fixture.tsx%22%7D',}/src/__fixtures__/HelloWorld.ts`,'HelloWorld','http://localhost:5000/?fixtureId=%7B%22path%22%3A%22src%2F__fixtures__%2FHelloWorld.ts%22%7D','src/__fixtures__/HelloWorld.ts','http://localhost:5000/_renderer.html?_fixtureId=%7B%22path%22%3A%22src%2F__fixtures__%2FHelloWorld.ts%22%7D',}/src/NestedDecorators/NestedDecorators.fixture.tsx`,'NestedDecorators','http://localhost:5000/?fixtureId=%7B%22path%22%3A%22src%2FNestedDecorators%2FNestedDecorators.fixture.tsx%22%7D','src/NestedDecorators/NestedDecorators.fixture.tsx','http://localhost:5000/_renderer.html?_fixtureId=%7B%22path%22%3A%22src%2FNestedDecorators%2FNestedDecorators.fixture.tsx%22%7D',}/src/__fixtures__/Props.tsx`,'Props','src/__fixtures__/Props.tsx','http://localhost:5000/_renderer.html?_fixtureId=%7B%22path%22%3A%22src%2F__fixtures__%2FProps.tsx%22%7D','http://localhost:5000/?fixtureId=%7B%22path%22%3A%22src%2F__fixtures__%2FProps.tsx%22%7D',}/src/WelcomeMessage/WelcomeMessage.fixture.tsx`,'WelcomeMessage','http://localhost:5000/?fixtureId=%7B%22path%22%3A%22src%2FWelcomeMessage%2FWelcomeMessage.fixture.tsx%22%7D','src/WelcomeMessage/WelcomeMessage.fixture.tsx','http://localhost:5000/_renderer.html?_fixtureId=%7B%22path%22%3A%22src%2FWelcomeMessage%2FWelcomeMessage.fixture.tsx%22%7D','returns playground URLs',rendererUrls,getFixtureUrls,"`
    Array [
      ""localhost:5000/?fixtureId=%7B%22path%22%3A%22src%2F__fixtures__%2FControls.tsx%22%7D"",
      ""localhost:5000/?fixtureId=%7B%22path%22%3A%22src%2F__fixtures__%2FHelloWorld.ts%22%7D"",
      ""localhost:5000/?fixtureId=%7B%22path%22%3A%22src%2F__fixtures__%2FProps.tsx%22%7D"",
      ""localhost:5000/?fixtureId=%7B%22path%22%3A%22src%2FCounter%2FCounter.fixture.tsx%22%2C%22name%22%3A%22default%22%7D"",
      ""localhost:5000/?fixtureId=%7B%22path%22%3A%22src%2FCounter%2FCounter.fixture.tsx%22%2C%22name%22%3A%22small%20number%22%7D"",
      ""localhost:5000/?fixtureId=%7B%22path%22%3A%22src%2FCounter%2FCounter.fixture.tsx%22%2C%22name%22%3A%22large%20number%22%7D"",
      ""localhost:5000/?fixtureId=%7B%22path%22%3A%22src%2FCounterButton%2FCounterButton.fixture.tsx%22%7D"",
      ""localhost:5000/?fixtureId=%7B%22path%22%3A%22src%2FNestedDecorators%2FNestedDecorators.fixture.tsx%22%7D"",
      ""localhost:5000/?fixtureId=%7B%22path%22%3A%22src%2FWelcomeMessage%2FWelcomeMessage.fixture.tsx%22%7D"",
    ]
  `",'returns renderer URLs in full screen mode',fullScreen,"`
    Array [
      ""localhost:5000/_renderer.html?_fixtureId=%7B%22path%22%3A%22src%2F__fixtures__%2FControls.tsx%22%7D"",
      ""localhost:5000/_renderer.html?_fixtureId=%7B%22path%22%3A%22src%2F__fixtures__%2FHelloWorld.ts%22%7D"",
      ""localhost:5000/_renderer.html?_fixtureId=%7B%22path%22%3A%22src%2F__fixtures__%2FProps.tsx%22%7D"",
      ""localhost:5000/_renderer.html?_fixtureId=%7B%22path%22%3A%22src%2FCounter%2FCounter.fixture.tsx%22%2C%22name%22%3A%22default%22%7D"",
      ""localhost:5000/_renderer.html?_fixtureId=%7B%22path%22%3A%22src%2FCounter%2FCounter.fixture.tsx%22%2C%22name%22%3A%22small%20number%22%7D"",
      ""localhost:5000/_renderer.html?_fixtureId=%7B%22path%22%3A%22src%2FCounter%2FCounter.fixture.tsx%22%2C%22name%22%3A%22large%20number%22%7D"",
      ""localhost:5000/_renderer.html?_fixtureId=%7B%22path%22%3A%22src%2FCounterButton%2FCounterButton.fixture.tsx%22%7D"",
      ""localhost:5000/_renderer.html?_fixtureId=%7B%22path%22%3A%22src%2FNestedDecorators%2FNestedDecorators.fixture.tsx%22%7D"",
      ""localhost:5000/_renderer.html?_fixtureId=%7B%22path%22%3A%22src%2FWelcomeMessage%2FWelcomeMessage.fixture.tsx%22%7D"",
    ]
  `",'emits renderer request externally',registerTestPlugins,loadPlugins,selectFixtureReq,'selectFixture',payload,rendererId,'mockRendererId','mockFixturePath',fixtureState,messageHandler,getMessageHandlerMethods,postRendererRequest,mockSocketIo,emit,RENDERER_MESSAGE_EVENT_NAME,'emits renderer response internally',fakeEvent,rendererReadyRes,'rendererReady','ein.js','zwei.js','drei.js',rendererResponse,onMessageHandler,'emits server message internally',buildErrorMsg,BuildErrorMessage,'buildError',serverMessage,SERVER_MESSAGE_EVENT_NAME,'loads item from localForage',loadCache,getItem,getStorageMethods,'fooProjectId','fooKey','fooValue','sets item to localForage',setItem,'barKey','barValue',retry,mockSetItem,'cosmos-fooProjectId',fooKey,barKey,'sets item to local cache','fails getting if cache is not loaded',"`Can't retrieve item ""barKey"" before loading storage`",'fails setting if cache is not loaded',"`Can't set item ""barKey"" before loading storage`",'notifies HMR fail',mockRendererCore,pushTimedNotification,mockNotifications,emitRendererCoreResponse,'renderer-hmr-fail','error','Hot reload failed','Check the browser console to see which module failed to hot reload.','creates value tree',createValueTree,rootNode,'loads playground plugins',packagesDir,'../../react-cosmos-playground2/src/plugins',getCosmosPluginConfigs,"`
    Array [
      Object {
        ""name"": ""Build notifications"",
        ""rootDir"": ""BuildNotifications"",
        ""ui"": ""BuildNotifications/index.ts"",
      },
      Object {
        ""name"": ""Class state panel"",
        ""rootDir"": ""ClassStatePanel"",
        ""ui"": ""ClassStatePanel/index.tsx"",
      },
      Object {
        ""name"": ""Content overlay"",
        ""rootDir"": ""ContentOverlay"",
        ""ui"": ""ContentOverlay/index.tsx"",
      },
      Object {
        ""name"": ""Control panel"",
        ""rootDir"": ""ControlPanel"",
        ""ui"": ""ControlPanel/index.tsx"",
      },
      Object {
        ""name"": ""Select control"",
        ""rootDir"": ""ControlSelect"",
        ""ui"": ""ControlSelect/index.tsx"",
      },
      Object {
        ""name"": ""Core"",
        ""rootDir"": ""Core"",
        ""ui"": ""Core/index.tsx"",
      },
      Object {
        ""name"": ""Fixture bookmark"",
        ""rootDir"": ""FixtureBookmark"",
        ""ui"": ""FixtureBookmark/index.tsx"",
      },
      Object {
        ""name"": ""Fixture search"",
        ""rootDir"": ""FixtureSearch"",
        ""ui"": ""FixtureSearch/index.tsx"",
      },
      Object {
        ""name"": ""Fixture tree"",
        ""rootDir"": ""FixtureTree"",
        ""ui"": ""FixtureTree/index.tsx"",
      },
      Object {
        ""name"": ""Full screen button"",
        ""rootDir"": ""FullScreenButton"",
        ""ui"": ""FullScreenButton/index.tsx"",
      },
      Object {
        ""name"": ""Message handler"",
        ""rootDir"": ""MessageHandler"",
        ""ui"": ""MessageHandler/index.tsx"",
      },
      Object {
        ""name"": ""Notifications"",
        ""rootDir"": ""Notifications"",
        ""ui"": ""Notifications/index.tsx"",
      },
      Object {
        ""name"": ""Plugin list"",
        ""rootDir"": ""PluginList"",
        ""ui"": ""PluginList/index.tsx"",
      },
      Object {
        ""name"": ""Props panel"",
        ""rootDir"": ""PropsPanel"",
        ""ui"": ""PropsPanel/index.tsx"",
      },
      Object {
        ""name"": ""Remote renderer"",
        ""rootDir"": ""RemoteRenderer"",
        ""ui"": ""RemoteRenderer/index.tsx"",
      },
      Object {
        ""name"": ""Renderer core"",
        ""rootDir"": ""RendererCore"",
        ""ui"": ""RendererCore/index.ts"",
      },
      Object {
        ""name"": ""Renderer preview"",
        ""rootDir"": ""RendererPreview"",
        ""ui"": ""RendererPreview/index.tsx"",
      },
      Object {
        ""name"": ""Renderer select"",
        ""rootDir"": ""RendererSelect"",
        ""ui"": ""RendererSelect/index.tsx"",
      },
      Object {
        ""name"": ""Responsive preview"",
        ""rootDir"": ""ResponsivePreview"",
        ""ui"": ""ResponsivePreview/index.tsx"",
      },
      Object {
        ""name"": ""Root"",
        ""rootDir"": ""Root"",
        ""ui"": ""Root/index.tsx"",
      },
      Object {
        ""name"": ""Router"",
        ""rootDir"": ""Router"",
        ""ui"": ""Router/index.ts"",
      },
      Object {
        ""name"": ""Standard control"",
        ""rootDir"": ""StandardControl"",
        ""ui"": ""StandardControl/index.tsx"",
      },
      Object {
        ""name"": ""Storage"",
        ""rootDir"": ""Storage"",
        ""ui"": ""Storage/index.ts"",
      },
      Object {
        ""name"": ""Webpack HMR notification"",
        ""rootDir"": ""WebpackHmrNotification"",
        ""ui"": ""WebpackHmrNotification/index.ts"",
      },
    ]
  `",'extends string key',obj,myProp,FixtureStateValues,'primitive',extendWithValues,'extends number key','extends boolean key','keeps undefined key','keeps null key','keeps unserializable function key','unserializable',stringifiedData,'xxx','keeps unserializable regexp key',/impossible/g,'keeps empty object key','extends serializable object key',strProp,numProp,boolProp,'extends partially serializable object key',fnProp,'function () {}','extends partially serializable array key','array','extends partial array of objects','baz','collapses fixtures dir',tree,FixtureTreeNode,'fileDir',ui,__fixtures__,shared,'multiFixture',fixtureIds,normal,'ui/__fixtures__/shared/Button.js','normal','disabled',Dashboard,'fixture','ui/__fixtures__/Dashboard.js',collapsedTree,collapseFixtureDirs,'__fixtures__','collapses fixtures dir with sibling','ui/shared/Button.fixture.js','collapses fixtures dirs at different levels','__fixtures__/Dashboard.js','shared/__fixtures__/Button.js','collapses index fixture','Dashboard/index.fixture.js',collapseIndexes,'collapses index multi fixture','Button/index.fixture.js','does not collapse index fixture with sibling',Settings,'Dashboard/Settings.fixture.js','only collapses index fixture without sibling','Dashboard/Settings/index.fixture.js','collapses named index fixture','Dashboard/Dashboard.fixture.js',collapseNamedIndexes,'collapses nested named index fixture','ui/Dashboard/Dashboard.fixture.js','collapses named index fixture (case insensitive)',dashboard,'dashboard/Dashboard.fixture.js','collapses one outer dir','src/Dashboard.fixture.js',collapseOuterDirs,'collapses one outer dir (multi fixture)','src/Button.fixture.js','collapses multiple outer dirs','src/ui/admin/Dashboard.fixture.js','creates tree with fixture',FixtureList,'Dashboard.fixture.js','single','Dashboard.fixture',createRawFixtureTree,'creates nested tree with fixture','ui/Dashboard.fixture.js','creates tree with multi fixture','Button.fixture.js','multi',fixtureNames,'Button.fixture','creates nested tree with multi fixture','ui/Button.fixture.js','hides fixture suffix',cleanTree,hideFixtureSuffix,'hides nested fixture suffix','flattens fixture tree',flattenFixtureTree,fixtureTree,'Dashboard','src/admin/Dashboard/index.fixture.ts','overview','stats','NewsFeed','src/__fixtures__/NewsFeed.ts','Profile','src/__fixtures__/Profile.ts','#request adds an animation frame callback',af,AnimationFrame,cb,'callback',request,clock,'#request with duplicate keys only executes the latest callback',cb1,'callback1',cb2,'callback2',cb3,'callback3','#cancel will cancel the keyed callback',cancel,'#cancel will not cancel a mismatched key','#cancelAll cancels all keys',cancelAll,'#getQueue will return the keys in the order they were entered',getQueue,'#getQueue will return not return keys that have finished','#getCorrectEventName does not prefix events when not necessary',windowObj,animation,getCorrectEventName,'animationstart','#getCorrectPropertyName does not prefix events when not necessary',getCorrectPropertyName,'animation','#getCorrectEventName does not prefix events if window does not contain a DOM node','#getCorrectPropertyName does not prefix events if window does not contain a DOM node','transition','#getCorrectPropertyName prefixes css properties when required',legacyWindowObj,'-webkit-animation','transform','-webkit-transform','-webkit-transition','#getCorrectEventName prefixes javascript events when required','webkitAnimationStart','animationend','webkitAnimationEnd','animationiteration','webkitAnimationIteration','transitionend','webkitTransitionEnd','calls attachTo() on components registered for identifier on nodes w/ data-mdc-auto-init attr',setupTest,mdcAutoInit,'.mdc-fake',FakeHTMLElement,FakeComponent,'throws when attachTo() is missing',setupInvalidTest,"'passes the node where ""data-mdc-auto-init"" was found to attachTo()'",fake,"'throws when no constructor name is specified within ""data-mdc-auto-init""'",dataset,'mdcAutoInit','throws when constructor is not registered','MDCUnregisteredComponent','#register warns when registered key is being overridden','warn',register,'FakeComponent',overridden,unknown,MDCAttachable,stringMatching,/Overriding registration/,'#dispatches a MDCAutoInit:End event when all components are initialized','eventHandler','MDCAutoInit:End',interface,WindowWithCustomEvent,Window,'#dispatches a MDCAutoInit:End event when all components are initialized - custom events not supported',customEvent,'#returns the initialized components',components,"'does not register any components if element has data-mdc-auto-init-state=""initialized""'",'[data-mdc-auto-init]',setAttribute,'data-mdc-auto-init-state','initialized','does not return any new components after calling autoInit a second time','attachTo returns a component instance',MDCBanner,'#initialize registers click handlers for primary action button',primaryActionEl,'notifyClosingHandler',listen,events,CLOSING,emitEvent,'click',unlisten,detail,reason,CloseReason,PRIMARY,'#initialize registers click handlers for secondary action button',secondaryActionEl,SECONDARY,'#initialSyncWithDom adds a click event listener on the content element',contentEl,'.mdc-banner__content',spyOn,'addEventListener',callThrough,'#destroy removes the click event listener on the content element','removeEventListener',destroy,removeEventListener,'clicking on content element does nothing','#open emits opening animation events and adds/removes necessary classes',openingHandler,'notifyOpeningHandler',openedHandler,'notifyOpenedHandler',OPENING,OPENED,cssClasses,OPEN,numbers,BANNER_ANIMATION_OPEN_TIME_MS,'#close emits closing animation events and adds/removes necessary classes',closingHandler,closedHandler,'notifyClosedHandler',CLOSED,UNSPECIFIED,BANNER_ANIMATION_CLOSE_TIME_MS,'#open sets the root element height to the content element height',offsetHeight,'#close sets the root element height back to 0','#layout sets the root element height to the content element height','50px','get isOpen returns true when open','get isOpen returns false when not open','getText returns textContent',textEl,'setText sets the text textContent',setText,'getPrimaryActionText returns the primary button textContent',getPrimaryActionText,'setPrimaryActionText sets the primary button textContent',setPrimaryActionText,'getSecondaryActionText returns the secondary button textContent',getSecondaryActionText,'getSecondaryActionText returns null if no secondary action',getFixture,"`<div>
      <div class=""mdc-banner"" role=""banner"">
        <div class=""mdc-banner__content"">
          <div class=""mdc-banner__text""
               role=""alertdialog""
               aria-live=""assertive"">
            Single line banner.
          </div>
          <div class=""mdc-banner__actions"">
            <button type=""button"" class=""mdc-button mdc-banner__primary-action"">
              <div class=""mdc-button__ripple""></div>
              <div class=""mdc-button__label"">Fix it</div>
            </button>
          </div>
        </div>
      </div>
    </div>`",'setSecondaryActionText sets the secondary button textContent',setSecondaryActionText,'#open sets focus on primary action','#close releases focus to previously focused element',backgroundElement,'default adapter returns a complete adapter implementation',verifyDefaultAdapter,MDCBannerFoundation,'addClass','getContentHeight','notifyOpening','notifyOpened','notifyClosing','notifyClosed','notifyActionClicked','setStyleProperty','removeClass','trapFocus','releaseFocus',foundation,mockAdapter,setUpFoundationTest,'#destroy cancels all timers',addClass,'#layout sets the root element height to the content height',getContentHeight,setStyleProperty,'0px','#open adds CSS classes after rAF','#close removes CSS classes',removeClass,'#close cancels rAF scheduled by open if still pending',"'#open adds the opening class to start an animation, and removes it after the animation is done'","'#close adds the closing class to start an animation, and removes it after the animation is done'","'#open emits ""opening"" and ""opened"" events'",notifyOpening,notifyOpened,"'#close emits ""closing"" and ""closed"" events'",notifyClosing,notifyClosed,'#close does nothing if the banner is already closed',releaseFocus,'#open activates focus trapping on the banner',trapFocus,'#close deactivates focus trapping on the dialog surface','#isOpen returns false when the banner has never been opened','#isOpen returns true when the banner is open','#isOpen returns false when the banner is closed after being open','provides a static attachTo() method that returns a basic instance with the specified root',MDCComponent,"'takes a root node constructor param and assigns it to the ""root"" property'",f,"'takes an optional foundation constructor param and assigns it to the ""foundation"" property'",init,'foundation',"'assigns the result of ""getDefaultFoundation()"" to ""foundation"" by default'",isDefaultFoundation,'calls the foundation\'s init() method within the constructor','init','throws an error if getDefaultFoundation() is not overridden','calls initialSyncWithDOM() when initialized',synced,'provides a default initialSyncWithDOM() no-op if none provided by subclass',initialSyncWithDOM,bind,'provides a default destroy() method which calls the foundation\'s destroy() method','destroy','#initialize is called within constructor and passed any additional positional component args',42,initializeArgs,'#initialize is called before getDefaultFoundation()',initializeComesBeforeFoundation,'#listen adds an event listener to the root element','FakeComponent:customEvent',anything,'#unlisten removes an event listener from the root element','#emit dispatches a custom event with the supplied data',evt,withArgs,callFake,evtData,'customeventtype','#emit dispatches a custom event with the supplied data where custom events aren\'t available','(regression) ensures that this.root is available for use within getDefaultFoundation()',rootElementAtTimeOfCall,'cssClasses getter returns an empty object',MDCFoundation,'strings getter returns an empty object',strings,'numbers getter returns an empty object','defaultAdapter getter returns an empty object',defaultAdapter,"'takes an adapter object in its constructor, assigns it to ""adapter""'",adapter,'adapter','assigns adapter to an empty object when none given',"'provides an init() lifecycle method, which defaults to a no-op'","'provides a destroy() lifecycle method, which defaults to a no-op'",'#observe() should listen to multiple properties',observe,stringProp,stringObserver,numberProp,numberObserver,'newValue','#observe() should call Observers with instance as `this`',observerThis,'observer `this` should be instance','#observe() cleanup function stops Observers',unobserve,'anotherValue','#observe() cleanup function does not stop Observers from other invocations',otherStringObserver,'otherStringObserver','#unobserve() stops Observers from all invocations','#setObserversEnabled() can disable and enable all Observers',setObserversEnabled,'thirdValue','#destroy() removes state observers','unobserve','#constructor initializes the root element with a ripple','mdc-ripple-upgraded','#destroy removes the ripple','(regression) activates ripple on keydown when the input element surface is active',fakeMatches,'.matches',matches,'mdc-ripple-upgraded--foreground-activation','attachTo initializes and returns a MDCCheckbox instance',MDCCheckbox,'get/set checked updates the checked property on the native checkbox element','get/set indeterminate updates the indeterminate property on the native checkbox element',indeterminate,'get/set disabled updates the indeterminate property on the native checkbox element','get/set value updates the value of the native checkbox element','new value','get ripple returns a MDCRipple instance',ripple,MDCRipple,'checkbox change event calls #foundation.handleChange','change','root animationend event calls #foundation.handleAnimationEnd',handleAnimationEnd,"'""checked"" property change hook calls foundation#handleChange'",mockFoundation,setupMockFoundationTest,"'""indeterminate"" property change hook calls foundation#handleChange'",'checkbox change event handler is destroyed on #destroy','root animationend event handler is destroyed on #destroy',"'""checked"" property change hook is removed on #destroy'","'""indeterminate"" property change hook is removed on #destroy'",'adapter#addClass adds a class to the root element',getDefaultFoundation,'adapter#removeClass removes a class from the root element','adapter#setNativeControlAttr sets an attribute on the input element',setNativeControlAttr,'mixed','adapter#removeNativeControlAttr removes an attribute from the input element',removeNativeControlAttr,hasAttribute,"'adapter#forceLayout touches ""offsetWidth"" on the root in order to force layout'",mockGetter,'.offsetWidth',defineProperty,'offsetWidth',enumerable,configurable,forceLayout,'adapter#isAttachedToDOM returns true when root is attached to DOM',isAttachedToDOM,'adapter#isAttachedToDOM returns false when root is not attached to DOM','#adapter.isIndeterminate returns true when checkbox is indeterminate',isIndeterminate,'#adapter.isIndeterminate returns false when checkbox is not indeterminate','#adapter.isChecked returns true when checkbox is checked',isChecked,'#adapter.isChecked returns false when checkbox is not checked','#adapter.hasNativeControl returns true when checkbox exists',hasNativeControl,'#adapter.setNativeControlDisabled returns true when checkbox is disabled',setNativeControlDisabled,'#adapter.setNativeControlDisabled returns false when checkbox is not disabled','exports constants',MDCCheckboxFoundation,'defaultAdapter returns a complete adapter implementation','setNativeControlAttr','removeNativeControlAttr','forceLayout','isAttachedToDOM','isIndeterminate','isChecked','hasNativeControl','setNativeControlDisabled','#init adds the upgraded class to the root element',UPGRADED,"'#init adds aria-checked=""mixed"" if checkbox is initially indeterminate'",ARIA_CHECKED_INDETERMINATE_VALUE,withMockCheckboxDescriptorReturning,descriptor,DESC_UNDEFINED,runTests,void,mockGetOwnPropertyDescriptor,'mockGetOwnPropertyDescriptor','/checked|indeterminate/',originalDesc,getOwnPropertyDescriptor,'getOwnPropertyDescriptor',PropertyDescriptor,'#init handles case when WebIDL attrs cannot be overridden (Safari)',nativeControl,'#init handles case when property descriptors are not returned at all (Android Browser)','#destroy handles case when WebIDL attrs cannot be overridden (Safari)','init sanity check','#setDisabled updates the value of nativeControl.disabled',setDisabled,'#setDisabled adds mdc-checkbox--disabled class to the root element when set to true',DISABLED,'#setDisabled removes mdc-checkbox--disabled class from the root element when set to false',testChangeHandler,'unchecked -> checked animation class',ANIM_UNCHECKED_CHECKED,'unchecked -> indeterminate animation class',ANIM_UNCHECKED_INDETERMINATE,'checked -> unchecked animation class',ANIM_CHECKED_UNCHECKED,'checked -> indeterminate animation class',ANIM_CHECKED_INDETERMINATE,'indeterminate -> checked animation class',ANIM_INDETERMINATE_CHECKED,'indeterminate -> unchecked animation class',ANIM_INDETERMINATE_UNCHECKED,'no transition classes applied when no state change','changing from unchecked to checked adds selected class',setupChangeHandlerTest,SELECTED,'changing from unchecked to indeterminate adds selected class','changing from checked to unchecked removes selected class','changing from indeterminate to unchecked removes selected class','animation end handler removes animation class after short delay',enableAnimationEndHandler,currentAnimationClass,ANIM_END_LATCH_MS,'animation end is debounced if event is called twice','change handler triggers layout for changes within the same frame to correctly restart anims','change handler updates aria-checked attribute correctly.','change handler does not add animation classes when isAttachedToDOM() is falsy','mdc-checkbox--anim','change handler does not add animation classes for bogus changes (init -> unchecked)','change handler does not do anything if checkbox element is not found','returns the base dimensions when given an empty style prop',rect,110,computePrimaryActionRippleClientRect,'returns the base dimensions when given a non-numeric style prop','xyz','returns the base dimensions when given a non-pixel style prop','20YYpx','adds a valid style prop to the width property','attachTo initializes and returns a MDCChipAction instance',MDCChipAction,isFocusable,'#setDisabled(true) disables the root',toBeTrue,'#setDisabled(false) enables the root',isDisabled,toBeFalse,'#isDisabled() returns true when configured','#isDisabled() returns false when configured','#isFocusable() returns true when configured','#isFocusable() returns false when configured','#setSelected(true) updates the selected state when selectable',isSelectable,setSelected,MDCChipActionAttributes,ARIA_SELECTED,'#setSelected(false) updates the selected state when selectable','#isSelected() returns true when selected','#isSelected() returns false when not selected','#isSelectable() returns true when selectable','#isSelectable() returns false when not selectable','#destroy removes event handlers','handler',MDCChipActionEvents,INTERACTION,NAVIGATION,createKeyboardEvent,'Spacebar','#setFocus() does nothing when aria-hidden == true',ARIA_HIDDEN,setFocus,MDCChipActionFocusBehavior,FOCUSABLE_AND_FOCUSED,FOCUSABLE,NOT_FOCUSABLE,'#isFocusable returns true if aria-hidden != true','#isFocusable returns false if aria-hidden == true','#isFocusable returns true if aria-disabled != true',ARIA_DISABLED,'#isFocusable returns false if aria-disabled == true','#isSelected returns true if aria-checked == true','#shouldEmitInteractionOnDeleteKey() returns true',shouldEmitInteractionOnRemoveKey,'attachTo initializes and returns an MDCChipSet instance',chipset,MDCChipSet,chips,actionChip,'c0','c1',isMultiselectable,'#initialSyncWithDOM sets up event handlers',setupTestWithMocks,'.mdc-evolution-chip__action',handleChipInteraction,handleChipNavigation,'#c0',MDCChipEvents,ANIMATION,handleChipAnimation,'#getChipIndexByID() returns the index of the chip when it exists',getChipIndexByID,'#getChipIndexByID() returns -1 when the chip does not exist','#getChipIdAtIndex() the id when the index is in bounds',getChipIdAtIndex,'#getChipIdAtIndex() returns an empty string when the index is out of bounds','#getSelectedChipIndexes() returns the indexs of selected chips',filterChip,'c2',selectedIndexes,getSelectedChipIndexes,has,'#setChipSelected() updates the selection state of the chip',setChipSelected,MDCChipActionType,'#c1 .mdc-evolution-chip__action','#isChipSelected() returns true if the chip is selected',isChipSelected,'#isChipSelected() returns false if the chip is not selected','#removeChip() proxies to the foundation',removeChip,"'on click, focuses the source action if focusable'",multiActionInputChip,"'on click, unfocuses all other actions'",'#c0 .mdc-evolution-chip__action','#c0 .mdc-evolution-chip__action--trailing','#c1 .mdc-evolution-chip__action--trailing',"'on click, does not focuses the source action if unfocusable'",disabledActionChip,"'on click, selects the newly selected chip if selectable'","'on click, deselects the previously selected chip when not multiselectable'","'on click, does not deselect the previously selected chip when multiselectable'","'on keyboard navigation, focuses the next focusable action'","'on keyboard navigation, unfocuses all other actions'",'announces chip addition when enter animation is complete',' and addition announcement is present',MDCChipAnimationEventDetail,isComplete,addedAnnouncement,'Added a chip',MDCChipAnimation,ENTER,chipID,liveRegion,`[${,DATA_MDC_DOM_ANNOUNCE,"}=""true""]`",'removes the chip from the DOM when removal animation is complete',removedAnnouncement,'Removed a chip',EXIT,'animates chip addition',chip0,addChip,MDCChipCssClasses,chip,MDCChip,primary,trailing,interactionHandler,'emitInteractionHandler',navigationHandler,'emitNavigationHandler','#getActions() returns the included actions',getActions,TRAILING,'#getElementID() returns the root ID',getElementID,'#destroy() cancels selection animation frames',setActionSelected,SELECTING,'#setDisabled(true) makes each action disabled',setActionDisabled,'#setDisabled(true) adds the disabled class','#setDisabled(false) makes each action enabled','#setDisabled(false) removes the disabled class','attachTo returns an MDCChipSet instance',FakeChip,Spy,focusPrimaryAction,focusTrailingAction,removeFocus,setSelectedFromChipSet,readonly,'.destroy','.focusPrimaryAction','.focusTrailingAction','.remove','.removeFocus','.setSelectedFromChipSet',hasSelection,createMockFoundation,MDCChipSetFoundation,'#constructor instantiates child chip components','#destroy cleans up child chip components',INTERACTION_EVENT,ARROW_LEFT_KEY,NAVIGATION_EVENT,REMOVAL_EVENT,SELECTION_EVENT,MDCChipFoundation,chipId,'chipA',shouldIgnore,handleChipSelection,'Removed foo',handleChipRemoval,'#initialSyncWithDOM calls MDCChipSetFoundation#select on the selected chips','chip1','chip2','chip3','get selectedChipIds proxies to foundation',selectedChipIds,getSelectedChipIds,'#addChip adds a new chip to the chip set',"`
    <div class=""mdc-chip"">
      <div class=""mdc-chip__text"">Hello world</div>
    </div>`",chipEl,'#adapter.hasClass returns true if class is set on chip set element','#adapter.removeChipAtIndex removes the chip object from the chip set',removeChipAtIndex,'#adapter.removeChipAtIndex does nothing if the given object is not in the chip set','#adapter.selectChipAtIndex calls setSelectedFromChipSet on chip object',selectChipAtIndex,'#adapter.getChipListCount returns the number of chips',getChipListCount,'#adapter.getIndexOfChipById returns the index of the chip',getIndexOfChipById,'#adapter.focusChipPrimaryActionAtIndex focuses the primary action of the chip at the given index',focusChipPrimaryActionAtIndex,'#adapter.focusChipTrailingActionAtIndex focuses the trailing action of the chip at the given index',focusChipTrailingActionAtIndex,'#adapter.removeFocusFromChipAtIndex removes focus from the chip at the given index',removeFocusFromChipAtIndex,'#adapter.isRTL returns true if the text direction is RTL','dir',isRTL,removeAttribute,'#adapter.isRTL returns false if the text direction is not RTL','exports strings','strings','exports cssClasses','cssClasses','hasClass','removeChipAtIndex','selectChipAtIndex','focusChipPrimaryActionAtIndex','focusChipTrailingActionAtIndex','getIndexOfChipById','isRTL','getChipListCount','removeFocusFromChipAtIndex','announceMessage',CHOICE,FILTER,"'in choice chips, #select does nothing if chip is already selected'",setupChipNavigationTest,'chipB',"'in choice chips, #select selects chip if no chips are selected'","'in choice chips, #select deselects chip if another chip is selected'","'in filter chips, #select selects multiple chips'","'in filter chips, #select does nothing if chip is already selected'","'in filter chips, #handleChipInteraction deselects chip if in selectedChipId'",'#handleChipInteraction selects chip if the chip set is a filter chip set and notifies clients','#handleChipInteraction selects chip if the chip set is a choice chip set and notifies clients','#handleChipInteraction removes focus from all chips except the selected one','#handleChipInteraction does nothing if the chip set is neither choice nor filter','chipC','#handleChipSelection selects an unselected chip if selected is true','selectedChipIds','#handleChipSelection does nothing if selected is true and the chip is already selected','#handleChipSelection deselects a selected chip if selected is false','#handleChipSelection does nothing if selected is false and the chip is not selected','#handleChipSelection does nothing if shouldIgnore is true','#handleChipSelection emits no events','#handleChipRemoval removes chip','#handleChipRemoval removes focus from all chips except the next one','#handleChipRemoval gives focus to the next chip','#handleChipRemoval if empty do not focus',chipIds,"'#handleChipNavigation ""Space"" does nothing'",'chip0','Space',EventSource,NONE,ARROW_RIGHT_KEY,IE_ARROW_RIGHT_KEY,"'#handleChipNavigation ""${key}"" from the trailing action focuses the next chip trailing action'","'#handleChipNavigation ""Home"" focuses the first chip primary action'",HOME_KEY,"'#handleChipNavigation ""End"" focuses the last chip primary action'",END_KEY,'attachTo returns an MDCChip instance',handleClick,handleTransitionEnd,handleKeydown,'focusin',handleFocusIn,'focusout',handleFocusOut,'#initialSyncWithDOM sets up trailing action event handlers if present',addTrailingAction,trailingActionStrings,handleTrailingActionInteraction,handleTrailingActionNavigation,'#destroy removes trailing action event handlers if present','#destroy destroys ripple',setupMockRippleTest,'get ripple returns MDCRipple instance','sets id on chip if attribute exists',"`
    <div class=""mdc-chip"" id=""hello-chip"">
      <div class=""mdc-chip__text"">Hello</div>
    </div>
  `",'hello-chip','adapter#hasClass returns true if class is set on chip set element','adapter#addClassToLeadingIcon adds a class to the leading icon element',getFixtureWithCheckmark,leadingIcon,addLeadingIcon,addClassToLeadingIcon,'adapter#addClassToLeadingIcon does nothing if no leading icon element is present','adapter#removeClassFromLeadingIcon removes a class from the leading icon element',removeClassFromLeadingIcon,'adapter#removeClassFromLeadingIcon does nothing if no leading icon element is present','adapter#eventTargetHasClass returns true if given element has class',"`<div class=""foo"">bar</div>`",mockEventTarget,eventTargetHasClass,'adapter#notifyInteraction emits ','interaction handler',notifyInteraction,'adapter#notifySelection emits ','selection handler',notifySelection,'adapter#notifyTrailingIconInteraction emits ',TRAILING_ICON_INTERACTION_EVENT,notifyTrailingIconInteraction,'adapter#notifyRemoval emits ',notifyRemoval,'adapter#notifyNavigation emits ',notifyNavigation,'adapter#getComputedStyleValue returns property value from root element styles',getComputedStyleValue,getPropertyValue,'adapter#setStyleProperty sets a style property on the root element','adapter#hasLeadingIcon returns true if the chip has a leading icon',hasLeadingIcon,'adapter#hasLeadingIcon returns false if the chip does not have a leading icon','adapter#getRootBoundingClientRect calls getBoundingClientRect on the root element',getRootBoundingClientRect,'adapter#getCheckmarkBoundingClientRect calls getBoundingClientRect on the checkmark element if it exists',checkmark,CHECKMARK_SELECTOR,getCheckmarkBoundingClientRect,'adapter#getCheckmarkBoundingClientRect returns null when there is no checkmark element','adapter#isRTL returns false if the text direction is not RTL','adapter#isRTL returns true if the text direction is RTL','adapter#focusPrimaryAction gives focus to the primary action element',chipStrings,PRIMARY_ACTION_SELECTOR,'adapter#focusTrailingAction gives focus to the trailing icon element',trailingAction,'adapter#setPrimaryActionAttr sets the attribute on the text element',primaryAction,setPrimaryActionAttr,'adapter#focusTrailingAction focuses the trailing action element',addFocusableTrailingAction,'adapter#removeTrailingActionFocus removes focus from the trailing action element',removeTrailingActionFocus,'adapter#isTrailingActionNavigable returns true if focusable',got,isTrailingActionNavigable,'adapter#isTrailingActionNavigable returns false if absent','#get selected proxies to foundation','#set selected proxies to foundation','#get shouldRemoveOnTrailingIconClick proxies to foundation',shouldRemoveOnTrailingIconClick,getShouldRemoveOnTrailingIconClick,'#set shouldRemoveOnTrailingIconClick proxies to foundation',setShouldRemoveOnTrailingIconClick,'#set setShouldFocusPrimaryActionOnClick proxies to foundation',setShouldFocusPrimaryActionOnClick,'#setSelectedFromChipSet proxies to the same foundation method','#beginExit proxies to foundation',beginExit,'#focusPrimaryAction proxies to the foundation#focusPrimaryAction','#focusTrailingAction proxies to the foundation#focusTrailingAction','#removeFocus proxies to the foundation#removeFocus','#remove removes the root from the DOM','.mdc-chip','addClassToLeadingIcon','eventTargetHasClass','focusPrimaryAction','focusTrailingAction','getAttribute','getCheckmarkBoundingClientRect','getComputedStyleValue','getRootBoundingClientRect','hasLeadingIcon','isTrailingActionNavigable','notifyEditFinish','notifyEditStart','notifyInteraction','notifyNavigation','notifyRemoval','notifySelection','notifyTrailingIconInteraction','removeClassFromLeadingIcon','removeTrailingActionFocus','setPrimaryActionAttr','#isSelected returns true if mdc-chip--selected class is present','#isSelected returns false if mdc-chip--selected class is not present','#setSelected adds mdc-chip--selected class if true','#setSelected removes mdc-chip--selected class if false',"'#setSelected sets aria-checked=""true"" if true'",ARIA_CHECKED,"'#setSelected sets aria-checked=""false"" if false'",'#setSelected notifies of selection when selected is true','#setSelected notifies of unselection when selected is false','#setSelectedFromChipSet notifies of selection with shouldIgnore set to true','#isEditable returns true if mdc-chip--editable class is present',EDITABLE,isEditable,'#isEditable returns false if mdc-chip--editable class is not present','#isEditing returns true if mdc-chip--editing class is present',EDITING,isEditing,'#isEditing returns false if mdc-chip--editing class is not present','#getDimensions returns adapter.getRootBoundingClientRect when there is no checkmark bounding rect',boundingRect,getDimensions,'#getDimensions factors in the checkmark bounding rect when it exists and there is no leading icon',checkmarkBoundingRect,'#getDimensions returns adapter.getRootBoundingClientRect when there is a checkmark and a leading icon','#handleKeydown does not emit event on invalid key',mockEvt,'Shift',KeyboardEvent,'#handleClick() focuses the primary action by default',TAB_INDEX,'#handleclick() does not focus the primary action when configured','#handleDoubleClick() begins editing when editable',handleDoubleClick,notifyEditStart,'#handleDoubleClick() does nothing when not editable',validKeyDownTable,'#handleTransitionEnd notifies removal of chip on width transition end',propertyName,TransitionEvent,'#handleTransitionEnd notifies removal of chip with removal announcement if present','#handleTransitionEnd animates width if chip is exiting on chip opacity transition end','opacity','padding','margin',"'#handleTransitionEnd does nothing on leading icon opacity transition end,'",'if chip is not selected',HIDDEN_LEADING_ICON,"'#handleTransitionEnd does nothing on checkmark opacity transition end, if chip is selected'",'#handleTransitionEnd does nothing for width property when not exiting','#handleTrailingActionInteraction emits custom event','#handleKeydown calls preventDefault on navigation events','.preventDefault','#handleKeydown does not emit a custom event for inappropriate keys','#handleFocusIn adds no class when the event does not come from the primary action',mockFocusIn,FocusEvent,PRIMARY_ACTION_FOCUSED,setupFocusOutTest,isEventFromPrimaryAction,'#handleFocusOut does nothing when the event does not come from the primary action',setupNavigationTest,isDeletable,DELETABLE,mockKeyboardEvent,stopPropagation,'.stopPropagation','.target',rightKeyNavigationTable,leftKeyNavigationTable,IE_ARROW_LEFT_KEY,removeKeyNavigationTable,BACKSPACE_KEY,DELETE_KEY,IE_DELETE_KEY,startEditingNavigationTable,ENTER_KEY,finishEditingNavigationTable,'#focusPrimaryAction() gives focus to the primary action','#focusTrailingAction() gives focus to the primary action when the trailing action is absent','#focusTrailingAction() gives focus to the trailing action when the trailing action is present','#removeFocus() sets tabindex -1 on the primary and trailing action','attachTo returns an MDCChipTrailingAction instance',MDCChipTrailingAction,'adapter#focus gives focus to the root','adapter#getAttribute returns the attribute value if present','data-foo','adapter#getAttribute returns null if the attribute is absent','#focus proxies to the foundation#focus','#isNavigable proxies to the foundation#isNavigable',isNavigable,MDCChipTrailingActionFoundation,'focus','setAttribute','#focus sets the tabindex to 0 and gives the action focus','#removeFocus sets the tabindex to -1','#isNavigable returns true if aria-hidden is absent',"'#isNavigable returns false if aria-hidden is ""true""'",'#handleClick notifies interaction',mockClick,'#handleClick stops propagation',KEY,SPACEBAR,InteractionTrigger,SPACEBAR_KEY,BACKSPACE,DELETE,keydown,mockKeyDown,'stopPropagation',MouseEvent,'attachTo initializes and returns a MDCCircularProgress instance',MDCCircularProgress,'set indeterminate',determinate,'mdc-circular-progress--indeterminate',MDCCircularProgressFoundation,ARIA_VALUENOW,'set progress',progressTestValue,progress,determinateCircle,DETERMINATE_CIRCLE_SELECTOR,strokeDashoffset,STROKE_DASHOFFSET,expectedVal,PI,RADIUS,.001,'open and close','mdc-circular-progress--closed',isClosed,'getDeterminateCircleAttribute','removeAttribute','setDeterminateCircleAttribute',getDeterminateCircleAttribute,'#setDeterminate false adds class and removes aria-valuenow',INDETERMINATE_CLASS,setDeterminate,isDeterminate,'#setDeterminate true removes class',setDeterminateCircleAttribute,'#setDeterminate calls setDeterminateCircleAttribute and sets ARIA_VALUENOW','#setDeterminate restores previous progress value after toggled from false to true',setProgress,0.123,checkNumTimesSpyCalledWithArgs,'0.123','#setDeterminate updates progress value set while determinate is false after determinate is true','#setProgress sets aria-valuenow',getProgress,'0.5','#setProgress on indeterminate does nothing','#open removes class and aria-hidden',CLOSED_CLASS,'#close adds class and aria-hidden','#attachTo returns a component instance',mdcDataTableData,MDCDataTable,'Checking at least 1 row checkbox sets header row checkbox to indeterminate',rowCheckbox,ROW_CHECKBOX_SELECTOR,headerRowCheckbox,HEADER_ROW_CHECKBOX_SELECTOR,'#setSelectedRowIds sets selected row ids',setSelectedRowIds,'u1','u2',getSelectedRowIds,'#getSelectedRowIds returns empty array when no rows selected','adapter#isHeaderRowCheckboxChecked returns true if header row checkbox is checked',nativeCheckbox,isHeaderRowCheckboxChecked,'adapter#addClassAtRowIndex adds class name at given row index ',addClassAtRowIndex,'test-class-name','adapter#removeClassAtRowIndex removes class name from given row index ','test-remove-class-name',removeClassAtRowIndex,'adapter#setAttributeAtRowIndex',setAttributeAtRowIndex,'data-test-set-attr','test-val-1',getRowElements,'adapter#getRowElements','adapter#isRowsSelectable',isRowsSelectable,'adapter#getRowIndexByChildElement',call,ROW_SELECTOR,inputEl,getRowIndexByChildElement,'adapter#getRowCount calls foundation.getRows() method',getRowCount,'adapter#getSelectedRowCount',getSelectedRowCount,selectedRowIndexes,'adapter#notifyRowSelectionChanged','notifyRowSelectionChangedHandler',ROW_SELECTION_CHANGED,notifyRowSelectionChanged,rowIndex,rowId,'adapter#setHeaderRowCheckboxIndeterminate',setHeaderRowCheckboxIndeterminate,'adapter#setHeaderRowCheckboxChecked',setHeaderRowCheckboxChecked,'adapter#getRowIdAtIndex',getRowIdAtIndex,'adapter#setRowCheckboxCheckedAtIndex',setRowCheckboxCheckedAtIndex,'adapter#notifySelectedAll','notifySelectedAll',SELECTED_ALL,notifySelectedAll,'adapter#notifyUnselectedAll','notifyUnselectedAll',UNSELECTED_ALL,notifyUnselectedAll,'Should trigger row click event when clicked on data row','mockRowClickListener',ROW_CLICK,'Should not trigger row click event when clicked on header cell','Removing Rows','removes all rows while the header checkbox is checked.',tableContent,CONTENT,``,'Column sorting','emits sort event when clicked on sort button of sortable column header','handleSorted',SORTED,columnId,'dessert',headerCell,dataAttributes,COLUMN_ID,"}=""${",SORT_ICON_BUTTON,matchEventDetail,sortValue,SortValue,ASCENDING,'emits sort event when clicked on sortable column header text',HEADER_CELL_LABEL,'does not emit sort event when clicked on non sortable column header',"}=""protein""]`",testButton,'does not emit sort event after component is destroyed','clicking on header cell when in idle state sorts that column in ascending order by default','aria-sort','ascending','clicking on header cell toggles sort status if already sorted',sortButton,'descending','clicking on header cells deactivates sorting state on other header cells',dessertHeaderCell,"}=""dessert""]`",caloriesHeaderCell,"}=""calories""]`",'clicking on sortable header cell sets appropriate sort status label that is visually hidden',SORT_STATUS_LABEL,/ascending/,/descending/,'should not throw error when destroy() is called without row selection',withoutRowSelection,toThrowError,'Progress indicator','Should show progress indicator blocking the content when calling showProgress()',progressIndicator,PROGRESS_INDICATOR,cssText,showProgress,/(height|top)/,IN_PROGRESS,destroyProgress,'Should hide progress indicator when hideProgress() called',hideProgress,'Should throw error when showProgress() is called without progress indicator element',excludeProgressIndicator,'Should throw error when hideProgress() is called without progress indicator element',MDCDataTableFoundation,'addClassAtRowIndex','getAttributeByHeaderCellIndex','getHeaderCellCount','getHeaderCellElements','getRowCount','getRowElements','getRowIdAtIndex','getRowIndexByChildElement','getSelectedRowCount','getTableContainerHeight','getTableHeaderHeight','isCheckboxAtRowIndexChecked','isHeaderRowCheckboxChecked','isRowsSelectable','notifyRowClick','notifyRowSelectionChanged','notifySortAction','registerHeaderRowCheckbox','registerRowCheckboxes','removeClassAtRowIndex','removeClassNameByHeaderCellIndex','setAttributeAtRowIndex','setAttributeByHeaderCellIndex','setClassNameByHeaderCellIndex','setHeaderRowCheckboxChecked','setHeaderRowCheckboxIndeterminate','setProgressIndicatorStyles','setRowCheckboxCheckedAtIndex','setSortStatusLabelByHeaderCellIndex','#layout should register header row checkbox only if table is selectable',registerHeaderRowCheckbox,registerRowCheckboxes,'#layout should set header row checkbox checked when all row checkboxes are checked','#layout should set header row checkbox unchecked when all row checkboxes are unchecked','#layout should set header row checkbox unchecked when there are no rows','#layout should set header row checkbox indeterminate when some of the checkboxes are checked','#getHeaderCells should return array of header cell elements',getHeaderCells,getHeaderCellElements,'#getRows should return array of row elements','#getRowIds should return array of row ids',getRowIds,'#setSelectedRowIds Sets the row checkbox checked by id and sets selected class name to row','testId-0','testId-1','testId-3','testId-4',anyIndexMatch,indexList,asymmetricMatch,compareTo,jasmineToString,'<anyIndexMatch: [',']>',ROW_SELECTED,'#setSelectedRowIds when empty unchecks all row checkboxes and unchecks header row checkbox','#getSelectedRowIds Returns selected row ids',isCheckboxAtRowIndexChecked,'testRowId0','testRowId1','testRowId2','#handleHeaderRowCheckboxChange checks all row checkboxes when it is checked and notifies',handleHeaderRowCheckboxChange,'#handleHeaderRowCheckboxChange unchecks all row checkboxes when it is unchecked and notifies','Should trigger an event when clicked on data row',mockDataRowEl,handleRowClick,'1231',notifyRowClick,'#handleRowCheckboxChange does not do anything when target row is not found',handleRowCheckboxChange,Event,'#handleRowCheckboxChange does not do anything when target element (native checkbox) is not found','#handleRowCheckboxChange selects row when row checkbox is checked and notifies','testRowId-u2','#handleRowCheckboxChange unselects row when row checkbox is unchecked and notifies','#handleSortAction Sets header cell in ascending sorted state by default on sort action',getAttributeByHeaderCellIndex,ARIA_SORT,getHeaderCellCount,mockHeaderCell,handleSortAction,'testColId-u2',setClassNameByHeaderCellIndex,HEADER_CELL_SORTED,setAttributeByHeaderCellIndex,notifySortAction,'#handleSortAction Sets header cell in descending sorted state when currently sorted in ascending order on sort action',DESCENDING,HEADER_CELL_SORTED_DESCENDING,'#handleSortAction Sets header cell in ascending sorted state when currently sorted in descending order on sort action',removeClassNameByHeaderCellIndex,'#handleSortAction Resets sort states of other header cells when sorted on target header cell','#handleSortAction Activating sort sets appropriate sort status label that is visually hidden',setSortStatusLabelByHeaderCellIndex,'#showProgress Adds class name that makes the progress indicator visibile',getTableHeaderHeight,getTableContainerHeight,setProgressIndicatorStyles,'80px','#hideProgress Removes class name that makes progress indicator hidden',MDCDialog,'.mdc-dialog','attachTo throws an error when container element is missing','.mdc-dialog__container','#initialSyncWithDOM registers click handler on the root element','#initialSyncWithDOM registers keydown handler on the root element','#destroy deregisters click handler on the root element','#destroy deregisters keydown handler on the root element','#initialize attaches ripple elements to all footer buttons',supportsCssVariables,yesButton,noButton,cancelButton,'#destroy cleans up all ripples on footer buttons','#open forwards to MDCDialogFoundation#open','#close forwards to MDCDialogFoundation#close','get isOpen forwards to MDCDialogFoundation#isOpen','get escapeKeyAction forwards to MDCDialogFoundation#getEscapeKeyAction',escapeKeyAction,getEscapeKeyAction,'set escapeKeyAction forwards to MDCDialogFoundation#setEscapeKeyAction',setEscapeKeyAction,'get scrimClickAction forwards to MDCDialogFoundation#getScrimClickAction',scrimClickAction,getScrimClickAction,'set scrimClickAction forwards to MDCDialogFoundation#setScrimClickAction',setScrimClickAction,'get autoStackButtons forwards to MDCDialogFoundation#getAutoStackButtons',autoStackButtons,getAutoStackButtons,'set autoStackButtons forwards to MDCDialogFoundation#setAutoStackButtons',setAutoStackButtons,'autoStackButtons adds scrollable class','.mdc-dialog__content',`<p>${,}</p>`,'mdc-dialog--scrollable','adapter#hasClass returns whether a class exists on the root element','does-not-exist','adapter#addBodyClass adds a class to the body',addBodyClass,'mdc-dialog--scroll-lock','adapter#removeBodyClass removes a class from the body',removeBodyClass,'adapter#eventTargetMatches returns whether or not the target matches the selector','existent-class',eventTargetMatches,'.existent-class','.non-existent-class','adapter#trapFocus calls trapFocus() on a properly configured focus trap instance',mockFocusTrapInstance,initialize,'adapter#releaseFocus calls releaseFocus() on a properly configured focus trap instance','adapter#isContentScrollable returns false when there is no content element',isContentScrollable,'adapter#isContentScrollable returns result of util.isScrollable',util,isScrollable,'adapter#areButtonsStacked returns result of util.areTopsMisaligned',areButtonsStacked,areTopsMisaligned,'adapter#getActionFromEvent returns an empty string when no event target is present',getActionFromEvent,'adapter#getActionFromEvent returns attribute value on event target','yes','adapter#getActionFromEvent returns attribute value on parent of event target',childEl,'adapter#getActionFromEvent returns null when attribute is not present','adapter#reverseButtons reverses the order of children under the actions element',reverseButtons,'#layout proxies to foundation','component.foundation.layout',MDCDialogFoundation,'exports numbers','addBodyClass','removeBodyClass','eventTargetMatches','getInitialFocusEl','isContentScrollable','areButtonsStacked','getActionFromEvent','clickDefaultButton','reverseButtons','registerContentEventHandler','deregisterContentEventHandler','isScrollableContentAtTop','isScrollableContentAtBottom','registerWindowEventHandler','deregisterWindowEventHandler',dialogOptions,FULLSCREEN,'#destroy removes animating classes if called when the dialog is animating','#destroy cancels layout handling if called on same frame as layout','#destroy deregisters event handlers on dialog content if they exist',deregisterContentEventHandler,'scroll','#destroy deregisters event handlers on the window',deregisterWindowEventHandler,'resize','orientationchange',SCROLL_LOCK,DIALOG_ANIMATION_OPEN_TIME_MS,'#open activates focus trapping on the dialog surface',getInitialFocusEl,DIALOG_ANIMATION_CLOSE_TIME_MS,'#close does nothing if the dialog is already closed','#isOpen returns false when the dialog has never been opened','#isOpen returns true when the dialog is open','#isOpen returns false when the dialog is closed after being open','#open recalculates layout','layout','#open registers scroll event handler if dialog is full-screen and scrollable',registerContentEventHandler,'#open registers scroll event handler if dialog is full-screen and not scrollable','#open doesn\'t registers scroll event handler if dialog is not full-screen','#close deregisters scroll event handler if dialog is full-screen and scrollable','#close deregisters scroll event handler if dialog is full-screen and not scrollable',"'#open hides the scrim if ""isAboveFullscreenDialog"" is true'",isAboveFullscreenDialog,SCRIM_HIDDEN,'#open registers resize and orientationchange event listeners on the window',registerWindowEventHandler,'#close deregisters resize and orientationchange event listeners on the window','#layout adds scrollable class when content is scrollable',SCROLLABLE,'#layout removes scrollable class when content is not scrollable','#layout adds header scroll divider if dialog is fullscreen and content is scrolled',isScrollableContentAtTop,SCROLL_DIVIDER_HEADER,'#layout adds footer scroll divider if dialog is fullscreen and content is scrollable',isScrollableContentAtBottom,SCROLL_DIVIDER_FOOTER,'#handleKeydown: Keydown does not close dialog with action for non-activation keys','#handleKeydown: Enter keydown calls adapter.clickDefaultButton',ENTER_EVENTS,clickDefaultButton,'#handleKeydown: Enter keydown does not call adapter.clickDefaultButton when it should be suppressed',SUPPRESS_DEFAULT_PRESS_SELECTOR,'escape keydown closes the dialog (via key property)',handleDocumentKeydown,'Escape','escape keydown closes the dialog (via keyCode property)',27,'escape keydown does nothing if escapeKeyAction is set to empty string','keydown does nothing when key other than escape is pressed','#getAutoStackButtons reflects setting of #setAutoStackButtons','#getEscapeKeyAction reflects setting of #setEscapeKeyAction','#getScrimClickAction reflects setting of #setScrimClickAction','shows header scroll divider on scrollable full-screen dialogs','handleScrollEvent','removes header scroll divider on scrollable full-screen dialogs when content is at top','shows footer scroll divider on scrollable full-screen dialogs','removes footer scroll divider on scrollable full-screen dialogs when content is at bottom','#showSurfaceScrim adds css classes to show surface scrim',showSurfaceScrim,SURFACE_SCRIM_SHOWING,SURFACE_SCRIM_SHOWN,'#hideSurfaceScrim adds css classes to hide surface scrim',hideSurfaceScrim,SURFACE_SCRIM_HIDING,'#handleSurfaceScrimTransitionEnd removes surface-scrim animation classes',handleSurfaceScrimTransitionEnd,'createFocusTrapInstance creates a properly configured focus trap instance with all args specified',surface,yesBtn,focusTrapFactory,'focusTrapFactory',properlyConfiguredFocusTrapInstance,FocusTrap,initialFocusEl,createFocusTrapInstance,'isScrollable returns false when element is null','isScrollable returns false when element has no content','isScrollable returns false when element content does not overflow its bounding box',"`
         <div style=""height: 20px; overflow: auto;"">
           <div style=""height: 10px;""></div>
         </div>`",'isScrollable returns true when element content overflows its bounding box',"`
         <div style=""height: 20px; overflow: auto;"">
           <div style=""height: 30px;""></div>
         </div>`",'isScrollAtTop returns true when scrollable content has not been scrolled',isScrollAtTop,'isScrollAtTop returns false when scrollable content has been scrolled','isScrollAtBottom returns false when scrollable content is not scrolled to the bottom',isScrollAtBottom,'isScrollAtBottom returns true when scrollable content has been scrolled to the bottom','areTopsMisaligned returns false when array is empty','areTopsMisaligned returns false when array only contains one element',"`
         <div style=""display: flex;
                     position: relative;
                     flex-direction: row;
                     flex-wrap: wrap;
                     align-items: center;
                     justify-content: flex-end;"">
           <button>1</button>
         </div>`",'areTopsMisaligned returns false when elements have same offsetTop',"`
         <div style=""display: flex;
                     position: relative;
                     flex-direction: row;
                     flex-wrap: wrap;
                     align-items: center;
                     justify-content: flex-end;"">
           <button>1</button>
           <button>2</button>
         </div>`","'areTopsMisaligned returns true when elements have different ""top"" values'","`
         <div style=""display: flex;
                     position: relative;
                     flex-direction: column;
                     flex-wrap: wrap;
                     align-items: center;
                     justify-content: flex-end;"">
           <button>1</button>
           <button>2</button>
         </div>`","'creates an aria-live=""polite"" region by default'",announce,LIVE_REGION_SELECTOR,"'creates an aria-live=""assertive"" region if specified'",'Bar',priority,AnnouncerPriority,ASSERTIVE,'uses the provided ownerDocument for announcements',ownerDocument,implementation,createHTMLDocument,'custom ownerDocument',globalDocumentLiveRegion,ownerDocumentLiveRegion,'sets live region content after a timeout','Baz','reuses same polite live region on successive calls per document',secondDocument,'aaa','bbb','ccc',globalDocumentLiveRegions,secondDocumentLiveRegions,'reuses same assertive live region on successive calls per document','sets the latest message during immediate successive','clears out the message on click','applyPassive returns an options object for browsers that support passive event listeners',mockWindow,method,AddEventListenerOptions,passive,applyPassive,EventListenerOptions,'applyPassive returns false for browsers that do not support passive event listeners','traps focus in the given container element',container1,container2,setUp,focusTrap1,expectFocusTrapped,'con1a','con1b',focusTrap2,'con2a','con2b','releases focus from the given container element',FOCUS_SENTINEL_CLASS,'restores focus to previously focused element',focusTrap,'sets initial focus to first visible focusable element',container3,'con3c','sets initial focus to first non-hidden/non-disabled focusable element',container4,'con4e','sets initial focus to initialFocusEl','#con1b','does not set initial focus when skipInitialFocus=true',skipInitialFocus,'does not restore focus when skipRestoreFocus=true',skipRestoreFocus,'throws an error when trapping focus in an element with 0 focusable elements',container5,/Element must have at least one focusable child/,firstElementId,lastElementId,focusSentinels,startFocusSentinel,endFocusSentinel,fakeFocusHandler,eventName,eventHandler,'#closest returns result from native method if available',mockElement,createSpyObj,'mockElement','.foo',closest,'#closest returns the element when the selector matches the element','matches','#closest returns the parent element when the selector matches the parent element',mockParentMatches,'mockParentElement.matches',mockMatches,'mockChildElement.matches',mockParentElement,mockChildElement,'#closest returns null when there is no ancestor matching the selector','#matches returns true when the selector matches the element',"`<div class=""foo""></div>`",'#matches returns false when the selector does not match the element','.bar','#matches supports vendor prefixes',Element,webkitMatchesSelector,msMatchesSelector,'#estimateScrollWidth returns the default width when the element is not hidden',"`<span>
    <span id=""i0"" style=""width:10px;""></span>
  </span>`",'#i0',estimateScrollWidth,'#estimateScrollWidth returns the estimated width when the element is hidden',"`<span style=""display:none;"">
    <span id=""i0"" style=""width:10px;""></span>
  </span>`",MDCDismissibleDrawerFoundation,'elementHasClass','saveFocus','restoreFocus','focusActiveNavigationItem','notifyClose','notifyOpen','#destroy cancels pending rAF for #open','#destroy cancels pending setTimeout for #open','#open does nothing if drawer is already open','#open does nothing if drawer is already opening','#open does nothing if drawer is closing','#open adds appropriate classes and saves focus',ANIMATE,saveFocus,'#close does nothing if drawer is already closed','#close does nothing if drawer is opening','#close does nothing if drawer is closing','#close adds appropriate classes','#isOpening returns true when drawer just start animate',isOpening,'#handleKeydown does nothing when event key is not the escape key','#handleKeydown does nothing when event keyCode is not 27','#handleKeydown calls close when event key is the escape key','#handleKeydown calls close when event keyCode is 27','#handleTransitionEnd removes all animating classes',elementHasClass,ROOT,"'#handleTransitionEnd removes open class after closing, restores the focus and calls notifyClose'",`<div>root</div>`,restoreFocus,notifyClose,'#handleTransitionEnd doesn\'t do anything if event is not triggered by root element',`<div>child</div>`,notifyOpen,'#handleTransitionEnd doesn\'t do anything if event is emitted with a non-element target','#handleTransitionEnd restores the focus.','#opened traps the focus when drawer finishes animating open',opened,'#closed untraps the focus when drawer finishes animating close','#handleScrimClick closes the drawer',MDCModalDrawerFoundation,handleScrimClick,'attachTo initializes and returns a MDCDrawer instance',getDrawerFixture,variantClass,DISMISSIBLE,hasList,'.mdc-drawer',MDCDrawer,'#get open calls foundation.isOpen','#set open true calls foundation.open','#set open false calls foundation.close','#get list returns MDCList instance when DOM includes list',MDCList,'click event calls foundation.handleScrimClick method',MODAL,scrimEl,'.mdc-drawer-scrim',SpyObj,'keydown event calls foundation.handleKeydown method',drawer,'.mdc-deprecated-list-item','transitionend event calls foundation.handleTransitionEnd method','component should throw error when invalid variant class name is used or no variant specified','mdc-drawer--test-invalid-variant','#destroy removes keydown event listener','#destroy removes transitionend event listener','#destroy calls destroy on list','#destroy does not throw an error when list is not present','adapter#addClass adds class to drawer','test-class','adapter#removeClass removes class from drawer','adapter#hasClass returns true when class is on drawer element','adapter#hasClass returns false when there is no class on drawer element','adapter#elementHasClass returns true when class is found on event target','adapter#restoreFocus restores focus to previously saved focus',`<button>Foo</button>`,LIST_ITEM_ACTIVATED_SELECTOR,'adapter#restoreFocus focus shouldn\'t restore if focus is not within root element',navButtonEl,otherButtonEl,`<button>Bar</button>`,'adapter#restoreFocus focus is not restored if saveFocus never called',navItem,'adapter#trapFocus traps focus on root element','adapter#releaseFocus releases focus on root element after trap focus','adapter#notifyOpen emits drawer open event','openHandler',OPEN_EVENT,'adapter#notifyClose emits drawer close event','closeHandler',CLOSE_EVENT,'adapter#focusActiveNavigationItem focuses on active navigation item',focusActiveNavigationItem,activatedNavigationItemEl,'adapter#focusActiveNavigationItem does nothing if no active navigation item exists',prevActiveElement,'mdc-deprecated-list-item--activated',"'#initialSyncWithDOM should not throw any errors when DOM rendered in DocumentFragment i.e., Shadow DOM'",shadowRoot,rootEl,`<div></div>`,'attachTo returns an MDCFloatingLabel instance',MDCFloatingLabel,'#shake calls the foundation shake method',shake,'#getWidth calls the foundation getWidth method',getWidth,'#float calls the foundation float method',float,'#adapter.addClass adds a class to the element','#adapter.removeClass removes a class from the element','#adapter.getWidth returns the width of the label element',offsetWidth,MDCFloatingLabelFoundation,'getWidth','registerInteractionHandler','deregisterInteractionHandler','#init should register animationend event listener',registerInteractionHandler,'#destroy should deregister animationend event listener',deregisterInteractionHandler,'#getWidth returns the width of the label element scaled by 75%',"'#float called with shouldFloat is true, floats the label'",LABEL_FLOAT_ABOVE,"'#float called with shouldFloat is false, de-floats the label'","'#shake called with shouldShake is true, should add shake class'",LABEL_SHAKE,"'#shake called with shouldShake is false, should remove shake class'","'#float called with shouldFloat is false, should remove shake class'",'#handleShakeAnimationEnd should remove LABEL_SHAKE class',handleShakeAnimationEnd,"'#setRequired called with isRequired is true, should add required class'",setRequired,LABEL_REQUIRED,"'#setRequired called with isRequired is false, should remove required class'",'attachTo initializes and returns an MDCFormField instance',MDCFormField,'get/set input','adapter#registerInteractionHandler adds an event listener to the label element','adapter#deregisterInteractionHandler removes an event listener from the root element','adapter#activateInputRipple calls activate on the input ripple',activate,'activate',activateInputRipple,'adapter#activateInputRipple does not throw if there is no input','adapter#activateInputRipple does not throw if the input has no ripple getter','adapter#deactivateInputRipple calls deactivate on the input ripple',deactivate,'deactivate',deactivateInputRipple,'adapter#deactivateInputRipple does not throw if there is no input','adapter#deactivateInputRipple does not throw if the input has no ripple getter',MDCFormFieldFoundation,'activateInputRipple','deactivateInputRipple','#init calls event registrations','#destroy calls event deregistrations','attachTo initializes and returns a MDCIconButtonToggle instance',MDCIconButtonToggle,'i','#constructor initializes the ripple on the root element','set/get on','aria-pressed','#adapter.addClass adds a class to the root element','#adapter.removeClass removes a class from the root element','#adapter.setAttr sets an attribute on the root element',setAttr,'assert keydown does not trigger ripple',FG_ACTIVATION,'assert keyup does not trigger ripple','keyup','click handler is added to root element','click handler is removed from the root element on destroy',MDCIconButtonToggleFoundation,'getAttr','setAttr','notifyChange','#handleClick calls #toggle','#handleClick calls notifyChange',ICON_BUTTON_ON,notifyChange,isOn,'#toggle flips on',returnValues,'#toggle accepts boolean argument denoting toggle state',"'#toggle sets ""aria-pressed"" to true when toggled on'",ARIA_PRESSED,"'#toggle sets ""aria-pressed"" to false when toggled off'",'Variant with toggled aria label','#init throws an error if `aria-label-on` and `aria-label-off` are ',"'set, but `aria-pressed` is also set'",getAttr,DATA_ARIA_LABEL_ON,'on label',DATA_ARIA_LABEL_OFF,'off label','#toggle sets aria label correctly when toggled on',initWithToggledAriaLabel,ARIA_LABEL,'#toggle sets aria label correctly when toggled off','attachTo returns an MDCLineRipple instance',MDCLineRipple,'#adapter.hasClass returns true if a class is on the element','#adapter.setStyle adds a given style property to the element',setStyle,'color: blue;','#adapter.registerEventHandler adds event listener for a given event to the element','transitionend handler',registerEventHandler,'#adapter.deregisterEventHandler removes event listener for a given event from the element',deregisterEventHandler,MDCLineRippleFoundation,'setRippleCenter',setRippleCenter,'setStyle','registerEventHandler','deregisterEventHandler','#init adds event listeners','#destroy removes event listeners','opacity event after adding deactivating class triggers triggers removal of activation classes',LINE_RIPPLE_DEACTIVATING,LINE_RIPPLE_ACTIVE,'setRippleCenter sets style attribute',transformOriginValue,'transform-origin','attachTo initializes and returns a MDCLinearProgress instance',MDCLinearProgress,'transitionend event calls foundation transitionend handler','mdc-linear-progress--indeterminate',MDCLinearProgressFoundation,ARIA_VALUEMAX,ARIA_VALUEMIN,primaryBar,PRIMARY_BAR_SELECTOR,'scaleX(0.5)','set buffer',buffer,BUFFER_BAR_SELECTOR,'50%',flexBasis,'mdc-linear-progress--closed','mdc-linear-progress--closed-animation-off','attach to dom',WithMDCResizeObserver,ResizeObserver,originalResizeObserver,'will not error if there is no resize observer',WithObserverFoundation,observer,'will update size on resize',RO,mockObserverInstance,MockObserver,observedElement,public,MDCResizeObserverCallback,triggerResize,disconnect,fakeEntry,contentRect,MDCResizeObserverEntry,MDCResizeObserver,actualRounded,roundPixelsToTwoDecimals,'--mdc-linear-progress-primary-half',percentages,PRIMARY_HALF,setProperty,'attachResizeObserver','setBufferBarStyle','setPrimaryBarStyle',"'#setDeterminate false updates state, adds class, resets transforms, and removes aria-valuenow'",setPrimaryBarStyle,'scaleX(1)',setBufferBarStyle,'flex-basis','#setDeterminate false updates custom props',attachResizeObserver,testPercentages,multiplyPercentages,allArgs,'--mdc-linear-progress-primary-half-neg',`-${,'--mdc-linear-progress-primary-full',PRIMARY_FULL,'--mdc-linear-progress-primary-full-neg','--mdc-linear-progress-secondary-quarter',SECONDARY_QUARTER,'--mdc-linear-progress-secondary-quarter-neg','--mdc-linear-progress-secondary-half',SECONDARY_HALF,'--mdc-linear-progress-secondary-half-neg','--mdc-linear-progress-secondary-full',SECONDARY_FULL,'--mdc-linear-progress-secondary-full-neg','#setDeterminate updates state and removes class','scaleX(0.123)','#setDeterminate restores previous buffer value after toggled from false to true',setBuffer,'12.3%','#calculateAndSetDimensions called on initialization with indeterminate class','#calculateAndSetDimensions called only on setDeterminate(false)','#calculateAndSetDimensions restarts animation with a forced reflow',ANIMATION_READY_CLASS,"'#setProgress updates state, sets transform and aria-valuenow'",'#setBuffer sets flex-basis',getBuffer,'#setBuffer on indeterminate does nothing',CLOSED_ANIMATION_OFF_CLASS,'#destroy disconnects the resize observer',disconnected,mockedObserver,withObserver,'attachTo initializes and returns a MDCList instance','component calls setVerticalOrientation on the foundation if aria-orientation is not set',setVerticalOrientation,'component calls setVerticalOrientation(false) on the foundation if aria-orientation=horizontal','aria-orientation','horizontal','component calls setVerticalOrientation(true) on the foundation if aria-orientation=vertical','vertical','#initializeListType populates selectedIndex based on preselected checkbox items',listElements,deprecatedClassNameMap,LIST_ITEM_CLASS,itemEl,'checkbox',initializeListType,setSelectedIndex,'#initializeListType populates selectedIndex based on preselected radio item','#initializeListType does not populate selectedIndex when no item is selected','#setEnabled calls foundation method setEnabled with given index and enabled state.',setEnabled,'#getTypeaheadInProgress calls foundation method',typeaheadInProgress,isTypeaheadInProgress,'#typeaheadMatchItem calls foundation method with given index and starting index.',typeaheadMatchItem,'adapter#getListItemCount returns correct number of list items',getListItemCount,'adapter#getFocusedElementIndex returns the index of the currently selected element',getFocusedElementIndex,'adapter#setAttributeForElementIndex does nothing if the element at index does not exist',setAttributeForElementIndex,'adapter#setAttributeForElementIndex sets the attribute for the list element at index specified',selectedNode,'adapter#addClassForElementIndex does nothing if the element at index does not exist',addClassForElementIndex,'adapter#addClassForElementIndex adds the class to the list element at index specified',LIST_ITEM_ACTIVATED_CLASS,'adapter#removeClassForElementIndex does nothing if the element at index does not exist',removeClassForElementIndex,'adapter#removeClassForElementIndex removes the class from the list element at index specified','adapter#focusItemAtIndex does not throw an error if element at index is undefined/null',focusItemAtIndex,'adapter#focusItemAtIndex focuses the list item at the index specified','adapter#setTabIndexForListItemChildren sets the child button/a elements of index',listItems,setTabIndexForListItemChildren,"'[tabindex=""0""]'",'layout adds tabindex=-1 to all list items without a tabindex','.mdc-deprecated-list-item:not([tabindex])','layout adds tabindex=-1 to all list item button/a elements','button:not([tabindex])','#getPrimaryText returns the appropriate text for one line list',getPrimaryText,'Pasta','#getPrimaryText returns the appropriate text for two line list',getTwoLineFixture,'vertical calls setVerticalOrientation on foundation',vertical,'wrapFocus calls setWrapFocus on foundation',wrapFocus,setWrapFocus,'singleSelection calls foundation setSingleSelection with the provided value',singleSelection,setSingleSelection,'selectedIndex calls setSelectedIndex on foundation','#selectedIndex getter proxies foundations getSelectedIndex method',getSelectedIndex,'handleClick handler is added to root element',createEvent,'Event',initEvent,listElementItem,'focusIn handler is added to root element','FocusEvent','focusIn handler is removed from the root element on destroy','focusOut handler is added to root element','focusOut handler is removed from the root element on destroy','keydown handler is added to root element','KeyboardEvent','keydown handler is triggered when a sub-element of a list is triggered','.mdc-deprecated-list-item button','keydown calls foundation.handleKeydown method with negative index when event triggered on list root ','keydown handler is removed from the root element on destroy','#listElements should return all list items including disabled list items',getFixtureWithDisabledItems,'adapter#hasRadioAtIndex return true or false based on presense of radio button on list item',hasRadioAtIndex,'adapter#hasCheckboxAtIndex return true or false based on presense of checkbox button on list item',hasCheckboxAtIndex,'adapter#isCheckboxCheckedAtIndex returns true or false based if checkbox is checked on a list item',isCheckboxCheckedAtIndex,'adapter#setCheckedCheckboxOrRadioAtIndex toggles the checkbox on list item',setCheckedCheckboxOrRadioAtIndex,'adapter#setCheckedCheckboxOrRadioAtIndex toggles the radio on list item',"'input[type=""radio""]'",'adapter#notifyAction emits action event',ACTION_EVENT,notifyAction,'adapter#notifySelectionChange emits selection change event',SELECTION_CHANGE_EVENT,notifySelectionChange,changedIndices,'adapter#isFocusInsideList returns true if focus is inside list root',isFocusInsideList,'adapter#isRootFocused returns true if list root is on focus',isRootFocused,'adapter#listItemAtIndexHasClass returns true if list item has disabled class',LIST_ITEM_DISABLED_CLASS,listItemAtIndexHasClass,'adapter#listItemAtIndexHasClass returns false if list item does not have disabled class','adapter#getPrimaryTextAtIndex returns the appropriate text for one line list',getPrimaryTextAtIndex,'adapter#getPrimaryTextAtIndex returns the appropriate text for two line list',MDCListFoundation,'getListItemCount','getFocusedElementIndex','setAttributeForElementIndex','addClassForElementIndex','removeClassForElementIndex','focusItemAtIndex','setTabIndexForListItemChildren','hasRadioAtIndex','hasCheckboxAtIndex','isCheckboxCheckedAtIndex','listItemAtIndexHasClass','setCheckedCheckboxOrRadioAtIndex','notifyAction','notifySelectionChange','isFocusInsideList','getAttributeForElementIndex','isRootFocused','getPrimaryTextAtIndex','contains',writable,'#layout should bail out early when list is empty','#handleFocusIn switches list item button/a elements to tabindex=0','#handleFocusOut switches list item button/a elements to tabindex=-1','#handleFocusIn switches list item button/a elements to tabindex=0 when target is child element','#handleFocusOut switches list item button/a elements to tabindex=-1 when target is child element','#handleFocusIn does nothing if mdc-list-item is not on element or ancestor','#handleFocusOut does nothing if mdc-list-item is not on element or ancestor','#handleFocusOut sets tabindex=0 to selected item when focus leaves single selection list','#handleFocusOut sets tabindex=0 to first item when focus leaves list ','that has no selection','focusedItemIndex','#handleFocusOut does not set tabindex=0 to selected list item when focus moves to next list item.','#handleFocusOut sets tabindex=0 to first selected index when focus leaves checkbox based list','#getFocusedItemIndex returns currently focused item',getFocusedItemIndex,'#handleKeydown does nothing if key received on root element and not used for navigation',createMockKeyboardEvent,'#handleKeydown should focus on last item when UP arrow key received on list root','#handleKeydown should focus on first item when DOWN arrow key received on list root','#handleKeydown should focus and select the last item when Shift + ArrowUp key received on list root','#handleKeydown should focus and select the first item when Shift + ArrowDown key received on list root','#handleKeydown does nothing if the key is not used for navigation','#handleKeydown moves focus to index+1 if the ArrowDown key is pressed','#handleKeydown focuses disabled item when disabled items are focusable and the ArrowDown key is pressed','#handleKeydown skips disabled item when disabled items are not focusable and the ArrowDown key is pressed',setDisabledItemsFocusable,'#handleKeydown moves focus to index-1 if the ArrowUp key is pressed','#handleKeydown focuses disabled item when disabled items are focusable and the ArrowUp key is pressed','#handleKeydown skips disabled item when disabled items are not focusable and the ArrowUp key is pressed','#handleKeydown moves focus to and selects index+1 if Shift + ArrowDown key is pressed','#handleKeydown moves focus to and deselects index+1 if Shift + ArrowDown key is pressed','#handleKeydown moves focus to and selects index-1 if Shift + ArrowUp key is pressed','#handleKeydown moves focus to and deselects index-1 if Shift + ArrowUp key is pressed','#handleKeydown ArrowRight key does nothing if isVertical is true','#handleKeydown ArrowLeft key does nothing if isVertical is true','#handleKeydown ArrowRight key causes the next item to gain focus if isVertical is false','#handleKeydown ArrowLeft key causes the previous item to gain focus if isVertical is false','#handleKeydown ArrowDown key causes first item to focus if last item is focused and wrapFocus is true','#handleKeydown ArrowDown key if last item is focused and wrapFocus is false does not focus an item','#handleKeydown ArrowUp key causes last item to focus if first item is focused and wrapFocus is true','#handleKeydown ArrowUp key if first item is focused and wrapFocus is false does not focus an item','#handleKeydown Home key causes the first item to be focused','#handleKeydown End key causes the last item to be focused','#handleKeydown Control + Shift + Home key selects all items from current to first','Control','#handleKeydown Control + Shift + End key selects all items from current to end','#handleKeydown navigation key in input/button/select/textarea elements do not call preventDefault ','preventDefault','#handleKeydown focuses on the bound mdc-list-item even if the event happened on a child element','mdc-list-item','#handleKeydown space key causes preventDefault to be called on keydown event','#handleKeydown enter key causes preventDefault to be called on keydown event','#handleKeydown enter key while focused on a sub-element of a list item does not cause preventDefault on the ','event when singleSelection=true ','#handleKeydown space/enter key cause event.preventDefault if a checkbox or radio button is present','#handleKeydown space key calls notifyAction for anchor element regardless of singleSelection','#handleKeydown space key does not call notifyAction for disabled element','#handleKeydown enter key does not call notifyAction for anchor element','#handleKeydown notifies of action when enter key pressed on list item ',"'#handleKeydown selects the list item when enter key is triggered, singleSelection=true'",getAttributeForElementIndex,ARIA_CURRENT,'#handleKeydown does not select the list item when',"'enter key is triggered, singleSelection=true, #adapter.isListItemDisabled=true'",'#handleKeydown space key is triggered when singleSelection is true selects the list item','#handleKeydown space key when singleSelection=true does not select an element is isRootListItem=false','#handleKeydown does not select list item when',"'space key is triggered, singleSelection=true, #adapter.isListItemDisabled=true'",'#handleKeydown space key is triggered 2x when singleSelection does not un-select the item.','#handleKeydown space key is triggered 2x when singleSelection is true on second ','element updates first element tabindex','#handleKeydown when shift + space/enter and no previous user selection action should toggle item',shiftEvent,'#handleKeydown unselected item when shift + enter/space should select range from previous action','#handleKeydown selected item when shift + enter/space should deselect range from previous action','#handleKeydown bail out early if event origin doesnt have a mdc-list-item ancestor from the current list','#focusLastElement focuses the last list item and returns that index',focusLastElement,'#focusInitialElement focuses the first list item and returns that index',focusInitialElement,'#focusInitialElement focuses the first selected list item and returns that index','#focusNextElement focuses next list item and returns that index',focusNextElement,'#focusNextElement focuses first list item when focus is on last list item when wrapFocus=true and returns that ','index',"'#handleKeydown should select all items on ctrl + A, if nothing is selected'","'#handleKeydown should select all items on ctrl + lowercase A, if nothing is selected'","'#handleKeydown should select all items on ctrl + A, if some items are selected'","'#handleKeydown should deselect all items on ctrl + A, if all items are selected'",'#handleKeydown should not select disabled items on ctrl + A','#handleKeydown should not handle ctrl + A on a non-checkbox list','#handleKeydown should not deselect a selected disabled item on ctrl + A','#focusNextElement retains the focus on last item when wrapFocus=false and returns that index','#focusPrevElement focuses previous list item and returns that index',focusPrevElement,'#focusPrevElement focuses last list item when focus is on first list item when wrapFocus=true and returns that ','#focusPrevElement retains the focus on first list item when wrapFocus=false and returns that index','#handleClick when singleSelection=false on a list item should not cause the list item to be selected',LIST_ITEM_SELECTED_CLASS,'#handleClick notifies of action when clicked on list item.','#handleClick does not notify of action when clicked on disabled list item.','#handleClick when singleSelection=true on a list item should cause the list item to be selected','#handleClick when singleSelection=true on a button subelement should not cause the list item to be selected','#handleClick when singleSelection=true on an element not in a list item should be ignored','#handleClick when singleSelection=true on the first element when already selected','#handleClick when isCheckboxAlreadyUpdatedInAdapter=true does not ','change the checkbox state','#handleClick proxies to the adapter#setCheckedCheckboxOrRadioAtIndex if ','isCheckboxAlreadyUpdatedInAdapter is false','#handleClick does not proxy to the adapter#setCheckedCheckboxOrRadioAtIndex',"'if isCheckboxAlreadyUpdatedInAdapter=false, adapter.isListItemDisabled=true'",'#handleClick checks the checkbox at index if it is present on list item','#handleClick bails out if checkbox or radio is not present and if ','isCheckboxAlreadyUpdatedInAdapter set to true','#handleClick single-select list when shift key is held should do nothing',createMockMouseEvent,'#handleClick when shift key is held and no previous user selection action should toggle item','#handleClick unselected item when shift key is held should select range from previous action','#handleClick selected item when shift key is held should deselect range from previous action','#handleClick when shift key is held should not toggle disabled items','#handleClick multiple clicks while shift is held should work','#setSingleSelection true with --selected item initializes list state',' to correct selection','#setSingleSelection true with --activated item initializes list state',' to correct selection and causes further selections to use activation','#setSingleSelection=true resets selected index if there is no selected ',UNSET_INDEX,'#setUseActivatedClass causes setSelectedIndex to use the --activated class',setUseActivatedClass,'#setSelectedIndex should bail out early if not in the range','#setSelectedIndex should bail out early if index is string or invalid','some_random_input','#setSelectedIndex should set aria checked true on new selected index and set aria checked false on previous ','selected index for checkbox based list','#setSelectedIndex should set aria attributes on new index and should also set aria checked to false on previous',' selected index for radio based list','#setSelectedIndex removes selected/activated class name and sets aria-selected to false from previously selected ','list item','#setSelectedIndex should detect the presence of aria-current during list initialization ',"'(i.e., when it is in unset state) and sets the same attribute on pre-selected index'",'page','#setSelectedIndex should set aria-selected as default option in the absence of aria-selected on pre-selected ','item index',"'#setSelectedIndex sets aria-current=""false"" to previously selected index and sets aria-current without any token'",'to current index','#setSelectedIndex sets aria-current to false to previously selected index and sets aria-current with appropriate ','token to current index','#setSelectedIndex throws error when array of index is set on radio based list','#setSelectedIndex throws error when single index number is set on multi-select checkbox based list','#setSelectedIndex deselects all checkboxes when selected index is set to []','#getSelectedIndex should be in-sync with setter method','#getSelectedIndex should be in-sync with setter method for multi-select checkbox based list','#setEnabled should remove disabled class and set aria-disabled to false','#setEnabled should add disabled class and set aria-disabled to true','checkbox list','should notify when a list item has been toggled through space','should not notify when a list item could not be toggled through ','space due to it being disabled','should notify when a list item has been toggled through enter','enter due to it being disabled','should notify when a list item has been toggled through click','should notify when a list item has been toggled through click even ','with `isCheckboxAlreadyUpdatedInAdapter` set to `true`','click due to it being disabled','should notify when items have been selected through CTRL + A','radio list','single selection','typeahead','#layout initializes typeahead state when typeahead enabled',setupTypeaheadTest,'slow typing when root focused jumps to first matching item','does not activate when ctrl/meta key is pressed',ctrlEvent,metaEvent,'Meta','slow typing when first item focused yields correct focus jump order',focusedItemIndex,TYPEAHEAD_BUFFER_CLEAR_TIMEOUT_MS,'slow typing when middle item focused yields correct focus jump order','slow typing with focus changing between keypresses does not',' interfere with typeahead state','slow typing with different keys yields correct focus jump order','T','Z','fast typing yields correct focus jump order','fast typing with spaces in text yields correct focus jump order',"'slow, then fast typing yields correct focus jump order'",'no matches cause focus to stay put','M','I','O','ignores disabled items properly','programmatic typeahead invocation returns correct matching items','attachTo initializes and returns a MDCMenuSurface instance',MDCMenuSurface,'initialSyncWithDOM registers key handler on the menu surface','destroy deregisters key handler on the menu surface','#isOpen','#open opens the menu surface','#open calling open on button click does not close quick menu',listener,numTimesClosedCalled,CLOSED_EVENT,quickOpen,'#open does not throw error if no focusable elements',while,'#close closes the menu surface','setMenuSurfaceAnchorElement',myElement,setMenuSurfaceAnchorElement,'anchorElement is properly initialized when the DOM contains an anchor',withAnchor,'setIsHoisted',setIsHoisted,'setFixedPosition is called when CSS class is present',fixedPosition,setFixedPosition,'setFixedPosition is true',FIXED,'setFixedPosition is false','setAbsolutePosition calls the foundation setAbsolutePosition function',setAbsolutePosition,'setAnchorCorner',setAnchorCorner,Corner,TOP_START,'setAnchorMargin with all object properties defined',setAnchorMargin,'setAnchorMargin with empty object','setQuickOpen',setQuickOpen,'adapter#hasClass returns true if the root element has specified class','adapter#hasClass returns false if the root element does not have specified class','adapter#getInnerDimensions returns the dimensions of the container',getInnerDimensions,'adapter#restoreFocus restores focus saved by adapter#saveFocus','adapter#restoreFocus does not restore focus if never called adapter#saveFocus','adapter#restoreFocus does nothing if the active focused element is not in the menu-surface','adapter#isFocused returns whether the menu surface is focused','adapter#hasAnchor returns true if the menu surface has an anchor',hasAnchor,'adapter#hasAnchor returns false if it does not have an anchor',notAnAnchor,'adapter#getAnchorDimensions returns the dimensions of the anchor element','21px','42px',getAnchorDimensions,'adapter#getAnchorDimensions returns undefined if there is no anchor element','adapter#getWindowDimensions returns the dimensions of the window',getWindowDimensions,innerWidth,'adapter#getBodyDimensions returns the body dimensions',getBodyDimensions,clientWidth,'adapter#getWindowScroll returns the scroll position of the window when not scrolled',getWindowScroll,pageXOffset,pageYOffset,'adapter#isRtl returns true for RTL documents',isRtl,'adapter#isRtl returns false for explicit LTR documents','ltr','adapter#isRtl returns false for implicit LTR documents','adapter#isElementInContainer returns true if element is in the menu surface',isElementInContainer,'adapter#isElementInContainer returns true if element is the menu surface','adapter#isElementInContainer returns false if element is not in the menu surface','adapter#setTransformOrigin sets the correct transform origin on the menu surface element',transformOrigin,'left top 10px',}-origin`,setTransformOrigin,'adapter#setPosition sets the correct position on the menu surface element',setPosition,'11px','adapter#setMaxHeight sets the maxHeight style on the menu surface element',setMaxHeight,maxHeight,MDCMenuSurfaceFoundation,'exports Corner','hasAnchor','isElementInContainer','isRtl','setTransformOrigin','isFocused','getInnerDimensions','getAnchorDimensions','getWindowDimensions','getBodyDimensions','getWindowScroll','setPosition','setMaxHeight','#init throws error when the root class is not present',testFoundation,'#open adds the animation class to start an animation',ANIMATING_OPEN,'#open does not add the animation class to start an animation when setQuickOpen is true','#open adds the open class to the menu surface','#open removes the animation class at the end of the animation',TRANSITION_OPEN_DURATION,'#open emits the opening event at the beginning of the animation','#open emits the open event at the end of the animation','#open emits the open event when setQuickOpen is true','#open does not emit event when already closed',"'#open from small anchor in center of viewport, default (TOP_START) anchor corner, RTL'",initAnchorLayout,smallCenter,'right top',"'#open from small anchor in center of viewport, TOP_END anchor corner, RTL'",TOP_END,"'#open from small anchor in center of viewport, BOTTOM_START anchor corner, RTL'",BOTTOM_START,"'#open from small anchor in center of viewport, BOTTOM_END anchor corner, RTL'",BOTTOM_END,"'#open from small anchor in top left of viewport, default (TOP_START) anchor corner, LTR'",smallTopLeft,'left top',"'#open from small anchor in top left of viewport, TOP_END anchor corner, LTR'","'#open from small anchor in top left of viewport, BOTTOM_START anchor corner, LTR'","'#open from small anchor in top left of viewport, BOTTOM_END anchor corner, LTR'","'#open from small anchor in right bottom of viewport, default (TOP_START) anchor corner, LTR'",smallBottomRight,'right bottom',"'#open from small anchor in right bottom of viewport, TOP_END anchor corner, LTR'","'#open from small anchor in right bottom of viewport, BOTTOM_START anchor corner, LTR'","'#open from small anchor in right bottom of viewport, BOTTOM_END anchor corner, LTR'","'#open from small anchor in top left of viewport, fixed position, no scroll'","'#open from small anchor in top left of viewport, absolute position, no scroll'","'#open from anchor in top left of viewport, absolute position, hoisted menu surface, no scroll'","'#open from small anchor in top left of viewport, fixed position, scrollX/scrollY 5px/10px'","'#open from small anchor in top left of viewport, absolute position, scrollX/scrollY 5px/10px'","'#open from anchor in top left of viewport, absolute position, hoisted menu surface, scrollX/scrollY '",'5px/10px',"'#open from anchor in top left of viewport, absolute position, hoisted menu surface, horizontally centered on viewport '",setIsHorizontallyCenteredOnViewport,"'#open in absolute position at x/y=100, absolute position, hoisted menu surface, scrollX/scrollY '","'#open in absolute position at x/y=100, fixed position, hoisted menu surface, scrollY/scrollY 5px/10px'","'#open in absolute position at x/y=INF, fixed position, hoisted menu surface, scrollY/scrollY 5px/10px'",POSITIVE_INFINITY,"'#open from small anchor in left bottom of viewport, default (TOP_START) anchor corner, RTL'",smallBottomLeft,'left bottom',"'#open from small anchor in left bottom of viewport, TOP_END anchor corner, RTL'","'#open from small anchor in left bottom of viewport, BOTTOM_START anchor corner, RTL'","'#open from small anchor in left bottom of viewport, BOTTOM_END anchor corner, RTL'",'#open tall surface restricts max height if set',smallAboveMiddleLeft,700,"'#open tall surface from small anchor in left above middle of viewport, BOTTOM_START anchor corner, LTR'",'548px',"'#open tall surface from small anchor in left below middle of viewport, BOTTOM_START anchor corner, LTR'",smallBelowMiddleLeft,'568px',"'#open from wide anchor center of viewport, TOP_START anchor corner, LTR'",wideCenter,'center top',"'#open from wide anchor center of viewport, TOP_END anchor corner, LTR'","'#open from wide anchor center of viewport, BOTTOM_START anchor corner, RTL'","'#open from anchor center of viewport with large menu surface height, '",'BOTTOM_START anchor corner',"'#open from wide anchor center of viewport, BOTTOM_END anchor corner, RTL'","'#open from wide anchor top left of viewport, TOP_END anchor corner, RTL'",wideTopLeft,'#open anchors the surface to the bottom left in LTR when not close to the bottom edge with margin','#open anchors the surface to the bottom left in LTR when close to the bottom edge with margin','#open anchors the surface to the bottom left in RTL when close to the bottom & right edge with margin','#open anchors the surface to the top right in RTL when close to the top & right edge with margin',smallTopRight,'#open anchors hoisted surface to top right in RTL when near top right edge w/ margin',47,'#open anchors hoisted surface to bottom left in RTL when near bottom left edge w/ margin','#open anchors fixed-position surface to top right in RTL when near top right edge w/ margin','#open anchors absolutely-position surface to top right in RTL when near top right edge w/ margin','Should return the correct fixed position status',isFixed,"'#open from close to bottom of viewport, menu should autoposition to open upwards'",closeToBottom,'#open Surface is positioned from right side in LTR when corner is flipped horizontally.',flipCornerHorizontally,'#open Surface is positioned from right side in LTR when corner is flipped horizontally and anchor is wider than menu.','#open Surface is positioned from left side in LTR when corner is flipped horizontally and space is not available on the left side.','#open Surface is positioned from right side in LTR when corner is flipped horizontally and space is not available on the right side.','#open Surface is positioned from left side in RTL when corner is flipped horizontally.','#open Surface is positioned from left side in RTL when corner is flipped horizontally and space is not available on the left side.','#open Surface is positioned from right side in RTL when corner is flipped horizontally and space is not available on the right side.',"'#open adds the open-below class to the menu surface, from small anchor in top of viewport'",IS_OPEN_BELOW,"'#open does not add the open-below class to the menu surface, from small anchor in bottom of viewport'",'#close adds the animation class to start an animation',WithIsSurfaceOpen,isSurfaceOpen,ANIMATING_CLOSED,'#close does not add animation class if quickOpen is set to true','#close removes the open class from the menu surface','#close removes the animation class at the end of the animation',TRANSITION_CLOSE_DURATION,'#close emits the close event at the end of the animation','#close emits the closing event immediately','#close emits the close event when quickOpen is true','#close does not emit event when already closed','#close causes restoreFocus to be called if the menu-surface has focus',TOUCH_EVENT_WAIT_MS,'#close causes restoreFocus to be called if an element within the menu-surface has focus','#close does not cause restoreFocus to be called if the active element is not within the menu-surface','#isOpen returns true when the menu surface is open','#isOpen returns false when the menu surface is closed','#isOpen returns true when the menu surface is initiated with the open class present','#isOpen returns false when the menu surface is initiated without the open class present','#handleKeydown with Escape key closes the menu surface and sends close event',"'#handleKeydown on any other key, do not prevent default on the event'",'event.preventDefault','#handleBodyClick event closes the menu surface',handleBodyClick,'on menu surface click does not emit close','should cancel animation after destroy','destroy causes the menu-surface and list to be destroyed',menuSurface,setupTestWithFakes,'destroy does not throw an error if the list is not instantiated','.mdc-deprecated-list',MDCMenu,'attachTo initializes and returns a MDCMenu instance','initialize registers event listener for list item action',handleItemAction,'initialize registers event listener for keydown','destroy deregisters event listener for click','destroy deregisters event listener for keydown','get/set open','wrapFocus proxies to MDCList#wrapFocus property','typeaheadInProgress proxies to MDCList#typeaheadInProgress property','typeaheadMatchItem proxies to MDCList#typeaheadMatchItem method','layout proxies to MDCList#layout method','setAnchorCorner proxies to the MDCMenuSurface#setAnchorCorner method','setAnchorMargin','setSelectedIndex calls foundation method setSelectedIndex with given index.',setupTestWithMock,getFixtureWithMultipleSelectionGroups,'setEnabled calls foundation method setEnabled with given index and disabled state.','items returns all menu items',"'[role=""menuitem""]'",'items returns nothing if list is not defined','getOptionByIndex',getOptionByIndex,'getOptionByIndex returns null if index is > list length','Another Item','setFixedPosition','setAnchorElement',setAnchorElement,'setAbsolutePosition','menu surface opened event causes list root element to be focused',OPENED_EVENT,'mdc-deprecated-list','handleMenuSurfaceOpened calls foundation\'s handleMenuSurfaceOpened method on menu surface opened event',handleMenuSurfaceOpened,'list item enter keydown emits a menu action event',fakeEnterKeyEvent,getModifierState,MDCMenuFoundation,SELECTED_EVENT,'open=true does not throw an error if there are no items in the list to focus','#setDefaultFocusState Calls foundation\'s setDefaultFocusState method',setDefaultFocusState,DefaultFocusState,FIRST_ITEM,'adapter#addClassToElementAtIndex adds a class to the element at the index provided',firstItem,addClassToElementAtIndex,'adapter#removeClassFromElementAtIndex adds a class to the element at the index provided',removeClassFromElementAtIndex,'adapter#addAttributeToElementAtIndex adds a class to the element at the index provided',addAttributeToElementAtIndex,'adapter#removeAttributeFromElementAtIndex adds a class to the element at the index provided',removeAttributeFromElementAtIndex,'adapter#elementContainsClass returns true if the class exists on the element',containsFoo,elementContainsClass,'adapter#elementContainsClass returns false if the class does not exist on the element','adapter#closeSurface proxies to menuSurface#close',closeSurface,'adapter#getElementIndex returns the index value of an element in the list',indexValue,getElementIndex,'adapter#getElementIndex returns -1 if the element does not exist in the list','adapter#notifySelected emits an event for a selected element',notifySelected,'adapter#getMenuItemCount returns the menu item count',getMenuItemCount,'adapter#focusItemAtIndex focuses the menu item at given index','adapter#focusListRoot focuses the list root element',focusListRoot,'adapter#isSelectableItemAtIndex returns true if the menu item is within the','.mdc-menu__selection-group element',isSelectableItemAtIndex,'adapter#isSelectableItemAtIndex returns false if the menu item is not within the','adapter#getSelectedSiblingOfItemAtIndex returns the index of the selected item within the same','selection group',siblingIndex,getSelectedSiblingOfItemAtIndex,'addClassToElementAtIndex','removeClassFromElementAtIndex','addAttributeToElementAtIndex','removeAttributeFromElementAtIndex','getAttributeFromElementAtIndex','elementContainsClass','closeSurface','getElementIndex','getSelectedSiblingOfItemAtIndex','isSelectableItemAtIndex','notifySelected','getMenuItemCount','focusListRoot',menuNumbers,'destroy does not throw error','destroy does not throw error if destroyed immediately after keydown','My Element',listClasses,'destroy closes surface',"'handleKeydown does nothing if key is not space, enter, or tab'",'N','handleKeydown tab key causes the menu to close','Tab','handleItemAction item action closes the menu','handleItemAction item action emits selected event','handleKeydown space/enter key inside an input does not prevent default on the event','handleItemAction item action event inside of a selection group ','with additional markup does not cause loop',MENU_SELECTION_GROUP,'handleItemAction item action event inside of a selection group with another element selected',MENU_SELECTED_LIST_ITEM,'handleItemAction item action event inside of a selection group with no element selected','handleItemAction item action event inside of a child element of a list item in a selection group with no ','element selected','handleItemAction item action event inside of a child element of a selection group (but not a list item) with ','no element selected','handleItemAction adds class to the correct child element of a selection group when menu has mutated','handleMenuSurfaceOpened menu focuses the list root element by default on menu surface opened','handleMenuSurfaceOpened menu focuses the first menu item when DefaultFocusState is set to FIRST_ITEM on menu ','surface opened','handleMenuSurfaceOpened focuses the list root element when DefaultFocusState is set to LIST_ROOT',LIST_ROOT,'handleMenuSurfaceOpened focuses the last item when DefaultFocusState is set to LAST_ITEM',LAST_ITEM,'handleMenuSurfaceOpened does not focus anything when DefaultFocusState is set to NONE','#getSelectedIndex returns correct index',listItemEl,'setSelectedIndex calls addClass and addAttribute only',ARIA_CHECKED_ATTR,"'setSelectedIndex remove class and attribute, and adds class and attribute to newly selected item'",'setSelectedIndex throws error if index is not in range','MDCMenuFoundation: No list item at specified index.','setEnabled calls addClass and addAttribute',listCssClasses,ARIA_DISABLED_ATTR,'setEnabled calls removeClass and removeAttribute','Item action event causes the menu to close','closes the menu (with indication to not restore focus) on item action based on DOM attribute',getAttributeFromElementAtIndex,SKIP_RESTORE_FOCUS,'attachTo returns an MDCNotchedOutline instance',MDCNotchedOutline,'adapter#removeClass removes a class to the root element',setNotchWidthProperty,removeNotchWidthProperty,'.mdc-notched-outline__notch','#adapter.setNotchWidthProperty sets the width property on the notched element',MDCNotchedOutlineFoundation,'setNotchWidthProperty','removeNotchWidthProperty','#notch adds the notched class and sets the width of the element',notchWidth,notch,NOTCH_ELEMENT_PADDING,OUTLINE_NOTCHED,'#closeNotch removes the notch selector and removes the width property',closeNotch,'attachTo initializes and returns a MDCRadio instance',MDCRadio,'get/set checked updates the checked value of the native radio element',NATIVE_CONTROL_SELECTOR,'get/set disabled updates the disabled value of the native radio element','get/set value updates the value of the native radio element','#adapter.setNativeControlDisabled sets the native control element\'s disabled property to true','#adapter.setNativeControlDisabled sets the native control element\'s disabled property to false',MDCRadioFoundation,m,'#setDisabled calls adapter.setNativeControlDisabled','#setDisabled adds mdc-radio--disabled to the radio element when set to true','#setDisabled removes mdc-radio--disabled from the radio element when set to false','attachTo initializes and returns a ripple','attachTo makes ripple unbounded when given as an option',isUnbounded,unbounded,'attachTo does not override unbounded data attr when omitted','attachTo overrides unbounded data attr when explicitly specified','createAdapter() returns the same adapter used by default for the ripple',createAdapter,'activate() delegates to the foundation','deactivate() delegates to the foundation','layout() delegates to the foundation','adapter#browserSupportsCssVars delegates to util',browserSupportsCssVars,'adapter#isUnbounded delegates to unbounded getter','adapter#isSurfaceDisabled delegates to component\'s disabled getter',isSurfaceDisabled,'adapter#addClass adds a class to the root','adapter#removeClass removes a class from the root','adapter#containsEventTarget returns true if the passed element is a descendant of the root element',notChild,containsEventTarget,'adapter#registerInteractionHandler proxies to addEventListener on the root element','interactionHandler','adapter#deregisterInteractionHandler proxies to removeEventListener on the root element','adapter#registerDocumentInteractionHandler proxies to addEventListener on the documentElement',registerDocumentInteractionHandler,'adapter#deregisterDocumentInteractionHandler proxies to removeEventListener on the documentElement',deregisterDocumentInteractionHandler,'adapter#registerResizeHandler uses the handler as a window resize listener','resizeHandler',registerResizeHandler,'adapter#deregisterResizeHandler unlistens the handler for window resize',deregisterResizeHandler,'adapter#updateCssVariable calls setProperty on root style with varName and value',updateCssVariable,'--foo','adapter#computeBoundingRect calls getBoundingClientRect() on root',computeBoundingRect,"'adapter#getWindowPageOffset returns page{X,Y}Offset as {x,y} respectively'",getWindowPageOffset,'cssClasses returns constants.cssClasses',MDCRippleFoundation,'strings returns constants.strings','numbers returns constants.numbers','browserSupportsCssVars','isUnbounded','isSurfaceActive','isSurfaceDisabled','containsEventTarget','registerDocumentInteractionHandler','deregisterDocumentInteractionHandler','registerResizeHandler','deregisterResizeHandler','updateCssVariable','computeBoundingRect','getWindowPageOffset',"`#init calls adapter.addClass(""${","}"")`",'#init adds unbounded class when adapter indicates unbounded',UNBOUNDED,'#init does not add unbounded class when adapter does not indicate unbounded (default)','#init gracefully exits when css variables are not supported','#init registers events for interactions on root element','#init registers a resize handler for unbounded ripple','#init does not register a resize handler for bounded ripple','#init only registers focus/blur if CSS custom properties not supported','#destroy unregisters all bound interaction handlers',handlers,'#destroy unregisters the resize handler for unbounded ripple',resizeHandler,'#destroy does not unregister resize handler for bounded ripple',`#destroy removes ${,} if activation is interrupted`,'activationTimer',FG_DEACTIVATION,} if deactivation is interrupted`,'fgDeactivationRemovalTimer','#destroy removes all CSS variables',cssVars,s,'VAR',cssVar,'#destroy clears the timer if activation is interrupted','#destroy when CSS custom properties are not supported',`#layout sets ${,VAR_FG_SIZE,} to the circumscribing circle's diameter`,maxSize,initialSize,INITIAL_ORIGIN_SCALE,`#layout always sets ${,} to even number`,isEvenNumber,'is even number',VAR_FG_SCALE,} based on the difference between the `,'proportion of the max radius and the initial size',surfaceDiameter,sqrt,pow,maxRadius,PADDING,fgScale,`#layout centers via ${,VAR_LEFT,} and ${,VAR_TOP,} when unbounded`,round,'#setUnbounded adds unbounded class when unbounded is truthy',setUnbounded,'#setUnbounded removes unbounded class when unbounded is falsy','#supportsCssVariables returns true when CSS.supports() returns true for css vars',createMockWindowForCssVariables,CSS,supports,'--css-vars',/\(--css-vars:/,appendedNodes,'#supportsCssVariables returns true when feature-detecting its way around Safari < 10','#00000000','#supportsCssVariables returns true when getComputedStyle returns null (e.g. Firefox hidden iframes)','#supportsCssVariables returns false when CSS.supports() returns false for css vars','.supports','#supportsCssVariables returns false when CSS.supports is not a function','nope','#supportsCssVariables returns false when CSS is not an object','#getNormalizedEventCoords maps event coords into the relative coordinates of the given rect',ev,'mousedown',pageX,pageY,pageOffset,clientRect,getNormalizedEventCoords,'#getNormalizedEventCoords works with touchstart events',changedTouches,'emits no [dir=rtl] selectors when `include` is disabled (false)',filePath,'disable-include-rtl.test.css',fs,readFileSync,'utf8',trim,'[dir=rtl]','should not add [dir=rtl] after pseudo element','.test-pseudo-element::before[dir=rtl]','.test-pseudo-element[dir=rtl]::before','emits custom properties using theme.property()','theme.test.css',"`.test {
  /* @noflip */
  /*rtl:ignore*/
  margin-left: 0;
  /* @noflip */
  /*rtl:ignore*/
  margin-right: 8px;
  /* @alternate */
  /* @noflip */
  /*rtl:ignore*/
  margin-right: var(--margin-prop, 8px);
}
[dir=rtl] .test, .test[dir=rtl] {
  /*rtl:begin:ignore*/
  /* @noflip */
  /*rtl:ignore*/
  margin-left: 8px;
  /* @alternate */
  /* @noflip */
  /*rtl:ignore*/
  margin-left: var(--margin-prop, 8px);
  /* @noflip */
  /*rtl:ignore*/
  margin-right: 0;
  /*rtl:end:ignore*/
}`",'attachTo return an MDCSegmentedButtonSegment instance',MDCSegmentedButtonSegment,getFixtureMultiSelectWithLabel,'handle selected',CLICK,'Adapter','#isSingleSelect returns value of isSingleSelect',setIsSingleSelect,isSingleSelect,'#getAttr returns value of attribute of root element',testStrings,ATTRIBUTE,booleans,FALSE,TRUE,'#setAttr sets the value of attribute of root element','#addClass adds class to root element',CLASS,'#removeClass removes class from root element','#hasClass returns whether root element has class','#isSelected returns whether segment is selected','#setSelected sets segment to be selected','#setUnselected sets segment to be not selected',setUnselected,'#getSegmentId returns segment\'s segmentId if it has one',DATA_SEGMENT_ID,SEGMENT_ID,getSegmentId,MDCSegmentedButtonSegmentFoundation,'isSingleSelect','notifySelectedChange',singleSelect,cssClass,setupSelectedTest,setupUnselectedTest,'#isSelected returns true if segment is selected','#isSelected returns false if segment is unselected','#getSegmentId returns segment id','segment0','Selection toggling','#setSelected adds the `selected` css class and if singleSelect then sets aria-checked to true','#setSelected adds the `selected` css class and if not singleSelect then sets aria-pressed to true','#setUnselected removes the `selected` css class and if singleSelect then sets aria-checked to false','#setUnselected removes the `selected` css class and if not singleSelect then sets aria-pressed to false','Click handling',"'#handleClick if singleSelect and previously unselected: selects segment, sets aria-checked to true, and notifies parent'",notifySelectedChange,'#handleClick if singleSelect and previously selected: changes nothing and notifies parent',"'#handleClick if not singleSelect and previously unselected: selects segment, sets aria-pressed to true, and notifies parent'","'#handleClick if not singleSelect and previously selected: unselects segment, sets aria-pressed to false, and notifies parent'",'#attachTo returns an MDCSegmentedButton instance',MDCSegmentedButton,getFixtureMultiWithLabel,'#constructor instantiates child segment components',segments,'#destroy cleans up child segment components','handle click','handle change',CHANGE,'#initialSyncWithDOM sets children\'s \'index\' and \'isSingleSelect\' values',SINGLE_SELECT,segmentAdapter,mostRecent,'#hasClass returns whether root element has test class',testCssClasses,TEST_CLASS,'#getSegments returns child segments as readonly SegmentDetails array',getSegments,hasOwnProperty,'segmentId','#selectSegment selects identified child segment if found',testSelectors,SEGMENT,testIndices,testSegmentIds,SELECTED_SEGMENT_ID,setAllUnselected,selectSegment,'#selectSegment selects no child segment if none is identified',NOT_PRESENT,NOT_PRESENT_SEGMENT_ID,'#unselectSegment unselectes identified child segment if found',UNSELECTED,UNSELECTED_SEGMENT_ID,setAllSelected,unselectSegment,'#unselectSegment unselects no child segment if none is identified','#getSelectedSegments returns selected child segments as a SegmentDetail list',selectedSegments,getSelectedSegments,'#selectSegment selects identified child segment',selectedSegment,'#unselectSegment unselects identified child segment',unselectedSegment,'#isSegmentSelected returns whether identified child segment is selected',isSegmentSelected,MDCSegmentedButtonFoundation,'getSegments','selectSegment','unselectSegment',setupSingleSelectTest,setupMultiSelectTest,setupSegmentTest,'#unselectSegment does not emit an event',segmentId,'#getSelectedSegments returns selected segments','#selectSegment does not emit an event','Single selection','#isSingleSelect returns true if single select','#handleSelected unselects segment if single select and another segment was selected',newSelectedSegment,newUnselectedSegment,handleSelected,'Multi selection','#isSingleSelect returns false if multi select','#handleSelected changes nothing if multi select and segment is selected or unselected','Segment selections by index','#isSegmentSelected returns true if segment at index is selected','#isSegmentSelected returns false if segment at index is not selected','#isSegmentSelected returns false if no segment is at index','#selectSegment selects segment at index if it is unselected','#unselectSegment unselects segment at index if it is selected','Segment selections by segmentId','#isSegmentSelected returns true if segment with segmentId is selected','#isSegmentSelected returns false if segment with segmentId is not selected','#isSegmentSelected returns false if no segment has segmentId','#selectSegment selects segment with segmentId if it is unselected','#unselectSegment unselects segment with segmentId if it is selected','attachTo returns an MDCSelectHelperText instance',MDCSelectHelperText,'#adapter.hasClass returns whether or not the element contains a certain class','#adapter.get/setAttr retrieves/adds a given attribute to the element','#adapter.removeAttr removes a given attribute from the element',removeAttr,'#adapter.setContent sets the text content of the element',setContent,MDCSelectHelperTextFoundation,'removeAttr','setContent','#setContent sets the content of the helper text element','#setValidationMsgPersistent toggles the persistent validation class',setValidationMsgPersistent,HELPER_TEXT_VALIDATION_MSG_PERSISTENT,'#getIsValidationMsgPersistent returns true if the persistent validation ','class is set',getIsValidationMsgPersistent,'#getIsValidationMsgPersistent returns false if the persistent validation ','class is not set','#setValidation toggles the validation class',setValidation,HELPER_TEXT_VALIDATION_MSG,'#getIsValidation returns true if the validation class is set',getIsValidation,'#getIsValidation returns false if the validation class is not set',"'#setValidity adds role=""alert"" to helper text if input is invalid and'",'helper text is being used as a validation message',inputIsValid,setValidity,"'#setValidity removes role=""alert"" if input is valid'","'#setValidity removes role=""alert"" if input is valid and validation'",' msg is persistent','#setValidity does not change helper text visibility if it is',' not validation message',"'#setValidity does not set aria-hidden=""true"" on helper text by default'",'#setValidity does not set aria-hidden on helper text when it is persistent validation','aria-hidden','#setValidity does not set aria-hidden if input is invalid and helper text is validation message','#setValidity sets aria-hidden=true if input is valid and helper text is validation message','#isVisible returns true if aria-hidden is false or unset','#isVisible returns false if aria-hidden is true','attachTo returns an MDCSelectIcon instance',MDCSelectIcon,'#adapter.getAttr returns the value of a given attribute on the element',expectedAttr,expectedValue,'#adapter.setAttr adds a given attribute to the element','#adapter.registerInteractionHandler adds event listener for a given event to the element','keydown handler','#adapter.deregisterInteractionHandler removes event listener for a given event from the element','#adapter.notifyIconAction emits ',MDCSelectIconFoundation,ICON_EVENT,notifyIconAction,'notifyIconAction','#setDisabled sets icon tabindex to -1 and removes role when set to true if icon initially had a tabindex','#setDisabled does not change icon tabindex or role when set to true if icon initially had no tabindex','#setDisabled restores icon tabindex and role when set to false if icon initially had a tabindex',expectedTabIndex,ICON_ROLE,'#setDisabled does not change icon tabindex or role when set to false if icon initially had no tabindex','#setAriaLabel updates the aria-label','Test label',setAriaLabel,'#setContent updates the text content','on click notifies custom icon event',_evtType,MDCSelect,'#get/setSelectedIndex',hasMockFoundation,hasMockMenu,hasOutline,hasLabel,'#get/setSelectedIndex 2x removes previously selected element','.mdc-deprecated-list-item--selected','#get/set disabled',hiddenInput,'#get/set required true',REQUIRED,'aria-required','#get/set required false','#get value','orange','#set value calls foundation.setValue','#setValue calls foundation.setValue with params','#layout calls foundation.layout','#layoutOptions calls foundation.layoutOptions and menu.layout',mockMenu,'#layoutOptions refreshes menu options cache','menuItemValues','#set useDefaultValidation forwards to foundation',useDefaultValidation,setUseDefaultValidation,'#get valid forwards to foundation',valid,'#set valid forwards to foundation',setValid,'#get selectedIndex calls foundation.getSelectedIndex','#set selectedIndex calls foundation.setSelectedIndex','#setSelectedIndex calls foundation.setSelectedIndex with params','#set disabled calls foundation.setDisabled','#set leadingIconAriaLabel calls foundation.setLeadingIconAriaLabel',leadingIconAriaLabel,setLeadingIconAriaLabel,'#set leadingIconContent calls foundation.setLeadingIconAriaLabel',leadingIconContent,'hello_world',setLeadingIconContent,'#set helperTextContent calls foundation.setHelperTextContent',setHelperTextContent,helperTextContent,'#initialSyncWithDOM sets the selected index and hidden input value',' if an option has the selected class',createFixture,"`
        <div class=""mdc-select"">
          <input type=""hidden"" name=""test-input"">
          <div class=""mdc-select__anchor"">
            <span class=""mdc-select__ripple""></span>
            <i class=""mdc-select__icon material-icons"">code</i>
            <span class=""mdc-select__selected-text""></span>
            <span class=""mdc-select__dropdown-icon"">
              <svg
                  width=""10px""
                  height=""5px""
                  viewBox=""7 10 10 5"" focusable=""false"">
                <polygon
                    class=""mdc-select__dropdown-icon-inactive""
                    stroke=""none""
                    fill-rule=""evenodd""
                    points=""7 10 12 15 17 10"">
                </polygon>
                <polygon
                    class=""mdc-select__dropdown-icon-active""
                    stroke=""none""
                    fill-rule=""evenodd""
                    points=""7 15 12 10 17 15"">
                </polygon>
              </svg>
            </span>
            <span class=""mdc-floating-label"">Pick a Food Group</span>
            <span class=""mdc-line-ripple""></span>
          </div>

          <div class=""mdc-select__menu mdc-menu mdc-menu-surface"">
            <ul class=""mdc-deprecated-list"">
              <li class=""mdc-deprecated-list-item"" data-value=""""></li>
              <li class=""mdc-deprecated-list-item mdc-deprecated-list-item--selected"" data-value=""orange"">
                <span class=""mdc-deprecated-list-tem__text"">Orange</span>
              </li>
              <li class=""mdc-deprecated-list-item"" data-value=""apple"">
                <span class=""mdc-deprecated-list-tem__text"">Apple</span>
              </li>
            </ul>
          </div>
        </div>
      `",'#initialSyncWithDOM sets value if hidden input has value',"`
      <div class=""mdc-select mdc-select--with-leading-icon"">
        <input type=""hidden"" name=""test-input"" value=""orange"">
        <div class=""mdc-select__anchor"">
          <span class=""mdc-select__ripple""></span>
          <i class=""mdc-select__icon material-icons"">code</i>
          <span class=""mdc-select__selected-text""></span>
          <span class=""mdc-select__dropdown-icon"">
            <svg
                width=""10px""
                height=""5px""
                viewBox=""7 10 10 5"" focusable=""false"">
              <polygon
                  class=""mdc-select__dropdown-icon-inactive""
                  stroke=""none""
                  fill-rule=""evenodd""
                  points=""7 10 12 15 17 10"">
              </polygon>
              <polygon
                  class=""mdc-select__dropdown-icon-active""
                  stroke=""none""
                  fill-rule=""evenodd""
                  points=""7 15 12 10 17 15"">
              </polygon>
            </svg>
          </span>
          <span class=""mdc-floating-label"">Pick a Food Group</span>
          <span class=""mdc-line-ripple""></span>
        </div>

        <div class=""mdc-select__menu mdc-menu mdc-menu-surface"">
          <ul class=""mdc-deprecated-list"">
            <li class=""mdc-deprecated-list-item"" data-value=""""></li>
            <li class=""mdc-deprecated-list-item"" data-value=""orange"">
              <span class=""mdc-deprecated-list-item__text"">Orange</span>
            </li>
            <li class=""mdc-deprecated-list-item"" data-value=""apple"">
              <span class=""mdc-deprecated-list-item__text"">Apple</span>
            </li>
          </ul>
        </div>
      </div>`",'#initialSyncWithDOM sets the selected index if empty option has the selected class',"`
        <div class=""mdc-select"">
          <div class=""mdc-select__anchor"">
            <span class=""mdc-select__ripple""></span>
            <i class=""mdc-select__icon material-icons"">code</i>
            <span class=""mdc-select__selected-text""></span>
            <span class=""mdc-select__dropdown-icon"">
              <svg
                  width=""10px""
                  height=""5px""
                  viewBox=""7 10 10 5"" focusable=""false"">
                <polygon
                    class=""mdc-select__dropdown-icon-inactive""
                    stroke=""none""
                    fill-rule=""evenodd""
                    points=""7 10 12 15 17 10"">
                </polygon>
                <polygon
                    class=""mdc-select__dropdown-icon-active""
                    stroke=""none""
                    fill-rule=""evenodd""
                    points=""7 15 12 10 17 15"">
                </polygon>
              </svg>
            </span>
            <span class=""mdc-floating-label"">Pick a Food Group</span>
            <span class=""mdc-line-ripple""></span>
          </div>

          <div class=""mdc-select__menu mdc-menu mdc-menu-surface"">
            <ul class=""mdc-deprecated-list"">
              <li class=""mdc-deprecated-list-item mdc-deprecated-list-item--selected"" data-value=""""></li>
              <li class=""mdc-deprecated-list-item"" data-value=""orange"">
                Orange
              </li>
              <li class=""mdc-deprecated-list-item"" data-value=""apple"">
                Apple
              </li>
            </ul>
          </div>
        </div>
      `",'#initialSyncWithDOM disables the select if the disabled class is found',"`
    <div class=""mdc-select mdc-select--disabled"">
      <div class=""mdc-select__anchor"">
        <span class=""mdc-select__ripple""></span>
        <i class=""mdc-select__icon material-icons"">code</i>
        <span class=""mdc-select__selected-text""></span>
        <span class=""mdc-select__dropdown-icon"">
          <svg
              width=""10px""
              height=""5px""
              viewBox=""7 10 10 5"" focusable=""false"">
            <polygon
                class=""mdc-select__dropdown-icon-inactive""
                stroke=""none""
                fill-rule=""evenodd""
                points=""7 10 12 15 17 10"">
            </polygon>
            <polygon
                class=""mdc-select__dropdown-icon-active""
                stroke=""none""
                fill-rule=""evenodd""
                points=""7 15 12 10 17 15"">
            </polygon>
          </svg>
        </span>
        <span class=""mdc-floating-label"">Pick a Food Group</span>
        <span class=""mdc-line-ripple""></span>
      </div>

      <div class=""mdc-select__menu mdc-menu mdc-menu-surface"">
        <ul class=""mdc-deprecated-list"">
          <li class=""mdc-deprecated-list-item mdc-deprecated-list-item--selected"" data-value=""""></li>
          <li class=""mdc-deprecated-list-item"" data-value=""orange"">
            <span class=""mdc-deprecated-list-item__text"">Orange</span>
          </li>
          <li class=""mdc-deprecated-list-item"" data-value=""apple"">
            <span class=""mdc-deprecated-list-item__text"">Apple</span>
          </li>
        </ul>
      </div>
    </div>
  `",'instantiates ripple',SELECT_ANCHOR_SELECTOR,'handles ripple focus properly',BG_FOCUSED,'#destroy cleans up the outline if present',outline,'adapter#hasClass returns true if a class exists on the root element','adapter#floatLabel does not throw error if label does not exist',"`
    <div class=""mdc-select"">
      <div class=""mdc-select__anchor"">
        <span class=""mdc-select__ripple""></span>
        <i class=""mdc-select__icon material-icons"">code</i>
        <span class=""mdc-select__selected-text""></span>
        <span class=""mdc-select__dropdown-icon"">
          <svg
              width=""10px""
              height=""5px""
              viewBox=""7 10 10 5"" focusable=""false"">
            <polygon
                class=""mdc-select__dropdown-icon-inactive""
                stroke=""none""
                fill-rule=""evenodd""
                points=""7 10 12 15 17 10"">
            </polygon>
            <polygon
                class=""mdc-select__dropdown-icon-active""
                stroke=""none""
                fill-rule=""evenodd""
                points=""7 15 12 10 17 15"">
            </polygon>
          </svg>
        </span>
        <span class=""mdc-line-ripple""></span>
      </div>

      <div class=""mdc-select__menu mdc-menu mdc-menu-surface"">
        <ul class=""mdc-deprecated-list"">
          <li class=""mdc-deprecated-list-item mdc-deprecated-list-item--selected"" data-value=""""></li>
          <li class=""mdc-deprecated-list-item"" data-value=""orange"">
            <span class=""mdc-deprecated-list-item__text"">Orange</span>
          </li>
          <li class=""mdc-deprecated-list-item"" data-value=""apple"">
            <span class=""mdc-deprecated-list-item__text"">Apple</span>
          </li>
        </ul>
      </div>
    </div>
  `",floatLabel,'adapter#activateBottomLine and adapter.deactivateBottomLine ','does not throw error if bottomLine does not exist',"`
    <div class=""mdc-select"">
      <div class=""mdc-select__anchor"">
        <span class=""mdc-select__ripple""></span>
        <i class=""mdc-select__icon material-icons"">code</i>
        <span class=""mdc-select__selected-text""></span>
        <span class=""mdc-select__dropdown-icon"">
          <svg
              width=""10px""
              height=""5px""
              viewBox=""7 10 10 5"" focusable=""false"">
            <polygon
                class=""mdc-select__dropdown-icon-inactive""
                stroke=""none""
                fill-rule=""evenodd""
                points=""7 10 12 15 17 10"">
            </polygon>
            <polygon
                class=""mdc-select__dropdown-icon-active""
                stroke=""none""
                fill-rule=""evenodd""
                points=""7 15 12 10 17 15"">
            </polygon>
          </svg>
        </span>
        <span class=""mdc-floating-label"">Pick a Food Group</span>
      </div>

      <div class=""mdc-select__menu mdc-menu mdc-menu-surface"">
        <ul class=""mdc-deprecated-list"">
          <li class=""mdc-deprecated-list-item mdc-deprecated-list-item--selected"" data-value=""""></li>
          <li class=""mdc-deprecated-list-item"" data-value=""orange"">
            <span class=""mdc-deprecated-list-item__text"">Orange</span>
          </li>
          <li class=""mdc-deprecated-list-item"" data-value=""apple"">
            <span class=""mdc-deprecated-list-item__text"">Apple</span>
          </li>
        </ul>
      </div>
    </div>
  `",activateBottomLine,deactivateBottomLine,'adapter#floatLabel adds a class to the label','adapter#activateBottomLine adds active class to the bottom line',bottomLine,'adapter#deactivateBottomLine removes active class from the bottom line','adapter#notchOutline proxies labelWidth to the outline',notchOutline,LABEL_WIDTH,'adapter#notchOutline does not proxy values to the outline if it does not exist','adapter#notifyChange updates hidden input','getDefaultFoundation','adapter#closeOutline closes the outline if there is an outline',closeOutline,'adapter#closeOutline does nothing if there is no outline','adapter#getLabelWidth returns the width of the label',getLabelWidth,'adapter#getLabelWidth returns 0 if the label does not exist','adapter#focusMenuItemAtIndex',menuItem,focusMenuItemAtIndex,'adapter#setSelectedText sets the select text content correctly',selectedText,textToSet,setSelectedText,'adapter#isSelectAnchorFocused',tabIndex,isSelectAnchorFocused,'adapter#getSelectAnchorAttr gets the attribute content correctly',getSelectAnchorAttr,'adapter#setSelectAnchorAttr sets the attribute content correctly',setSelectAnchorAttr,'adapter#openMenu causes the menu to open','adapter#closeMenu causes the menu to close',closeMenu,'adapter#getAnchorElement',getAnchorElement,'adapter#setMenuAnchorElement',setMenuAnchorElement,'adapter#setMenuAnchorCorner',setMenuAnchorCorner,'adapter#setMenuWrapFocus',setMenuWrapFocus,'adapter#getMenuItemCount returns the correct number of menu items','adapter#getMenuItemValues returns the correct menu item values',getMenuItemValues,'adapter#getMenuItemAttr returns the menu item attribute',getMenuItemAttr,VALUE_ATTR,'adapter#isTypeaheadInProgress queries menu state','adapter#typeaheadMatchItem calls menu method','focus event triggers foundation.handleFocus()',setupWithMockFoundation,'blur event triggers foundation.handleBlur()','#destroy removes the focus handler','#destroy removes the blur handler','#destroy removes the click handler','#destroy calls menu#destroy','#destroy removes the click listener','handleClick','click on the anchor calls foundation.handleClick()','click on the anchor focuses on the anchor element','menu surface opened event causes the first element (if no element is selected) to be focused','menu surface opened event handler calls Foundation#handleMenuOpened',handleMenuOpened,'menu surface opened event causes selected element to be focused','keydown event is added to select anchor when initialized','keydown event is removed from select anchor when destroyed','menu surface selected event causes the select to update',evtType,'CustomEvent',initCustomEvent,handleMenuItemAction,'menu surface closed event sets aria-expanded to false',CLOSING_EVENT,handleMenuClosing,'#constructor instantiates a leading icon if an icon element is present',WITH_LEADING_ICON,'#constructor instantiates the helper text if present',hasHelperText,helperText,FakeHelperText,'#constructor does not instantiate the helper text if the aria-controls id does not match an element',containerDiv,getHelperTextFixture,'.mdc-select-helper-text','hello-world','.mdc-select','#destroy destroys the helper text if it exists',MDCSelectFoundation,'activateBottomLine','deactivateBottomLine','hasLabel','floatLabel','setLabelRequired','getLabelWidth','hasOutline','notchOutline','closeOutline','setSelectedText','isSelectAnchorFocused','getSelectAnchorAttr','setSelectAnchorAttr','removeSelectAnchorAttr','addMenuClass','removeMenuClass','openMenu','closeMenu','getAnchorElement','setMenuAnchorElement','setMenuAnchorCorner','setMenuWrapFocus','focusMenuItemAtIndex','getMenuItemValues','getMenuItemTextAtIndex','isTypeaheadInProgress','typeaheadMatchItem','getSelectedIndex','setSelectedIndex',createMockAdapter,'leadingIcon','setDisabled','setAriaLabel','handleInteraction','helperText','getId','isVisible','setValidationMsgPersistent','setValidation','setValidity',foundationMap,getMenuItemTextAtIndex,'#getDisabled() returns true if disabled',getDisabled,'#getDisabled() returns false if not disabled','#setDisabled(true) calls adapter.addClass','#setDisabled(false) calls adapter.removeClass','#setDisabled sets disabled on leading icon','#setDisabled false adds tabindex 0','#setDisabled true removes tabindex attr',removeSelectAnchorAttr,'#notchOutline updates the width of the outline element',LABEL_SCALE,'#notchOutline does nothing if no outline is present','#notchOutline width is set to 0 if no label is present','#notchOutline(false) closes the outline','#notchOutline does not close the notch if the select is still focused',FOCUSED,'#handleMenuOpened focuses last selected element','#handleMenuClosed sets isMenuOpen to false',handleMenuClosed,isMenuOpen,'#handleMenuClosing set aria-expanded attribute to false','aria-expanded','#handleChange calls adapter.floatLabel(true) when there is a value','#handleChange calls adapter.floatLabel(false) when there is no value and the select is not focused','#handleChange does not call adapter.floatLabel(false) when there is no value if the select is focused','#handleChange does not call adapter.floatLabel() when no label is present','#handleChange calls foundation.notchOutline(true) when there is a value','#handleChange calls foundation.notchOutline(false) when there is no value','#handleChange does not call foundation.notchOutline() when there is no label','#handleChange calls adapter.notifyChange()','#handleFocus calls foundation.layout()','#handleFocus calls adapter.activateBottomLine()','#handleFocus calls adapter.activateBottomLine() if isMenuOpen=true','#handleBlur calls foundation.layout()','#handleBlur calls adapter.deactivateBottomLine()','#handleBlur does not call deactivateBottomLine if isMenuOpen=true','#handleBlur calls helperText.setValidity(true) if menu is not open',hasIcon,'#openMenu opens the menu','#openMenu sets aria-expanded','#openMenu adds activated class',ACTIVATED,'#handleClick closes menu if isMenuOpen=true','#handleClick does nothing if disabled','#handleClick debounces clicks','isMenuOpen',CLICK_DEBOUNCE_TIMEOUT_MS,'#handleClick sets the ripple center if isMenuOpen=false','#handleClick opens the menu if the select is focused and isMenuOpen=false','#handleClick sets the aria-expanded','#handleClick adds activated class if isMenuOpen=false',"'#handleKeydown calls adapter.openMenu if valid keys are pressed, menu is not open and select is focused'","'#handleKeydown does not call adapter.openMenu if Enter/Space key is pressed, and select is not focused'",'#handleKeydown does not call adapter.openMenu if menu is opened','#handleKeydown with alphanumeric characters calls adapter.getTypeaheadNextIndex','#handleKeydown with modifier key + alpha character does not call adapter.getTypeaheadNextIndex',metaKey,'#handleKeydown with spacebar character when typeahead is in progress ','calls adapter.getTypeaheadNextIndex','#handleKeydown sets selected index based on typeahead results','#layout notches outline and floats label if unfocused and value is nonempty','#layout un-notches outline and un-floats label if unfocused and value is empty','#layout notches outline and floats label if select is focused','#layout does not notch outline nor floats label if label does not exist','#layout sets label as required if select is required',setLabelRequired,'#layoutOptions refetches menu item values to cache','#layoutOptions reinitializes selected nonempty value','zero','#layoutOptions reinitializes selected empty value','#setLeadingIconAriaLabel sets the aria-label of the leading icon element','#setLeadingIconContent sets the content of the leading icon element','#setLeadingIconAriaLabel does nothing if the leading icon element is undefined','#setLeadingIconContent does nothing if the leading icon element is undefined','#setHelperTextContent sets the content of the helper text element','#setHelperTextContent does not throw an error if there is no helperText element','#setSelectedIndex','#setValue','#setValue with skipNotify true does not call notifyChange','#setValid true sets aria-describedby if validation helper text is shown',mockId,'foobarbazcool',ARIA_DESCRIBEDBY,'#setValid true sets aria-invalid to false and removes invalid classes','aria-invalid',INVALID,removeMenuClass,MENU_INVALID,'#setValid false sets aria-invalid to true and adds invalid class',addMenuClass,'#setValid false removes aria-describedby if validation helper text is hidden','#isValid returns false if using default validity check and no index is selected','#isValid returns false if using default validity check and first index ','with empty value is selected','<--empty','#isValid returns true if using default validity check and an index is selected that has value','#getUseDefaultValidation returns correct value',getUseDefaultValidation,'#isValid returns false if using custom false validity','#isValid returns true if using custom true validity with unset index','#isValid returns true if using custom true validity with first option ','selected that has empty value','#setRequired adds/removes ${cssClasses.REQUIRED} class name','#setRequired sets aria-required through adapter','#setRequired sets label as required','#getRequired returns true if aria-required is true',getRequired,'#getRequired returns false if aria-required is false','#init calls adapter methods','#init emits no change events when value is preselected','#init computes whether to notch outline exactly once when value is preselected','down event sets the slider value based on x coordinate',createEventFrom,eventType,clientX,thumb,'translateX(50px)',trackActive,'move event after down event sets the slider value based on x coordinate',downEvent,'translateX(0px)','scaleX(0)',moveEvent,'move','pointer','move event after up event doesn\'t update slider value',upEvent,upEl,moveEl,'Event listeners are destroyed when component is destroyed.','pointerdown','pointerup',thumbEvents,'mouseenter','mouseleave','range slider',startThumb,endThumb,initialValueStart,initialValueEnd,setUpTest,isRange,valueStart,MDCSlider,'getBoundingClientRect',DOMRect,'press + move on start thumb updates start thumb value',`translateX(${,}px)`,'press + move on end thumb updates end thumb value','translateX(40px)','down event between min and start thumb updates start thumb value','down event between end thumb and max updates end thumb value','value indicator','single point slider: updates value indicator after value update',isDiscrete,hasTickMarks,step,'70',65.3,'range slider: updates value indicator after value update','90',downEventStart,downEventEnd,92,'tick marks','adds tick mark elements on component initialization',tickMarks,TICK_MARKS_CONTAINER,tickMarkClass,TICK_MARK_ACTIVE,TICK_MARK_INACTIVE,'updates tick mark classes after slider update',55.3,'a11y support',endInput,'updates aria-valuetext on value updates according to ','`valueToAriaValueTextFn`',setValueToAriaValueTextFn,} value`,ARIA_VALUETEXT,90,'90 value','input synchronization: ',startInput,'updates input value attribute and property on value update',setValueStart,INPUT_VALUE,INPUT_MIN,'20',INPUT_MAX,'focuses input on thumb down event','disabled state','updates disabled class when setting disabled state','updates input attrs when setting disabled state',INPUT_DISABLED,'range slider: updates inputs\' attrs when setting disabled state','change/input events','emits `change`/`input` events across an interaction','emit',28,INPUT,Thumb,END,"'#get/setValue, #get/setValueStart'",'single pointer slider: #getValue returns correct value','range slider: #getValue/#getValueStart returns correct values',getValueStart,'single pointer slider: #setValue moves thumb to correct position',`translateX(75px)`,'range slider: #setValueStart/#setValue move thumbs to correct positions',`translateX(5px)`,'resize handling:','adjusts layout calculations on window resize',getEnv,allowRespy,'translateX(24px)','translateX(12px)','translateX(6px)','setting slider position before component initialization',"`
        <div class=""mdc-slider mdc-slider--discrete"">
          <input class=""mdc-slider__input"" type=""hidden"" min=""0"" max=""100""
                        value=""70"" step=""10"">
          <div class=""mdc-slider__track"">
            <div class=""mdc-slider__track--active"">
              <div class=""mdc-slider__track--active_fill""
                   style=""transform:scaleX(70%)"">
              </div>
            </div>
            <div class=""mdc-slider__track--inactive""></div>
          </div>
          <div class=""mdc-slider__thumb"" tabindex=""0"" role=""slider"" aria-valuemin=""0""
               aria-valuemax=""100"" aria-valuenow=""70"" style=""left:calc(70% - 24px)"">
            <div class=""mdc-slider__value-indicator-container"" aria-hidden=""true"">
              <div class=""mdc-slider__value-indicator"">
                <span class=""mdc-slider__value-indicator-text"">70</span>
              </div>
            </div>
            <div class=""mdc-slider__thumb-knob""></div>
          </div>
        </div>`",THUMB,TRACK_ACTIVE,'does not update thumb styles in initial layout',skipInitialUIUpdate,'calc(70% - 24px)','removes thumb `left` styles on initial down event that changes value','translateX(30px)','removes thumb/track animation on initial down event that changes value',/none/,discreteClass,DISCRETE,rangeClass,tickMarksClass,TICK_MARKS,stepAttr,"`step=""${","`<input class=""mdc-slider__input"" type=""range""
      min=""${","}"" max=""${","}"" value=${",}>`,inputStart,inputEnd,valueIndicator,valueNum,"`
      <div class=""mdc-slider__value-indicator-container"" aria-hidden=""true"">
        <div class=""mdc-slider__value-indicator"">
          <span class=""mdc-slider__value-indicator-text"">
            ${","}
            </span>
          </div>
        </div>`",valueIndicatorStart,valueIndicatorEnd,startThumbHtml,"`
      <div class=""mdc-slider__thumb"">
        ${","}
        <div class=""mdc-slider__thumb-knob""></div>
      </div>`","`
    <div class=""mdc-slider ${","}"">
      ${","}
      ${","}
      <div class=""mdc-slider__track"">
        <div class=""mdc-slider__track--active"">
          <div class=""mdc-slider__track--active_fill""></div>
        </div>
        <div class=""mdc-slider__track--inactive""></div>
      </div>
      ${","}
      <div class=""mdc-slider__thumb"">
        ${","}
        <div class=""mdc-slider__thumb-knob""></div>
      </div>
    </div>`",thumbs,'mouse','touch',phase,PointerEvent,TouchEvent,switch,case,'pointermove',isIe,navigator,userAgent,'MSIE','Trident',createMouseEvent,pointerId,break,'mousemove',touches,Touch,"'sets min, max, value based on aria attributes'",setUpAndInit,50.5,getMin,getMax,"'range slider: sets min, max, value, valueStart based on aria attributes'",'sets step based on step attribute',getStep,'range slider: sets min range based on data-min-range attribute',minRange,getMinRange,'min can be updated after initialization',setMin,'max can be updated after initialization',setMax,'min range can be updated after initialization',setMinRange,'hasTickMarks can be updated after initialization',WithHasTickMarksAndDiscrete,setHasTickMarks,'step can be updated after initialization',setStep,'isDiscrete can be updated after initialization',setIsDiscrete,'throws error if attribute value is null',getInputAttribute,'100','50.5',/must be non-null/,'throws error if attribute value is NaN',/must be a number/,'throws error if min > max',/min must be strictly less than max/,'throws error if min == max','throws error if value < min',"/value must be in \[min, max\] range/",'throws error if value > max','throws error if step <= 0',/step must be a positive number/,'throws error if valueStart < min',22,"/values must be in \[min, max\] range/",'throws error if valueStart > max','throws error if start value > end value',/start value must be <= end value/,'range slider: throws error if start value is not divisible by step',/values must be valid based on the step value/,'throws error if value is not divisible by step',/value must be valid based on the step value/,'throws error if minRange < 0',/minimum range must be non-negative/,'throws error if valueStart + minRange > value',/start value and end value must differ by at least 20/,'does not throw error with valid value and step < 1','does not throw error due to floating point rounding - related to issue #7404',33.3,'#layout',"'initial layout removes thumb styles, and subsequent layouts '",'do not',removeThumbStyleProperty,START,"'initial layout resets thumb/track animations, and subsequent layouts '",setThumbStyleProperty,'none 0s ease 0s',setTrackActiveStyleProperty,removeTrackActiveStyleProperty,'initial layout does not reset thumb/track animations for continuous sliders','RTL: initial layout removes thumb styles','`skipUpdateUI` skips updating the UI',skipUpdateUI,'#layout with no thumbs updates both thumbs\' value indicators',setValueIndicatorText,'#layout with no thumbs updates both thumbs\' input attributes',getValueToAriaValueTextFn,setInputAttribute,'5 value','10 value','#destroy','Pointer events: Event listeners are deregistered when foundation is ','destroyed.',supportsPointerEvents,MDCSliderFoundation,SUPPORTS_POINTER_EVENTS,deregisterThumbEventHandler,'Pointer events not supported: mousedown/touchstart listeners are ','deregistered when foundation is destroyed.','Resize listener is deregistered when foundation is destroyed','Focused thumb style','adds/removes focused style from thumb on input focus/blur',handleInputFocus,addThumbClass,THUMB_FOCUSED,handleInputBlur,removeThumbClass,'Value updates via user events','throws error if move event occurs with no preceding down event',handleMove,'sets slider value to updated value',60,handleDown,`scaleX(${,})`,'clips value to min value','clips value to max value',101,'quantizes value based on step',58,'quantizes value based on step and min','rounds values based on step decimal places','rounds values (using scientific notation) based on step decimal places',1e-8,1e-9,3e-9,'down event updates end value if value is inside the range and ','closer to end thumb','down event updates start value if value is inside the range and ','closer to start thumb','translateX(25px)','move event after down event (on end thumb) updates end thumb value ','inside the range',`translateX(25px)`,'moves the start thumb if value < start value','moves the end thumb if value > end value',`translateX(70px)`,'does not move the start thumb to be greater than the end thumb',`translateX(53px)`,'does not move the end thumb to be less than than the start thumb',`translateX(45px)`,'does not move the start thumb to be closer to the end thumb than minRange',`translateX(48px)`,'does not move the end thumb to be closer to the start thumb than minRange',`translateX(55px)`,'does not update UI if start value is updated to the same value','does not update UI if end value is updated to the same value',84.5,"'RTL, single point slider: updates track/thumb position with '",'reversed values',`translateX(10px)`,"'RTL, range slider: updates track/thumb position with reversed values'",'#get/setValue','throws error if #get/setValueStart is invoked on single point slider',/only applicable for range sliders/,'throws error if #setValue/setValueStart is set to invalid number',/must be <= end thumb value/,/must be <= end thumb value \(50\) - min range \(10\)/,/must be >= start thumb value/,/must be >= start thumb value \(10\) \+ min range \(10\)/,'single point slider: #setValue updates value and UI',64,'translateX(64px)','scaleX(0.64)','range: #setValue updates end thumb value and UI','range: #setValueStart updates end thumb value and UI','translateX(3px)','#get/setMinRange','throws error if #get/setMinRange is invoked on single point slider','throws error if #setMinRange is set to invalid number',/must be non-negative/,/must differ by at least 45/,getInputValue,'13','30','updates values on input change',handleInputChange,focusInput,'does not update value indicator for continuous slider','updates value indicator for single point slider','updates value indicator for range slider','range slider: adds THUMB_WITH_INDICATOR class to both thumbs on ','thumb mouseenter',handleThumbMouseenter,THUMB_WITH_INDICATOR,'range slider: removes THUMB_WITH_INDICATOR class from both thumbs ','on thumb mouseleave',isInputFocused,handleThumbMouseleave,'range slider: does not remove THUMB_WITH_INDICATOR class on','thumb mouseleave if an input is still focused','value indicator alignment','does not align value indicator for continuous slider',getValueIndicatorContainerWidth,/--slider-value-indicator.*/,'left aligns value indicator when close to the left edge','--slider-value-indicator-caret-left','5px','--slider-value-indicator-caret-right','--slider-value-indicator-caret-transform','translateX(-50%)','--slider-value-indicator-container-left','--slider-value-indicator-container-right','--slider-value-indicator-container-transform','right aligns value indicator when close to the right edge','translateX(50%)','centers value indicator over the knob when far enough from both edges','range slider: aligns both value indicators','single point slider: sets correct number of tick marks for value update',updateTickMarks,TickMark,ACTIVE,INACTIVE,33.5,'range slider: sets correct number of tick marks for value update','range slider: overlapping thumbs',"'when thumbs overlap, adds THUMB_TOP class to active thumb'",THUMB_TOP,"'when thumbs do not overlap, removes THUMB_TOP class'","'RTL: when thumbs overlap, adds THUMB_TOP class to active thumb'","'when thumbs overlap, thumb to be moved is based on drag direction'",downEventClientX,"'RTL: when thumbs overlap, thumb to be moved is based on drag '","'direction, and reversed from LTR'",88,'updates aria-valuetext on value update according to ','`Adapter#getValueToAriaValueTextFn`','11 value','16 value','updates class and input attributes according to disabled state',removeInputAttribute,'range slider: updates inputs\' attrs according to disabled state','events do not update slider value when disabled','hide focus setting','hides focus and value indicators after mouse interaction',hideFocusStylesForPointerEvents,handleUp,'keeps focus and value indicators on keyboard interaction','range slider: hides value indicators on mouse leave even when focused','range slider: keeps value indicators on mouse leave while dragging','events: ','does not handle secondary pointer events',handlePointerdown,'mouseEvent',emitInputEvent,emitChangeEvent,'single point slider: fires `input` and `change` events for value changes','range slider: fires `input`/`change` events on start thumb',14,'range slider: fires `input`/`change` events on end thumb',77,'fires `change` and `input` events on input change','fires `dragStart`/`dragEnd` events across drag interaction',emitDragStartEvent,emitDragEndEvent,Partial,ClientRect,Boolean,DATA_MIN_RANGE,INPUT_STEP,STEP_SIZE,shouldHideFocusStylesForPointerEvents,getThumbBoundingClientRect,getThumbKnobWidth,MDCSnackbar,'#initialSyncWithDOM registers click handlers for action button and action icon',actionButton,actionIcon,handleActionButtonClick,handleActionIconClick,handleKeyDown,'clicking on surface does nothing','#open announces to screen readers','#open forwards to MDCSnackbarFoundation#open','#close forwards to MDCSnackbarFoundation#close','reason','get isOpen forwards to MDCSnackbarFoundation#isOpen','get closeOnEscape forwards to MDCSnackbarFoundation#getCloseOnEscape',closeOnEscape,getCloseOnEscape,'set closeOnEscape forwards to MDCSnackbarFoundation#setCloseOnEscape',setCloseOnEscape,'get timeoutMs forwards to MDCSnackbarFoundation#getTimeoutMs',timeoutMs,getTimeoutMs,'set timeoutMs forwards to MDCSnackbarFoundation#setTimeoutMs',MAX_AUTO_DISMISS_TIMEOUT_MS,setTimeoutMs,'get labelText returns label textContent',labelText,'set labelText forwards to MDCSnackbarFoundation#setActionButtonText','get actionButtonText returns button textContent',actionButtonText,'set actionButtonText forwards to MDCSnackbarFoundation#setActionButtonText',MDCSnackbarFoundation,'announce','#destroy removes all animating and open classes',REASON_DISMISS,'#open announces text to screen readers',SNACKBAR_ANIMATION_OPEN_TIME_MS,SNACKBAR_ANIMATION_CLOSE_TIME_MS,'#close does nothing if the snackbar is already closed','#open automatically dismisses snackbar after timeout','#snackbar remains open for indefinite timeout','#isOpen returns false when the snackbar has never been opened','#isOpen returns true when the snackbar is open','#isOpen returns false when the snackbar is closed after being open','escape keydown closes snackbar when closeOnEscape is true (via key property)','escape keydown closes snackbar when closeOnEscape is true (via keyCode property)','escape keydown does not close snackbar when closeOnEscape is false (via key property)','escape keydown does not close snackbar when closeOnEscape is false (via keyCode property)','#setTimeoutMs throws an error for values outside the min/max range',MIN_AUTO_DISMISS_TIMEOUT_MS,'#getTimeoutMs returns the default value',DEFAULT_AUTO_DISMISS_TIMEOUT_MS,'#getTimeoutMs returns the value set by setTimeoutMs','#getCloseOnEscape returns the value set by setCloseOnEscape','#announce temporarily disables ARIA attributes and then restores them',"`
        <div>
          <div class=""aria"" role=""status"" aria-live=""polite"">
            <div class=""label""></div>
          </div>
        </div>`",ariaEl,'.aria',labelEl,'.label','aria-live','off',ARIA_LIVE_DELAY_MS,'polite','#announce prevents flicker by displaying label text on ::before pseudo-element and then removing it',ARIA_LIVE_LABEL_TEXT_ATTR,'#announce second argument is optional',"`
      <div>
        <div class=""aria label"" role=""status"" aria-live=""polite""></div>
      </div>`",'#announce does nothing if textContent is empty',"`
      <div>
        <div class=""aria"" role=""status"" aria-live=""polite"">
          <div class=""label""></div>
        </div>
      </div>`",'#announce does nothing if aria-live was not present',"`
      <div>
        <div class=""aria label"" role=""status"">Foo</div>
      </div>`",'attachTo initializes and returns a MDCSwitch instance',MDCSwitch,rippleSurface,'get/set checked updates the checked value of the native switch input element','get/set checked updates the component styles',MDCSwitchFoundation,CHECKED,'get/set disabled updates the disabled value of the native switch input element','get/set disabled updates the component styles','get/set checked updates the aria-checked of the native switch input element','#initialSyncWithDOM calls foundation.setChecked',setChecked,'change handler is added to the native control element','change handler is removed from the native control element on destroy','setNativeControlChecked','#setChecked updates the checked state',setNativeControlChecked,'#setChecked adds mdc-switch--checked to the switch element when set to true','#setChecked removes mdc-switch--checked from the switch element when set to false','#setDisabled updates the disabled state','#setDisabled adds mdc-switch--disabled to the switch element when set to true','#setDisabled removes mdc-switch--disabled from the switch element when set to false','#handleChange adds mdc-switch--checked to the switch when it is a checked state','#handleChange removes mdc-switch--checked from the switch when it is an unchecked state','#initialSyncWithDOM() calls foundation initFromDOM()',initFromDOM,'#initialSyncWithDOM() adds foundation.handleClick listener to root','#destroy() removes foundation.handleClick listener from root','adapter.addClass() adds classes to root',CssClasses,PROCESSING,'adapter.hasClass() checks classes on root','returns false when class does not exist','returns true when class exists','adapter.isDisabled() returns root disabled property','adapter.removeClass() removes classes from root','adapter.setAriaChecked() sets aria-checked attribute on root',setAriaChecked,'adapter.state should be the component instance','#handleClick() toggles selected','toggled from initial false to true','#handleClick() does nothing when disabled','should not toggle to true','#stopProcessingIfDisabled() sets processing to false when disabling',processing,'processing set to false when disabled = true','#stopProcessingIfDisabled() disallows processing if already disabled','processing should be set back to false when already disabled','#stopProcessingIfDisabled() allows processing if enabled','should be true when not disabled','MDCSwitchRenderFoundation',setUpMdcTestEnvironment,MDCSwitchRenderFoundation,'#initFromDOM() sets selected if adapter has class','#initFromDOM() ensures aria-checked is set in case it does not exist','#initFromDOM() sets disabled from adapter.isDisabled','#initFromDOM() sets processing if adapter has class','#initFromDOM() stops processing if adapter is disabled and has processing class','should not be processing if adapter.isDisabled() returns false','#onDisabledChange() calls adapter.setDisabled when disabled changes','#onSelectedChange() calls adapter.setAriaChecked when selected changes','attachTo returns an MDCTabBar instance',MDCTabBar,fakeTabIdCounter,FakeTab,`mdc-tab-${,computeIndicatorClientRect,'computeIndicatorClientRect',computeDimensions,'computeDimensions',focusOnActivate,FakeTabScroller,'scrollTo',incrementScroll,'incrementScroll',getScrollPosition,'getScrollPosition',getScrollContentWidth,'getScrollContentWidth','#constructor instantiates child tab components',tabList,'#constructor instantiates child tab scroller component',tabScroller,'#destroy cleans up child tab components',MDCTabBarFoundation,'focusOnActivate setter updates setting on all tabs',MDCTab,'useAutomaticActivation setter calls foundation#setUseAutomaticActivation',useAutomaticActivation,setUseAutomaticActivation,'#adapter.scrollTo calls scrollTo of the child tab scroller','#adapter.incrementScroll calls incrementScroll of the child tab scroller','#adapter.getScrollPosition calls getScrollPosition of the child tab scroller','#adapter.getScrollContentWidth calls getScrollContentWidth of the child tab scroller','#adapter.getOffsetWidth returns getOffsetWidth of the root element',getOffsetWidth,'#adapter.isRTL returns the RTL state of the root element','#adapter.activateTabAtIndex calls activate on the tab at the index',activateTabAtIndex,'#adapter.deactivateTabAtIndex calls deactivate on the tab at the index',deactivateTabAtIndex,'#adapter.getTabIndicatorClientRectAtIndex calls computeIndicatorClientRect on the tab at the index',getTabIndicatorClientRectAtIndex,'#adapter.getTabDimensionsAtIndex calls computeDimensions on the tab at the index',getTabDimensionsAtIndex,'#adapter.getPreviousActiveTabIndex returns the index of the active tab',getPreviousActiveTabIndex,'#adapter.getIndexOfTabById returns the index of the given tab',getIndexOfTabById,'#adapter.getTabListLength returns the length of the tab list',getTabListLength,'#activateTab calls activateTab',activateTab,'#scrollIntoView calls scrollIntoView',scrollIntoView,"'on keydown, call handleKeyDown'",'numbers','getOffsetWidth','setActiveTab','activateTabAtIndex','deactivateTabAtIndex','focusTabAtIndex','getTabIndicatorClientRectAtIndex','getTabDimensionsAtIndex','getPreviousActiveTabIndex','getFocusedTabIndex','getIndexOfTabById','getTabListLength','notifyTabActivated',setupKeyDownTest,'scrollIntoView','activateTab',mockKeyDownEvent,'#handleTabInteraction() activates the tab',handleTabInteraction,MDCTabInteractionEvent,setActiveTab,'#handleKeyDown() focuses the tab at the 0th index on home key press',fakeKeyEvent,fakeKeyCodeEvent,getFocusedTabIndex,focusTabAtIndex,'#handleKeyDown() focuses the tab at the N - 1 index on end key press','#handleKeyDown() focuses the tab at the previous index on left arrow press','#handleKeyDown() focuses the tab at the next index when the right arrow key is pressed',' and the text direction is RTL','#handleKeyDown() focuses the tab at the N - 1 index when the left arrow key is pressed',' and the current active index is 0','#handleKeyDown() focuses the tab at the N - 1 index when the right arrow key is pressed',' and the current active index is the 0th index and the text direction is RTL','#handleKeyDown() focuses the tab at the previous index when the right arrow key is pressed','#handleKeyDown() focuses the tab at the 0th index when the right arrow key is pressed',' and the current active index is the max index','#handleKeyDown() focuses the tab at the 0th index when the left arrow key is pressed',' and the current active index is the max index and the text direction is RTL','#handleKeyDown() activates the current focused tab on space/enter press w/o useAutomaticActivation',SPACE_KEY,'#handleKeyDown() does nothing on space/enter press w/ useAutomaticActivation','#handleKeyDown() activates the tab at the 0th index on home key press w/ useAutomaticActivation','#handleKeyDown() activates the tab at the N - 1 index on end key press w/ useAutomaticActivation','#handleKeyDown() activates the tab at the previous index on left arrow press w/ useAutomaticActivation','#handleKeyDown() prevents the default behavior for handled non-activation keys',evtName,'#handleKeyDown() does not prevent the default behavior for handled activation keys','#handleKeyDown() prevents the default behavior for handled non-activation keyCodes',ARROW_LEFT_KEYCODE,ARROW_RIGHT_KEYCODE,HOME_KEYCODE,END_KEYCODE,'#handleKeyDown() prevents the default behavior for handled activation keyCodes',SPACE_KEYCODE,ENTER_KEYCODE,'#handleKeyDown() does not prevent the default behavior for unhandled keys','#handleKeyDown() does not prevent the default behavior for unhandled keyCodes','#handleKeyDown() does not activate a tab when an unhandled key is pressed',setupActivateTabTest,'#activateTab() does nothing if the index overflows the tab list','#activateTab() does nothing if the index underflows the tab list','#activateTab() does nothing if the index is the same as the previous active index','#activateTab() deactivates the previously active tab','#activateTab() does not deactivate the previously active tab if there is none','#activateTab() activates the newly active tab with the previously active tab\'s indicatorClientRect','#activateTab() scrolls the new tab index into view','#scrollIntoView() does nothing if the index overflows the tab list',setupScrollIntoViewTest,tabListLength,'#scrollIntoView() does nothing if the index underflows the tab list','#scrollIntoView() scrolls to 0 if the index is 0','#scrollIntoView() scrolls to the scroll content width if the index is the max possible',scrollContentWidth,987,'#scrollIntoView() increments the scroll by 150 when the selected tab is 100px to the right',' and the closest tab\'s left content edge is 30px from its left root edge',activeIndex,tabDimensionsMap,rootLeft,rootRight,contentLeft,contentRight,130,EXTRA_SCROLL_AMOUNT,"'#scrollIntoView() increments the scroll by 250 when the selected tab is 100px to the left, is 100px wide,'",' and the closest tab\'s left content edge is 30px from its left root edge and the text direction is RTL',scrollPosition,430,"'#scrollIntoView() increments the scroll by -250 when the selected tab is 100px to the left, is 100px wide,'",' and the closest tab\'s right content edge is 30px from its right root edge',"'#scrollIntoView() increments the scroll by -150 when the selected tab is 100px wide,'",' and the closest tab\'s right content edge is 30px from its right root edge and the text direction is RTL',730,770,830,900,'#scrollIntoView() does nothing when the tab is perfectly in the center','#scrollIntoView() does nothing when the tab is perfectly in the center and the text direction is RTL','#scrollIntoView() increments the scroll by 0 when the tab and its left neighbor\'s content are visible','#scrollIntoView() increments the scroll by 0 when the tab and its right neighbor\'s content are visible','attachTo returns an MDCTabIndicator instance',MDCTabIndicator,'attachTo an icon returns an MDCTabIndicator instance',getFadingFixture,MDCTabIndicatorFoundation,CONTENT_SELECTOR,'#adapter.removeClass removes a class to the root element','#adapter.computeContentClientRect returns the root element client rect',computeContentClientRect,'#adapter.setContentStyleProperty sets a style property on the root element',setContentStyleProperty,'background-color',setupMockSlidingFoundationTest,MDCSlidingTabIndicatorFoundation,setupMockFadingFoundationTest,MDCFadingTabIndicatorFoundation,'#activate sliding indicator calls activate with passed args','#activate icon indicator calls activate with passed args','#deactivate sliding indicator calls deactivate','#deactivate icon indicator calls deactivate','#computeContentClientRect calls computeClientRect',"'#activate sets the transform property with no transition, then transitions it back'",NO_TRANSITION,'translateX(15px) scaleX(0.9)','#activate does not modify transform and does not transition if no client rect is passed','attachTo returns an MDCTabScroller instance',MDCTabScroller,'#destroy() calls super.destroy()','#adapter.eventTargetMatchesSelector returns true if the event target matches the selector',area,eventTargetMatchesSelector,MDCTabScrollerFoundation,AREA_SELECTOR,'#adapter.addScrollAreaClass adds a class to the area element',addScrollAreaClass,'#adapter.setScrollAreaStyleProperty sets a style property on the area element',setScrollAreaStyleProperty,'#adapter.setScrollContentStyleProperty sets a style property on the content element',setScrollContentStyleProperty,'#adapter.getScrollContentStyleValue returns the style property value on the content element','chartreuse',getScrollContentStyleValue,setupScrollLeftTests,'overflow-x','10000px','#adapter.setScrollAreaScrollLeft sets the scrollLeft value of the area element',setScrollAreaScrollLeft,'#adapter.getScrollAreaScrollLeft returns the scrollLeft value of the root element',416,getScrollAreaScrollLeft,'#adapter.getScrollContentOffsetWidth returns the content element offsetWidth',getScrollContentOffsetWidth,'#adapter.getScrollAreaOffsetWidth returns the root element offsetWidth',getScrollAreaOffsetWidth,'#adapter.computeScrollAreaClientRect returns the root element bounding client rect',computeScrollAreaClientRect,'#adapter.computeScrollContentClientRect returns the content element bounding client rect',computeScrollContentClientRect,'#adapter.computeHorizontalScrollbarHeight uses util function to return scrollbar height',computeHorizontalScrollbarHeight,'#scrollTo calls scrollTo',703,'#incrementScroll calls incrementScroll','#getScrollPosition() calls getScrollPosition','#getScrollContentWidth() returns the offsetWidth of the content element',contentElement,setupTestRTL,'#getRTLScroller() returns an instance of MDCTabScrollerRTL',getRTLScroller,MDCTabScrollerRTL,"'on interaction in the area element, call #handleInteraction()'",handleInteraction,"'on transitionend of the content element, call #handleTransitionEnd()'",'eventTargetMatchesSelector','addScrollAreaClass','setScrollAreaStyleProperty','setScrollContentStyleProperty','getScrollContentStyleValue','setScrollAreaScrollLeft','getScrollAreaScrollLeft','getScrollContentOffsetWidth','getScrollAreaOffsetWidth','computeScrollAreaClientRect','computeScrollContentClientRect','computeHorizontalScrollbarHeight','#getScrollPosition() returns scroll value when transform is none','#getScrollPosition() returns difference between scrollLeft and translateX',"'matrix(1, 0, 0, 0, 101, 0)'",212,111,'#handleInteraction() does nothing if should not handle interaction',setupHandleInteractionTest,translateX,99,"`matrix(1, 0, 0, 1, ${","}, 0)`",isAnimating,'#handleInteraction() sets the transform property to translateX(0px)','#handleInteraction() sets scrollLeft to the difference between scrollLeft and translateX','#handleTransitionEnd() does nothing if should not handle transition','#scrollTo() exits early if difference between scrollX and scrollLeft is 0',setupScrollToTest,66,'#scrollTo() scrolls to 0 if scrollX is less than 0','#scrollTo() scrolls to the max scrollable size if scrollX is greater than the max scrollable value',rootWidth,contentWidth,788,'#scrollTo() sets the content transform style property to the difference between scrollX and scrollLeft',456,'translateX(333px)','#scrollTo() sets the scroll property to the computed scrollX','#scrollTo() sets scrollLeft to the visual scroll position if called during an animation',19,'#scrollTo() unsets the transform property in a rAF','#incrementScroll() exits early if increment is 0','#incrementScroll() exits early if increment puts the scrollLeft over the max value','#incrementScroll() exits early if increment puts the scrollLeft below the min value','#incrementScroll() increases the scrollLeft value by the given value','#incrementScroll() increases the scrollLeft value by the given value up to the max scroll value','#incrementScroll() decreases the scrollLeft value by the given value',112,'#incrementScroll() decreases the scrollLeft value by the given value down to the min scroll value','#incrementScroll() sets scrollLeft to the visual scroll position if called during an animation','#incrementScrollImmediate() exits early if increment is 0',incrementScrollImmediate,'#incrementScrollImmediate() exits early if increment puts the scrollLeft over the max value','#incrementScrollImmediate() exits early if increment puts the scrollLeft below the min value','#incrementScrollImmediate() increases the scrollLeft value by the given value','#incrementScrollImmediate() increases the scrollLeft value by the given value up to the max scroll value','#incrementScrollImmediate() decreases the scrollLeft value by the given value','#incrementScrollImmediate() decreases the scrollLeft value by the given value down to the min scroll value',setupScrollToRTLTest,'direction','#scrollTo() sets the scrollLeft property in RTL','#scrollTo() sets the transform style property in RTL','translateX(690px)','#incrementScroll() sets the scrollLeft property in RTL','#incrementScroll() sets the transform style property in RTL','translateX(10px)','#getScrollPosition() returns a numeric scroll position in RTL',setupNegativeScroller,newScrollLeft,'#getRTLScroller() returns an instance of MDCTabScrollerRTLNegative',MDCTabScrollerRTLNegative,setupReverseScroller,'#getRTLScroller() returns an instance of MDCTabScrollerRTLReverse',MDCTabScrollerRTLReverse,setupDefaultScroller,'#getRTLScroller() returns an instance of MDCTabScrollerRTLDefault',MDCTabScrollerRTLDefault,'#getScrollPositionRTL() returns the distance from the right edge',scroller,677,getScrollPositionRTL,'#scrollToRTL() returns a normalized scrollX property',scrollToRTL,finalScrollPosition,689,'#scrollToRTL() returns a normalized translateX property',scrollDelta,'#scrollToRTL() returns 0 for scrollX property when scrollLeft would be too far left',801,'#scrollToRTL() returns 0 for translateX property when scrollLeft would be the same','#scrollToRTL() returns max scroll value for scrollX property when scrollLeft would be too far right','#incrementScrollRTL() returns a normalized scrollX property',incrementScrollRTL,627,'#incrementScrollRTL() returns a normalized translateX property','#incrementScrollRTL() returns 0 for scrollX property when scrollLeft would be too far left',678,'#incrementScrollRTL() returns 0 for translateX property when scrollLeft would be the same','#incrementScrollRTL() returns max scroll value for scrollX property when scrollLeft would be too far right',124,'#getAnimatingScrollPosition() returns just the scrollX value',getAnimatingScrollPosition,'#getScrollPositionRTL() returns the current scroll distance when translateX is 0','#getScrollPositionRTL() returns the current scroll distance minus translateX','#scrollToRTL() returns 0 for scrollX property when scrollLeft would be too far right','#scrollToRTL() returns min scroll value for scrollX property when scrollLeft would be too far left',17,128,'#incrementScrollRTL() returns 0 for scrollX property when scrollLeft would be too far right',46,'#incrementScrollRTL() returns min scroll value for scrollX property when scrollLeft would be too far left','#getAnimatingScrollPosition() returns the difference between the scrollX value and the translateX value','#getScrollPositionRTL() returns the negated scrollLeft value','#getScrollPositionRTL() returns the negated current scroll distance minus translateX',666,145,'#scrollToRTL() returns max scroll value for scrollX property when scrollLeft would be too far left',202,252,'#incrementScrollRTL() returns max scroll value for scrollX property when scrollLeft would be too far left','#getAnimatingScrollPosition() returns the sum of the scrollX value and the translateX value','#computeHorizontalScrollbarHeight returns value based on difference between offset and client height',expectedHeight,mockDocument,classListAddFunc,createMockDocumentForHorizontalScrollbarHeight,SCROLL_TEST,'attachTo returns an MDCTab instance','click handler is added during initialSyncWithDOM',useMockFoundation,'click handler is removed during destroy','#adapter.hasClass returns true if a class exists on the root element','#adapter.setAttr adds a given attribute to the root element','#adapter.activateIndicator activates the indicator subcomponent',activateIndicator,'.mdc-tab-indicator','mdc-tab-indicator--active','#adapter.deactivateIndicator deactivates the indicator subcomponent',deactivateIndicator,'#adapter.getOffsetWidth() returns the offsetWidth of the root element','#adapter.getOffsetLeft() returns the offsetLeft of the root element',getOffsetLeft,offsetLeft,'#adapter.getContentOffsetWidth() returns the offsetLeft of the content element',getContentOffsetWidth,'#adapter.getContentOffsetLeft() returns the offsetLeft of the content element',getContentOffsetLeft,'#adapter.focus() gives focus to the root element','#active getter calls foundation.isActive','#focusOnActivate setter calls foundation.setFocusOnActivate',setFocusOnActivate,'#activate() calls activate','#activate({ClientRect}) calls activate','#deactivate() calls deactivate','#computeIndicatorClientRect() returns the indicator element\'s bounding client rect','#computeDimensions() calls computeDimensions',MDCTabFoundation,'activateIndicator','deactivateIndicator','getOffsetLeft','getContentOffsetLeft','getContentOffsetWidth','notifyInteracted','#activate adds mdc-tab--active class to the root element','#activate sets the root element aria-selected attribute to true','#activate sets the root element tabindex to 0',TABINDEX,'#activate activates the indicator','#activate focuses the root node by default','#activate focuses the root node if focusOnActivate is true','#activate does not focus the root node if focusOnActivate is false','#deactivate does nothing if not active','#deactivate removes mdc-tab--active class to the root element','#deactivate sets the root element aria-selected attribute to false','#deactivate deactivates the indicator','#deactivate sets the root element tabindex to -1','#computeDimensions() returns the dimensions of the tab','attachTo returns an MDCTextFieldCharacterCounter instance',MDCTextFieldCharacterCounter,'5 / 10',MDCTextFieldCharacterCounterFoundation,'istanbul code coverage','#setContent sets the content of the character counter element',setCounterValue,'12 / 20','#setContent current length does not exceed character count limit','20 / 20','attachTo returns an MDCTextFieldHelperText instance',MDCTextFieldHelperText,'#adapter.getAttr retrieves a given attribute from the element','foobar',MDCTextFieldHelperTextFoundation,'#getId retrieves ID','#isPersistent retrieves correct value',HELPER_TEXT_PERSISTENT,isPersistent,'#isValidation retrieves correct value',isValidation,'#isVisible retrieves correct value','#setPersistent toggles the persistent class',setPersistent,'#showToScreenReader removes aria-hidden from helperText',showToScreenReader,"'#setValidity adds role=""alert"" to helper text if input is invalid and helper text is being used '",'as a validation message',"'#setValidity invalid when already invalid refreshes role=""alert"" if '",ROLE,"'#setValidity sets aria-hidden=""true"" on helper text by default'",'#setValidity does not set aria-hidden on helper text when it is persistent','attachTo returns an MDCTextFieldIcon instance',MDCTextFieldIcon,MDCTextFieldIconFoundation,'attachTo returns an MDCTextField instance',MDCTextField,FakeRipple,FakeLineRipple,'.listen','.unlisten','.activate','.deactivate','.setRippleCenter',FakeCharacterCounter,FakeLabel,'.shake','.setRequired',FakeOutline,'#constructor instantiates a ripple on the root element by default','#constructor does not instantiate a ripple when ${cssClasses.OUTLINED} class is present',OUTLINED,'#constructor does not instantiate a ripple when ${cssClasses.TEXTAREA} class is present',TEXTAREA,"'#constructor when given a `mdc-text-field--filled` element, initializes a default ripple when no '",'ripple factory given','#constructor instantiates a line ripple on the `.mdc-line-ripple` element if present','lineRipple','#constructor instantiates a helper text if present',getHelperLineWithHelperText,'#constructor instantiates a character counter if present',characterCounter,getHelperLineWithCharacterCounter,'characterCounter','trailingIcon','#constructor instantiates an icon for both icon elements if present','mdc-text-field--with-trailing-icon',"`<i class=""mdc-text-field__icon mdc-text-field__icon--trailing material-icons"">3d_rotations</i>`",'#constructor instantiates a trailing icon if the icon is present','.mdc-text-field__icon',trailingIcon,'mdc-text-field--with-leading-icon','#constructor instantiates a label on the `.mdc-floating-label` element if present','#constructor instantiates an outline on the `.mdc-notched-outline` element if present',"`<span class=""mdc-notched-outline""></span>`",'outline','#constructor handles undefined optional sub-elements gracefully',"`
      <label class=""mdc-text-field mdc-text-field--filled"">
        <input type=""text"" class=""mdc-text-field__input"" id=""my-text-field"">
      </label>
    `",'default adapter methods handle sub-elements when present','default adapter methods handle undefined optional sub-elements gracefully',"`
         <label class=""mdc-text-field mdc-text-field--filled"">
           <input type=""text"" class=""mdc-text-field__input"" id=""my-text-field"">
         </label>
       `",shakeLabel,activateLineRipple,deactivateLineRipple,setLineRippleTransformOrigin,lineRipple,'#destroy cleans up the ripple if present','#destroy cleans up the line ripple if present','#destroy cleans up the helper text if present',helperTextElement,'#destroy cleans up the character counter if present',characterCounterElement,'#destroy cleans up the icon if present','#destroy cleans up the label if present','#destroy handles undefined optional sub-elements gracefully','#destroy handles undefined optional ripple gracefully','#destroy calls destroy for both icon elements if present','leadingIcon_.destroy','trailingIcon_.destroy','#initialSyncWithDOM sets disabled if input element is not disabled','#focus calls focus on the input element','.mdc-text-field__input','get/set disabled updates the input element','set valid updates the component styles','set helperTextContent has no effect when no helper text element is present','set leadingIconAriaLabel has no effect when no icon element is present','set trailingIconAriaLabel has no effect when no icon element is present',trailingIconAriaLabel,'set leadingIconContent has no effect when no icon element is present','set trailingIconContent has no effect when no icon element is present',trailingIconContent,'layout calls foundation notchOutline','#adapter.setInputAttr sets attribute on input element',setInputAttr,'#adapter.removeInputAttr removes attribute on input element','bar!',removeInputAttr,'#adapter.registerInputInteractionHandler adds a handler to the input element for a given event',registerInputInteractionHandler,'#adapter.deregisterInputInteractionHandler removes a handler from the input element for a given event',deregisterInputInteractionHandler,'#adapter.registerTextFieldInteractionHandler adds an event handler for a given event on the root','TextFieldInteractionHandler',registerTextFieldInteractionHandler,'#adapter.deregisterTextFieldInteractionHandler removes an event handler for a given event from the root','#adapter.registerValidationAttributeChangeHandler creates a working mutation observer','ValidationAttributeChangeHandler',arr,'required',registerValidationAttributeChangeHandler,'#adapter.deregisterValidationAttributeChangeHandler disconnects the passed observer','ValidationDisconnect',MutationObserver,deregisterValidationAttributeChangeHandler,'#adapter.getNativeInput returns the component input element',getNativeInput,'#adapter.activateLineRipple calls the activate method on the line ripple','#adapter.deactivateLineRipple calls the deactivate method on the line ripple','#adapter.setLineRippleTransformOrigin calls the setRippleCenter method on the line ripple','should not focus input when clicking icon','input should be focused','ensure input was blurred','input should not be focused',MDCTextFieldFoundation,'get/set value','set leadingIconAriaLabel','set leadingIconContent','set trailingIconAriaLabel',setTrailingIconAriaLabel,'set trailingIconContent',setTrailingIconContent,'get/set valid','get/set required','set useNativeValidation',useNativeValidation,setUseNativeValidation,'get/set pattern',"'.{8,}'",'.*','get/set minLength',minLength,'get/set maxLength','get/set min','get/set max','get/set step',"'get prefixText returns prefix textContent, or null without a prefix'",prefixText,prefixRoot,getFixtureWithPrefix,prefixComponent,'$',"'set prefixText changes prefix textContent, if it exists'",prefixEl,PREFIX_SELECTOR,"'get suffixText returns suffix textContent, or null without a suffix'",suffixText,suffixRoot,getFixtureWithSuffix,suffixComponent,'/100',"'set suffixText changes suffix textContent, if it exists'",suffixEl,SUFFIX_SELECTOR,'setInputAttr','removeInputAttr','registerTextFieldInteractionHandler','deregisterTextFieldInteractionHandler','registerInputInteractionHandler','deregisterInputInteractionHandler','getNativeInput','activateLineRipple','deactivateLineRipple','setLineRippleTransformOrigin','shakeLabel','registerValidationAttributeChangeHandler','deregisterValidationAttributeChangeHandler',useCharacterCounter,useHelperText,useLeadingIcon,useTrailingIcon,'isPersistent','isValidation','showToScreenReader','setCounterValue','#constructor sets disabled to false',setupValueTest,optIsRequired,optIsValid,optIsBadInput,nativeInput,validity,badInput,'#getValue returns the field\'s value','initValue',MDCTextFieldNativeInputElement,'getValue does not match input value.','#setValue with non-empty value styles the label',LABEL_FLOATING,'#setValue with empty value styles the label','old value','#setValue valid and invalid input','invalid','valid','#setValue valid and invalid input without autovalidation',getValidateOnValueChange,setValidateOnValueChange,'#setValue with invalid status and empty value does not shake the label','#setValue does not affect focused state','#setValue does not affect disabled state','#setValue updates character counter when present','ok','#setValue forces the character counter to update if value was updated independently','#isValid for native validation','#setValid overrides native validation when useNativeValidation set to false','#setValid updates classes','#setValid sets aria-describedby if validation helper text is visible','foooo','#setValid removes aria-describedby if validation helper text is hidden',"'#setValid updates classes, but not label methods when hasLabel is false'",'#setDisabled flips disabled when a native input is given','#setDisabled has no effect when no native input is provided','#setDisabled set the disabled property on the native input when there is one','#setDisabled handles no native input being returned gracefully','#setDisabled adds mdc-text-field--disabled when set to true','#setDisabled removes mdc-text-field--invalid when set to true','#setDisabled removes mdc-text-field--disabled when set to false','#setDisabled sets disabled on trailing icon','#setValid adds mdc-textfied--invalid when set to false','#setValid removes mdc-textfied--invalid when set to true','#setValid should not trigger shake animation when text field is empty','#init focuses on input if adapter.isFocused is true',activateFocus,'activateFocus','#init does not focus if adapter.isFocused is false','validationObserver',deregisterTextFieldInteractionHandler,'#init floats label if the input contains a value','Pre-filled value','#init does not call floatLabel if there is no label and the input contains a value','#init does not float label if the input does not contain a value','#setLeadingIconAriaLabel does nothing if element is not present','#setLeadingIconContent does nothing if element is not present','#setTrailingIconAriaLabel sets the aria-label of the trailing icon element','#setTrailingIconAriaLabel does nothing if element is not present','#setTrailingIconContent sets the content of the trailing icon element','#setTrailingIconContent does nothing if element is not present',setupBareBonesTest,'#notchOutline does nothing if no label is present','#notchOutline width is set to 0 if no label text is present','on input styles label if input event occurs without any other events','on input doesnot styles label if input event occurs without any other events but hasLabel is false','on input does nothing if input event preceded by keydown event',mockInput,'on focus adds mdc-text-field--focused class','on focus activates line ripple','on focus styles label','on focus do not styles label if hasLabel is false','on focus makes helper text visible to the screen reader',setupBlurTest,checkValidity,'on blur removes mdc-text-field--focused class','on blur styles label when no input value present and validity checks pass','does not style label on blur when no input value present and validity checks pass and hasLabel is false','on blur styles label if input has a value','non-empty value','does not style label on blur if input has a value and hasLabel is false','on blur removes mdc-text-field--invalid if useNativeValidation is true and','input.checkValidity() returns true','on blur adds mdc-textfied--invalid if useNativeValidation is true and','input.checkValidity() returns false','on blur does not remove mdc-text-field--invalid if useNativeValidation is false and','on blur does not add mdc-textfied--invalid if custom validity is true and','on blur set validity of helper text','on blur handles getNativeInput() not returning anything gracefully','on keydown sets receivedUserInput to true when input is enabled','receivedUserInput','on click does not set receivedUserInput if input is disabled','mousedown on the input sets the line ripple origin',clientY,clickHandler,'touchstart on the input sets the line ripple origin',clientRectLeft,mockTouchStartEvent,'on validation attribute change calls styleValidity',attributeChange,'should not call styleValidity on non-whitelisted attribute change',attributeName,'form','label floats on invalid input even if value is empty','label floats when type is date even if value is empty','date','#handleInput activates focus state',handleInput,'#handleInput updates character counter on text input','12345678','#handleInput throws error when maxLength HTML attribute is not found in input element','#handleValidationAttributeChange sets character counter when maxlength attribute value is changed in input ','element',handleValidationAttributeChange,'maxlength','on required attribute change calls setLabelRequired','#init sets label required if native input is required','should transform theme keys to custom property for theme.property()',"`.test {
  color: #6200ee;
  /* @alternate */
  color: var(--mdc-theme-primary, #6200ee);
}`",'host-aware test produces expected output','shadow-dom.test.css',"`:host([lowered]), :host(:not(.hidden)[outlined][lowered]), :host .my-class[lowered], gm-fab[lowered] {
  color: blue;
}
:host([lowered]:hover), :host(:not(.hidden)[outlined][lowered]:hover), :host .my-class[lowered]:hover, gm-fab[lowered]:hover {
  background-color: red;
}

:host(:focus), :host(:not(.hidden)[outlined]:focus), :host .my-class:focus, gm-fab:focus, :host, :host(:not(.hidden)[outlined]), :host .my-class, gm-fab {
  border-color: green;
}

/* Test replacement for deprecated shadow-dom.host-aware() */
:host([lowered]), :host(:not(.hidden)[outlined][lowered]), :host .my-class[lowered], gm-fab[lowered] {
  color: blue;
}
:host([lowered]:hover), :host(:not(.hidden)[outlined][lowered]:hover), :host .my-class[lowered]:hover, gm-fab[lowered]:hover {
  background-color: red;
}

:host(:focus), :host(:not(.hidden)[outlined]:focus), :host .my-class:focus, gm-fab:focus, :host,
:host(:not(.hidden)[outlined]),
:host .my-class,
gm-fab {
  border-color: green;
}`",'should replace values provided to $replace for theme.property()','replace.test.css',"`.simple {
  width: calc(100% - 20px);
}

.var {
  width: calc(16px + 8px);
  /* @alternate */
  width: calc(var(--m-foo, 16px) + var(--m-bar, 8px));
  height: calc(16px + 8px + 16px + 8px);
  /* @alternate */
  height: calc(var(--m-foo, 16px) + var(--m-bar, 8px) + var(--m-foo, 16px) + var(--m-bar, 8px));
}

.multiple {
  width: calc(8px + 8px + 8px);
}

.list {
  padding: 0 16px;
}`",'should allow overriding theme color values using @use/with','override.test.css','--mdc-theme-primary: teal','--mdc-theme-secondary: crimson','validate-keys Should throw error when unsupported key is provided','theme-validate-keys.test.css','Unsupported keys found: foobar.','validate-keys Should throw error when custom properties are provided','Custom properties are not supported for theme map keys: three',MDCTooltip,'.mdc-tooltip','attachTo throws an error when anchor element is missing','[aria-describedby]','#initialSyncWithDOM registers mouseenter event handler on the anchor element',anchorElem,setupTestWithMockFoundation,handleAnchorMouseEnter,'#destroy deregisters mouseenter event handler on the anchor element','#initialSyncWithDOM registers focus event handler on the anchor element',handleAnchorFocus,'#destroy deregisters focus event handler on the anchor element','#initialSyncWithDOM registers mouseleave event handler on the anchor element',handleAnchorMouseLeave,'#destroy deregisters mouseleave event handler on the anchor element','#initialSyncWithDOM registers transitionend event handler on the tooltip','#destroy deregisters transitionend event handler on the tooltip','#initialSyncWithDOM registers touchstart event handler on the tooltip',handleAnchorTouchstart,'#destroy deregisters touchstart event handler on the tooltip','#initialSyncWithDOM registers touchend event handler on the tooltip',handleAnchorTouchend,'#destroy deregisters touchend event handler on the tooltip','#setTooltipPosition forwards to MDCFoundation#setTooltipPosition',setTooltipPosition,xPos,XPosition,CENTER,yPos,YPosition,ABOVE,'#setAnchorBoundaryType forwards to MDCFoundation#setAnchorBoundaryType',setAnchorBoundaryType,AnchorBoundaryType,'#hide forwards to MDCFoundation#hide',hide,'#isShown forwards to MDCFoundation#isShown',isShown,'#isShown returns false if the tooltip is not shown','detects tooltip labels that span multiple lines',"`<div>
        <button data-tooltip-id=""tt0"">
          anchor
        </button>
        <div id=""tt0""
             class=""mdc-tooltip""
             aria-role=""tooltip"">
          <div class=""mdc-tooltip__surface"">
            this is as long tooltip label that will overflow the maximum width
            and will create a multi-line tooltip label
          </div>
        </div>
      </div>`",tooltipElem,'#tt0',maxWidth,MAX_WIDTH,MIN_HEIGHT,'[data-tooltip-id]',SHOW_DELAY_MS,MULTILINE_TOOLTIP,'default interactive rich tooltip tests',"`<div>
        <button data-tooltip-id=""tt0"" aria-haspopup=""dialog"" aria-expanded=""false"">
          anchor
        </button>
        <div id=""tt0"" class=""mdc-tooltip mdc-tooltip--rich"" aria-hidden=""true"" role=""dialog"">
          <div class=""mdc-tooltip__surface"">
            <h2 class=""mdc-tooltip__title"">Title</h2>
            <p class=""mdc-tooltip__content"">Content <a class=""mdc-tooltip__content-link"" href=""google.com"">link</a></p>
            <div class=""mdc-tooltip--rich-actions"">
              <button class=""mdc-button mdc-tooltip__action"">
                <div class=""mdc-button__ripple""></div>
                <span class=""mdc-button__label"">Action</span>
              </button>
            </div>
          </div>
        </div>
      </div>`",'.mdc-tooltip--rich','sets aria-expanded on anchor to true when showing rich tooltip','aria-expanded remains true on anchor when mouseleave anchor and mouseenter rich tooltip','aria-expanded remains true on anchor when mouseleave rich tooltip and mouseenter anchor','aria-expanded becomes true on anchor when anchor is focused','aria-expanded becomes false on anchor when ESC is pressed from the tooltip','anchor becomes focused when ESC is pressed from the tooltip while focus is in tooltip',tooltipActionButton,'.mdc-tooltip__action','aria-expanded becomes false on anchor when anchor blurs and non-tooltip element is focused',isIE,relatedTarget,'aria-expanded remains true on anchor when anchor blurs and rich tooltip focuses','aria-expanded becomes false on anchor when rich tooltip focuses out and anchor does not receive focus','aria-expanded remains true on anchor when rich tooltip focuses out and anchor receives focus','aria-expanded remains true on anchor when rich tooltip focuses out and element within tooltip receives focus',tooltipContent,'.mdc-tooltip__content','persistent non-interactive rich tooltip tests',"`<div>
        <button aria-describedby=""tt0"">
          anchor
        </button>
        <div id=""tt0"" class=""mdc-tooltip mdc-tooltip--rich"" aria-hidden=""true"" data-mdc-tooltip-persistent=""true"" role=""tooltip"" tabindex=""-1"">
          <div class=""mdc-tooltip__surface"">
            <p class=""mdc-tooltip__content"">
              demo tooltip
            </p>
          </div>
        </div>
      </div>`",'#initialSyncWithDOM registers click event handler on the anchor element','handleAnchorClick',handleAnchorClick,'#destroy deregisters click event handler on the anchor element','aria-hidden remains true on tooltip when mouseenter anchor','set aria-hidden to false on tooltip when anchor clicked while tooltip is hidden','set aria-hidden to true on tooltip when anchor clicked while tooltip is shown','set aria-hidden to true on tooltip when element other than anchor or the tooltip is clicked while tooltip is shown','aria-hidden remains false on tooltip when tooltip is clicked while tooltip is shown','aria-hidden remains false on tooltip when mouseleave anchor while tooltip is shown','aria-hidden remains false on tooltip when mouseleave tooltip while tooltip is shown','aria-hidden becomes true on tooltip when anchor blurs and non-tooltip element is focused','aria-hidden remains false on tooltip when anchor blurs and rich tooltip focuses',MDCTooltipFoundation,'getComputedStyleProperty','setSurfaceAnimationStyleProperty','getViewportWidth','getViewportHeight','getTooltipSize','getAnchorBoundingRect','getParentBoundingRect','getAnchorAttribute','setAnchorAttribute','anchorContainsElement','tooltipContainsElement','focusAnchorElement','registerAnchorEventHandler','deregisterAnchorEventHandler','registerDocumentEventHandler','deregisterDocumentEventHandler','notifyHidden','getTooltipCaretBoundingRect','setTooltipCaretStyle','clearTooltipCaretStyles','getActiveElement','#isRich returns false for plain tooltip',RICH,isRich,'#isRich returns true for rich tooltip',setUpFoundationTestForRichTooltip,'#isPersistent returns false for default rich tooltip','#isPersistent returns true for persistent rich tooltip','#isShown returns true if the tooltip is currently shown','#isShown returns false if the tooltip is currently hidden','#show modifies tooltip element so it is shown',SHOWING,"'#show does not set aria-expanded=""true"" on anchor element for non-interactive rich tooltip'",setAnchorAttribute,"'#show sets aria-expanded=""true"" on anchor element for interactive rich tooltip'",isInteractive,'#show adds SHOWN and SHOWN_TRANSITION class after rAF',SHOWN,SHOWING_TRANSITION,'#hide cancels a pending rAF',HIDE,HIDE_TRANSITION,'#show registers mouseenter event listener on the tooltip for rich tooltip','#show registers mouseleave event listener on the tooltip for rich tooltip','#hide deregisters mouseenter event listeners on the tooltip for rich tooltip','#hide deregisters mouseleave event listeners on the tooltip for rich tooltip','#show registers blur event listener on the anchor element',registerAnchorEventHandler,'#show registers click and keydown event listeners on the document',registerDocumentEventHandler,'#hide deregisters blur event listeners on the anchor',deregisterAnchorEventHandler,'#hide deregisters click and keydown event listeners on the document',deregisterDocumentEventHandler,'#show registers scroll and resize event listeners on the window','#hide deregisters scroll and resize event listeners on the window','#hide modifies tooltip element so it is hidden','#show only performs an action if tooltip is hidden','#show cancels a pending hideTimeout',hideTimeout,HIDE_DELAY_MS,'#hide only performs an action if tooltip is shown',"'#handleTransitionEnd removes the SHOWING, SHOWING_TRANSITION, HIDE, and HIDE_TRANSITION classes'",'#handleTransitionEnd after #hide sends notification that tooltip has been hidden',notifyHidden,'#handleTransitionEnd after #show does not send notification that tooltip has been hidden','clears any in-progress animations befores starting a show animation','clears any in-progress animations befores starting a hide animation',ESC_EVENTS,'#handleKeydown does not hide the tooltip if the ESCAPE key was not pressed',expectTooltipNotToHaveBeenHidden,'#handleKeydown does not restore focus to the anchorElement if the activeElement is not a HTMLElement',getActiveElement,focusAnchorElement,'#handleKeydown does not restore focus to the anchorElement if the activeElement is not within tooltip',tooltipContainsElement,'#handleKeydown restores focus to the anchorElement if the activeElement was within tooltip','#handleDocumentClick hides the tooltip immediately for plain tooltips',mockClickEvent,handleDocumentClick,expectTooltipToHaveBeenHidden,'#handleDocumentClick hides the tooltip immediately for default rich tooltips','#handleDocumentClick hides the tooltip immediately for persistent rich tooltips if there is no event target','#handleDocumentClick hides the tooltip immediately for persistent rich tooltips if event target is not HTMLElement','not an HTMLElement','#handleDocumentClick hides the tooltip immediately for persistent rich tooltips if event target is not within anchorElement or tooltipElement',anchorContainsElement,'#handleDocumentClick does not hide the tooltip for persistent rich tooltips if event target is within anchorElement','#handleDocumentClick does not hide the tooltip for persistent rich tooltips if event target is within tooltipElement','#handleAnchorMouseLeave does not clear showTimeout after #handleAnchorMouseEnter is called',showTimeout,'#handleAnchorMouseEnter clears any pending hideTimeout','#handleTooltipMouseLeave clears any pending showTimeout for plain tooltips',handleTooltipMouseLeave,'#handleTooltipMouseLeave clears any pending showTimeout for rich tooltips','#handleRichTooltipFocusOut hides the tooltip immediately if there is no related target',handleRichTooltipFocusOut,'#handleRichTooltipFocusOut leaves tooltip open if related target is null and tooltip is interactive','#handleRichTooltipFocusOut  hides the tooltip immediately if related target is null and tooltip is not interactive','#handleRichTooltipFocusOut hides the tooltip immediately if related target is not within the anchor or the tooltip','#handleRichTooltipFocusOut does not hide the tooltip if related target is within the anchor','#handleRichTooltipFocusOut does not hide the tooltip if related target is within the tooltip','#handleAnchorMouseLeave clears any pending showTimeout','#handleTooltipMouseEnter keeps tooltip visible',handleTooltipMouseEnter,'#hide clears any pending showTimeout',"'#hide deregisters ""contextmenu"" event listeners on the window'",'contextmenu','properly calculates tooltip position (START alignment)',anchorHeight,expectedTooltipHeight,BOUNDED_ANCHOR_GAP,getViewportWidth,getAnchorBoundingRect,82,getTooltipSize,`32px`,'properly sets tooltip transform origin (left top)',setSurfaceAnimationStyleProperty,'properly calculates tooltip position (END alignment)',anchorBoundingRect,expectedTooltipTop,tooltipSize,480,`350px`,'properly sets tooltip transform origin (right top)','properly calculates tooltip position (CENTER alignment)',`80px`,'properly sets tooltip transform origin (center top)','properly calculates tooltip position with an UNBOUNDED anchor',UNBOUNDED_ANCHOR_GAP,'sets width of rich tooltip after positioning',testWidth,getComputedStyleProperty,'properly calculates rich tooltip position (START alignment)',parentBoundingRect,expectedTooltipLeft,getParentBoundingRect,'properly sets rich tooltip transform origin (right top)','properly calculates rich tooltip position (END alignment)','properly calculates rich tooltip transform origin (left top)','allows users to specify the tooltip position for plain tooltips (START alignment instead of CENTER)',232,'ignores user specification if positioning violates threshold for plain tooltips (CENTER alignment instead of START)','allows users to specify the tooltip position for plain tooltips (END alignment instead of START)',`50px`,'allows users to specify the tooltip position for rich tooltips (END alignment instead of START)',132,'ignores user specification if positioning violates threshold for rich tooltips (END alignment instead of START)','ignores user specification if positioning is not supported for rich tooltips (END alignment instead of CENTER)','properly calculates START tooltip position in RTL',"'properly calculates ""right top"" transform origin in RTL'",'properly calculates END tooltip position in RTL',"'properly calculates ""left top"" transform origin in RTL'",'positions tooltip within viewport if threshold cannot be maintained (x-axis)',`400px`,'allows users to specify a position within viewport if threshold cannot be maintained (START alignment instead of CENTER)',`10px`,'properly calculates tooltip y-position (ABOVE alignment)',125,getViewportHeight,'properly calculates tooltip transform origin (left bottom)','properly calculates tooltip y-position (BELOW alignment)',BELOW,'positions tooltip within viewport if threshold cannot be maintained (y-axis)','ignores user specification if positioning violates threshold (BELOW alignment instead of ABOVE)',140,'allows users to specify a position within viewport if threshold cannot be maintained (ABOVE alignment instead of BELOW)','#destroy clears showTimeout','#destroy clears requestAnimationFrame from show','frameId',ANIMATION_FRAME,'#destroy clears hideTimeout','#destroy removes tooltip classes','#destroy cancels all animation frame requests',handleWindowChangeEvent,'animFrame','rafIDs','#destroy removes the event listeners for plain tooltips','#destroy removes the event listeners for default rich tooltips','#destroy removes the event listeners for persistent rich tooltips','recalculates position of tooltip if anchor position changes',EventListener,yPositionDiff,xPositionDiff,newAnchorBoundingRect,'#show registers additional user-specified scroll handlers',scrollableAncestor,'scrollable',repositionTooltipOnAnchorMove,'repositionTooltipOnAnchorMove',attachScrollHandler,'#hide deregisters additional user-specified scroll handlers',removeScrollHandler,'recalculates position of tooltip if user specified ancestor is scrolled',newParentBoundingRect,newExpectedTooltipTop,CARET_POSITION_STYLES,'properly calculates tooltip with caret position (ABOVE_START)',CARET_HEIGHT,CARET_INDENTATION,CARET_WIDTH,hasCaret,850,getTooltipCaretBoundingRect,ANIMATION_SCALE,'properly calculates tooltip with caret position (ABOVE_CENTER)','properly calculates tooltip with caret position (ABOVE_END)','properly calculates tooltip with caret position (BELOW_START)','properly calculates tooltip with caret position (BELOW_CENTER)','properly calculates tooltip with caret position (BELOW_END)','properly calculates tooltip with caret position (TOP_SIDE_START)',85,'properly calculates tooltip with caret position (CENTER_SIDE_START)','properly calculates tooltip with caret position (BOTTOM_SIDE_START)','properly calculates tooltip with caret position (TOP_SIDE_END)',95,'properly calculates tooltip with caret position (CENTER_SIDE_END)',RICH_TOOLTIP_WIDTH,RICH_TOOLTIP_HEIGHT,'properly calculates tooltip with caret position (BOTTOM_SIDE_END)','properly calculates tooltip with caret SIDE_END position in RTL',withCaretPos,PositionWithCaret,BOTTOM_SIDE_END,'properly calculates tooltip with caret SIDE_START position in RTL',BOTTOM_SIDE_START,'properly calculates tooltip with caret START position in RTL',ABOVE_START,'properly calculates tooltip with caret END position in RTL',ABOVE_END,'allows users to specify the position for tooltips with carets (TOP_SIDE_START instead of ABOVE_START)',TOP_SIDE_START,'ignores user specification if positioning violates threshold for tooltips with caret (BELOW alignment instead of ABOVE)','handles positioning for tooltip with caret when all possible positions are invalid (BELOW_END)',135,MIN_VIEWPORT_TOOLTIP_THRESHOLD,styleValues,BELOW_END,setTooltipCaretStyle,yAlignment,yAxisPx,xAlignment,xAxisPx,`rotate(${,rotation,}deg) skewY(${,skew,}deg) scaleX(${,scaleX,'handles positioning for tooltip with caret when all possible positions are invalid (ABOVE_START)',viewportWidth,viewportHeight,'handles positioning for tooltip with caret when all possible positions are invalid (in RTL)',CARET_POSITION_STYLES_RTL,BELOW_START,xTransformOrigin,yTransformOrigin,'handles positioning for tooltip with caret when only one dimension is within the viewport threshold (ABOVE_CENTER)','145px','15px','#handleTransitionEnd after #hide does NOT sends notification that tooltip has been hidden if showTimeout is set','#handleTargetScroll calls #adapter.getViewportScrollY',handleTargetScroll,getViewportScrollY,'#handleTargetScroll calls #adapter.addClass if adapter.getViewportScrollY > 0',MDCTopAppBarFoundation,FIXED_SCROLLED_CLASS,'#handleTargetScroll calls #adapter.removeClass if ','adapter.getViewportScrollY < 0 but had just scrolled down','#handleTargetScroll does not call #adapter.removeClass if was not scrolled yet','#handleTargetScroll calls #adapter.addClass only once if it already scrolled','short top app bar: scrollHandler calls #adapter.getViewportScrollY','short top app bar: scrollHandler does not call getViewportScrollY method ','if short collapsed class is on the component',SHORT_COLLAPSED_CLASS,'short top app bar: #adapter.addClass called when page is scrolled from the top','short top app bar: #adapter.removeClass called when page is scrolled to the top',getTotalActionItems,'short top app bar: #adapter.addClass is called if it has an action item',SHORT_HAS_ACTION_ITEM_CLASS,'short top app bar: #adapter.addClass is not called if it does not have an action item','isCollapsed returns false initially if top-app-bar has not scrolled',isCollapsed,'isCollapsed returns true if top-app-bar is collapsed','isCollapsed returns false when page is scrolled to the top','setAlwaysCollapsed(true) sets bar to be collapsed',SHORT_CLASS,setAlwaysCollapsed,'setAlwaysCollapsed(true) will keep bar collapsed','setAlwaysCollapsed(false) will keep bar collapsed when scrolled','setAlwaysCollapsed is called on init','getAlwaysCollapsed returns false by default',getAlwaysCollapsed,'getAlwaysCollapsed matches value of setAlwaysCollapsed','top app bar scroll: throttledResizeHandler updates topAppBarHeight if the top app bar height changes',topAppBarHeight,getTopAppBarHeight,throttledResizeHandler,'top app bar scroll: throttledResizeHandler does not update topAppBarHeight if height is the same','top app bar : moveTopAppBar update required transition from fully shown to 1px scrolled',currentAppBarOffsetTop,checkForUpdate,moveTopAppBar,'-1px','top app bar : moveTopAppBar update required transition from 1px shown to fullyHidden ',MAX_TOP_APP_BAR_HEIGHT,'px','top app bar : moveTopAppBar update is not required results in no top app bar style change','top app bar : checkForUpdate returns true if top app bar is not docked',wasDocked,'top app bar : checkForUpdate updates wasDocked to true if top app bar becomes docked','top app bar : checkForUpdate returns false if top app bar is docked and fullyShown','top app bar : checkForUpdate returns false if top app bar is docked and fullyHidden',isDockedShowing,'top app bar : checkForUpdate returns true if top app bar is docked but not fullyShown/fullyHidden',63,'top app bar : handleTargetScroll does not update currentAppBarOffsetTop if ','isCurrentlyBeingResized is true',isCurrentlyBeingResized,'top app bar : handleTargetScroll subtracts the currentAppBarOffsetTop amount scrolled','top app bar : handleTargetScroll negative scroll results in currentAppBarOffsetTop being 0','top app bar : handleTargetScroll scroll greater than top app bar height results in ','currentAppBarOffsetTop being negative topAppBarHeight','top app bar : handleTargetScroll scrolling does not generate a ','positive currentAppBarOffsetTop','top app bar : resize events should set isCurrentlyBeingResized to true',handleWindowResize,'top app bar : resize events throttle multiple calls of throttledResizeHandler ',resizeThrottleId,DEBOUNCE_THROTTLE_RESIZE_TIME_MS,'top app bar : resize events debounce changing isCurrentlyBeingResized to false ',debounceId,resizeDebounceId,"'#destroy calls #adapter.setStyle(top, """")'",'attachTo initializes and returns an MDCTopAppBar instance',MDCTopAppBar,'constructor instantiates icon ripples for all icons',rippleFactory,'constructor does not instantiate ripple for nav icon when not present','navIcon click event calls #foundation.handleNavigationClick',navIcon,'.mdc-top-app-bar__navigation-icon',handleNavigationClick,'scroll event triggers #foundation.handleTargetScroll','resize event triggers #foundation.handleWindowResize','destroy destroys icon ripples',iconRipples,'destroy destroys scroll event handler','destroy destroys resize event handler','destroy destroys handleNavigationClick handler','#setScrollTarget deregisters and registers scroll handler on provided target',fakeTarget1,fakeTarget2,setScrollTarget,scrollTarget,'getDefaultFoundation returns the appropriate foundation for default',ROOT_SELECTOR,MDCShortTopAppBarFoundation,MDCFixedTopAppBarFoundation,'getDefaultFoundation returns the appropriate foundation for fixed',FIXED_CLASS,'getDefaultFoundation returns the appropriate foundation for short','adapter#setStyle sets a style attribute on the root element','adapter#getViewportScrollY returns scroll distance','adapter#getViewportScrollY returns scroll distance when scrollTarget is not window',mockContent,'adapter#getTotalActionItems returns the number of action items on the opposite side of the menu',adapterReturn,ACTION_ITEM_SELECTOR,'adapter#notifyNavigationIconClicked emits the NAVIGATION_EVENT',notifyNavigationIconClicked,MDCTopAppBarBaseFoundation,'getTopAppBarHeight','notifyNavigationIconClicked','getViewportScrollY','getTotalActionItems','#handleNavigationClick emits a navigation event','should take care of element either passed as a CSS selector or DOM element',fixtureEl,"'<div class=""alert""></div>'",alertEl,'.alert',alertBySelector,Alert,alertByElement,_element,'should return version',VERSION,'DATA_KEY','should return plugin data key',DATA_KEY,'bs.alert','data-api','should close an alert without instantiating it manually',"'<div class=""alert"">'","'  <button type=""button"" data-bs-dismiss=""alert"">x</button>'",toHaveSize,'should close an alert without instantiating it manually with the parent selector',"'  <button type=""button"" data-bs-target="".alert"" data-bs-dismiss=""alert"">x</button>'",'should close an alert','spy',getTransitionDurationFromElement,alert,'closed.bs.alert','should close alert with fade class',"'<div class=""alert fade""></div>'",nothing,'should not remove alert if close event is prevented',getAlert,'close.bs.alert','should not fire closed event','dispose','should dispose an alert',getInstance,'jQueryInterface','should handle config passed and toggle existing alert',jQueryMock,jQueryInterface,elements,'should create new alert instance and call close','should just create an alert instance without calling close','should throw an error on undefined method','<div></div>','undefinedMethod',TypeError,"`No method named ""${",'should throw an error on protected method','_getConfig','getInstance','should return alert instance',toBeInstanceOf,'should return null when there is no alert instance','getOrCreateInstance',getOrCreateInstance,'should return new instance when there is no alert instance',DummyClass,`bs.${,'NAME','should throw an Error if it is not initialized',BaseComponent,NAME,'should return plugin NAME','EVENT_KEY','should return plugin event key',EVENT_KEY,`.bs.${,'Public Methods','constructor',"'should accept element, either passed as a CSS selector or DOM element'","'<div id=""foo""></div>'","'<div id=""bar""></div>'",'#foo',elInstance,selectorInstance,'#bar',"'should not initialize and add element record to Data (caching), if argument `element` is not an HTML element'",'should dispose an component',createInstance,'should de-register element event listeners',EventHandler,off,'should return an instance',"'should accept element, either passed as a CSS selector, jQuery element, or DOM element'",fakejQueryObject,jquery,'should return null when there is no instance',"'<button data-bs-toggle=""button"">Placeholder</button>'",buttonEl,"'[data-bs-toggle=""button""]'",buttonBySelector,buttonByElement,'VERSION','should return plugin version','bs.button','should toggle active class on click',"'<button class=""btn"" data-bs-toggle=""button"">btn</button>'","'<button class=""btn testParent"" data-bs-toggle=""button""><div class=""test""></div></button>'",btn,'.btn',divTest,'.test',btnTestParent,'.testParent',toHaveClass,'toggle','should toggle aria-pressed',"'<button class=""btn"" data-bs-toggle=""button"" aria-pressed=""false""></button>'",btnEl,'should dispose a button',"'<button class=""btn"" data-bs-toggle=""button""></button>'",'should handle config passed and toggle existing button','should create new button instance and call toggle','should just create a button instance without calling toggle','should return button instance','should return null when there is no button instance','should return new instance when there is no button instance',Carousel,'Default','should return plugin default config',Default,'bs.carousel',"'<div id=""myCarousel"" class=""carousel slide""></div>'",carouselEl,'#myCarousel',carouselBySelector,carouselByElement,'should start cycling if `ride`===`carousel`',"'<div id=""myCarousel"" class=""carousel slide"" data-bs-ride=""carousel""></div>'",carousel,_interval,'should not start cycling if `ride`!==`carousel`',"'<div id=""myCarousel"" class=""carousel slide"" data-bs-ride=""true""></div>'",'should go to next item if right arrow key is pressed',"'<div id=""myCarousel"" class=""carousel slide"">'","'  <div class=""carousel-inner"">'","'    <div class=""carousel-item active"">item 1</div>'","'    <div id=""item2"" class=""carousel-item"">item 2</div>'","'    <div class=""carousel-item"">item 3</div>'",'  </div>','_keydown','slid.bs.carousel','.active','#item2',_keydown,'should ignore keyboard events if data-bs-keyboard=false',"'<div id=""myCarousel"" class=""carousel slide"" data-bs-keyboard=""false"">'",'trigger','keydown.bs.carousel','should ignore mouse events if data-bs-pause=false',"'<div id=""myCarousel"" class=""carousel slide"" data-bs-pause=""false"">'",'hover.bs.carousel','should go to previous item if left arrow key is pressed',"'    <div id=""item1"" class=""carousel-item"">item 1</div>'","'    <div class=""carousel-item active"">item 2</div>'",'#item1','should not prevent keydown if key is not ARROW_LEFT or ARROW_RIGHT',"'    <div class=""carousel-item"">item 2</div>'",'should ignore keyboard events within <input>s and <textarea>s',"'    <div class=""carousel-item active"">'","'      <input type=""text"">'",'      <textarea></textarea>','    </div>',"'    <div class=""carousel-item""></div>'",spyKeydown,spySlide,'_slide','target','should not slide if arrow key is pressed and carousel is sliding',_isSliding,'should wrap around from end to start when wrap option is true',"'    <div id=""one"" class=""carousel-item active""></div>'","'    <div id=""two"" class=""carousel-item""></div>'","'    <div id=""three"" class=""carousel-item"">item 3</div>'",getActiveId,'.carousel-item.active',activeId,'should stay at the start when the prev method is called and wrap is false',firstElement,'#one','carousel slid when it should not have slid','should not add touch event listeners if touch = false','_addTouchEventListeners',touch,_addTouchEventListeners,_swipeHelper,'should not add touch event listeners if touch supported = false',Swipe,'isSupported',_addEventListeners,'should add touch event listeners by default',ontouchstart,noop,'should allow swiperight and call _slide (prev) with pointer events',supportPointerEvent,head,append,stylesCarousel,Simulator,setType,"'<div class=""carousel"" data-bs-interval=""false"">'","'    <div id=""item"" class=""carousel-item"">'","'      <img alt="""">'",'.carousel','#item',_slide,'prev',gestures,swipe,deltaX,'should allow swipeleft and call next with pointer events',"'    <div id=""item"" class=""carousel-item active"">'","'    <div class=""carousel-item"">'",'should allow swiperight and call _slide (prev) with touch events',clearPointerEvents,restorePointerEvents,'should allow swipeleft and call _slide (next) with touch events','should not slide when swiping and carousel is sliding','should not allow pinch with touch events',"'<div class=""carousel"" data-bs-interval=""false""></div>'",_deltaX,'should call pause method on mouse over with pause equal to hover',"'<div class=""carousel""></div>'",'pause',mouseOverEvent,pause,'should call `maybeCycle` on mouse out with pause equal to hover',"'<div class=""carousel"" data-bs-ride=""true""></div>'",'_maybeEnableCycle','cycle',mouseOutEvent,_maybeEnableCycle,cycle,'should not slide if the carousel is sliding','should not fire slid when slide is prevented',slidEvent,doneTest,'slide.bs.carousel',"'should fire slide event with: direction, relatedTarget, from and to'",onSlide,'carousel-item',onSlide2,"'should fire slid event with: direction, relatedTarget, from and to'",onSlid,onSlid2,'should update the active element to the next item before sliding',"'    <div id=""secondItem"" class=""carousel-item"">item 2</div>'",secondItemEl,'#secondItem',_activeElement,'should continue cycling if it was already','should update indicators if present',"'  <div class=""carousel-indicators"">'","'    <button type=""button"" id=""firstIndicator"" data-bs-target=""myCarousel"" data-bs-slide-to=""0"" class=""active"" aria-current=""true"" aria-label=""Slide 1""></button>'","'    <button type=""button"" id=""secondIndicator"" data-bs-target=""myCarousel"" data-bs-slide-to=""1"" aria-label=""Slide 2""></button>'","'    <button type=""button"" data-bs-target=""myCarousel"" data-bs-slide-to=""2"" aria-label=""Slide 3""></button>'","'    <div class=""carousel-item"" data-bs-interval=""7"">item 2</div>'",firstIndicator,'#firstIndicator',secondIndicator,'#secondIndicator','aria-current','should call next()/prev() instance methods when clicking the respective direction buttons',"'<div id=""carousel"" class=""carousel slide"">'","'  <button class=""carousel-control-prev"" type=""button"" data-bs-target=""#carousel"" data-bs-slide=""prev""></button>'","'  <button class=""carousel-control-next"" type=""button"" data-bs-target=""#carousel"" data-bs-slide=""next""></button>'",'#carousel',prevBtnEl,'.carousel-control-prev',nextBtnEl,'.carousel-control-next',nextSpy,prevSpy,'nextWhenVisible','should not call next when the page is not visible',"'<div style=""display: none;"">'","'  <div class=""carousel"" data-bs-interval=""false""></div>'",nextWhenVisible,"'should trigger transitionend if the carousel have carousel-item-next or carousel-item-prev class, cause is sliding'","'    <div class=""carousel-item carousel-item-next"">item 2</div>'","'  <div class=""carousel-control-prev""></div>'","'  <div class=""carousel-control-next""></div>'",_clearInterval,'_clearInterval','should set an interval','setInterval','should clear interval if there is one','clearInterval','should get interval from data attribute on the active item element',"'    <div class=""carousel-item active"" data-bs-interval=""7"">item 1</div>'","'    <div id=""secondItem"" class=""carousel-item"" data-bs-interval=""9385"">item 2</div>'",1814,_config,9385,'to','should go directly to the provided index',"'    <div id=""item1"" class=""carousel-item active"">item 1</div>'","'    <div id=""item3"" class=""carousel-item"">item 3</div>'",'#item3','should return to a previous slide if the provided index is lower than the current',"'    <div class=""carousel-item"">item 1</div>'","'    <div id=""item3"" class=""carousel-item active"">item 3</div>'",'should do nothing if a wrong index is provided','should not continue if the provided is the same compare to the current one','should wait before performing to if a slide is sliding','rtl function',"'""_directionToOrder"" and ""_orderToDirection"" must return the right results'",_directionToOrder,_orderToDirection,"'""_directionToOrder"" and ""_orderToDirection"" must return the right results when rtl=true'",'ltl',"'""_slide"" has to call _directionToOrder and ""_orderToDirection""'",'_orderToDirection',"'""_slide"" has to call ""_directionToOrder"" and ""_orderToDirection"" when rtl=true'",'should destroy a carousel',addEventSpy,removeEventSpy,swipeHelperSpy,expectedArgs,_supportPointerEvents,'should return carousel instance','should return null when there is no carousel instance','should return new instance when there is no carousel instance','should return new instance when there is no carousel instance with given configuration','should return the instance when exists without given configuration',carousel2,'should create a carousel','should not re create a carousel','should call to if the config is a number',slideTo,'should throw error on undefined method',"'should init carousels with data-bs-ride=""carousel"" on load'","'<div data-bs-ride=""carousel""></div>'",loadEvent,'load','should create carousel and go to the next slide on click (with real button controls)',"'  <button class=""carousel-control-prev"" data-bs-target=""#myCarousel"" type=""button"" data-bs-slide=""prev""></button>'","'  <button id=""next"" class=""carousel-control-next"" data-bs-target=""#myCarousel"" type=""button"" data-bs-slide=""next""></button>'",'#next',item2,'should create carousel and go to the next slide on click (using links as controls)',"'  <a class=""carousel-control-prev"" href=""#myCarousel"" role=""button"" data-bs-slide=""prev""></a>'","'  <a id=""next"" class=""carousel-control-next"" href=""#myCarousel"" role=""button"" data-bs-slide=""next""></a>'",'should create carousel and go to the next slide on click with data-bs-slide-to',"'<div id=""myCarousel"" class=""carousel slide"" data-bs-ride=""true"">'","'  <div id=""next"" data-bs-target=""#myCarousel"" data-bs-slide-to=""1""></div>'",'should do nothing if no selector on click on arrows',"'  <button id=""next"" class=""carousel-control-next"" type=""button"" data-bs-slide=""next""></button>'",'should do nothing if no carousel class on click on arrows',"'<div id=""myCarousel"" class=""slide"">'",Collapse,'bs.collapse',"'<div class=""my-collapse""></div>'",collapseEl,'div.my-collapse',collapseBySelector,collapseByElement,'should allow jquery object in parent config',"'<div class=""my-collapse"">'","'  <div class=""item"">'","'    <a data-bs-toggle=""collapse"" href=""#"">Toggle item</a>'","'    <div class=""collapse"">Lorem ipsum</div>'",'div.collapse',myCollapseEl,'.my-collapse',collapse,'should allow non jquery object in parent config','should allow string selector in parent config','should call show method if show class is not present','should call hide method if show class is present',"'<div class=""show""></div>'",'.show','should find collapse children if they have collapse class too not only data-bs-parent',"'    <a data-bs-toggle=""collapse"" href=""#"">Toggle item 1</a>'","'    <div id=""collapse1"" class=""collapse show"">Lorem ipsum 1</div>'","'    <a id=""triggerCollapse2"" data-bs-toggle=""collapse"" href=""#"">Toggle item 2</a>'","'    <div id=""collapse2"" class=""collapse"">Lorem ipsum 2</div>'",collapseEl1,'#collapse1',collapseEl2,'#collapse2',collapseList,'.collapse','shown.bs.collapse','should do nothing if is transitioning',_isTransitioning,'should do nothing if already shown','should show a collapsed element',"'<div class=""collapse"" style=""height: 0px;""></div>'",'show.bs.collapse','should show a collapsed element on width',"'<div class=""collapse collapse-horizontal"" style=""width: 0px;""></div>'",'should collapse only the first collapse',"'<div class=""card"" id=""accordion1"">'","'  <div id=""collapse1"" class=""collapse""></div>'","'<div class=""card"" id=""accordion2"">'","'  <div id=""collapse2"" class=""collapse show""></div>'",el1,el2,'should be able to handle toggling of other children siblings',"'<div id=""parentGroup"" class=""accordion"">'","'  <div id=""parentHeader"" class=""accordion-header"">'","'    <button data-bs-target=""#parentContent"" data-bs-toggle=""collapse"" role=""button"" class=""accordion-toggle"">Parent</button>'","'  <div id=""parentContent"" class=""accordion-collapse collapse"" aria-labelledby=""parentHeader"" data-bs-parent=""#parentGroup"">'","'    <div class=""accordion-body"">'","'      <div id=""childGroup"" class=""accordion"">'","'        <div class=""accordion-item"">'","'          <div id=""childHeader1"" class=""accordion-header"">'","'            <button data-bs-target=""#childContent1"" data-bs-toggle=""collapse"" role=""button"" class=""accordion-toggle"">Child 1</button>'",'          </div>',"'          <div id=""childContent1"" class=""accordion-collapse collapse"" aria-labelledby=""childHeader1"" data-bs-parent=""#childGroup"">'",'            <div>content</div>','        </div>',"'          <div id=""childHeader2"" class=""accordion-header"">'","'            <button data-bs-target=""#childContent2"" data-bs-toggle=""collapse"" role=""button"" class=""accordion-toggle"">Child 2</button>'","'          <div id=""childContent2"" class=""accordion-collapse collapse"" aria-labelledby=""childHeader2"" data-bs-parent=""#childGroup"">'",'      </div>',parentBtn,"'[data-bs-target=""#parentContent""]'",childBtn1,"'[data-bs-target=""#childContent1""]'",childBtn2,"'[data-bs-target=""#childContent2""]'",parentCollapseEl,'#parentContent',childCollapseEl1,'#childContent1',childCollapseEl2,'#childContent2','should not change tab tabpanels descendants on accordion',"'<div class=""accordion"" id=""accordionExample"">'","'  <div class=""accordion-item"">'","'    <h2 class=""accordion-header"" id=""headingOne"">'","'      <button class=""accordion-button"" type=""button"" data-bs-toggle=""collapse"" data-bs-target=""#collapseOne"" aria-expanded=""true"" aria-controls=""collapseOne"">'",'        Accordion Item #1','      </button>','    </h2>',"'    <div id=""collapseOne"" class=""accordion-collapse collapse show"" aria-labelledby=""headingOne"" data-bs-parent=""#accordionExample"">'","'      <div class=""accordion-body"">'",'        <nav>',"'          <div class=""nav nav-tabs"" id=""nav-tab"" role=""tablist"">'","'            <button class=""nav-link active"" id=""nav-home-tab"" data-bs-toggle=""tab"" data-bs-target=""#nav-home"" type=""button"" role=""tab"" aria-controls=""nav-home"" aria-selected=""true"">Home</button>'","'            <button class=""nav-link"" id=""nav-profile-tab"" data-bs-toggle=""tab"" data-bs-target=""#nav-profile"" type=""button"" role=""tab"" aria-controls=""nav-profile"" aria-selected=""false"">Profile</button>'",'        </nav>',"'        <div class=""tab-content"" id=""nav-tabContent"">'","'          <div class=""tab-pane fade show active"" id=""nav-home"" role=""tabpanel"" aria-labelledby=""nav-home-tab"">Home</div>'","'          <div class=""tab-pane fade"" id=""nav-profile"" role=""tabpanel"" aria-labelledby=""nav-profile-tab"">Profile</div>'",'#collapseOne',activeTabPane,'#nav-home',times,'hidden.bs.collapse','should not fire shown when show is prevented',"'<div class=""collapse""></div>'",expectEnd,'should not fire shown event','should hide a collapsed element',"'<div class=""collapse show""></div>'",'should not fire hidden when hide is prevented','hide.bs.collapse','should not fire hidden event','should destroy a collapse','should prevent url change if click on nested elements',"'<a role=""button"" data-bs-toggle=""collapse"" class=""collapsed"" href=""#collapse"">'","'  <span id=""nested""></span>'",'</a>',"'<div id=""collapse"" class=""collapse""></div>'",triggerEl,nestedTriggerEl,'#nested',isEqualNode,delegateTarget,'should show multiple collapsed elements',"'<a role=""button"" data-bs-toggle=""collapse"" class=""collapsed"" href="".multi""></a>'","'<div id=""collapse1"" class=""collapse multi""></div>'","'<div id=""collapse2"" class=""collapse multi""></div>'",collapse1,collapse2,'collapsed','should hide multiple collapsed elements',"'<a role=""button"" data-bs-toggle=""collapse"" href="".multi""></a>'","'<div id=""collapse1"" class=""collapse multi show""></div>'","'<div id=""collapse2"" class=""collapse multi show""></div>'","'should remove ""collapsed"" class from target when collapse is shown'","'<a id=""link1"" role=""button"" data-bs-toggle=""collapse"" class=""collapsed"" href=""#"" data-bs-target=""#test1""></a>'","'<a id=""link2"" role=""button"" data-bs-toggle=""collapse"" class=""collapsed"" href=""#"" data-bs-target=""#test1""></a>'","'<div id=""test1""></div>'",link1,'#link1',link2,'#link2',collapseTest1,'#test1',"'should add ""collapsed"" class to target when collapse is hidden'","'<a id=""link1"" role=""button"" data-bs-toggle=""collapse"" href=""#"" data-bs-target=""#test1""></a>'","'<a id=""link2"" role=""button"" data-bs-toggle=""collapse"" href=""#"" data-bs-target=""#test1""></a>'","'<div id=""test1"" class=""show""></div>'",'should allow accordion to use children other than card',"'<div id=""accordion"">'","'    <a id=""linkTrigger"" data-bs-toggle=""collapse"" href=""#collapseOne"" aria-expanded=""false"" aria-controls=""collapseOne""></a>'","'    <div id=""collapseOne"" class=""collapse"" role=""tabpanel"" aria-labelledby=""headingThree"" data-bs-parent=""#accordion""></div>'","'    <a id=""linkTriggerTwo"" data-bs-toggle=""collapse"" href=""#collapseTwo"" aria-expanded=""false"" aria-controls=""collapseTwo""></a>'","'    <div id=""collapseTwo"" class=""collapse show"" role=""tabpanel"" aria-labelledby=""headingTwo"" data-bs-parent=""#accordion""></div>'",'#linkTrigger',triggerTwo,'#linkTriggerTwo',collapseOne,collapseTwo,'#collapseTwo','should not prevent event for input',"'<input type=""checkbox"" data-bs-toggle=""collapse"" data-bs-target=""#collapsediv1"">'","'<div id=""collapsediv1""></div>'",'#collapsediv1','should allow accordion to contain nested elements',"'  <div class=""row"">'","'    <div class=""col-lg-6"">'","'      <div class=""item"">'","'        <a id=""linkTrigger"" data-bs-toggle=""collapse"" href=""#collapseOne"" aria-expanded=""false"" aria-controls=""collapseOne""></a>'","'        <div id=""collapseOne"" class=""collapse"" role=""tabpanel"" aria-labelledby=""headingThree"" data-bs-parent=""#accordion""></div>'","'        <a id=""linkTriggerTwo"" data-bs-toggle=""collapse"" href=""#collapseTwo"" aria-expanded=""false"" aria-controls=""collapseTwo""></a>'","'        <div id=""collapseTwo"" class=""collapse show"" role=""tabpanel"" aria-labelledby=""headingTwo"" data-bs-parent=""#accordion""></div>'",triggerTwoEl,collapseOneEl,collapseTwoEl,'should allow accordion to target multiple elements',"'  <a id=""linkTriggerOne"" data-bs-toggle=""collapse"" data-bs-target="".collapseOne"" href=""#"" aria-expanded=""false"" aria-controls=""collapseOne""></a>'","'  <a id=""linkTriggerTwo"" data-bs-toggle=""collapse"" data-bs-target="".collapseTwo"" href=""#"" aria-expanded=""false"" aria-controls=""collapseTwo""></a>'","'  <div id=""collapseOneOne"" class=""collapse collapseOne"" role=""tabpanel"" data-bs-parent=""#accordion""></div>'","'  <div id=""collapseOneTwo"" class=""collapse collapseOne"" role=""tabpanel"" data-bs-parent=""#accordion""></div>'","'  <div id=""collapseTwoOne"" class=""collapse collapseTwo"" role=""tabpanel"" data-bs-parent=""#accordion""></div>'","'  <div id=""collapseTwoTwo"" class=""collapse collapseTwo"" role=""tabpanel"" data-bs-parent=""#accordion""></div>'",'#linkTriggerOne',collapseOneOne,'#collapseOneOne',collapseOneTwo,'#collapseOneTwo',collapseTwoOne,'#collapseTwoOne',collapseTwoTwo,'#collapseTwoTwo',collapsedElements,firstTest,secondTest,'should collapse accordion children but not nested accordion children',"'    <div id=""collapseOne"" data-bs-parent=""#accordion"" class=""collapse"" role=""tabpanel"" aria-labelledby=""headingThree"">'","'      <div id=""nestedAccordion"">'","'        <div class=""item"">'","'          <a id=""nestedLinkTrigger"" data-bs-toggle=""collapse"" href=""#nestedCollapseOne"" aria-expanded=""false"" aria-controls=""nestedCollapseOne""></a>'","'          <div id=""nestedCollapseOne"" data-bs-parent=""#nestedAccordion"" class=""collapse"" role=""tabpanel"" aria-labelledby=""headingThree""></div>'","'    <div id=""collapseTwo"" data-bs-parent=""#accordion"" class=""collapse show"" role=""tabpanel"" aria-labelledby=""headingTwo""></div>'",nestedTrigger,'#nestedLinkTrigger',nestedCollapseOne,'#nestedCollapseOne',handlerCollapseOne,handlerNestedCollapseOne,"'should add ""collapsed"" class and set aria-expanded to triggers only when all the targeted collapse are hidden'","'<a id=""trigger1"" role=""button"" data-bs-toggle=""collapse"" href=""#test1""></a>'","'<a id=""trigger2"" role=""button"" data-bs-toggle=""collapse"" href=""#test2""></a>'","'<a id=""trigger3"" role=""button"" data-bs-toggle=""collapse"" href="".multi""></a>'","'<div id=""test1"" class=""multi""></div>'","'<div id=""test2"" class=""multi""></div>'",trigger1,'#trigger1',trigger2,'#trigger2',trigger3,'#trigger3',target1,target2,'#test2',target2Shown,'should create a collapse','should not re create a collapse','should return collapse instance','should return null when there is no collapse instance','should return new instance when there is no collapse instance','should return new instance when there is no collapse instance with given configuration','bsData',Data,TEST_KEY,clearFixture,'should return null for unknown elements',TEST_DATA,'should return null for unknown keys',UNKNOWN_KEY,'should store data for an element with a given key and return it','should overwrite data if something is already stored',copy,'should do nothing when an element has nothing stored','should remove nothing for an unknown key','should remove data for a given key','should console.error a message if called with multiple keys','console.error','should not add event listener if the event is not a string','should add event listener','should add namespaced event listener','bs.namespace','should add native namespaced event listener','click.namespace','should handle event delegation',"'<div class=""test""></div>'",'should handle mouseenter/mouseleave like the native counterpart',"'<div class=""outer"">'","'<div class=""inner"">'","'<div class=""nested"">'","'<div class=""deep""></div>'","'<div class=""sibling""></div>'",outer,'.outer','.inner',nested,'.nested','.deep',sibling,'.sibling',enterSpy,leaveSpy,delegateEnterSpy,delegateLeaveSpy,moveMouse,'should call listener just once',oneListener,'bootstrap','should call delegated listener just once','should not remove a listener','should remove a listener','should remove all the events','should remove all the namespaced listeners if namespace is passed','foobar.namespace','foofoo.namespace','.namespace','should remove the namespaced listeners',calledCallback1,calledCallback2,'should remove the all the namespaced listeners for native events','click.namespace2','should remove the specified namespaced listeners for native events',called1,called2,'should remove a listener registered by .one','called','should remove the correct delegated event listener',subelement,'should set data attribute prefixed with bs',Manipulator,setDataAttribute,'key','data-bs-key','should set data attribute in kebab case','testKey','data-bs-test-key','removeDataAttribute','should only remove bs-prefixed data attribute',"'<div data-bs-key=""value"" data-key-bs=""postfixed"" data-key=""value""></div>'",removeDataAttribute,'data-key-bs','postfixed','data-key','should remove data attribute in kebab case',"'<div data-bs-test-key=""value""></div>'",'getDataAttributes','should return an empty object for null',getDataAttributes,'should get only bs-prefixed data attributes without bs namespace',"'<div data-bs-toggle=""tabs"" data-bs-target=""#element"" data-another=""value"" data-target-bs=""#element"" data-in-bs-out=""in-between""></div>'",'tabs','#element','should omit `bs-config` data attribute',"'<div data-bs-toggle=""tabs"" data-bs-target=""#element"" data-bs-config=\'{""testBool"":false}\'></div>'",'getDataAttribute','should only get bs-prefixed data attribute',"'<div data-bs-key=""value"" data-test-bs=""postFixed"" data-toggle=""tab""></div>'",getDataAttribute,'should get data attribute in kebab case',"'<div data-bs-test-key=""value"" ></div>'",'should normalize data',"'<div data-bs-test=""false"" ></div>'",'data-bs-test','should normalize json data',"'<div data-bs-test=\'{""delay"":{""show"":100,""hide"":10}}\'></div>'",objectData,'Super Hero','Iron Man','Super Man',testNum,'http://localhost:8080/test?foo=bar',dataStr,encodeURIComponent,'should find elements',SelectorEngine,'should find elements globaly',"'<div id=""test""></div>'",'#test','should handle :scope selectors','<ul>','  <li></li>','  <li>',"'    <a href=""#"" class=""active"">link</a>'",'  </li>','</ul>',listEl,aActive,':scope > li > .active','findOne','should return one element',findOne,'children','should find children',liList,'parents','should return parents','should return previous element',"'<div class=""test""></div><button class=""btn""></button>'",'should return previous element with an extra element between','<span></span>',"'<button class=""btn""></button>'",'should return previous element with comments or text nodes between','<!-- Comment-->','Text','should return next element','should return next element with an extra element between','should return next element with comments or text nodes between','focusableChildren','should return only elements with specific tag names','<div>lorem</div>','<span>lorem</span>','<a>lorem</a>','<button>lorem</button>','<input />','<textarea></textarea>','<select></select>','<details>lorem</details>',expectedElements,'details',focusableChildren,'should return any element with non negative tab index','<div tabindex>lorem</div>',"'<div tabindex=""0"">lorem</div>'","'<div tabindex=""10"">lorem</div>'",'[tabindex]',"'[tabindex=""10""]'",'should return not return elements with negative tab index',"'<button tabindex=""-1"">lorem</button>'",'should return contenteditable elements',"'<div contenteditable=""true"">lorem</div>'","'[contenteditable=""true""]'",'should not return disabled elements',"'<button disabled=""true"">lorem</button>'",'should not return invisible elements',"'<button style=""display:none;"">lorem</button>'",Dropdown,'DefaultType','should return plugin default type config',DefaultType,'bs.dropdown',"'<div class=""dropdown"">'","'  <button class=""btn dropdown-toggle"" data-bs-toggle=""dropdown"">Dropdown</button>'","'  <div class=""dropdown-menu"">'","'    <a class=""dropdown-item"" href=""#"">Link</a>'",btnDropdown,"'[data-bs-toggle=""dropdown""]'",dropdownBySelector,dropdownByElement,'should create offset modifier correctly when offset option is a function',"'    <a class=""dropdown-item"" href=""#"">Secondary link</a>'",getOffset,'getOffset',popperConfig,onFirstUpdate,popper,rects,reference,_getOffset,'should create offset modifier correctly when offset option is a string into data attribute',"'  <button class=""btn dropdown-toggle"" data-bs-toggle=""dropdown"" data-bs-offset=""10,20"">Dropdown</button>'",'should allow to pass config to Popper with `popperConfig`',_getPopperConfig,'should allow to pass config to Popper with `popperConfig` as a function',"'  <button class=""btn dropdown-toggle"" data-bs-toggle=""dropdown"" data-bs-placement=""right"">Dropdown</button>'",getPopperConfig,'getPopperConfig','should toggle a dropdown',"'  <button class=""btn dropdown-toggle"" data-bs-toggle=""dropdown"" aria-expanded=""false"">Dropdown</button>'",'shown.bs.dropdown','should destroy old popper references on toggle',"'<div class=""first dropdown"">'","'  <button class=""firstBtn btn"" data-bs-toggle=""dropdown"" aria-expanded=""false"">Dropdown</button>'","'<div class=""second dropdown"">'","'  <button class=""secondBtn btn"" data-bs-toggle=""dropdown"" aria-expanded=""false"">Dropdown</button>'",btnDropdown1,'.firstBtn',btnDropdown2,'.secondBtn',firstDropdownEl,'.first',secondDropdownEl,'.second',dropdown1,_popper,'should toggle a dropdown and add/remove event listener on mobile',defaultValueOnTouchStart,'on','hidden.bs.dropdown','should toggle a dropdown at the right',"'  <div class=""dropdown-menu dropdown-menu-end"">'",'should toggle a centered dropdown',"'<div class=""dropdown-center"">'",'should toggle a dropup',"'<div class=""dropup"">'",dropupEl,'.dropup','should toggle a dropup centered',"'<div class=""dropup-center"">'",'.dropup-center','should toggle a dropup at the right','should toggle a dropend',"'<div class=""dropend"">'",dropendEl,'.dropend','should toggle a dropstart',"'<div class=""dropstart"">'",dropstartEl,'.dropstart','should toggle a dropdown with parent reference','parent','should toggle a dropdown with a dom node reference','should toggle a dropdown with a jquery object reference','jQuery','should toggle a dropdown with a valid virtual element reference',"'  <button class=""btn dropdown-toggle visually-hidden"" data-bs-toggle=""dropdown"" aria-expanded=""false"">Dropdown</button>'",virtualElement,nodeType,"'DROPDOWN: Option ""reference"" provided type ""object"" without a required ""getBoundingClientRect"" method.'",'not-a-function','should not toggle a dropdown if the element is disabled',"'  <button disabled class=""btn dropdown-toggle"" data-bs-toggle=""dropdown"">Dropdown</button>'",'should not throw shown.bs.dropdown event','should not toggle a dropdown if the element contains .disabled',"'  <button class=""btn dropdown-toggle disabled"" data-bs-toggle=""dropdown"">Dropdown</button>'",'should not toggle a dropdown if the menu is shown',"'  <div class=""dropdown-menu show"">'",'should not toggle a dropdown if show event is prevented','show.bs.dropdown','should show a dropdown','should not show a dropdown if the element is disabled','should not show a dropdown if the element contains .disabled','should not show a dropdown if the menu is shown','should not show a dropdown if show event is prevented','should hide a dropdown',"'  <button class=""btn dropdown-toggle"" data-bs-toggle=""dropdown"" aria-expanded=""true"">Dropdown</button>'",dropdownMenu,'.dropdown-menu','should hide a dropdown and destroy popper','should not hide a dropdown if the element is disabled','should not throw hidden.bs.dropdown event','should not hide a dropdown if the element contains .disabled','should not hide a dropdown if the menu is not shown','should not hide a dropdown if hide event is prevented','hide.bs.dropdown','should remove event listener on touch-enabled device that was added in show method',"'    <a class=""dropdown-item"" href=""#"">Dropdwon item</a>'",'should dispose dropdown',_menu,'should dispose dropdown with Popper','update','should call Popper and detect navbar on update','_detectNavbar',_detectNavbar,'should just detect navbar on update','should show and hide a dropdown',showEventTriggered,hideEventTriggered,"'should not use ""static"" Popper in navbar'","'<nav class=""navbar navbar-expand-md bg-light"">'","'  <div class=""dropdown"">'","'    <button class=""btn dropdown-toggle"" data-bs-toggle=""dropdown"" aria-expanded=""false"">Dropdown</button>'","'    <div class=""dropdown-menu"">'","'      <a class=""dropdown-item"" href=""#"">Secondary link</a>'",'</nav>','data-bs-popper','static','should not collapse the dropdown when clicking a select option nested in the dropdown','    <select>','      <option selected>Open this select menu</option>',"'      <option value=""1"">One</option>'",'    </select>',hideSpy,'_completeHide',clickEvent,/select|option/i,clearMenus,"'should manage bs attribute `data-bs-popper`=""static"" when dropdown is in navbar'",'should not use Popper if display set to static',"'  <button class=""btn dropdown-toggle"" data-bs-toggle=""dropdown"" data-bs-display=""static"">Dropdown</button>'",'data-popper-placement',"'should manage bs attribute `data-bs-popper`=""static"" when display set to static'","'should remove ""show"" class if tabbing outside of menu'",keyup,"'should remove ""show"" class if body is clicked, with multiple dropdowns'","'<div class=""nav"">'","'  <div class=""dropdown"" id=""testmenu"">'","'    <a class=""dropdown-toggle"" data-bs-toggle=""dropdown"" href=""#testmenu"">Test menu</a>'","'      <a class=""dropdown-item"" href=""#sub1"">Submenu 1</a>'","'<div class=""btn-group"">'","'  <button class=""btn"">Actions</button>'","'  <button class=""btn dropdown-toggle"" data-bs-toggle=""dropdown""></button>'","'    <a class=""dropdown-item"" href=""#"">Action 1</a>'",triggerDropdownList,triggerDropdownFirst,triggerDropdownLast,'.dropdown-menu.show',"'should remove ""show"" class if body if tabbing outside of menu, with multiple dropdowns'","'  <a class=""dropdown-toggle"" data-bs-toggle=""dropdown"" href=""#testmenu"">Test menu</a>'","'    <a class=""dropdown-item"" href=""#sub1"">Submenu 1</a>'",'should fire hide and hidden event without a clickEvent if event type is not click',triggerDropdown,'should bubble up the events to the parent elements',"'    <a class=""dropdown-item"" href=""#subMenu"">Sub menu</a>'",dropdownParent,'.dropdown',showFunction,'showFunction',shownFunction,'shownFunction',hideFunction,'hideFunction',"'    <input type=""text"">'",'    <textarea></textarea>','input still focused','textarea still focused','should skip disabled element when using keyboard navigation',"'    <a class=""dropdown-item disabled"" href=""#sub1"">Submenu 1</a>'","'    <button class=""dropdown-item"" type=""button"" disabled>Disabled button</button>'","'    <a id=""item1"" class=""dropdown-item"" href=""#"">Another link</a>'",'should skip hidden element when using keyboard navigation','<style>','  .d-none {','    display: none;','  }','</style>',"'    <button class=""dropdown-item d-none"" type=""button"">Hidden button by class</button>'","'    <a class=""dropdown-item"" href=""#sub1"" style=""display: none"">Hidden link</a>'","'    <a class=""dropdown-item"" href=""#sub1"" style=""visibility: hidden"">Hidden link</a>'",'d-none',visibility,'should focus next/previous element when using keyboard navigation',"'    <a id=""item1"" class=""dropdown-item"" href=""#"">A link</a>'","'    <a id=""item2"" class=""dropdown-item"" href=""#"">Another link</a>'",item1,keydownArrowDown,'item1 is focused','item2 is focused',keydownArrowUp,'should open the dropdown and focus on the last item when using ArrowUp for the first time',lastItem,'should open the dropdown and focus on the first item when using ArrowDown for the first time','should not close the dropdown if the user clicks on a text field within dropdown-menu','should not close the dropdown if the user clicks on a textarea within dropdown-menu','should close the dropdown if the user clicks on a text field that is not contained within dropdown-menu',"'<input type=""text"">'","'should ignore keyboard events for <input>s and <textarea>s within dropdown-menu, except for escape key'",keydownEscape,'should not open dropdown if escape key was pressed on the toggle',"'<div class=""tabs"">'","'    <button disabled class=""btn dropdown-toggle"" data-bs-toggle=""dropdown"">Dropdown</button>'","'      <a class=""dropdown-item"" href=""#"">Something else here</a>'","'      <div class=""divider""></div>'","'      <a class=""dropdown-item"" href=""#"">Another link</a>'","'button[data-bs-toggle=""dropdown""]'",'should propagate escape key events if dropdown is closed',"'<div class=""parent"">'","'    <button class=""btn dropdown-toggle"" data-bs-toggle=""dropdown"">Dropdown</button>'","'      <a class=""dropdown-item"" href=""#"">Some Item</a>'",'.parent',parentKeyHandler,'parentKeyHandler',keyupEscape,'should not propagate escape key events if dropdown is open',"'should close dropdown using `escape` button, and return focus to its trigger'","'    <a class=""dropdown-item"" href=""#"">Some Item</a>'",keydownEvent,"'should close dropdown (only) by clicking inside the dropdown menu when it has data-attribute `data-bs-auto-close=""inside""`'","'  <button class=""btn dropdown-toggle"" data-bs-toggle=""dropdown"" data-bs-auto-close=""inside"">Dropdown toggle</button>'","'    <a class=""dropdown-item"" href=""#"">Dropdown item</a>'",' </div>',dropdownToggle,expectDropdownToBeOpened,"'should close dropdown (only) by clicking outside the dropdown menu when it has data-attribute `data-bs-auto-close=""outside""`'","'  <button class=""btn dropdown-toggle"" data-bs-toggle=""dropdown"" data-bs-auto-close=""outside"">Dropdown toggle</button>'","'should not close dropdown by clicking inside or outside the dropdown menu when it has data-attribute `data-bs-auto-close=""false""`'","'  <button class=""btn dropdown-toggle"" data-bs-toggle=""dropdown"" data-bs-auto-close=""false"">Dropdown toggle</button>'",shouldTriggerClick,"'should be able to identify clicked dropdown, no matter the markup order'","'  <button class=""btn dropdown-toggle"" data-bs-toggle=""dropdown"">Dropdown toggle</button>'",'should create a dropdown','should not re create a dropdown','should return dropdown instance','should return null when there is no dropdown instance','should return new instance when there is no dropdown instance','should return new instance when there is no dropdown instance with given configuration','dynamic',dropdown2,'should open dropdown when pressing keydown or keyup',handleArrowDown,handleArrowUp,"'should allow `data-bs-toggle=""dropdown""` click events to bubble up'",clickListener,'clickListener',delegatedClickListener,'delegatedClickListener',"'should open the dropdown when clicking the child element inside `data-bs-toggle=""dropdown""`'","'<div class=""container"">'","'    <button class=""btn dropdown-toggle"" data-bs-toggle=""dropdown""><span id=""childElement"">Dropdown</span></button>'","'      <a class=""dropdown-item"" href=""#subMenu"">Sub menu</a>'",childElement,'#childElement','should add all plugins in jQuery',jQuery,modal,Offcanvas,offcanvas,Popover,popover,ScrollSpy,scrollspy,toast,'should use jQuery event system','bs.modal',"'<div class=""modal""><div class=""modal-dialog""></div></div>'",modalEl,'.modal',modalBySelector,modalByElement,'should call ScrollBarHelper to handle scrollBar on body',ScrollBarHelper,'reset','shown.bs.modal','hidden.bs.modal','should show a modal','show.bs.modal','aria-modal','.modal-backdrop','should show a modal without backdrop','should show a modal and append the element','dynamicModal','modal',"'<div class=""modal-dialog""></div>'",dynamicModal,getElementById,'should do nothing if a modal is shown',_isShown,'should do nothing if a modal is transitioning','should not fire shown event when show is prevented',expectedDone,'shown event triggered','should be shown after the first call to show() has been prevented while fading is enabled ',"'<div class=""modal fade""><div class=""modal-dialog""></div></div>'",prevented,_isAnimated,'should set is transitioning if fade class is present',"'should close modal when a click occurred on data-bs-dismiss=""modal"" inside modal'","'<div class=""modal fade"">'","'  <div class=""modal-dialog"">'","'    <div class=""modal-header"">'","'      <button type=""button"" data-bs-dismiss=""modal""></button>'",btnClose,"'[data-bs-dismiss=""modal""]'","'should close modal when a click occurred on a data-bs-dismiss=""modal"" with ""bs-target"" outside of modal element'","'<button type=""button"" data-bs-dismiss=""modal"" data-bs-target=""#modal1""></button>'","'<div id=""modal1"" class=""modal fade"">'","'  <div class=""modal-dialog""></div>'",'should set .modal\'s scroll top to 0','should set modal body scroll top to 0 if modal body do not exists',"'    <div class=""modal-body""></div>'",modalBody,'.modal-body','should not trap focus if focus equal to false',_focustrap,'should add listener when escape touch is pressed','should do nothing when the pressed key is not escape',expectDone,keydownTab,'should adjust dialog on resize','_adjustDialog',resizeEvent,'should not close modal when clicking on modal-content',"'<div class=""modal"">'","'    <div class=""modal-content""></div>'",shownCallback,'.modal-content','Should not hide a modal','should not close modal when clicking outside of modal-content if backdrop = false','should not close modal when clicking outside of modal-content if backdrop = static','should close modal when escape key is pressed with keyboard = true and backdrop is static','should not close modal when escape key is pressed with keyboard = false','should not overflow when clicking outside of modal-content if backdrop = static',"'<div class=""modal""><div class=""modal-dialog"" style=""transition-duration: 20ms;""></div></div>'",'should not queue multiple callbacks when clicking outside of modal-content and backdrop = static',"'<div class=""modal""><div class=""modal-dialog"" style=""transition-duration: 50ms;""></div></div>'",'_queueCallback','should trap focus','should hide a modal',backdropSpy,_backdrop,'hide.bs.modal','should close modal when clicking outside of modal-content','should do nothing is the modal is not shown','should do nothing is the modal is transitioning','should not hide a modal if hide is prevented',hideCallback,'should not trigger hidden','should release focus trap','should dispose a modal',"'<div id=""exampleModal"" class=""modal""><div class=""modal-dialog""></div></div>'",focustrap,'handleUpdate','should call adjust dialog',handleUpdate,_adjustDialog,'should toggle modal',"'<button type=""button"" data-bs-toggle=""modal"" data-bs-target=""#exampleModal""></button>'","'[data-bs-toggle=""modal""]'",'should not recreate a new modal','should prevent default when the trigger is <a> or <area>',"'<a data-bs-toggle=""modal"" href=""#"" data-bs-target=""#exampleModal""></a>'",'should focus the trigger on hide',hideListener,"'should not prevent default when a click occurred on data-bs-dismiss=""modal"" where tagName is DIFFERENT than <a> or <area>'","'    <button type=""button"" data-bs-dismiss=""modal""></button>'","'button[data-bs-dismiss=""modal""]'","'should prevent default when a click occurred on data-bs-dismiss=""modal"" where tagName is <a> or <area>'","'    <a type=""button"" data-bs-dismiss=""modal""></a>'","'a[data-bs-dismiss=""modal""]'",'should not focus the trigger if the modal is not visible',"'<a data-bs-toggle=""modal"" href=""#"" data-bs-target=""#exampleModal"" style=""display: none;""></a>'","'<div id=""exampleModal"" class=""modal"" style=""display: none;""><div class=""modal-dialog""></div></div>'",'should not focus the trigger if the modal is not shown',showListener,"'should call hide first, if another modal is open'","'<button data-bs-toggle=""modal""  data-bs-target=""#modal2""></button>'","'<div id=""modal1"" class=""modal fade""><div class=""modal-dialog""></div></div>'","'<div id=""modal2"" class=""modal""><div class=""modal-dialog""></div></div>'",modalEl1,'#modal1',modalEl2,'#modal2',modal1,'should create a modal','should create a modal with given config','should not re create a modal','should call show method','should not call show method',"'<div class=""modal"" data-bs-show=""false""><div class=""modal-dialog""></div></div>'",'should return modal instance','should return null when there is no modal instance','should return new instance when there is no modal instance','should return new instance when there is no modal instance with given configuration',modal2,'bs.offcanvas',"'should call hide when a element with data-bs-dismiss=""offcanvas"" is clicked'","'<div class=""offcanvas"">'","'  <a href=""#"" data-bs-dismiss=""offcanvas"">Close</a>'",offCanvasEl,'.offcanvas',closeEl,offCanvas,'should hide if esc is pressed',"'<div class=""offcanvas""></div>'",keyDownEsc,'should hide if esc is pressed and backdrop is static','should not hide if esc is not pressed','should not hide if esc is pressed but with keyboard = false',hidePreventedSpy,'hidePrevented','hidePrevented.bs.offcanvas','shown.bs.offcanvas','should not hide if user clicks on static backdrop','clickCallback',clickCallback,_getElement,"'should call `hide` on resize, if element\'s position is not fixed any more'","'<div class=""offcanvas-lg""></div>'",removeProperty,'config','should have default values','should read data attributes and override default config',"'<div class=""offcanvas"" data-bs-scroll=""true"" data-bs-backdrop=""false"" data-bs-keyboard=""false""></div>'",'given a config object must override data attributes','options',"'if scroll is enabled, should allow body to scroll while offcanvas is open'",'hidden.bs.offcanvas',"'if scroll is disabled, should call ScrollBarHelper to handle scrollBar on body'",'should hide a shown element if user click on backdrop','should not trap focus if scroll is allowed','should add `showing` class during opening and `show` class on end','show.bs.offcanvas','showing',"'<div class=""offcanvas show""></div>'",'should show a hidden element',"'on window load, should make visible an offcanvas element, if its markup contains class ""show""'",'should add `hiding` class during closing and remover `show` & `hiding` classes on end','hide.bs.offcanvas','hiding','should hide a shown element','should dispose an offcanvas',"'<input type=""checkbox"" data-bs-toggle=""offcanvas"" data-bs-target=""#offcanvasdiv1"" />'","'<div id=""offcanvasdiv1"" class=""offcanvas""></div>'",'#offcanvasdiv1','should not call toggle on disabled elements',"'<a href=""#"" data-bs-toggle=""offcanvas"" data-bs-target=""#offcanvasdiv1"" class=""disabled""></a>'","'should call hide first, if another offcanvas is open'","'<button id=""btn2"" data-bs-toggle=""offcanvas"" data-bs-target=""#offcanvas2""></button>'","'<div id=""offcanvas1"" class=""offcanvas""></div>'","'<div id=""offcanvas2"" class=""offcanvas""></div>'",'#btn2',offcanvasEl1,'#offcanvas1',offcanvasEl2,'#offcanvas2',offcanvas1,'should focus on trigger element after closing offcanvas',"'<button id=""btn"" data-bs-toggle=""offcanvas"" data-bs-target=""#offcanvas""></button>'","'<div id=""offcanvas"" class=""offcanvas""></div>'",'#btn',offcanvasEl,'#offcanvas',"'should not focus on trigger element after closing offcanvas, if it is not visible'",'should create an offcanvas','should not re create an offcanvas','should throw error on protected method',"'should throw error if method ""constructor"" is being called'",'should call offcanvas method','should create a offcanvas with given config','should return offcanvas instance','should return null when there is no offcanvas instance','should return new instance when there is no Offcanvas instance','should return new instance when there is no offcanvas instance with given configuration',offcanvas2,'should return plugin name','bs.popover','.bs.popover','should return plugin default type','should show a popover',"'<a href=""#"" title=""Popover"" data-bs-content=""https://twitter.com/getbootstrap"">BS twitter</a>'",popoverEl,'shown.bs.popover','.popover','should set title and content from functions',"'<a href=""#"">BS twitter</a>'",'Bootstrap','loves writing tests （╯°□°）╯︵ ┻━┻',popoverDisplayed,'.popover-header','.popover-body','should show a popover with just content without having header',"'<a href=""#"">Nice link</a>'",'Some beautiful content :)','should show a popover with just title without having body','Title which does not require content','should show a popover with just title without having body using data-attribute to get config',"'<a href=""#"" data-bs-content="""" title=""Title which does not require content"">Nice link</a>'",'should NOT show a popover without `title` and `content`',"'<a href=""#"" data-bs-content="""" title="""">Nice link</a>'","'""setContent"" should keep the initial template'","'<a href=""#"" title=""Popover"" data-bs-content=""https://twitter.com/getbootstrap"" data-bs-custom-class=""custom-class"">BS twitter</a>'",'.tooltip-inner',tip,_getTipElement,'popover','bs-popover-auto','.popover-arrow','should call setContent once','Popover content',_templateFactory,'hidden.bs.popover','should show a popover with provided custom class','custom-class','should hide a popover','should create a popover','should create a popover with a config object',"'<a href=""#"" title=""Popover"">BS twitter</a>'",'should not re create a popover','should should call show method','should return popover instance','should return null when there is no popover instance','should return new instance when there is no popover instance','should return new instance when there is no popover instance with given configuration',popover2,'bottom','bs.scrollspy',getDummyFixture,sSpyEl,'.content',sSpyBySelector,sSpyByElement,"'should null, if element is not scrollable'","'<nav id=""navigation"" class=""navbar"">'","'  <ul class=""navbar-nav"">'","'     <li class=""nav-item""><a class=""nav-link active"" id=""one-link"" href=""#"">One</a></li>'",'  </ul>',"'<div id=""content"">'","'  <div id=""1"" style=""height: 300px;"">test</div>'",scrollSpy,'#content','#navigation',_observer,_rootElement,'should not take count to not visible sections',"'    <li class=""nav-item""><a class=""nav-link active"" id=""one-link"" href=""#one"">One</a></li>'","'    <li class=""nav-item""><a class=""nav-link"" id=""two-link"" href=""#two"">Two</a></li>'","'    <li class=""nav-item""><a class=""nav-link"" id=""three-link"" href=""#three"">Three</a></li>'","'<div id=""content"" style=""height: 200px; overflow-y: auto;"">'","'  <div id=""one"" style=""height: 300px;"">test</div>'","'  <div id=""two"" hidden style=""height: 300px;"">test</div>'","'  <div id=""three""  style=""display: none;"">test</div>'",_observableSections,_targetLinks,'should not process element without target',"'    <li class=""nav-item""><a class=""nav-link active"" id=""one-link"" href=""#"">One</a></li>'","'  <div id=""two"" style=""height: 300px;"">test</div>'","'  <div id=""three"" style=""height: 10px;"">test2</div>'","'should only switch ""active"" class on current target'","'<div id=""root"" class=""active"" style=""display: block"">'","'  <div class=""topbar"">'","'    <div class=""topbar-inner"">'","'      <div class=""container"" id=""ss-target"">'","'        <ul class=""nav"">'","'          <li class=""nav-item""><a href=""#masthead"">Overview</a></li>'","'          <li class=""nav-item""><a href=""#detail"">Detail</a></li>'",'        </ul>',"'  <div id=""scrollspy-example"" style=""height: 100px; overflow: auto;"">'","'     <div style=""height: 200px;"" id=""masthead"">Overview</div>'","'     <div style=""height: 200px;"" id=""detail"">Detail</div>'",scrollSpyEl,'#scrollspy-example','#root','ss-target','_process',onScrollStop,_process,'should not process data if `activeTarget` is same as given target',"'<nav class=""navbar"">'","'  <ul class=""nav"">'","'    <li class=""nav-item""><a class=""nav-link"" id=""a-1"" href=""#div-1"">div 1</a></li>'","'    <li class=""nav-item""><a class=""nav-link"" id=""a-2"" href=""#div-2"">div 2</a></li>'","'<div class=""content"" style=""overflow: auto; height: 50px"">'","'  <div id=""div-1"" style=""height: 100px; padding: 0; margin: 0"">div 1</div>'","'  <div id=""div-2"" style=""height: 200px; padding: 0; margin: 0"">div 2</div>'",'.navbar',triggerSpy,_activeTarget,'#a-1',testElementIsActiveAfterScroll,elementSelector,targetSelector,'#div-1',"'should only switch ""active"" class on current target specified w element'","'    <div style=""height: 200px;"" id=""masthead"">Overview</div>'","'    <div style=""height: 200px;"" id=""detail"">Detail</div>'",'#ss-target',"'[href=""#detail""]'",'should add the active class to the correct element','#a-2','#div-2','should add to nav the active class to the correct element (nav markup)',"'  <nav class=""nav"">'","'    <a class=""nav-link"" id=""a-1"" href=""#div-1"">div 1</a>'","'    <a class=""nav-link"" id=""a-2"" href=""#div-2"">div 2</a>'",'  </nav>',"'should add to list-group, the active class to the correct element (list-group markup)'","'  <div class=""list-group"">'","'    <a class=""list-group-item"" id=""a-1"" href=""#div-1"">div 1</a>'","'    <a class=""list-group-item"" id=""a-2"" href=""#div-2"">div 2</a>'",'should clear selection if above the first section',"'<div id=""header"" style=""height: 500px;""></div>'","'    <li class=""nav-item""><a id=""one-link""   class=""nav-link active"" href=""#one"">One</a></li>'","'    <li class=""nav-item""><a id=""two-link""   class=""nav-link"" href=""#two"">Two</a></li>'","'    <li class=""nav-item""><a id=""three-link"" class=""nav-link"" href=""#three"">Three</a></li>'","'  <div id=""spacer"" style=""height: 200px;""></div>'","'  <div id=""one"" style=""height: 100px;"">text</div>'","'  <div id=""two"" style=""height: 100px;"">text</div>'","'  <div id=""three"" style=""height: 100px;"">text</div>'","'  <div id=""spacer"" style=""height: 100px;""></div>'",'two-link','should not clear selection if above the first section and first section is at the top',"'    <li class=""nav-item""><a id=""one-link"" class=""nav-link active"" href=""#one"">One</a></li>'","'    <li class=""nav-item""><a id=""two-link"" class=""nav-link"" href=""#two"">Two</a></li>'","'<div id=""content"" style=""height: 150px; overflow-y: auto;"">'","'  <div id=""one"" style=""height: 100px;"">test</div>'","'  <div id=""two"" style=""height: 100px;"">test</div>'","'  <div id=""three"" style=""height: 100px;"">test</div>'","'  <div id=""spacer"" style=""height: 100px;"">test</div>'",negativeHeight,startOfSectionTwo,rootMargin,'0px 0px -50%','one-link','should correctly select navigation element on backward scrolling when each target section height is 100%',"'    <li class=""nav-item""><a id=""li-100-1"" class=""nav-link"" href=""#div-100-1"">div 1</a></li>'","'    <li class=""nav-item""><a id=""li-100-2"" class=""nav-link"" href=""#div-100-2"">div 2</a></li>'","'    <li class=""nav-item""><a id=""li-100-3"" class=""nav-link"" href=""#div-100-3"">div 3</a></li>'","'    <li class=""nav-item""><a id=""li-100-4"" class=""nav-link"" href=""#div-100-4"">div 4</a></li>'","'    <li class=""nav-item""><a id=""li-100-5"" class=""nav-link"" href=""#div-100-5"">div 5</a></li>'","'<div class=""content"" style=""position: relative; overflow: auto; height: 100px"">'","'  <div id=""div-100-1"" style=""position: relative; height: 100%; padding: 0; margin: 0"">div 1</div>'","'  <div id=""div-100-2"" style=""position: relative; height: 100%; padding: 0; margin: 0"">div 2</div>'","'  <div id=""div-100-3"" style=""position: relative; height: 100%; padding: 0; margin: 0"">div 3</div>'","'  <div id=""div-100-4"" style=""position: relative; height: 100%; padding: 0; margin: 0"">div 4</div>'","'  <div id=""div-100-5"" style=""position: relative; height: 100%; padding: 0; margin: 0"">div 5</div>'",'#li-100-5','#div-100-5','#li-100-2','#div-100-2','#li-100-3','#div-100-3','#li-100-1','#div-100-1','refresh','should disconnect existing observer','disconnect',refresh,'should dispose a scrollspy','should create a scrollspy','#navBar','should create a scrollspy with given config','should not re create a scrollspy','should call a scrollspy method','should return scrollspy instance','should return null if there is no instance','should return new instance when there is no scrollspy instance','should return new instance when there is no scrollspy instance with given configuration',scrollspy2,'event handler','should create scrollspy on window load event',"'<div id=""nav""></div>'","'<div id=""wrapper"" data-bs-spy=""scroll"" data-bs-target=""#nav"" style=""overflow-y: auto""></div>'",'#wrapper','SmoothScroll','should not enable smoothScroll',offSpy,onSpy,'click.bs.scrollspy','should enable smoothScroll',smoothScroll,'[href]','should not smoothScroll to element if it not handles a scrollspy section',"'<nav id=""navBar"" class=""navbar"">'","'    <a id=""anchor-1"" href=""#div-jsm-1"">div 1</a></li>'","'    <a id=""anchor-2"" href=""#foo"">div 2</a></li>'","'<div class=""content"" data-bs-target=""#navBar"" style=""overflow-y: auto"">'","'  <div id=""div-jsm-1"">div 1</div>'",clickSpy,getElementScrollSpy,'#anchor-2','should call `scrollTop` if element doesn\'t not support `scrollTo`',link,"'[href=""#div-jsm-1""]'",'should smoothScroll to the proper observable element on anchor click','#div-jsm-1',"'<ul class=""nav"">'","'  <li><a href=""#home"" role=""tab"">Home</a></li>'","'  <li id=""home""></li>'",tabEl,"'[href=""#home""]'",tabBySelector,tabByElement,'Do not Throw exception if not parent',"'<div class=""""><div class=""nav-link""></div></div>'",navEl,'.nav-link',"'should activate element by tab id (using buttons, the preferred semantic way)'","'<ul class=""nav"" role=""tablist"">'","'  <li><button type=""button"" data-bs-target=""#home"" role=""tab"">Home</button></li>'","'  <li><button type=""button"" id=""triggerProfile"" data-bs-target=""#profile"" role=""tab"">Profile</button></li>'","'  <li id=""home"" role=""tabpanel""></li>'","'  <li id=""profile"" role=""tabpanel""></li>'",profileTriggerEl,'#triggerProfile','shown.bs.tab','#profile',"'should activate element by tab id (using links for tabs - not ideal, but still supported)'","'  <li><a id=""triggerProfile"" href=""#profile"" role=""tab"">Profile</a></li>'",'should activate element by tab id in ordered list',"'<ol class=""nav nav-pills"">'","'  <li><button type=""button"" id=""triggerProfile"" href=""#profile"" role=""tab"">Profile</button></li>'",'</ol>','<ol>','should activate element by tab id in nav list',"'<nav class=""nav"">'","'  <button type=""button"" data-bs-target=""#home"" role=""tab"">Home</button>'","'  <button type=""button"" id=""triggerProfile"" data-bs-target=""#profile"" role=""tab"">Profile</button>'",'<div>',"'  <div id=""home"" role=""tabpanel""></div>'","'  <div id=""profile"" role=""tabpanel""></div>'",'should activate element by tab id in list group',"'<div class=""list-group"" role=""tablist"">'","'<div class=""nav""><div class=""nav-link""></div></div>'",'.nav > div','show.bs.tab','should not trigger shown event','should not fire shown when tab is already active',"'<ul class=""nav nav-tabs"" role=""tablist"">'","'  <li class=""nav-item"" role=""presentation""><button type=""button"" data-bs-target=""#home"" class=""nav-link active"" role=""tab"" aria-selected=""true"">Home</button></li>'","'  <li class=""nav-item"" role=""presentation""><button type=""button"" data-bs-target=""#profile"" class=""nav-link"" role=""tab"">Profile</button></li>'","'<div class=""tab-content"">'","'  <div class=""tab-pane active"" id=""home"" role=""tabpanel""></div>'","'  <div class=""tab-pane"" id=""profile"" role=""tabpanel""></div>'",triggerActive,'button.active','show and shown events should reference correct relatedTarget',"'  <li class=""nav-item"" role=""presentation""><button type=""button"" id=""triggerProfile"" data-bs-target=""#profile"" class=""nav-link"" role=""tab"">Profile</button></li>'",secondTabTrigger,secondTab,'data-bs-target','#home','button:not(.active)','should fire hide and hidden events',"'  <li><button type=""button"" data-bs-target=""#profile"" role=""tab"">Profile</button></li>'",triggerList,firstTab,hideCalled,'hide.bs.tab','hidden.bs.tab','should handle removed tabs',"'  <li class=""nav-item"" role=""presentation"">'","'    <a class=""nav-link nav-tab"" href=""#profile"" role=""tab"" data-bs-toggle=""tab"">'","'      <button class=""btn-close"" aria-label=""Close""></button>'",'    </a>',"'    <a id=""secondNav"" class=""nav-link nav-tab"" href=""#buzz"" role=""tab"" data-bs-toggle=""tab"">'","'    <a class=""nav-link nav-tab"" href=""#references"" role=""tab"" data-bs-toggle=""tab"">'","'      <button id=""btnClose"" class=""btn-close"" aria-label=""Close""></button>'","'  <div role=""tabpanel"" class=""tab-pane fade show active"" id=""profile"">test 1</div>'","'  <div role=""tabpanel"" class=""tab-pane fade"" id=""buzz"">test 2</div>'","'  <div role=""tabpanel"" class=""tab-pane fade"" id=""references"">test 3</div>'",secondNavEl,'#secondNav',btnCloseEl,'#btnClose',secondNavTab,'.nav-tab',linkEl,liEl,tabId,tabIdEl,'should dispose a tab','_activate','should not be called if element argument is null',"'  <li class=""nav-link""></li>'",_activate,_queueCallback,'_setInitialAttributes','should put aria attributes',"'  <li class=""nav-link"" id=""foo"" data-bs-target=""#panel""></li>'","'  <li class=""nav-link"" data-bs-target=""#panel2""></li>'","'<div id=""panel""></div>'","'<div id=""panel2""></div>'",'.nav',tabPanel,'#panel',tabPanel2,'#panel2',_setInitialAttributes,'tablist','tabpanel','tabindex2','aria-labelledby',"'if event is not one of left/right/up/down arrow, ignore it'","'  <li class=""nav-link"" data-bs-toggle=""tab""></li>'",'_getChildren',_getChildren,"'if keydown event is right/down arrow, handle it'","'  <span id=""tab1"" class=""nav-link"" data-bs-toggle=""tab""></span>'","'  <span id=""tab2"" class=""nav-link"" data-bs-toggle=""tab""></span>'",'#tab1',tabEl2,'#tab2',tab2,"'if keydown event is left arrow, handle it'",'if keydown event is right arrow and next element is disabled',"'  <span id=""tab2"" class=""nav-link"" data-bs-toggle=""tab"" disabled></span>'","'  <span id=""tab3"" class=""nav-link disabled"" data-bs-toggle=""tab""></span>'","'  <span id=""tab4"" class=""nav-link"" data-bs-toggle=""tab""></span>'",tabEl3,'#tab3',tabEl4,'#tab4',tab3,tab4,'if keydown event is left arrow and next element is disabled','should create a tab','should not re create a tab','should call a tab method','should return this instance',divEl,'should return tab instance','should return new instance when there is no tab instance','should create dynamically a tab',"'  <li class=""nav-item"" role=""presentation""><button type=""button"" id=""triggerProfile"" data-bs-toggle=""tab"" data-bs-target=""#profile"" class=""nav-link"" role=""tab"">Profile</button></li>'",'selected tab should deactivate previous selected link in dropdown',"'<ul class=""nav nav-tabs"">'","'  <li class=""nav-item""><a class=""nav-link"" href=""#home"" data-bs-toggle=""tab"">Home</a></li>'","'  <li class=""nav-item""><a class=""nav-link"" href=""#profile"" data-bs-toggle=""tab"">Profile</a></li>'","'  <li class=""nav-item dropdown"">'","'    <a class=""nav-link dropdown-toggle active"" data-bs-toggle=""dropdown"" href=""#"">Dropdown</a>'","'      <a class=""dropdown-item active"" href=""#dropdown1"" id=""dropdown1-tab"" data-bs-toggle=""tab"">@fat</a>'","'      <a class=""dropdown-item"" href=""#dropdown2"" id=""dropdown2-tab"" data-bs-toggle=""tab"">@mdo</a>'",firstLiLinkEl,'li:first-child a','li:last-child a','li:last-child .dropdown-menu a:first-child','selecting a dropdown tab does not activate another',nav1,"'<ul class=""nav nav-tabs"" id=""nav1"">'","'  <li class=""nav-item active""><a class=""nav-link"" href=""#home"" data-bs-toggle=""tab"">Home</a></li>'","'    <a class=""nav-link dropdown-toggle"" data-bs-toggle=""dropdown"" href=""#"">Dropdown</a>'","'      <a class=""dropdown-item"" href=""#dropdown1"" id=""dropdown1-tab"" data-bs-toggle=""tab"">@fat</a>'",nav2,"'<ul class=""nav nav-tabs"" id=""nav2"">'",firstDropItem,'#nav1 .dropdown-item','#nav1 .dropdown-toggle','#nav2 .dropdown-toggle','#nav2 .dropdown-item','should support li > .dropdown-item',"'  <li class=""nav-item""><a class=""nav-link active"" href=""#home"" data-bs-toggle=""tab"">Home</a></li>'","'    <ul class=""dropdown-menu"">'","'      <li><a class=""dropdown-item"" href=""#dropdown1"" id=""dropdown1-tab"" data-bs-toggle=""tab"">@fat</a></li>'","'      <li><a class=""dropdown-item"" href=""#dropdown2"" id=""dropdown2-tab"" data-bs-toggle=""tab"">@mdo</a></li>'",'    </ul>','.dropdown-item','should handle nested tabs',"'<nav class=""nav nav-tabs"" role=""tablist"">'","'  <button type=""button"" id=""tab1"" data-bs-target=""#x-tab1"" class=""nav-link"" data-bs-toggle=""tab"" role=""tab"" aria-controls=""x-tab1"">Tab 1</button>'","'  <button type=""button"" data-bs-target=""#x-tab2"" class=""nav-link active"" data-bs-toggle=""tab"" role=""tab"" aria-controls=""x-tab2"" aria-selected=""true"">Tab 2</button>'","'  <button type=""button"" data-bs-target=""#x-tab3"" class=""nav-link"" data-bs-toggle=""tab"" role=""tab"" aria-controls=""x-tab3"">Tab 3</button>'","'  <div class=""tab-pane"" id=""x-tab1"" role=""tabpanel"">'","'    <nav class=""nav nav-tabs"" role=""tablist"">'","'      <button type=""button"" data-bs-target=""#nested-tab1"" class=""nav-link active"" data-bs-toggle=""tab"" role=""tab"" aria-controls=""x-tab1"" aria-selected=""true"">Nested Tab 1</button>'","'      <button type=""button"" id=""tabNested2"" data-bs-target=""#nested-tab2"" class=""nav-link"" data-bs-toggle=""tab"" role=""tab"" aria-controls=""x-profile"">Nested Tab2</button>'",'    </nav>',"'    <div class=""tab-content"">'","'      <div class=""tab-pane active"" id=""nested-tab1"" role=""tabpanel"">Nested Tab1 Content</div>'","'      <div class=""tab-pane"" id=""nested-tab2"" role=""tabpanel"">Nested Tab2 Content</div>'","'  <div class=""tab-pane active"" id=""x-tab2"" role=""tabpanel"">Tab2 Content</div>'","'  <div class=""tab-pane"" id=""x-tab3"" role=""tabpanel"">Tab3 Content</div>'",tab1El,tabNested2El,'#tabNested2',xTab1El,'#x-tab1','should not remove fade class if no active pane is present',"'  <li class=""nav-item"" role=""presentation""><button type=""button"" id=""tab-home"" data-bs-target=""#home"" class=""nav-link"" data-bs-toggle=""tab"" role=""tab"">Home</button></li>'","'  <li class=""nav-item"" role=""presentation""><button type=""button"" id=""tab-profile"" data-bs-target=""#profile"" class=""nav-link"" data-bs-toggle=""tab"" role=""tab"">Profile</button></li>'","'  <div class=""tab-pane fade"" id=""home"" role=""tabpanel""></div>'","'  <div class=""tab-pane fade"" id=""profile"" role=""tabpanel""></div>'",triggerTabProfileEl,'#tab-profile',triggerTabHomeEl,'#tab-home',tabProfileEl,tabHomeEl,'fade','should not add `show` class to tab panes if there is no `.fade` class',"'    <button type=""button"" class=""nav-link nav-tab"" data-bs-target=""#home"" role=""tab"" data-bs-toggle=""tab"">Home</button>'","'    <button type=""button"" id=""secondNav"" class=""nav-link nav-tab"" data-bs-target=""#profile"" role=""tab"" data-bs-toggle=""tab"">Profile</button>'","'  <div role=""tabpanel"" class=""tab-pane"" id=""home"">test 1</div>'","'  <div role=""tabpanel"" class=""tab-pane"" id=""profile"">test 2</div>'",'should add show class to tab panes if there is a `.fade` class',"'  <div role=""tabpanel"" class=""tab-pane fade"" id=""home"">test 1</div>'","'  <div role=""tabpanel"" class=""tab-pane fade"" id=""profile"">test 2</div>'","'  <li><a type=""button"" href=""#test""  class=""active"" role=""tab"" data-bs-toggle=""tab"">Home</a></li>'","'  <li><a type=""button"" href=""#test2"" role=""tab"" data-bs-toggle=""tab"">Home</a></li>'","'[href=""#test2""]'",'should not fire shown when tab has disabled attribute',"'  <li class=""nav-item"" role=""presentation""><button type=""button"" data-bs-target=""#profile"" class=""nav-link"" disabled role=""tab"">Profile</button></li>'",triggerDisabled,'button[disabled]','should not fire shown when tab has disabled class',"'  <li class=""nav-item"" role=""presentation""><a href=""#home"" class=""nav-link active"" role=""tab"" aria-selected=""true"">Home</a></li>'","'  <li class=""nav-item"" role=""presentation""><a href=""#profile"" class=""nav-link disabled"" role=""tab"">Profile</a></li>'",'a.disabled','bs.toast',"'<div class=""toast""></div>'",toastEl,'.toast',toastBySelector,toastByElement,'should allow to config in js',"'<div class=""toast"">'","'  <div class=""toast-body"">'",'    a simple toast','shown.bs.toast','should close toast when close element with data-bs-dismiss attribute is set',"'<div class=""toast"" data-bs-delay=""1"" data-bs-autohide=""false"" data-bs-animation=""false"">'","'  <button type=""button"" class=""ms-2 mb-1 btn-close"" data-bs-dismiss=""toast"" aria-label=""Close""></button>'",'.btn-close','hidden.bs.toast','should expose default setting to allow to override them',defaultDelay,"'<div class=""toast"" data-bs-autohide=""false"" data-bs-animation=""false"">'",'should expose default setting types for read','should auto hide',"'<div class=""toast"" data-bs-delay=""1"">'",'should not add fade class',"'<div class=""toast"" data-bs-delay=""1"" data-bs-animation=""false"">'",'should not trigger shown if show is prevented',assertDone,'show.bs.toast','shown event should not be triggered if show is prevented','should clear timeout if toast is shown again before it is hidden',autohide,_clearTimeout,_timeout,'_clearTimeout','should clear timeout if toast is interacted with mouse','should clear timeout if toast is interacted with keyboard',"'<button id=""outside-focusable"">outside focusable</button>'",'    <button>with a button</button>',insideFocusable,'should still auto hide after being interacted with mouse and keyboard',outsideFocusable,'outside-focusable','should not auto hide if focus leaves but mouse pointer remains inside','should not auto hide if mouse pointer leaves but focus remains inside','should allow to hide toast manually',"'<div class=""toast"" data-bs-delay=""1"" data-bs-autohide=""false"">'",'should do nothing when we call hide on a non shown toast','should not trigger hidden if hide is prevented','hide.bs.toast','hidden event should not be triggered if hide is prevented','should allow to destroy toast','should allow to destroy toast and hide it before that',"'<div class=""toast"" data-bs-delay=""0"" data-bs-autohide=""false"">'",'should create a toast','should not re create a toast','should call a toast method','should return a toast instance','should return null when there is no toast instance','should return toast instance','should return new instance when there is no toast instance','should return new instance when there is no toast instance with given configuration',toast2,'bs.tooltip','.bs.tooltip',"'<a href=""#"" id=""tooltipEl"" rel=""tooltip"" title=""Nice and short title"">'",tooltipEl,'#tooltipEl',tooltipBySelector,tooltipByElement,'should not take care of disallowed data attributes',"'<a href=""#"" rel=""tooltip"" data-bs-sanitize=""false"" title=""Another tooltip"">'",sanitize,'should convert title and content to string if numbers',"'<a href=""#"" rel=""tooltip"">'",'should enable selector delegation',containerEl,tooltipContainer,"'a[rel=""tooltip""]'","'<a href=""#"" rel=""tooltip"" title=""Another tooltip"">'",tooltipInContainerEl,'shown.bs.tooltip','should create offset modifier when offset is passed as a function',"'<a href=""#"" rel=""tooltip"" title=""Offset from function"">'",'should create offset modifier when offset option is passed in data attribute',"'<a href=""#"" rel=""tooltip"" data-bs-offset=""10,20"" title=""Another tooltip"">'","'should use original title, if not ""data-bs-title"" is given'","'<a href=""#"" rel=""tooltip"" title=""Another tooltip""></a>'",'Another tooltip','enable','should enable a tooltip',enable,'disable','should disable tooltip',disable,'show.bs.tooltip','should not show a disabled tooltip','toggleEnabled','should toggle enabled',_isEnabled,toggleEnabled,'should do nothing if disabled','should show a tooltip',"'should call toggle and show the tooltip when trigger is ""click""'",'should hide a tooltip','hidden.bs.tooltip',"'should call toggle and hide the tooltip when trigger is ""click""'",'should destroy a tooltip','should destroy a tooltip after it is shown and hidden','should destroy a tooltip and remove it from the dom',tooltipShown,'aria-describedby','tooltip','should show a tooltip when hovering a child element',"'  <svg xmlns=""http://www.w3.org/2000/svg"" width=""50"" height=""50"" viewBox=""0 0 100 100"">'","'    <rect width=""100%"" fill=""#563d7c""/>'","'    <circle cx=""50"" cy=""50"" r=""30"" fill=""#fff""/>'",'  </svg>','rect','should show a tooltip on mobile','should show a tooltip relative to placement option','inserted.bs.tooltip','bs-tooltip-auto','should not error when trying to show a tooltip that has been removed from the dom',firstCallback,'should show a tooltip with a dom element container','should show a tooltip with a jquery element container','should show a tooltip with a selector in container','#fixture','should show a tooltip with placement as a function','placement','should show a tooltip without the animation','should throw an error the element is not visible',"'<a href=""#"" style=""display: none"" rel=""tooltip"" title=""Another tooltip"">'",'Please use show on visible elements','should not show a tooltip if show.bs.tooltip is prevented','Tooltip should not be shown','should show tooltip if leave event hasn\'t occurred before delay expires','should not show tooltip if leave event occurs before delay expires','should not hide tooltip if leave event occurs and enter event occurs within the hide delay',"'<a href=""#"" rel=""tooltip"" title=""Another tooltip"" data-bs-delay=\'{""show"":0,""hide"":150}\'>'",'should not hide tooltip if leave event occurs and interaction remains inside trigger','<b>Trigger</b>','the tooltip',triggerChild,moveMouseToChildEvent,'relatedTarget','should properly maintain tooltip state if leave event occurs and enter event occurs during hide transition',"'<a href=""#"" rel=""tooltip"" title=""Another tooltip"" data-bs-placement=""top"" style=""position:fixed;left:50%;top:50%;"">Trigger</a>'",'getComputedStyle',transitionDuration,'0.15s',transitionDelay,'0s','should only trigger inserted event if a new tooltip element was created',insertedFunc,'should show a tooltip with custom class provided in data attributes',"'<a href=""#"" rel=""tooltip"" title=""Another tooltip"" data-bs-custom-class=""custom-class"">'",'should show a tooltip with custom class provided as a string in config',customClass,'custom-class custom-class-2','custom-class-2','should show a tooltip with custom class provided as a function in config','customClass','should remove `title` attribute if exists','should hide a tooltip on mobile','should hide a tooltip without animation','should not hide a tooltip if hide event is prevented','hide.bs.tooltip','should not trigger hidden event','should not throw error running hide if popper hasn\'t been shown','should not throw error','should call popper update','should do nothing if the tooltip is not shown','_isWithContent','should return true if there is content',_isWithContent,'should return false if there is no content',"'<a href=""#"" rel=""tooltip"" title="""">'",'_getTipElement','should create the tip element and return it','createElement','should return the created tip element','should set tip content','should re-show tip if it was already shown',"'<a href=""#"" rel=""tooltip"" data-bs-title=""Another tooltip"">'","'should keep tip hidden, if it was already hidden before'",'.tooltip-arrow','should do nothing if the element is null','should do nothing if the content is a child of the element',"'  <div id=""childContent""></div>'",childContent,'should add the content as a child of the element for jQuery elements','should add the child text content in the element',"'  <div id=""childContent"">Tooltip</div>'",'should add html without sanitize it',"'<div id=""childContent"">Tooltip</div>'",'childContent','should add html sanitized',"'<div id=""childContent"">'","'  <button type=""button"">test btn</button>'",'should add text content','_getTitle','should return the title',_getTitle,'should call title function',"'<a href=""#"" rel=""tooltip""></a>'",'should return tooltip instance','should return null when there is no tooltip instance','should add the aria-label attribute for referencing original title','should not add the aria-label attribute if the attribute already exists',"'<a href=""#"" rel=""tooltip"" aria-label=""Different label"" title=""Another tooltip""></a>'",'Different label','should not add the aria-label attribute if the element has text content',"'<a href=""#"" rel=""tooltip"" title=""Another tooltip"">text content</a>'",'should return new instance when there is no tooltip instance','should return new instance when there is no tooltip instance with given configuration','nothing',tooltip2,'should create a tooltip','should not re create a tooltip','should call a tooltip method',"'should append the backdrop html once on show and include the ""show"" class if it is ""shown""'",isAnimated,getElements,CLASS_BACKDROP,CLASS_NAME_SHOW,"'should not append the backdrop html if it is not ""shown""'","'should append the backdrop html once and include the ""fade"" class if it is ""shown"" and ""animated""'",CLASS_NAME_FADE,'should remove the backdrop html',"'should remove the ""show"" class'",elem,"'should not try to remove Node on remove method if it is not ""shown""'",_isAppended,'should not error if the backdrop no longer has a parent',"'<div id=""wrapper""></div>'",rootElement,'click callback','should execute callback on click',endTest,'animation callbacks','should show and hide backdrop after counting transition duration if it is animated',spy2,'spy2',execDone,'should show and hide backdrop without a delay if it is not animated',"'should not call delay callbacks if it is not ""shown""'",'Config','rootElement initialization',"'should be appended on ""document.body"" by default'",'should find the rootElement if passed as a string','should be appended on any element given by the proper config','ClassName','should allow configuring className',"'should get Plugin and execute the given method, when a click occurred on data-bs-dismiss=""PluginName""'","'<div id=""foo"" class=""test"">'","'  <button type=""button"" data-bs-dismiss=""test"" data-bs-target=""#foo""></button>'",DummyClass2,'testMethod',componentWrapper,"'[data-bs-dismiss=""test""]'",enableDismissTrigger,testMethod,"'if data-bs-dismiss=""PluginName"" hasn\'t got ""data-bs-target"", ""getOrCreateInstance"" has to be initialized by closest ""plugin.Name"" class'","'  <button type=""button"" data-bs-dismiss=""test""></button>'","'if data-bs-dismiss=""PluginName"" is disabled, must not trigger function'","'  <button type=""button"" disabled data-bs-dismiss=""test""></button>'","'  <a type=""button"" data-bs-dismiss=""test""></a>'",DummyConfigClass,'should return plugin defaults','mergeConfigObj','should parse element\'s data attributes and merge it with default config. Element\'s data attributes must excel Defaults',"'<div id=""test"" data-bs-test-bool=""false"" data-bs-test-int=""8"" data-bs-test-string1=""bar""></div>'",spyOnProperty,'get',testBool,testString,testString1,testInt,configResult,_mergeConfigObj,"'should parse element\'s data attributes and merge it with default config, plug these given during method call. The programmatically given should excel all'","'<div id=""test"" data-bs-test-bool=""false"" data-bs-test-int=""8"" data-bs-test-string-1=""bar""></div>'",'should parse element\'s data attribute `config` and any rest attributes. The programmatically given should excel all. Data attribute `config` should excel only Defaults',"'<div id=""test"" data-bs-config=\'{""testBool"":false,""testInt"":50,""testInt2"":100}\' data-bs-test-int=""8"" data-bs-test-string-1=""bar""></div>'",testInt2,'should omit element\'s data attribute `config` if is not an object',"'<div id=""test"" data-bs-config=""foo"" data-bs-test-int=""8""></div>'",79,'typeCheckConfig','should check type of the config object','boolean','(string|element)',777,_typeCheckConfig,toUpperCase,"': Option ""parent"" provided type ""number"" but expected type ""(string|element)"".'",'should return null stringified when null is passed','(null|element)','should return undefined stringified when undefined is passed','(undefined|element)','should autofocus itself by default',"'<div id=""focustrap"" tabindex=""-1""></div>'",trapElement,"'if configured not to autofocus, should not autofocus itself'",autofocus,'should force focus inside focus trap if it can',"'<a href=""#"" id=""outside"">outside</a>'","'<div id=""focustrap"" tabindex=""-1"">'","'  <a href=""#"" id=""inside"">inside</a>'",inside,'inside',focusInListener,focusInEvent,'outside','should wrap focus around forward on tab',"'  <a href=""#"" id=""first"">first</a>'","'  <a href=""#"" id=""last"">last</a>'",'first','last',outside,'should wrap focus around backwards on shift-tab','should force focus on itself if there is no focusable content','should flag itself as no longer active',_isActive,'should remove all event listeners','doesn\'t try removing event listeners unless it needs to (in case it hasn\'t been activated)','should generate uid',Util,getUID,'bs',uid2,'getSelectorFromElement','should get selector from data-bs-target',"'<div id=""test"" data-bs-target="".target""></div>'","'<div class=""target""></div>'",testEl,getSelectorFromElement,'should get selector from href if no data-bs-target set',"'<a id=""test"" href="".target""></a>'",'should get selector from href if data-bs-target equal to #',"'<a id=""test"" data-bs-target=""#"" href="".target""></a>'",'should return null if a selector from a href is a url without an anchor',"'<a id=""test"" data-bs-target=""#"" href=""foo/bar.html""></a>'",'should return the anchor if a selector from a href is a url',"'<a id=""test"" data-bs-target=""#"" href=""foo/bar.html#target""></a>'","'<div id=""target""></div>'",'#target','should return null if selector not found','should return null if no selector','getElementFromSelector','should get element from data-bs-target',getElementFromSelector,'should get element from href if no data-bs-target set','should return null if element not found','getTransitionDurationFromElement','should get transition from element',"'<div style=""transition: all 300ms ease-out;""></div>'",'should return 0 if the element is undefined or null','should return 0 if the element do not possess transition','triggerTransitionEnd','should trigger transitionend event','dispatchEvent',triggerTransitionEnd,'isElement','should detect if the parameter is an element or not and return Boolean',"'<div id=""foo"" class=""test""></div>'","'<div id=""bar"" class=""test""></div>'",isElement,'should detect jQuery element',fakejQuery,'getElement','should try to parse element','#fail','should return false if the element is not defined','should return false if the element provided is not a dom element','should return false if the element is not visible with display none',"'<div style=""display: none;""></div>'",'should return false if the element is not visible with visibility hidden',"'<div style=""visibility: hidden;""></div>'",'should return false if an ancestor element is display none','  <div>','    <div>',"'      <div class=""content""></div>'",'should return false if an ancestor element is visibility hidden',"'<div style=""visibility: hidden;"">'","'should return true if an ancestor element is visibility hidden, but reverted'","'  <div style=""visibility: visible;"">'",'should return true if the element is visible',"'  <div id=""element""></div>'","'should return false if the element is hidden, but not via display or visibility'",'<details>','</details>','should return true if its a closed details element',"'<details id=""element""></details>'",'should return true if the element is visible inside an open details element','<details open>','should return true if the element is a visible summary in a closed details element',"'  <summary id=""element-1"">'","'    <span id=""element-2""></span>'",'  </summary>',element1,'#element-1',element2,'#element-2','isDisabled','should return true if the element is not defined','should return true if the element provided is not a dom element','should return true if the element has disabled attribute',"'  <div id=""element"" disabled=""disabled""></div>'","'  <div id=""element1"" disabled=""true""></div>'","'  <div id=""element2"" disabled></div>'",div1,'#element1',div2,'#element2',"'should return false if the element has disabled attribute with ""false"" value, or doesn\'t have attribute'","'  <div id=""element"" disabled=""false""></div>'","'  <div id=""element1"" ></div>'",'should return false if the element is not disabled ',"'  <button id=""button""></button>'","'  <select id=""select""></select>'","'  <select id=""input""></select>'",'#button','#select','#input',"'  <input id=""input"" disabled=""disabled""/>'","'  <input id=""input1"" disabled=""disabled""/>'","'  <button id=""button"" disabled=""true""></button>'","'  <button id=""button1"" disabled=""disabled""></button>'","'  <button id=""button2"" disabled></button>'","'  <select id=""select"" disabled></select>'","'  <select id=""input"" disabled></select>'",'#input1','#button1','#button2',"'should return true if the element has class ""disabled""'","'  <div id=""element"" class=""disabled""></div>'","'should return true if the element has class ""disabled"" but disabled attribute is false'","'  <input id=""input"" class=""disabled"" disabled=""false""/>'",'findShadowRoot','should return null if shadow dom is not available',attachShadow,'attachShadow',findShadowRoot,'should return null when we do not find a shadow root','getRootNode','should return the shadow root when found','open','<button>Shadow Button</button>','noop','should be a function','reflow','should return element offset height to force the reflow','offsetHeight',reflow,'getjQuery','should return jQuery object when present',getjQuery,'should not return jQuery object when present if data-bs-no-jquery','data-bs-no-jquery','should not return jQuery if not present','onDOMContentLoaded','should execute callbacks when DOMContentLoaded is fired and should not add more than one listener','readyState','loading',onDOMContentLoaded,'DOMContentLoaded',"'should execute callback if readyState is not ""loading""'",'defineJQueryPlugin','should define a plugin on the jQuery instance',pluginMock,defineJQueryPlugin,'should execute if arg is function',execute,'executeAfterTransition','should immediately execute a function when waitForTransition parameter is false',callbackSpy,'callback spy',eventListenerSpy,executeAfterTransition,'should execute a function when a transitionend event is dispatched','0.05s','should execute a function after a computed CSS transition duration and there was no transitionend event dispatched','should not execute a function a second time after a computed CSS transition duration and if a transitionend event has already been dispatched','should not trigger a transitionend event if another transitionend event had already happened',dispatchSpy,'should ignore transitionend events from nested elements',"'  <div class=""nested""></div>'",'getNextActiveElement',"'should return first element if active not exists or not given and shouldGetNext is either true, or false with cycling being disabled'",array,'d',getNextActiveElement,'should return last element if active not exists or not given and shouldGetNext is false but cycling is enabled','should return next element or same if is last',"'should return next element or first, if is last and ""isCycleAllowed = true""'",'should return previous element or same if is first','should return the same on empty string',empty,sanitizeHtml,DefaultAllowlist,'should sanitize template by removing tags with XSS',template,"'  <a href=""javascript:alert(7)"">Click me</a>'",'  <span>Some content</span>',"'href=""javascript:alert(7)'",'should sanitize template and work with multiple regex',"'  <a href=""javascript:alert(7)"" aria-label=""This is a link"" data-foo=""bar"">Click me</a>'",myDefaultAllowList,"'data-foo=""bar""'",'*',/^data-foo/,"'aria-label=""This is a link""'",'should allow aria attributes and safe attributes',"'<div aria-pressed=""true"">'","'  <span class=""test"">Some content</span>'","'class=""test""'",'should remove tags not in allowlist','  <script>alert(7)</script>','<script>','should not use native api to sanitize if a custom function passed',mySanitize,htmlUnsafe,DOMParser,'parseFromString',parseFromString,'should allow multiple sanitation passes of the same template',"'<img src=""test.jpg"">'",firstResult,secondResult,'should return true if body is overflowing',overflowY,"'<div style=""height: 110vh; width: 100%""></div>'",isOverflowing,isScrollBarHidden,'should return false if body is not overflowing',scrollBar,"'should return an integer greater than zero, if body is overflowing'",'should return 0 if body is not overflowing','hide - reset','should adjust the inline padding of fixed elements which are full-width',"'<div style=""height: 110vh; width: 100%"">'","'  <div class=""fixed-top"" id=""fixed1"" style=""padding-right: 0px; width: 100vw""></div>'","'  <div class=""fixed-top"" id=""fixed2"" style=""padding-right: 5px; width: 100vw""></div>'",fixedEl,'#fixed1',fixedEl2,'#fixed2',originalPadding,getPaddingX,originalPadding2,expectedPadding,expectedPadding2,currentPadding,currentPadding2,getPaddingAttr,'should remove padding & margin if not existed before adjustment',"'  <div class=""fixed"" id=""fixed"" style=""width: 100vw;""></div>'","'  <div class=""sticky-top"" id=""sticky"" style="" width: 100vw;""></div>'",'#fixed',stickyEl,'#sticky','padding-right','margin-right','should adjust the inline margin and padding of sticky elements',"'<div style=""height: 110vh"">'","'  <div class=""sticky-top"" style=""margin-right: 10px; padding-right: 20px; width: 100vw; height: 10px""></div>'",stickyTopEl,'.sticky-top',originalMargin,getMarginX,expectedMargin,getMarginAttr,'should not adjust the inline margin and padding of sticky and fixed elements when element do not have full width',"'<div class=""sticky-top"" style=""margin-right: 0px; padding-right: 0px; width: 50vw""></div>'",currentMargin,"'should not put data-attribute if element doesn\'t have the proper style property, should just remove style property if element didn\'t had one'","'  <div class=""sticky-top"" id=""sticky"" style=""width: 100vw""></div>'",hasPaddingAttr,'data-bs-padding-right',hasMarginAttr,'data-bs-margin-right',scrollBarWidth,'Body Handling','should ignore other inline styles when trying to restore body defaults ','should hide scrollbar and reset it to its initial value',styleSheetPadding,'7px','  body {',`    padding-right: ${,inlineStylePadding,paddingRight,parseIntDecimal,originalOverFlow,getOverFlow,getOverFlowAttr,currentPadding1,'should hide scrollbar and reset it to its initial value - respecting css rules','should not adjust the inline body padding when it does not overflow',"'should not adjust the inline body padding when it does not overflow, even on a scaled display'",'.48px',defineDocumentElementOntouchstart,'_initEvents',swipeEl,_initEvents,'should not add touch event listeners if touch is not supported','Test leftCallback',spyRight,leftCallback,rightCallback,mockSwipeGesture,'Test rightCallback',spyLeft,'Test endCallback',isFirstTime,endCallback,'Functionality on PointerEvents',deleteDocumentElementOntouchstart,'_handleSwipe',_handleSwipe,"'should allow swipeRight and call ""rightCallback"" with pointer events'",'#fixture .pointer-event { touch-action: none !important; }',"'should allow swipeLeft and call ""leftCallback"" with pointer events'",'Dispose','should call EventHandler.off','.bs.swipe','should destroy',"'""isSupported"" static'","'should return ""true"" if ""touchstart"" exists in document element)'",'maxTouchPoints',isSupported,"'should return ""false"" if ""touchstart"" not exists in document element and ""navigator.maxTouchPoints"" are zero (0)'",'ontouchstart','should return 0 for no children','should return number of children',"
					","
					foo
				",'.only',Children,only,'should only allow 1 child','should throw if no children are passed','should throw if more children are passed',"
						foo
						",'.map','should iterate over children',"
					foo","
				",serializeHtml,'should work with no children','should work with children as zero number',testNumber,'<div><span>0</span></div>','should flatten result',ProblemChild,isValidElement,App,"
						","
							",'12','should call with indices',assertion,'1234','.forEach','should clone elements',"""b""","""d""","
				a","
			",clone,cloneElement,_original,'should support props.children','children take precedence over props.children','should support children in prop argument','single child argument takes precedence over props.children',childrenA,childrenB,'multiple children arguments take precedence over props.children','children argument takes precedence over props.children even if falsey','should skip cloning on invalid element','should work with jsx constructor from core',preactH,'should call old options on mount',ClassApp,vnodeSpy,'should call old options on event and update','<button>0</button>','<button>1</button>',eventSpy,'should call old options on unmount',"'should have ""isReactComponent"" property'",Comp,isReactComponent,'should be sane',Demo,"""demo""","
				inner
			",exist,'inner',"'<div id=""demo"">inner</div>'",'should single out children before componentWillReceiveProps',Child,componentWillReceiveProps,newProps,forceUpdate,'second','UNSAFE_* lifecycle methods','should support UNSAFE_componentWillMount',UNSAFE_componentWillMount,'should support UNSAFE_componentWillMount #2','UNSAFE_componentWillMount','should support UNSAFE_componentWillReceiveProps',UNSAFE_componentWillReceiveProps,'should support UNSAFE_componentWillReceiveProps #2','UNSAFE_componentWillReceiveProps','should support UNSAFE_componentWillUpdate',UNSAFE_componentWillUpdate,'should support UNSAFE_componentWillUpdate #2','UNSAFE_componentWillUpdate','should alias UNSAFE_* method to non-prefixed variant',inst,'should call UNSAFE_* methods through Suspense with wrapper component #2525',Page,Example,Suspense,fallback,'<h1>Example</h1>','should pass errorInfo in compat',Receiver,componentDidCatch,errorInfo,ThrowErr,'fail','should normalize vnodes',vnode,$$typeof,getSymbol,'react.element',0xeac7,'$$typeof','type','props',that,an,'t','should not normalize text nodes',capFLetter,charAt,hi buddy,'<div>hi buddy</div>','should create a DOM element',createFactory,"'<span class=""foo"">1</span>'",'should create a component',foo ,"'<div id=""value"">foo bar</div>'",'should patch events',isDefaultPrevented,isPropagationStopped,haveOwnProperty,'persist','nativeEvent','isDefaultPrevented','isPropagationStopped',persist,'should normalize ondoubleclick event',onDoubleClick,'ondblclick','should normalize onChange for textarea','oninput','onchange',oninput,"'should normalize onChange for range, except in IE11'",/Trident\//,"'should normalize onChange for range, except in IE11, including when IE11 has Symbol polyfill'",isIE11,'should support onAnimationEnd',onAnimationEnd,calledWithExactly,'should support onTouch* events',onTouchStart,onTouchEnd,onTouchMove,onTouchCancel,'touchcancel','should support onTransitionEnd',onTransitionEnd,'should normalize onChange',expectToBeNormalized,with,expectToBeUnmodified,"""radio""","'<input type=""radio"">'","""checkbox""","'<input type=""checkbox"">'","""file""","'<input type=""file"">'",'<textarea>','<input>','should normalize beforeinput event listener',onBeforeInput,'beforeinput','should normalize compositionstart event listener',onCompositionStart,'compositionstart','should have a default export',Compat,hydrate,createContext,useReducer,useLayoutEffect,useMemo,useCallback,useContext,lazy,PureComponent,createPortal,toArray,unmountComponentAtNode,unstable_batchedUpdates,version,'should have named exports',Named,'should return null if given null','should return a regular DOM Element if given a regular DOM Element',equalNode,'should return null if render returns false',helper,Helper,something,'should return null if render returns null','should have isReactComponent flag',forwardRef,'should have $$typeof property','react.forward_ref',0xf47,'should pass ref with createRef','should share the same ref reference',passedRef,'should pass ref with a callback','should forward props',calledWithMatch,'should support nesting','should forward null on unmount','should be able to render and hydrate forwardRef components',forwardedRef,markup,"""Hi""",'<div>Hi</div>','Hi','should update refs when switching between children',setRefOnDiv,section,nodeName,'SPAN','should support rendering null','should support rendering null for multiple children','should support useImperativeHandle',useImperativeHandle,'should not bailout if forwardRef is not wrapped in memo',renderCount,optional,'should bailout if forwardRef is wrapped in memo',memo,differentRef,'should bailout if forwardRef is wrapped in memo using function refs',resetHistory,'should pass ref through memo() with custom comparer function',App2,'calls ref when this is a function.','stale ref missing with passed useRef',_ref,_set,_hook,parentRef,'should forward at diff time instead vnode-creation.',forceTransition,forceOpen,Portal,_props,Transition,openState,'Wrapper','should pass null as ref when no ref is present','should not crash when explicitly passing null','should allow for multiple refs','should not leak context into refs',Provider,getChildContext,Forwarded,'should render react-style jsx','should call the callback','should check return false for invalid arguments','should detect a preact vnode',preactCreateElement,'should detect a compat vnode','should work with function components',Memoized,'should support adding refs','should support custom comparer functions','should rerender when custom comparer returns false','should pass props and nextProps to comparer fn',nextProps,h,'should nest without errors','should pass ref through nested memos',instanceOf,'should not unnecessarily reorder children #2895',ol,`<ol><li>A</li><li>B</li><li>C</li><li>D</li></ol>`,listItem,'li:nth-child(3)',"`<ol><li>A</li><li>B</li><li class=""selected"">C</li><li>D</li></ol>`",'should render into a different root node',foobar,'should insert the portal',setFalse,mounted,Hello,'foobar<div><p>Hello</p></div>','<div><p>Hello</p></div>','should toggle the portal','<div>foobar</div><div><p>Hello</p></div>','<div><p>Hello</p></div><div>foobar</div>','should notice prop changes on the portal',additionalProps,'should not unmount the portal component','should not render <undefined> for Portal nodes','container',Dialog content,childNodes,'should unmount Portal','should leave a working root after the portal',toggle2,mounted2,setMounted2,'<div></div><div>foobar</div>','should work with stacking portals',children2,foobar2,'<div><p>Hello</p></div><div>foobar</div><div>foobar2</div>','should work with changing the container',setContainer,'<div><p>Hello</p><div>foobar</div></div>','should work with replacing placeholder portals','should work with removing an element from stacked container to new one',root2,setRoot,'<div>foobar</div><div>foobar</div><div><p>Hello</p></div>','<div>foobar</div><div><p>Hello</p><div>foobar</div></div>','should support nested portals',hiFromBar,innerPortal,'<div><p>Hello</p></div><div><p>Inner</p></div>','<div><p>Hello</p></div><div><p>Inner</p><p>innerPortal</p></div><p>hiFromBar</p>','should support nested portals remounting #2669',setVisible,PortalComponent,innerVnode,"""inner""",___id,'inner_',outerVnode,"""outer""",'outer_',visible,_setVisible,"""app""","
					test
					","'<div id=""inner"">0</div><div id=""outer"">1</div><div id=""app"">test</div>'","'<div id=""outer"">3</div><div id=""app"">test</div>'","'<div id=""outer"">5</div><div id=""app"">test</div><div id=""inner"">4</div>'","'<div id=""outer"">7</div><div id=""app"">test</div>'",'should not unmount when parent renders',"""child""",spyParent,dom,'child',domNew,'should switch between non portal and portal node (Modal as lastChild)',Closed,Show,'<div><button>Show</button>Closed<div>Closed</div></div>','<div><button>Show</button>Open</div><div>Hello</div>','should switch between non portal and portal node (Modal as firstChild)','<div><div>Closed</div><button>Show</button>Closed</div>','should order effects well','Modal',"""modal""",ModalButton,`Button ${,'App','Button 1','Button 2','should include containerInfo',portal,containerInfo,'should order complex effects well',isPortal,'Portal ',}Parent`,}Child ${,'Portal',scratch2,'Child 1','Child 2','Child 3','Parent','Portal Child 1','Portal Child 2','Portal Child 3','Portal Parent','should be a class','PureComponent','should pass props in constructor','should ignore the __source variable',pureSpy,appSpy,Pure,Static,__source,'should only re-render when props or state change',"""a""",'should update when props are removed',"'should have ""isPureReactComponent"" property'",jsx,"""foo bar""",data-foo,"""some_id""",inner!,'className','foo bar',"'<div class=""foo bar"" data-foo=""bar""><span id=""some_id"">inner!</span>ab</div>'",'should replace isomorphic content',ce,initialChild,'initial content',dynamic content,'textContent',equals,'dynamic content','should remove extra elements',c1,'isomorphic content',c2,'extra content','should remove text nodes','Text Content','More Text Content','should ignore maxLength / minLength when is null','minlength','should support defaultValue',defaultValue,'should add defaultValue when value is null/undefined','should support defaultValue for select tag',Picked 1,Picked 2,Picked 3,'should support defaultValue for select tag when using multi selection',multiple,'should ignore defaultValue when value is 0','should keep value of uncontrolled inputs using defaultValue','should destroy the any existing DOM nodes inside the container','<span>foo</span>','should only destroy existing DOM nodes on first render','INPUT','should transform react-style camel cased attributes',dominantBaseline,"""middle""",fontWeight,"""30px""","
				foo
			","'<text dominant-baseline=""middle"" font-weight=""30px"">foo</text>'","'should correctly allow for ""className""'",'should normalize class+className even on components','should normalize className when it has an empty string','should normalize class+className + DOM properties',"""old""","""xlarge""","""new""",'new','should give precedence to last-applied class/className prop',"""from className""","""from class""",'from className','className normalization','should give precedence to className over class','class',"'should preserve className, add class alias'","'should preserve class, and add className alias'",'from class',propertyIsEnumerable,'should preserve class when spreading',spreaded,'should preserve className when spreading','should give precedence to className from spread props',} foo`,'bar foo','should give precedence to class from spread props','should not mark both class and className as enumerable',ClassNameCheck,'Failed',OtherThing,/Failed/g,"'should cast boolean ""download"" values'",download,'download','should support static content',updateSpy,mountSpy,renderSpy,StaticContent,staticMode,dangerouslySetInnerHTML,__html,componentDidUpdate,Staticness,'<div><div>Staticness</div></div>',"""should support react-relay's usage of __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED""",Ctx,readContext,Context,ReactCurrentDispatcher,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,dispatcher,'should call callback ',unstable_runWithPriority,unstable_IdlePriority,callCount,unstable_LowPriority,unstable_NormalPriority,unstable_UserBlockingPriority,unstable_ImmediatePriority,'unstable_now','should return number',unstable_now,'should work with multiple selected (array of values)',"""A""","""B""",B,"""C""",'should leave DOM untouched when suspending while hydrating','<div>Hello</div>',clearLog,Lazy,createLazy,getLog,'should properly attach event listeners when suspending while hydrating','<div>Hello</div><div>World</div>',helloListener,worldListener,World!,'<div>Hello</div><div>World!</div>','div:last-child','worldListener 1','div:first-child','helloListener','worldListener 2','should allow siblings to update around suspense boundary','<div>Count: 0</div><div>Hello</div>',increment,Counter,setCount,Count: ,'<div>Count: .appendChild(#text)','<div>Count: 1</div><div>Hello</div>','should allow parents to update around suspense boundary and unmount',setShow,'should allow parents to update around suspense boundary and unmount before resolves','should allow parents to unmount before resolves',Count: 0,'should properly hydrate when there is DOM and Components between Suspense and suspender','<div><div>Hello</div></div>','should properly hydrate suspense with Fragment siblings',originalHtml,listeners,'li:last-child','should properly hydrate suspense with Component & Fragment siblings','should suspend hydration with components with state and event listeners between suspender and Suspense','Count: 0','Count: 1',lazySpy,lazyDiv,nextSibling,'should maintain state of sibling components around suspender',lastElementChild,'should allow component to re-suspend using normal suspension mechanics after initial suspended hydration resumes','b1',bOnClickSpy,cOnClickSpy,setChild,setChildInternal,'initial HTML',lastChild,b1,'hydration resumes',Lazy2,resolve2,'second suspend','fallback',b2,'second suspend resumes','b2','should work for single element',getSuspendableComponent,SuspenseList,Loading...,`<span>Loading...</span>`,`<span>A</span>`,'should let components appear backwards if no revealOrder is mentioned',resolver1,resolver2,resolver3,getSuspenseList,`<span>Loading...</span><span>Loading...</span><span>Loading...</span>`,`<span>Loading...</span><span>B</span><span>Loading...</span>`,`<span>Loading...</span><span>B</span><span>C</span>`,`<span>A</span><span>B</span><span>C</span>`,'should let components appear forwards if no revealOrder is mentioned',`<span>A</span><span>Loading...</span><span>Loading...</span>`,`<span>A</span><span>B</span><span>Loading...</span>`,'should let components appear in forwards if revealOrder=forwards and first one resolves before others','forwards','should make components appear together if revealOrder=forwards and others resolves before first','should let components appear backwards if revealOrder=backwards and others resolves before first','backwards',`<span>Loading...</span><span>Loading...</span><span>C</span>`,'should make components appear together if revealOrder=backwards and first one resolves others','should make components appear together if revealOrder=together and first one resolves others','together','should make components appear together if revealOrder=together and second one resolves before others','should not do anything to non suspense elements',`<span>Loading...</span><div>foo</div><span>Loading...</span><span>bar</span>`,`<span>A</span><div>foo</div><span>Loading...</span><span>bar</span>`,`<span>A</span><div>foo</div><span>B</span><span>bar</span>`,'should make sure nested SuspenseList works with forwards',resolveA,resolveB,resolveC,resolveD,getNestedSuspenseList,`<span>Loading...</span><span>Loading...</span><span>Loading...</span><span>Loading...</span>`,`<span>A</span><span>B</span><span>Loading...</span><span>Loading...</span>`,`<span>A</span><span>B</span><span>C</span><span>Loading...</span>`,`<span>A</span><span>B</span><span>C</span><span>D</span>`,'should make sure nested SuspenseList works with backwards',`<span>A</span><span>Loading...</span><span>Loading...</span><span>Loading...</span>`,`<span>A</span><span>Loading...</span><span>C</span><span>Loading...</span>`,'should make sure nested SuspenseList works with together','should work with forwards even when a <Suspense> child does not suspend',revealOrder,"""forwards""",`<div></div><span>Loading...</span>`,`<div></div><span>A</span>`,'should work with together even when a <Suspense> child does not suspend',"""together""",'should not suspend resolved children if a new suspense comes in between',ComponentA,ComponentB,showB,Container,showHidden,setShowHidden,`<div></div><span>Loading...</span><span>A</span>`,`<div></div><span>B</span><span>A</span>`,'should support lazy',LazyComp,Hello from ,Suspended...,"""LazyComp""",`<div>Suspended...</div>`,`<div>Hello from LazyComp</div>`,'should reset hooks of components',hi,`<div><p>hi</p></div>`,'<div>Suspended...</div>','should call effect cleanups',effectSpy,layoutEffectSpy,'should support a call to setState before rendering the fallback','lazy should forward refs',Hello from LazyComp,'should suspend when a promise is thrown',ClassWrapper,"""class-wrapper""",FuncWrapper,"""func-wrapper""",Suspender,suspend,createSuspender,"`<div id=""class-wrapper""><div id=""func-wrapper""><div>Hello</div></div></div>`",Hello2,"`<div id=""class-wrapper""><div id=""func-wrapper""><div>Hello2</div></div></div>`",'should not call lifecycle methods of an initially suspending component',resolved,_resolve,LifecycleSuspender,Lifecycle,`<div>Lifecycle</div>`,'should properly call lifecycle methods and maintain state of a delayed suspending component',`<p>Count: 0</p>`,`<p>Count: 1</p>`,`<p>Count: 2</p>`,'should not call lifecycle methods when a sibling suspends',LifecycleLogger,`<div>Suspense</div><div>Lifecycle</div>`,Suspense 2,`<div>Suspense 2</div><div>Lifecycle</div>`,"""should call fallback's lifecycle methods when suspending""",`<div>Suspense</div>`,`<div>Suspense 2</div>`,'should keep state of siblings when suspending',Stateful,'initial',Stateful: ,`<div>Suspense</div><div>Stateful: initial</div>`,`<div>Suspense</div><div>Stateful: first</div>`,`<div>Suspense 2</div><div>Stateful: first</div>`,'should allow children to update state while suspending',`<div>Suspense 2</div><div>Stateful: second</div>`,'should allow siblings of Suspense to update state while suspending',`<div>Suspended...</div><div>Stateful: first</div>`,`<div>Suspended...</div><div>Stateful: second</div>`,'should suspend with custom error boundary',within error boundary,Catcher,`<div>within error boundary</div>`,within error boundary 2,`<div>within error boundary 2</div>`,'should allow multiple sibling children to suspend',Suspender1,suspend1,Hello first,Suspender2,suspend2,Hello second,`<div>Hello first</div><div>Hello second</div>`,resolve1,Hello first 2,Hello second 2,`<div>Hello first 2</div><div>Hello second 2</div>`,'should call multiple nested sibling suspending components render in one go',`<div>Hello first</div><div><div>Hello second</div></div>`,`<div>Hello first 2</div><div><div>Hello second 2</div></div>`,'should support text directly under Suspense',"
				Text
				",`Text<div>Hello</div>`,Hello 2,`Text<div>Hello 2</div>`,'should support to change DOM tag directly under suspense',StatefulComp,defaultTag,`<div>Stateful</div><div>Hello</div>`,'article',`<article>Stateful</article><div>Hello 2</div>`,'should only suspend the most inner Suspend',Suspended... 1,"
				Not suspended...
				",Suspended... 2,`Not suspended...<div>Hello</div>`,`Not suspended...<div>Suspended... 2</div>`,`Not suspended...<div>Hello 2</div>`,'should throw when missing Suspense',`<div>Hello</div>`,`<div>Catcher did catch: {Promise}</div>`,"""should throw when lazy's loader throws""",ThrowingLazy,prom,rej,"""Thrown in lazy's loader...""",'Suspended promises resolved instead of rejected.',`<div>Catcher did catch: Thrown in lazy's loader...</div>`,'should support null fallback',"""wrapper""","`<div id=""wrapper""><div id=""inner""><div>Hello</div></div></div>`","`<div id=""wrapper""></div>`","`<div id=""wrapper""><div id=""inner""><div>Hello2</div></div></div>`",'should support suspending multiple times',initial render,Loading,`<div>initial render</div>`,Hello1,`<div>Hello1</div>`,`<div>Hello2</div>`,"""should correctly render when a suspended component's child also suspends""",LazyChild,resolveChild,All done!,'<div>All done!</div>','should correctly render nested Suspense components',Lazy1,Lazy3,resolve3,loadingHtml,`<b>1</b><div>${,}<b>3</b></div><b>4</b>`,`<b>1</b><div><b>2</b><b>3</b></div><b>4</b>`,'should correctly render nested Suspense components without intermediate DOM #2747',ProfileDetails,resolveDetails,ProfileTimeline,resolveTimeline,ProfilePage,Loading profile...,Loading posts...,'<h1>Loading profile...</h1>',Ringo Starr,'<h1>Ringo Starr</h1><h2>Loading posts...</h2>',Timeline details,'<h1>Ringo Starr</h1><p>Timeline details</p>','should correctly render Suspense components inside Fragments',`<span>1</span><span>2</span>${,`<span>1</span><span>2</span><span>3</span>`,'should not render any of the children if one child suspends',World,`<div>Hello</div><div>World</div>`,'should render correctly when multiple children suspend with the same promise',`<div>A</div><div>B</div>`,'should un-suspend when suspender unmounts',Conditional,"
						conditional ",`<div>conditional show<div>Suspender</div></div>`,`<div>conditional hide</div>`,'should allow suspended multiple times',Suspender 1,Suspender 2,"""Suspended""","
								",'<div>conditional show<div>Suspender 1</div><div>Suspender 2</div></div>','<div>conditional showSuspended</div>',Done 1,'<div>conditional show<div>Done 1</div><div>Suspender 2</div></div>',Done 2,'<div>conditional show<div>Done 1</div><div>Done 2</div></div>','<div>conditional hide</div>','should allow same component to be suspended multiple times',cache,`Lazy ${,'<div>conditional show<div>Lazy 1</div></div>','<div>conditional show<div>Lazy 2</div></div>','<div>conditional show<div>Lazy 3</div></div>','should allow resolve suspense promise after unmounts','<div>conditional show<div>Suspender</div></div>',Done,'should support updating state while suspended',Updater,"
						i: ",`<div>i: 0<div>Suspender</div></div>`,Resolved,`<div>i: 1<div>Resolved</div></div>`,`<div>i: 2<div>Resolved</div></div>`,'should call componentWillUnmount on a suspended component',cWUSpy,suspender,suspenderRef,`<div>conditional show</div>`,getCall,thisValue,'should support sCU=false when un-suspending',shouldComponentUpdate,'should render delayed lazy components through components using shouldComponentUpdate',Blocker,'<b><i>a</i><i>1</i><i>2</i><i>d</i></b>','<b><i>a</i><i>b</i><i>c</i><i>d</i></b>','should render initially lazy components through components using shouldComponentUpdate','should render initially lazy components through createContext',ctx,suspense,Consumer,`<div>123</div>`,'should render delayed lazy components through createContext','<span>123</span>','should render SVG to string',svg,"""0 0 360 360""",stroke,"""white""","""black""","""M347.1 357.9L183.3 256.5 13 357.9V1.7h334.1v356.2zM58.5 47.2v231.4l124.8-74.1 118.3 72.8V47.2H58.5z""",'should render SVG to DOM #1',"""M347.1 357.9L183.3 256.5 L 13 357.9V1.7h334.1v356.2zM58.5 47.2v231.4l124.8-74.1 l 118.3 72.8V47.2H58.5z""","'<svg viewBox=""0 0 360 360""><path stroke=""white"" fill=""black"" d=""M 347.1 357.9 L 183.3 256.5 L 13 357.9 V 1.7 h 334.1 v 356.2 Z M 58.5 47.2 v 231.4 l 124.8 -74.1 l 118.3 72.8 V 47.2 H 58.5 Z""></path></svg>'",'should render SVG to DOM #2',"""0 0 100 100""",textAnchor,"""mid""",vectorEffect,"""non-scaling-stroke""","""M0 0 L100 100""","'<svg viewBox=""0 0 100 100""><text text-anchor=""mid"">foo</text><path vector-effect=""non-scaling-stroke"" d=""M 0 0 L 100 100""></path></svg>'",'should render correct SVG attribute names to the DOM',clipPath,"""value""",clipPathUnits,glyphOrientationHorizontal,glyphRef,markerStart,markerHeight,markerUnits,markerWidth,xChannelSelector,"'<svg clip-path=""value"" clip-rule=""value"" clipPathUnits=""value"" glyph-orientationhorizontal=""value"" glyphRef=""value"" marker-start=""value"" markerHeight=""value"" markerUnits=""value"" markerWidth=""value"" x1=""value"" xChannelSelector=""value""></svg>'",'should alias value to children','should alias defaultValue to children',/Trident/,'should support resetting the value','should unmount a root node','should do nothing if root is not mounted','should call callback with only one arg',"'should print a warning when ""@babel/plugin-transform-react-jsx-source"" is not installed'",Thrower,warnings,'@babel/plugin-transform-react-jsx-source','should print component stack',getStack,split,'Thrower','should only print owners',table,td,tr,errors,'td','should not throw an invalid render argument for a portal.','PropTypes',resetPropWarnings,'should not fail if ref is passed to comp wrapped in forwardRef','ref','ref should not be passed to prop-types valiation!','should throw an error when using a hook outside a render','should throw an error when invoked outside of a component','should throw an error when invoked outside of a component before render',Hello!,/Hook can only be invoked from render/,'should throw an error when invoked outside of a component after render','should throw an error when invoked inside an effect callback','should throw on missing <Suspense>','should throw an error when using lazy and missing Suspense',/Missing Suspense/gi,'should validate propTypes inside lazy()',Baz,unhappy,alwaysThrows,'signal','got prop inside lazy()',loader,LazyBaz,fallback...,"""signal""",'<div>fallback...</div>','got prop','<h1>signal</h1>','warn for PropTypes on lazy()','should log the function name',MyLazyLoaded,Hi there,FakeLazy,'MyLazyLoaded','<div>Hi there</div>','should log the displayName',MyLazyLoadedComponent,displayName,'HelloLazy',"""should not log a component if lazy loader's Promise rejects""",'Hey there',"""should not log a component if lazy's loader throws""",rootSpy,beforeDiffSpy,afterDiffSpy,'should call old options on update','should call old hook options for hook components',HookApp,realSetCount,hookSpy,'should call old options on error',ErrorApp,Throw,no error,useFakeTimers,catchErrorSpy,'should initialize devtools',__PREACT_DEVTOOLS__,attachPreact,'should print an error on rendering on undefined parent',/render/,'should print an error on rendering on invalid parent',/valid HTML node/,/<div/,'should print an error with (function) component name when available',/<App/,/6/,/[object Object]/,'badroot',/<Fragment/,/badroot/,'should print an error with (class) component name when available','should print an error on undefined component',/createElement/,'should print an error on invalid object component','should print an error when component is an array','should print an error on double jsx conversion',/JSX twice/,'should add __source to the vnode in debug mode.','div.jsx',lineNumber,'should add __self to the vnode in debug mode.',__self,'should warn when accessing certain attributes',/use vnode.props/,/use vnode.type/,/use vnode.props.children/,'should warn when calling setState inside the constructor',/no-op/,'should NOT warn when calling setState inside the cWM','should warn when calling setState on an unmounted Component','should warn when calling forceUpdate inside the constructor','should warn when calling forceUpdate on an unmounted Component','should print an error when child is a plain object',/not valid/,'should print an error on invalid refs',/createRef/,'should not print for null as a handler',onclick,'should not print for undefined as a handler','should not print for attributes starting with on for Components',online,'should print an error on invalid handler',"/""onclick"" property should be a function/",'should NOT print an error on valid refs','duplicate keys','should print an error on duplicate keys with DOM nodes','should allow distinct object keys','should print an error for duplicate object keys','should print an error on duplicate keys with Components','should print an error on duplicate keys with Fragments',"""list""","""c""","""f""",'table markup','missing <tbody>/<thead>/<tfoot>/<table>','missing <table> with <thead>',thead,'missing <table> with <tbody>',tbody,'missing <table> with <tfoot>',tfoot,'missing <tr>',Hi,'missing <tr> with td component','missing <tr> with th component',th,'Should accept <td> instead of <th> in <thead>','Accepts well formed table with TD components',Head,'Accepts well formed table','Accepts minimal well formed table',"""should fail if props don't match prop-types""",calledOnceWith,"/^Failed prop type: Invalid prop `text` of type `number` supplied to `Foo`, expected `string`\.\n {2}in Foo \(at (.*)[/\\]debug[/\\]test[/\\]browser[/\\]debug\.test\.js:[0-9]+\)$/m",'should only log a given prop type error once',"""ok""",'should render with error logged when validator gets signal and throws exception','should not print to console when types are correct',"""should prefer a function component's displayName""",serializeVNode,'<Bar />',"""should prefer a class component's displayName""",'<Foo />','should serialize vnodes without children',br,'<br />','should serialize vnodes with children','<div>..</div>','should serialize components','should serialize props',"'<div class=""foo"" />'",noopFn,"'<div onClick=""function noopFn() {}"" />'","'<Foo foo=""1,2,3"" />'",prop,"'<div prop=""[object Object]"" />'",'should do nothing when no options hook is present',useFoo,addHookName,'should call options hook with value',_addHookName,'can mix useState hooks',states,setStates,state1,setState1,state2,setState2,assign,state3,setState3,state4,setState4,n,'can rerender asynchronously from within an effect',didRender,setCounter,scheduleEffectAssert,'can rerender synchronously from within a layout effect','can access refs from within a layout effect callback',refAtLayoutTime,'can use multiple useState and useReducer hooks',dispatchState4,reducer1,'increment',reducer2,dispatch,"'ensures useEffect always schedule after the next paint following a redraw effect, when using the default debounce strategy'",effectCount,'should not reuse functional components with hooks',updater,setter,updateParent,"""first""","""second""",'01','should have a right call order with correct dom ref','layout inner call ','layout inner dispose ','effect inner call ','effect inner dispose ',hello ,'layout outer call ','layout outer dispose ','effect outer call ','effect outer dispose ','layout inner call <span>hello 1</span>','layout outer call <span>hello 1</span>','effect inner call <span>hello 1</span>','effect outer call <span>hello 1</span>','layout inner dispose <span>hello 2</span>','layout inner call <span>hello 2</span>','layout outer dispose <span>hello 2</span>','layout outer call <span>hello 2</span>','effect inner dispose <span>hello 2</span>','effect inner call <span>hello 2</span>','effect outer dispose <span>hello 2</span>','effect outer call <span>hello 2</span>','should pass errorInfo on hook unmount error','catches errors',resetErr,Throws,err,useErrorBoundary,Success,'<p>Error</p>','<p>Success</p>','calls the errorBoundary callback','does not leave a stale closure',onError,beforeRenderSpy,'should call old options.diffed on update',unmountSpy,'should detect hooks',USE_STATE,USE_REDUCER,USE_EFFECT,USE_LAYOUT_EFFECT,USE_REF,USE_IMPERATIVE_HANDLE,USE_MEMO,USE_CALLBACK,USE_CONTEXT,USE_ERROR_BOUNDARY,arg,'Effects',_skipEffects,__s,'should skip effect hooks','only recomputes the callback when inputs change',callbacks,'gets values from context','should use default value','should update when value changes with nonUpdating Component on top',NoUpdate,'should only update when value has changed','should allow multiple context hooks at the same time',unmountspy,'should only subscribe a component once',subSpy,'sub','should maintain context','irrelevant',setConfig,'<div>first</div><div><div>second</div></div>','should not rerender consumers that have been unmounted',toggleConsumer,changeValue,'<div><div>0</div></div>','<div><div>1</div></div>','should rerender when reset to defaultValue','hi','<p>hi</p>','bye','<p>bye</p>',useDebugValue,'should apply optional formatter','calls the effect immediately if another render is about to start',cleanupFunction,'cancels the effect when the component get unmounted before it had the chance to run it','should execute multiple effects in same component in the right order',executionOrder,'action1','cleanup1','action2','cleanup2',Test,'should execute effects in parent if child throws in effect','child after throw','child after throw cleanup','parent cleanup',ErrorBoundary,'<div>error</div>','should throw an error upwards',errored,Page1,'loaded',Page2,'err',invisible,'<p>loaded</p>','should throw an error upwards from return',Load,'<p>Load</p>','catches errors when error is invoked during render','Error','should allow creating a new root',global,setCanProceed,ChildProp,'<div><div><div>Inner</div></div></div><div><div>global</div></div>','should not crash when effect returns truthy non-function value','truthy',Replacement,'support render roots from an effect',renderRoot,Dummy,dummy,'<div><div>Count: 0</div><div></div></div>','<div><div>Count: 2</div><div><div>dummy</div></div></div>','handles errors correctly','oh no',Error! ,firstEffectSpy,firstEffectcleanup,secondEffectSpy,secondEffectcleanup,MainContent,setVal,'oops','orders effects effectively',GrandChild,} - Effect`,} - Cleanup`,}-GrandChild-1`,}-GrandChild-2`,'Parent - Effect','Parent - Cleanup',"""App""","""Child-1""","""Child-2""","""Child-3""",'Child-1-GrandChild-1 - Effect','Child-1-GrandChild-2 - Effect','Child-1 - Effect','Child-2-GrandChild-1 - Effect','Child-2-GrandChild-2 - Effect','Child-2 - Effect','Child-3-GrandChild-1 - Effect','Child-3-GrandChild-2 - Effect','Child-3 - Effect','performs the effect after every render by default','performs the effect only if one of the inputs changed','performs the effect at mount time and never again if an empty input Array is passed','calls the cleanup function followed by the effect after each render',lastCall,calledAfter,'cleanups the effect when the component get unmounted if the effect was called before','works with closure effect callbacks capturing props','Mutates given ref','calls createHandle after every render by default',createHandleSpy,'calls createHandle only on mount if an empty array is passed','Updates given ref when args change','Updates given ref when passed-in ref changes',ref1,ref2,setRef,updateState,setRefInternal,'should not update ref when args have not changed','should not throw with nullish ref','should reset ref to null when the component get unmounted','calls the effect immediately after render','works on a nested component','should execute multiple layout effects in same component in the right order','should correctly display DOM',AutoResizeTextareaLayoutEffect,actualHtml,expectedHTML,"`<div class=""${","}""><p>${",}</p><textarea></textarea></div>`,"""hi""","""hii""",'should invoke layout effects after subtree is fully connected',layoutEffect,isConnected,'isConnected',";
				",'only recomputes the result when inputs change',memoFunction,'should rerun when deps length changes',deps,'should rerun when first run threw an error',hasThrown,'short circuits diffing for memoized components',X,Y,'<div><span>0</span><p>0</p></div>','<div><span>1</span><p>1</p></div>','<div><span>2</span><p>2</p></div>','rerenders when dispatching an action',_dispatch,initState,reducer,'can be dispatched by another component',ReducerComponent,DispatchComponent,"
					Increment
				",'Count: 10','can lazily initialize its state with an action',initialCount,initCount,'provides a stable reference for dispatch',dispatches,'uses latest reducer','should not mutate the hookState',innerMessage,ContextMessage,badContextDefault,BadContext,Abstraction,defaultState,'<div><p>message</p></div>','provides a stable reference','defaults to undefined','serves the same state across render calls',stateHistory,'can initialize the state via a function','does not rerender on equal state',lastState,doSetState,'rerenders when setting the state','can be set by another component',StateContainer,Increment,'should correctly initialize',scopedThing,useSomething,setup,thing,'should correctly re-initialize when first run threw an error','should handle queued useState',Message,prevMessage,setPrevMessage,setMessage,'Click Here!!','should have needed exports',jsxs,jsxDEV,'should keep ref in props','should add keys','should apply defaultProps','should keep props over defaultProps','should set __source and __self','self','source','should return a vnode like createElement',elementVNode,jsxVNode,'should remove ref from props','should reset options after act finishes','should flush pending effects','should flush pending and initial effects','should flush series of hooks','Count: 3','should drain the queue of hooks','should restore options.requestAnimationFrame','should restore options.debounceRendering',debounceRendering,'should restore options.debounceRendering when it was undefined before','should flush state updates if there are pending state updates before `act` call',CounterButton,'should flush effects if there are pending effects before `act` call','returns a Promise if invoked with a sync callback','returns a Promise if invoked with an async callback',"'should await ""thenable"" result of callback before flushing'",'flushed effect','scheduled effect',ms,'began test',acted,'began act callback','end act callback','act returned','act result resolved','when `act` calls are nested','should invoke nested sync callback and return a Promise',innerResult,stub,'should invoke nested async callback and return a Promise','began outer act callback','began inner act callback','end inner act callback','end outer act callback','act finished','should only flush effects when outer `act` call returns',Widget,'should only flush updates when outer `act` call returns','when `act` callback throws an exception',BrokenWidget,'BrokenWidget is broken',WorkingWidget,renderBroken,renderWorking,tryRenderBroken,'synchronously','should rethrow the exception','should not affect state updates in future renders','should not affect effects in future renders','asynchronously',renderBrokenAsync,'in an effect',BrokenEffect,'BrokenEffect effect',renderBrokenEffect,'should restore custom `debounceRendering` hook',prevDebounce,tempDebounce,'should restore previous debounce',setupRerender,teardown,'teardown should flush the queue','<div>0</div>','<div>1</div>','should rerender without changes fast',"""asdf""","
						a ", c ," d
					","""/foo""","""/bar""",main,fieldset,button-bar,"""width:10px; height:10px; border:1px solid #FFF;""","
								Normal CSS
							","""top:0 ; right: 20""",Poor CSS,"""invalid-prop:1;padding:1px;font:12px/1.1 arial,sans-serif;""","
								Poorer CSS
							",padding,"
								Object CSS
							",benchmark,ticks,`PERF: empty diff: ${,below,MULTIPLIER,'should rerender repeated trees fast',Header,"
							a "," d
						",Form,ButtonBar,"
							Normal CSS
						","
							Poorer CSS
						","
							Object CSS
						",Main,Empty,`PERF: repeat diff: ${,'should construct large VDOM trees fast',FIELDS,digest,"
								a "," d
							","
									",field,"
											",":
											","
										","
										Normal CSS
									","
										Poorer CSS
									","
										Object CSS
									",`PERF: large VTree: ${,'should mutate styles/properties quickly',keyLooper,CLASSES,'baz-bat',STYLES,MULTIVALUE,'0 1px','0 0 1px 0','20px 10px','7em 5px','1px 0 5em 2px',STYLEKEYS,'relative','inline',`rgba(${,255,'border',}px ${,'dotted',conf,data-index,`test ${,p1,p2,p3,p4,`PERF: style/prop mutation: ${,'should hydrate from SSR quickly',"
					Normal CSS
				","
					Poorer CSS
				","
					Object CSS
				",`PERF: SSR Hydrate: ${,'in-place text update',createTest,randomValue,Test ,===,createVanillaTest,text1,text2,createTextNode,'Vanilla ','===',preact8Test,preact8,preactXTest,preactX,vanillaTest,bench,vanilla,THRESHOLD,slowdown,hz,`in-place text update is ${,toFixed,}x slower:`,'should clone components',prop1,'should merge new props',prop2,newProp,'should override children if specified','world','!','should override children if null is provided as an argument','should override key if specified','should override ref if specified','should normalize props (ref)','should normalize props (key)','myKey','should render components',C1,'<div>C1</div>','should render functional components',C3,PROPS,"'<div foo=""bar""></div>'",'should render components with props',constructorProps,C2,'should not crash when setting state in constructor',preact,'awesome','should not crash when setting state with cb in constructor','should not crash when calling forceUpdate with cb in constructor','should accurately call nested setState callbacks',finalState,'<p>b</p>','<p>a</p>','<p>c</p>',firstState,secondState,thirdState,'should initialize props & context but not state in Component constructor',"'<div foo=""bar"">Hello</div>'","""should render Component classes that don't pass args into the Component constructor""",STATE,'should also update the current dom','<div><p>B</p></div>','<div><div>A</div><p>B</p></div>','should not orphan children',triggerC,triggerA,WrapC,'<p>Loading</p>','<div>data</div>','<p>B</p>',"""should render components that don't pass args into the Component constructor (unistore pattern)""","""should render components that don't call Component constructor""","""should render components that don't call Component constructor and don't initialize state""","""should render components that don't inherit from Component""","""should render components that don't inherit from Component (unistore pattern)""","""should render components that don't inherit from Component and don't initialize state""",'should render class components that inherit from Component without a render method','should render string',StringComponent,'Hi there','should render number as string',NumberComponent,'42','should render null as empty string',NullComponent,'should remove orphaned elements replaced by Components',span in a component,'should remove children when root changes to text node','asdf','should maintain order when setting state (that inserts dom-elements)',addTwice,Entry,'def','ghi',First Button,Second Button,Third Button,'<div>abc</div>','<button>First Button</button><button>Second Button</button><button>Third Button</button>','<div>abc</div><div>def','</div><button>First Button</button><button>Second Button</button><button>Third Button</button>','<div>abc</div><div>def</div><div>def','<div>abc</div><div>def</div><div>ghi','should not recycle common class children with different keys',idx,msgs,'H',sideEffect,innerMsg,good,bad,GoodContainer,BadContainer,'new component with key present','AB','new component with key present re-rendered','new component without key','DE','use null placeholders to detect new component is appended','array children',"""should render DOM element's array children""",getMixedArray,mixedArrayHTML,"""should render Component's array children""","""should render Fragment's array children""",'should render sibling array children',Todo,A header,A divider,A footer,'A header','A divider','A footer','props.children',FunctionFoo,'should support passing children as a prop',"'<div a=""b""><span class=""bar"">bar</span>123456</div>'",'should be ignored when explicit children exist','<div>a</div>','should be undefined with no child','should be null with null as a child','should be false with false as a child','should be true with true as a child','should be a string with a text child','<div>text</div>','should be a string with a number child','should be a VNode with a DOM node child','<div><span></span></div>','should be a VNode with a Component child','<div><span>Bar</span></div>','should be a function with a function child','<div>2.00</div>','should be an array with multiple children',"
					0","1
				",`<div>0<span></span><input><div></div>1</div>`,'should be an array with an array as children',mixedArray,`<div>${,}</div>`,'should not flatten sibling and nested arrays',list1,list2,list3,list4,list5,'<div>0123456789</div>','High-Order Components','should render wrapper HOCs',"""We'll throw some happy little limbs on this tree.""",withBobRoss,ChildComponent,BobRossIpsum,PaintSomething,Paint,'should render HOCs with generic children',"""Let your imagination just wonder around when you're doing these things.""",BobRossProvider,BobRossConsumer,Say,Speak,A span,A final span,`<span>A span</span><div>${,}</div><span>A final span</span>`,'should render nested functional components',onBaz,"'<div foo=""bar"">inner</div>'","
					inner
				","
							inner
						",'should resolve intermediary functional component',Func,'should unmount children of high-order components without unmounting parent',inner2,Inner2,'outer initial','inner initial','outer swap','inner2 swap','inner2 update','should remount when swapping between HOC child types',InnerFunc,"""inner-func""",'initial mount','unmount','remount','Component Nesting',useIntermediary,Intermediary,I,createFunction,F1,F2,F3,'should handle lifecycle for no intermediary in component tree',Some Text,"'unmount innermost, C1'","'unmount innermost, C2'",'swap innermost',"'inject between, C1'","'inject between, C2'","'inject between, C3'",'should handle lifecycle for nested intermediary functional components',"'initial mount w/ intermediary fn, C1'","'initial mount w/ intermediary fn, C2'","'initial mount w/ intermediary fn, C3'","'unmount innermost w/ intermediary fn, C1'","'unmount innermost w/ intermediary fn, C2'",'swap innermost w/ intermediary fn',"'inject between, C1 w/ intermediary fn'","'inject between, C2 w/ intermediary fn'","'inject between, C3 w/ intermediary fn'",'should render components by depth','should handle lifecycle for nested intermediary elements',"'initial mount w/ intermediary div, C1'","'initial mount w/ intermediary div, C2'","'initial mount w/ intermediary div, C3'","'unmount innermost w/ intermediary div, C1'","'unmount innermost w/ intermediary div, C2'",'swap innermost w/ intermediary div',"'inject between, C1 w/ intermediary div'","'inject between, C2 w/ intermediary div'","'inject between, C3 w/ intermediary div'",'should set component._vnode._dom when sCU returns false',renderChildDiv,getDom,'__v',__v,__e,_vnode,_dom,base,'should handle hoisted component vnodes without DOM',unmounted,updateAppState,"`,${","',0,1,2,3,4,5'","',0,1,2,3'",'c.base',parentDom1,parent1,parent2,maybe,nullInst,toggleMaybeNull,swapChildTag,ParentWithDom,Parent1,Parent2,MaybeNull,Sibling,Null,'should keep c.base up to date if a nested child component changes DOM nodes','<div><p>child</p></div>','<div><span>child</span></div>','should not update sibling c.base if child component changes DOM nodes',s1,s2,s3,s4,'<div><p>child</p><p></p><p></p><p></p></div><p></p>','<div><span>child</span><p></p><p></p><p></p></div><p></p>','should not update parent c.base if child component changes DOM nodes and it is not first child component','<p></p><p>child</p>','<p></p><span>child</span>','should update parent c.base if child component changes DOM nodes and it is first non-null child component','<p>child</p><p></p>','<span>child</span><p></p>','should not update parent c.base if child component changes DOM nodes and a parent is not first child component','<div><p></p><p>child</p></div>','<div><p></p><span>child</span></div>','should update parent c.base if first child becomes null','maybe','initial - maybe.base','initial - child.base','initial - parent2.base','initial - parent1.base','toggleMaybe - maybe.base','toggleMaybe - child.base','toggleMaybe - parent2.base','toggleMaybe - parent1.base','swapChildTag - maybe.base','swapChildTag - child.base','swapChildTag - parent2.base','swapChildTag - parent1.base','should update parent c.base if first child becomes non-null','should update parent c.base if first non-null child becomes null with multiple null siblings','should update parent c.base if a null child returns DOM with multiple null siblings','should update parent c.base to null if last child becomes null',fragRef,'initial - fragRef.current.base','toggleMaybe - fragRef.current.base','should update parent c.base if last child returns dom','should not update parent if it is a DOM node',divVNode,domProp,'__e','_dom','initial - divVNode._dom','swapChildTag - divVNode._dom','setState','should not error if called on an unmounted component',"'setState callbacks should have latest state, even when called in render'",callbackState,'should work with readonly state','forceUpdate','should update old dom on forceUpdate in a lifecycle','<div>bar</div>','should pass context to grandchildren',CONTEXT,'getChildContext',componentWillUpdate,'shouldComponentUpdate','componentWillReceiveProps','componentWillUpdate','componentDidUpdate','should pass context to direct children','should preserve existing context properties when creating child contexts',outerContext,innerContext,InnerMost,'should pass context through Fragments','should pass context to a consumer',receivedContext,'<div><div>a</div></div>','skips referentially equal children to Provider',renders,Layout,State,'should preserve provider context through nesting providers',CHILD_CONTEXT,parentContext,childContext, - ,childData,'<div>a - b</div>','should preserve provider context between different providers',ThemeProvider,ThemeConsumer,DataProvider,DataConsumer,THEME_CONTEXT,DATA_CONTEXT,receivedTheme,receivedData,'<div>black - a</div>','should preserve provider context through nesting consumers',receivedChildData,'should not emit when value does not update','should preserve provider context through nested components',Consumed,'<div><div><strong>a</strong></div></div>','should propagates through shouldComponentUpdate false',UPDATED_CONTEXT,'<div><div><strong>b</strong></div></div>',"'should keep the right context at the right ""depth""'",NESTED_CONTEXT,receivedNestedData,Nested,'<div>b - 1</div><div>a - 1</div>',"""should not re-render the consumer if the context doesn't change""",'<div>2</div>','should allow for updates of props',renderInner,: ,'<p>value: initial</p>','updated','<p>value: updated</p>','should re-render the consumer if the children change','class.contextType',contextType,'should use the value of the nearest Provider',"""bob""",'bob','should restore legacy context for children',NewContext,OldContext,'should call componentWillUnmount','should order updates correctly',Store,updateStore,'mount ',prevProps,'update ',' to ','unmount ','render ','render 0','mount 0','render 1','unmount 0','mount 1','should create built in elements correctly',"""built-in""",BuiltIn,HTMLDivElement,connectedCallback,customElements,define,'built-in','should only register on* functions as handlers','should only register truthy values as handlers',fooHandler,falsyHandler,onOtherClick,'OtherClick','Click','should support native event names',mousedown,onmousedown,'should support camel-case event names','should update event handlers',click1,click2,'should remove event handlers','should register events not appearing on dom nodes',onanimationend,supportsPassiveEvents,'should use capturing for event props ending with *Capture',onClickCapture,onFocusCapture,/Edge/,'should support both capturing and non-capturing events on the same element',clickCapture,'should maintain focus when moving the input around',showFirst,showLast,getListHtml,validateFocus,'move from middle to beginning','move from beginning to middle','move from middle to end','move from end to middle','should maintain focus when adding children around input',DynamicList,getDynamicListHtml,prepend,'insert sibling before','insert sibling after','insert sibling after again','insert sibling before again','should maintain focus when adding children around input (unkeyed)',unkeyed,'should maintain focus when conditional elements around input','remove sibling before','remove sibling after','remove sibling after 2','remove sibling before 2','should maintain focus when removing elements around input',initialBefore,initialAfter,shift,pop,'should maintain focus when adding input next to the current input',focusInputById,'add input before','add input after','add input first place','should maintain focus when hydrating',inputStr,'should keep focus in Fragments',Heading,"
								foobar
								","
									Hello World
									",yo,'Before rerender','Heading','Hello World','After rerender','should keep text selection',"""foobar""",setSelectionRange,selectionStart,selectionEnd,'should not render empty Fragment','should render a single child',expectDomLogToBe,'<span>.appendChild(#text)','<div>.appendChild(<span>foo)','should render multiple children via noop renderer',"
				hello ",'hello <span>world</span>','should not crash with null as last child','<span>world</span>','<span>world</span><p>Hello</p>','<span>world</span><span>world</span>',"
				Hello
				",'<span>world</span>Hello<span>world</span>','should handle reordering components that return Fragments #1325','21','should handle changing node type within a Component that returns a Fragment #1326','<div>.appendChild(#text)',"'<div>122.insertBefore(<div>1, <span>1)'",'<span>1.remove()','should preserve state of children with 1 level nesting',condition,ops,'Update Stateful','should preserve state between top-level fragments','should preserve state of children nested at same level','<div></div><div>Hello</div>',"'<div>Hello.insertBefore(<div>, <div>Hello)'",'<div>.remove()','should not preserve state in non-top-level fragment nesting',"'<div>Hello.insertBefore(<div>Hello, <div>Hello)'",'<div>Hello.remove()','should not preserve state of children if nested 2 levels without siblings','should just render children for fragments',Child1,Child2,'<div>Child1</div><div>Child2</div>','should not preserve state of children if nested 2 levels with siblings','<div>Hello</div><div></div>','should preserve state between array nested in fragment and fragment','should preserve state between top level fragment and array','should not preserve state between array nested in fragment and double nested fragment','should not preserve state between array nested in fragment and double nested array','should preserve state between double nested fragment and double nested array','should not preserve state of children when the keys are different','<div>Hello</div><span>World</span>','should not preserve state between unkeyed and keyed fragment','should preserve state with reordering in multiple levels',boop,beep,htmlForTrue,'boop',htmlForFalse,'beep',"'<div>fooHellobeep.insertBefore(<div>beep, <div>foo)'",'<div>beepbarHello.appendChild(<div>bar)','rendering true to false',"'<div>beepHellofoo.insertBefore(<div>foo, <div>beep)'",'<div>fooboopHello.appendChild(<div>boop)','rendering false to true','should not preserve state when switching between a keyed fragment and an array',"'<div>1Hello2.insertBefore(<span>1, <span>1)'","'<div>11Hello2.insertBefore(<div>Hello, <span>1)'","'<div>1Hello1Hello2.insertBefore(<span>2, <span>1)'",'should preserve state when it does not change positions','<span></span><div>Hello</div>','should render nested Fragments',"
				spam
				","
				bar
			",'spamfoobar','<div>spam.appendChild(#text)','<div>spamfoo.appendChild(#text)',"'<div>spamfoobar.insertBefore(#text, #text)'",'#text.remove()','should render nested Fragments with siblings','should respect keyed Fragments','should support conditionally rendered children',contents,'can modify the children of a Fragment','012','0123','01234',Group,'should reorder Fragment children',"'<div><h1>Heading</h1>foobarHello World<h2>yo</h2><input type=""text""></div>'","'<div><h1>Heading</h1>Hello World<h2>yo</h2>foobar<input type=""text""></div>'",'should render sibling fragments with multiple children in the correct order','01234567','should support HOCs that return children',"""Don't forget to tell these special people in your life just how special they are to you.""",the top,a span,another span,a final span,'the top','a span','another span','a final span','should support conditionally rendered Fragment','initial render of true','<li>.appendChild(#text)','<ol>.appendChild(<li>0)','<ol>0.appendChild(<li>1)','<ol>01.appendChild(<li>2)','<ol>012.appendChild(<li>3)','<div>.appendChild(<ol>0123)','rendering from true to false','rendering from false to true','should support conditionally rendered Fragment or null','<ol>0123.appendChild(<li>4)','<div>.appendChild(<ol>01234)','<li>1.remove()','<li>2.remove()',"'<ol>034.insertBefore(<li>1, <li>3)'","'<ol>0134.insertBefore(<li>2, <li>3)'",'should support moving Fragments between beginning and end',"'<ol>012345.insertBefore(<li>4, <li>0)'","'<ol>401235.insertBefore(<li>5, <li>0)'",'<ol>453012.appendChild(<li>3)','<ol>450123.appendChild(<li>4)','<ol>501234.appendChild(<li>5)','should support conditional beginning and end Fragments','<ol>0122.appendChild(<li>3)','<ol>01223.appendChild(<li>4)','<li>0.remove()',"'<ol>2234.insertBefore(<li>0, <li>2)'","'<ol>02234.insertBefore(<li>1, <li>2)'",'<li>3.remove()','<li>4.remove()','should support nested conditional beginning and end Fragments','<ol>01234.appendChild(<li>5)',"'<ol>2345.insertBefore(<li>0, <li>2)'","'<ol>02345.insertBefore(<li>1, <li>2)'",'<li>5.remove()','should preserve state with reordering in multiple levels with mixed # of Fragment siblings',"'<div>fooHellobeepboop.insertBefore(<div>Hello, <div>boop)'","'<div>barbeepHelloboop.insertBefore(<div>bar, <div>boop)'",'<div>boop.remove()','<div>fooHelloboop.appendChild(<div>boop)','should preserve state with reordering in multiple levels with lots of Fragment siblings','<div>fooHellobeepbeepbeep.appendChild(<div>Hello)','<div>barbeepbeepbeepHello.appendChild(<div>bar)',"'<div>beepbeepbeepHellofoo.insertBefore(<div>foo, <div>beep)'","'<div>foobeepbeepbeepHello.insertBefore(<div>Hello, <div>beep)'",'<div>fooHelloboopboopboop.appendChild(<div>boop)','should correctly append children with siblings',getHtml,`original list: [${,}]`,`push 3: [${,"'<ol>a012b.insertBefore(<li>3, <li>b)'",`push 4: [${,"'<ol>a0123b.insertBefore(<li>4, <li>b)'",'should render components that conditionally return Fragments',"'<div>1.insertBefore(<div>3, #text)'","'<div>31.insertBefore(<div>4, #text)'",'<div>2.remove()',"'<div>34.insertBefore(#text, <div>3)'",'<div>4.remove()','<div>3.remove()','<div>1.appendChild(<div>2)','should clear empty Fragments','should support conditionally rendered nested Fragments or null with siblings','<div>.appendChild(<ol>012345)',"'<ol>0145.insertBefore(<li>2, <li>4)'","'<ol>01245.insertBefore(<li>3, <li>4)'",'should render first child Fragment that wrap null components','should properly render Components that return Fragments and use shouldComponentUpdate #1415',SubList,Error!,successHtml,errorHtml,'Error!','should properly render Fragments whose last child is a component returning null',Noop,'ABC','<div>.appendChild(<div>A)','<div>A.appendChild(<div>B)','<div>AB.appendChild(<div>C)','should replace node in-between children',SetState,B2,B1,`<div><div>A</div><div>B1</div><div>C</div></div>`,`<div><div>A</div><section>B2</section><div>C</div></div>`,'<section>.appendChild(#text)',"'<div>AB1C.insertBefore(<section>B2, <div>B1)'",'<div>B1.remove()','should replace Fragment in-between children',B3,B4,'B1','B2','B3','B4',"'<div>AB1B2C.insertBefore(<section>B3, <div>B1)'","'<div>AB3B1B2C.insertBefore(<section>B4, <div>B1)'",'<div>B2.remove()','should insert in-between children',`<div><div>A</div><div>C</div></div>`,`<div><div>A</div><div>B</div><div>C</div></div>`,"'<div>AC.insertBefore(<div>B, <div>C)'",'should insert in-between Fragments',`<div><div>A</div><div>B1</div><div>B2</div><div>C</div></div>`,"'<div>AC.insertBefore(<div>B1, <div>C)'","'<div>AB1C.insertBefore(<div>B2, <div>C)'",'should insert in-between null children','should insert Fragment in-between null children','should insert in-between nested null children','should insert Fragment in-between nested null children','should update at correct place',updateA,A2,'<div>B.remove()',`<div><span>A2</span><div>C</div></div>`,"'<div>AC.insertBefore(<span>A2, <div>A)'",'<div>A.remove()','should update Fragment at correct place',A1,A3,A4,`<div><div>A1</div><div>A2</div><div>B</div><div>C</div></div>`,`<div><div>A1</div><div>A2</div><div>C</div></div>`,`<div><span>A3</span><span>A4</span><div>C</div></div>`,"'<div>A1A2C.insertBefore(<span>A3, <div>A1)'","'<div>A3A1A2C.insertBefore(<span>A4, <div>A1)'",'<div>A2.remove()','<div>A1.remove()','should insert children correctly if sibling component DOM changes',updateB,'updateB','A2','updateA',"'<div>ABC.insertBefore(<span>A2, <div>A)'",'should correctly append children if last child changes DOM','A1','A3','A4',"'<div>A1A2.insertBefore(<span>A3, <div>A1)'","'<div>A3A1A2.insertBefore(<span>A4, <div>A1)'",'<div>A3A4.appendChild(<div>B)','should properly place conditional elements around strictly equal vnodes',tooglePanelPosition,top panel,bottom panel,`<div>Navigation</div><div>Content</div>`,`<div><div>top panel</div>${,}<div>bottom panel</div></div>`,"'<div>NavigationContentbottom panel.insertBefore(<div>top panel, <div>Navigation)'",'<div>bottom panel.remove()','<div>top panelNavigationContent.appendChild(<div>bottom panel)','<div>top panel.remove()','should efficiently unmount Fragment children','should efficiently unmount nested Fragment children','should efficiently place new children and unmount nested Fragment children',"'<div>123AB.insertBefore(<div>4, <div>2)'",'should efficiently unmount nested Fragment children when changing node type',"'<div>123AB.insertBefore(<span>1, <div>1)'",'<div>1.remove()','should find direct sibling',getRoot,_children,getDomSibling,'should find direct text node sibling',"B
			",'should find nested text node sibling','should find text node sibling with placeholder','should find sibling with placeholder',"""parent""",'should find sibling with nested placeholder',"""0.0""","""0.1""","""0.2""",'should find sibling in parent','should find unrelated sibling from a DOM VNode',"""0.0.0""","""0.0.0.0""","""0.1.0""","""0.1.1""","""0.1.2""","""0.2.0""","""0.2.1""","""0.2.2""",divAVNode,'should find unrelated sibling from a Fragment VNode',fragment,'should find unrelated sibling from a Component VNode','should find sibling through components','should find sibling rendered in Components that wrap JSX children',"""p""","""span""",'should find sibling rendered in Components without JSX children',A paragraph,'should climb through Components without JSX children','should return null if last sibling',divCVNode,'should return null if no sibling','should return null if no sibling with lots of empty trees','should return null if current parent has no siblings (even if parent has siblings at same level)','should reuse existing DOM',onClickSpy,'should skip comment nodes between dom nodes','<p><i>0</i><!-- c --><b>1</b></p>','<p><i>0</i><b>1</b></p>','should reuse existing DOM when given components','should properly set event handlers to existing DOM when given components',clickHandlers,'should add missing nodes to existing DOM when hydrating','<ul>1.appendChild(<li>2)','<ul>12.appendChild(<li>3)','should remove extra nodes from existing DOM when hydrating','should not update attributes on existing DOM',"'<div><span before-hydrate=""test"" same-value=""foo"" different-value=""a"">Test</span></div>'",same-value,different-value,new-value,"
					Test
				",'should update class attribute via className prop',"'<div class=""foo"">bar</div>'",'should correctly hydrate with Fragments','should correctly hydrate root Fragments','should not merge attributes with node created by the DOM',htmlString,DOMElement,"`<div><a foo=""bar""></a></div>`",preactElement,'should attach event handlers','<span>Test</span>','should not redundantly add text nodes',"'<div id=""test""><p>hello bar</p></div>'",'<p>hello bar</p>','should not remove values',"'<select><option value=""0"">Zero</option><option selected value=""2"">Two</option></select>'",'Zero','Two',"'<select><option value=""0"">Zero</option><option selected="""" value=""2"">Two</option></select>'",'should deopt for trees introduced in hydrate (append)',"'<div id=""test""><p class=""hi"">hello bar</p></div>'","""baz""","'<p class=""hi"">hello bar</p><p class=""hi"">hello baz</p>'",'should deopt for trees introduced in hydrate (insert before)',"'<p class=""hi"">hello baz</p><p class=""hi"">hello bar</p>'",'should skip comment nodes','<p>hello <!-- c -->foo</p>','<p>hello foo</p>','should not pass key in props','should remove orphaned keyed nodes','<div><div>2</div><li>b</li><li>c</li></div>','should remove keyed nodes (#232)',loading,BusyIndicator,busy,This div needs to be here for this to break,'busy',"""busy-placeholder""","""indicator""",indicator,"/ class=""""/g","'<div>This div needs to be here for this to break</div><div></div><div class=""indicator""><div>indicator</div><div>indicator</div><div>indicator</div></div>'",'should append new keyed elements','ab','<ol>ab.appendChild(<li>c)','should remove keyed elements from the end','abcd','<li>d.remove()','should prepend keyed elements to the beginning','bc',unshift,"'<ol>bc.insertBefore(<li>a, <li>b)'",'should remove keyed elements from the beginning','zabc','<li>z.remove()','should insert new keyed children in the middle','ac',splice,"'<ol>ac.insertBefore(<li>b, <li>c)'",'should remove keyed children from the middle','abxyzcd','<li>y.remove()','<li>x.remove()','should swap keyed children efficiently','ba','<ol>ab.appendChild(<li>a)','should swap existing keyed children in the middle of a list efficiently','acbd','initial swap',"'<ol>abcd.insertBefore(<li>b, <li>d)'",'swap back',"'<ol>acbd.insertBefore(<li>c, <li>d)'",'should move keyed children to the end of the list','bcda','move to end','<ol>abcd.appendChild(<li>a)','move to beginning',"'<ol>bcda.insertBefore(<li>a, <li>b)'",'should reverse keyed children effectively','e','f','h','j',"'<ol>abcdefghij.insertBefore(<li>j, <li>a)'","'<ol>jabcdefghi.insertBefore(<li>i, <li>a)'","'<ol>jiabcdefgh.insertBefore(<li>h, <li>a)'","'<ol>jihabcdefg.insertBefore(<li>g, <li>a)'",'<ol>jihgabcdef.appendChild(<li>e)','<ol>jihgabcdfe.appendChild(<li>d)','<ol>jihgabcfed.appendChild(<li>c)','<ol>jihgabfedc.appendChild(<li>b)','<ol>jihgafedcb.appendChild(<li>a)',"""should not preserve state when a component's keys are different""",createStateful,'Stateful','<div>Stateful</div>','Mount Stateful','Unmount Stateful','switching keys 1','switching keys 2','should not preserve state between an unkeyed and keyed component',keyed,'initial mount with key','switching from keyed to unkeyed','switching from unkeyed to keyed','should not preserve state when keys change with multiple children',Stateful1,'Stateful1',Stateful2,'Stateful2',Stateful1Ref,Stateful2Ref,Stateful1MovedRef,Stateful2MovedRef,moved,expectedHtml,'Mount Stateful1','Mount Stateful2','Unmount Stateful2','Unmount Stateful1','should preserve state when moving keyed children components','Update Stateful2','Update Stateful1','should not preserve state when switching between keyed and unkeyed components as children','should be called when child fails in constructor',throwExpectedError,"""Throwing component should not catch it's own error""",expectedError,'should handle double child throws',`error! ${,'Error: error! 2','should be called when child fails in componentWillMount','should be called when child fails in render','should be called when child fails in componentDidMount','should be called when child fails in getDerivedStateFromProps',getDerivedStateFromProps,'should be called when child fails in getSnapshotBeforeUpdate',getSnapshotBeforeUpdate,thrower,'should be called when child fails in componentDidUpdate','should be called when child fails in componentWillUpdate','should be called when child fails in componentWillReceiveProps',receiver,'componentDidCatch','should be called when child fails in shouldComponentUpdate','should be called when child fails in componentWillUnmount','should be called when applying a Component ref','should be called when applying a DOM ref','should be called when unmounting a ref','should be called when functional child fails','should be called when child inside a Fragment fails','should re-render with new content','Error contents','No error!?!?','Error: Error contents','should be able to adapt and rethrow errors',adaptedError,Adapter,'Adapted ','Error: Adapted Error!','should bubble on repeated errors','Error: Error!','should bubble on ignored errors','Receiver','should not bubble on caught errors',TopReceiver,'should be called through non-component parent elements','should bubble up when ref throws on component that is not an error boundary','should pass errorInfo on render error','is invoked after refs are set','should be passed previous props and state',prevPropsArg,prevStateArg,snapshotArg,curProps,curState,static,prevState,'cDU should not be called when sDU returned false',"""prevState argument should be the same object if state doesn't change""",changeProps,cduPrevState,cduCurrentState,PropsProvider,changeReceiverProps,PropsReceiver,'prevState argument should be a different object if state does change',"""prevProps argument should be the same object if props don't change""",cduPrevProps,cduCurrentProps,'prevProps argument should be a different object if props do change','should be called after children are mounted','Inner mounted','#inner','Outer updated','should be called after parent DOM elements are updated',outerChildText,"""parent-child""",Outer: ,'#parent-child',Inner: ,`Outer: ${,'should update state when called setState in componentWillMount',componentState,'should update state when called setState in componentWillReceiveProps',cWRP,'via shouldComponentUpdate','via componentWillUpdate','should NOT be called on initial render',ReceivePropsComponent,'should not be called on setState or forceUpdate',spyInner,'should be called when rerender with new props from parent','should be called when rerender with new props from parent even with setState/forceUpdate in child',setStateAndUpdateProps,forceUpdateAndUpdateProps,cWRPSpy,'should be called in right execution order','should invoke componentWillUnmount for top-level components','initial render','when replaced','when removed','should only remove dom after componentWillUnmount was called',nextState,'should be called on new state',getDerivedStateFromError,'getDerivedStateFromError','should set initial state with value returned from getDerivedStateFromProps','should update initial state with value returned from getDerivedStateFromProps',`not-${,'not-foo bar',"""should update the instance's state with the value returned from getDerivedStateFromProps when props change""",'getDerivedStateFromProps',"""should update the instance's state with the value returned from getDerivedStateFromProps when state changes""",' derived','updated derived','should NOT modify state if null is returned','should NOT modify state if undefined is returned','should NOT invoke deprecated lifecycles (cWM/cWRP) if new static gDSFP is present','is not called if neither state nor props have changed',childRef,parentRenders,'parent getDerivedStateFromProps','parent render','child render','should be passed next props and state',propsArg,stateArg,"""qux""","'should NOT mutate state on mount, only create new versions'",stateConstant,arguments,"'should NOT mutate state on update, only create new versions'",capturedStates,'should pass the return value from getSnapshotBeforeUpdate to componentDidUpdate',MyComponent,`getSnapshotBeforeUpdate() prevProps:${,} prevState:${,`componentDidUpdate() prevProps:${,} snapshot:${,'getSnapshotBeforeUpdate() prevProps:foo prevState:1','componentDidUpdate() prevProps:foo prevState:1 snapshot:abc','getSnapshotBeforeUpdate() prevProps:bar prevState:2','componentDidUpdate() prevProps:bar prevState:2 snapshot:abc','should call getSnapshotBeforeUpdate before mutations are committed','getSnapshotBeforeUpdate',divRef,`value:${,'should be passed the previous props and state','should call nested new lifecycle methods in the right order',updateOuterState,updateInnerState,forceUpdateOuter,forceUpdateInner,logger,'outer getDerivedStateFromProps','outer constructor','outer forceUpdate callback','outer setState callback','outer render',outerValue,'outer componentDidMount','outer shouldComponentUpdate','outer getSnapshotBeforeUpdate','outer componentDidUpdate','outer componentWillUnmount','inner getDerivedStateFromProps','inner constructor','inner forceUpdate callback','inner setState callback','inner render', ,'inner componentDidMount','inner shouldComponentUpdate','inner getSnapshotBeforeUpdate','inner componentDidUpdate','inner componentWillUnmount','#constructor and component(Did|Will)(Mount|Unmount)',LifecycleTestComponent,spies,verifyLifecycleMethods,'should be invoked for components on initial render','should be invoked for components on re-render','inner components','innermost components','when shouldComponentUpdate() returns false','should be invoke normally on initial mount','should still invoke mount for shouldComponentUpdate():false','should still invoke unmount for shouldComponentUpdate():false','#setState',"'should NOT mutate state, only create new versions'",didMount,'should abort if updater function returns null','value: ','should call callback with correct this binding',onUpdate,'Lifecycle DOM Timing',"'should be invoked when dom does (DidMount, WillUnmount) or does not (WillMount, DidUnmount) exist'",'OuterDiv','Outer componentWillMount','Outer componentDidMount','Outer componentWillUnmount','Outer after componentWillUnmount',"""OuterDiv""",'InnerDiv','Inner componentWillMount','Inner componentDidMount','Inner after componentWillUnmount',"""InnerDiv""",'should be able to use getDerivedStateFromError and componentDidCatch together',didCatch,getDerived,Boundary,'should remove this.base for HOC',}.componentWillUnmount`,`after ${,One,'One',Two,Three,'Three',Selector,'Selector','should rerender component on change by default',Should,'should not rerender component if shouldComponentUpdate returns false',ShouldNot,'should reorder non-updating text children',Row,sortBy,'<div><table>231</table></div>','<div><table>312</table></div>','should rerender when sCU returned false before','should be called with nextState','should clear renderCallbacks','should not be called on forceUpdate','should not be called on forceUpdate followed by setState','should not block queued child forceUpdate',updateInner,updateOuter,nextPropsArg,nextStateArg,'should update props reference when sCU returns false','should update state reference when sCU returns false','should update dom pointers correctly when returning an empty string',showMe,Counter: ,updateChild,updateApp,'Counter: 0','should update dom pointers correctly when returning a string','should correctly update nested children',hideThree,incrementThree,hideMe,'<span>1</span>','<span>2</span>','should update dom pointers correctly without siblings','should correctly render when sCU component has null children',Hello World!,'<div>Hello World!</div>','should support nested update with strict-equal vnodes',wrapperSetState,childSetState,'<p>baz</p>','<p>bar</p>','should reorder non-updating nested Fragment children',id: ,a: ,b: ,`<div><table>${,'<div>id: 2</div><div>a: 50</div><div>b: 10</div>','<div>id: 3</div><div>a: 25</div><div>b: 1000</div>','<div>id: 1</div><div>a: 5</div><div>b: 100</div>',}</table></div>`,'should maintain the order if memoised component initially rendered empty content',showText,Before,After,`<div>Before</div><div>After</div>`,`<div>Before</div><div>Component</div><div>After</div>`,'should treat undefined as a hole','<div><div>Hello</div><div>bar</div></div>','<div>bar.remove()','should preserve state of Components when using null or booleans as placeholders',`Update ${,`Mount ${,`Unmount ${,s1ref,s2ref,s3ref,"""third""",'<div>third: 0</div>','Mount third','mount third','<div>third: 1</div>','Update third','update third','<div>first: 0</div><div>third: 1</div>','Mount first','mount first','<div>first: 1</div><div>third: 2</div>','Update first','update first','<div>first: 1</div><div>second: 0</div><div>third: 2</div>','Mount second','mount second','<div>first: 2</div><div>second: 1</div><div>third: 3</div>','Update second','update second','should efficiently replace self-updating null placeholders',Nullable,createStatefulNullable,'Nullable',Nullable2,'Nullable2','<div>Nullable2.remove()','<div>Nullable.remove()','<div>13.appendChild(<div>Nullable2)',"'<div>13Nullable2.insertBefore(<div>Nullable, <div>3)'",'should efficiently replace null placeholders in parent rerenders (#2350)',Nullable1,createNullable,'Nullable 1','Nullable 2',the middle,'the middle',"'<div>truethe middle.insertBefore(#text, <div>the middle)'",'<div>trueNullable 1the middle.appendChild(#text)','should invoke refs in render()','should not call stale refs','ref2',bool,'should support createRef','should invoke refs in Component.render()','outer','should pass components to ref functions','should have a consistent order','called with ','called with H1','called with DIV','called with null','should pass rendered DOM from functional components to ref functions','should pass children to ref functions',InnermostComponent,'re-render','x-span','re-render swap',firstCall,'unrender','should pass high-order children to ref functions',innermost,'innermost',outerInst,innerInst,'innerMost initial','outer update','inner update','innerMost update','innerMost swap','outer unmount','inner unmount','innerMost unmount','should not pass ref into component as a prop',falsy,'should only null refs after unmount',TestUnmount,'#outer','should null and re-invoke refs when swapping component root element type',handleMount,"
						some test content
					",'handleMount','#div','#span','should add refs to components representing DOM nodes with no attributes if they have been pre-rendered','should call ref after children are rendered','should correctly set nested child refs',"""open""","""closes""","""closed""",'should correctly call child refs for un-keyed children on re-render',headerVisible,"'should rerender when value from """" to 0'",'should render an empty text node given an empty string','#text','should allow node type change with content',Bad,Good,`<div>Good</div>`,'should not render when detecting JSON-injection',"'{""type"":""span"",""children"":""Malicious""}'",'should create empty nodes (<* />)','should not throw error in IE11 with type date',"""date""",'should support custom tag names','nodeName','FOO',x-bar,'X-BAR','should support the form attribute',"""myform""",'should allow VNode reuse',reused,"""reuse""",hr,"`<div><div class=""reuse"">Hello World!</div><hr><div class=""reuse"">Hello World!</div></div>`","`<div><hr><div class=""reuse"">Hello World!</div></div>`",'should merge new elements when called multiple times',"'<span class=""hello"">Hello!</span>'",'should nest empty nodes','should not render falsy values',",","',,,0,NaN'",'should not render null','should not render undefined','should not render boolean true','should not render boolean false','should not render children when using function children','should render NaN as text content','NaN','should render numbers (0) as text content','should render numbers (42) as text content','should render bigint as text content',BigInt,'undefined','should render strings as text content',"'Testing, huh! How is it going?'",'should render arrays of mixed elements','should clear falsy attributes',anull,"""anull""",aundefined,"""aundefined""",afalse,"""afalse""",anan,"""aNaN""",a0,"""a0""",'from previous truthy values','should not render falsy attributes on hydrate','should clear falsy input values','should set value inside the specified range',"""0.05""",/(Edge|MSIE|Trident)/,'should not clear falsy DOM properties','should set enumerable boolean attribute',spellcheck,'should render download attribute','should not set tagName','should apply string attributes',"""databar""","'<div data-foo=""databar"" foo=""bar""></div>'",'should not serialize function props as attributes',ONCLICK,'should serialize object props as attributes',normalized,attr,'[object Object]','should apply class as String','should alias className to class','should support false aria-* attributes',aria-checked,"""false""",'should set checked attribute on custom elements without checked property',o-checkbox,"'<o-checkbox checked=""true""></o-checkbox>'",'should set value attribute on custom elements without value property',o-input,"'<o-input value=""test""></o-input>'",'should mask value on password input elements',"""xyz""","'<input type=""password"">'",'should unset href if null || undefined',"href=""#""","href=""undefined""","href=""null""","href=""''""",'dangerouslySetInnerHTML','should support dangerouslySetInnerHTML','<b>foo &amp; bar</b>',"
					a",'unset',`<div>a<strong>b</strong></div>`,'re-set','should apply proper mutation for VNodes with dangerouslySetInnerHTML attr',Thing,"""<b><i>test</i></b>""",'<div><b><i>test</i></b></div>','<foo><bar>test</bar></foo>','<div><foo><bar>test</bar></foo></div>','should not hydrate with dangerouslySetInnerHTML','should avoid reapplying innerHTML when __html property of dangerouslySetInnerHTML attr remains unchanged','<span>same</span>',firstInnerHTMLChild,'should unmount dangerouslySetInnerHTML',TextDiv,some text,'should reconcile mutated DOM attributes','should reorder child pairs',supportsDataList,'should not throw when setting size to an invalid value','should not execute append operation when child is at last',todoText,'new todo that I should complete',addTodo,TodoList,todos,todo,"
								[ ","""javascript:;""",Delete," ]
							",onInput,`<span>${,}</span>`,'should keep value of uncontrolled inputs','should keep value of uncontrolled checkboxes','should set progress value to 0','should always diff `checked` and `value` properties against the DOM',Inputs,'World','should always diff `contenteditable` `innerHTML` against the DOM',Editable,contentEditable,currentTarget,'[contenteditable]',createRange,selectNodeContents,setStart,sel,getSelection,removeAllRanges,addRange,getRangeAt,startOffset,'should not re-render when a component returns undefined',"', friend'","""fade-down""",'should not lead to stale DOM nodes','<div>foo</div>','should not reuse unkeyed components',clearTimeout,'00','should not cause infinite loop with referentially equal props',prevDiff,_diff,'Infinite loop','should not call options.debounceRendering unnecessarily',updates,sandbox,createSandbox,'debounceRendering','should remove attributes on pre-existing DOM',Bye,'<div><span>Bye</span></div>','should remove class attributes',"'<div class=""hi""><span>Bye</span></div>'",'should not read DOM attributes on render without existing DOM',attributesSpy,spyOnElementAttributes,"""page1""",Page 1,"'<div id=""wrapper""><div id=""page1"">Page 1</div></div>'","""page2""",Page 2,"'<div id=""wrapper""><div id=""page2"">Page 2</div></div>'",'should not throw when changing contentEditable to undefined or null','inherit','should allow setting contentEditable to false',not editable,'should reset tabindex on undefined/null',tabindex,'should use replaceNode as render root and not inject into it',setupABCDom,childA,'#a','contents','should not remove siblings of replaceNode',"'<div id=""a""></div><div id=""b""></div><div id=""c""></div>'",'should notice prop changes on replaceNode',"'<div id=""a"" class=""b""></div><div id=""b""></div><div id=""c""></div>'",'should unmount existing components',"'<div id=""a""><div>App</div></div>'","'<div id=""a"">new</div>'",'should unmount existing components in prerendered HTML',"`<div id=""child""></div>`",childContainer,'#child','<span>App</span>',"'<div id=""""></div>'",'should render multiple render roots in one parentDom',childB,'#b',childC,'#c',expectedA,"'<div id=""a"">childA</div>'",expectedB,"'<div id=""b"">childB</div>'",expectedC,"'<div id=""c"">childC</div>'",'should call unmount when working with replaceNode',My Component,Not my component,'should double replace','should replaceNode after rendering','<p>2</p>','<p>3</p>',"""shouldn't remove elements on subsequent renders with replaceNode""","
				New content
				",Update,'<div>New content<button>Update</button></div>','should remove redundant elements on subsequent renders with replaceNode','<div>New content<button>Update</button><span></span></div>','should set <select> value','should set value with selected',"
						B
					",'should work with multiple selected',"
						C
					",'should apply default props on initial render',WithDefaultProps,fieldA,fieldB,fieldC,fieldD,'should apply default props on rerender',ctor,'ctor',PROPS1,PROPS2,'should force a rerender',ForceUpdateComponent,'should add callback to renderCallbacks','should apply style as String',"""top: 5px; position: relative;""",'top: 5px; position: relative;','should not call CSSStyleDeclaration.setProperty for style strings','setProperty',"""top: 10px; position: absolute;""",'should properly switch from string styles to object styles and back',"""display: inline;""",'should serialize style objects',styleObj,"'rgb(255, 100, 0)'",backgroundPosition,'10px 10px','background-size','cover',gridRowStart,'should support opacity 0',opacity,'should support animation-iteration-count as number',animationIterationCount,'animationIterationCount','2.5','should replace previous style objects','should remove old styles','should remove empty styles','var(--fake-var)','should support css custom properties','var(--foo)',"'should not add ""px"" suffix for custom properties'",'css vars should not be transformed into dash-separated','--fooBar','--foo-baz','var(--fooBar)',zIndex,'var(--foo-baz)',"
					test
				",sortCss,'--foo-baz: 2; --fooBar: 1; opacity: var(--fooBar); z-index: var(--foo-baz);','should call CSSStyleDeclaration.setProperty for css vars',"""M 347.1 357.9 L 183.3 256.5 L 13 357.9 V 1.7 h 334.1 v 356.2 Z M 58.5 47.2 v 231.4 l 124.8 -74.1 l 118.3 72.8 V 47.2 H 58.5 Z""","' xmlns=""http://www.w3.org/2000/svg""'","`
			<svg viewBox=""0 0 360 360"">
				<path d=""M 347.1 357.9 L 183.3 256.5 L 13 357.9 V 1.7 h 334.1 v 356.2 Z M 58.5 47.2 v 231.4 l 124.8 -74.1 l 118.3 72.8 V 47.2 H 58.5 Z"" fill=""black"" stroke=""white""></path>
			</svg>
		`",/[\n\t]+/g,'should support svg xlink:href attribute','use','xlink:href',"` href=""#foo""`",'should support svg attributes',xlinkHref,"""www.preact.com""","' xmlns:xlink=""http://www.w3.org/1999/xlink""'","`
			<svg viewBox=""0 0 360 360"" href=""www.preact.com"">
				<path d=""M 347.1 357.9 L 183.3 256.5 L 13 357.9 V 1.7 h 334.1 v 356.2 Z M 58.5 47.2 v 231.4 l 124.8 -74.1 l 118.3 72.8 V 47.2 H 58.5 Z"" fill=""black"" stroke=""white""></path>
			</svg>
		`",'should render SVG to DOM','should render with the correct namespace URI',namespace,namespaceURI,'http://www.w3.org/2000/svg','should use attributes for className','foo_','bar_','foo_2','should still support class attribute',"""0 0 1 1""","` class=""foo bar""`",'should still support className attribute','should switch back to HTML for <foreignObject>',foreignObject,"""#foo""",'should render foreignObject as an svg element','should transition from DOM to SVG and back',"""svg1923""","""700""",xmlns,"""http://www.w3.org/2000/svg""",circle,"""333""",cx,"""#fede58""",'HTMLDivElement','SVGSVGElement','returns an empty array with no child',lengthOf,'returns an empty array with null as a child','returns an empty array with false as a child','returns an empty array with true as a child','should skip a function child','returns an array containing a VNode with a text child','returns an array containing a VNode with a number child','returns an array containing a VNode with a DOM node child','returns an array containing a VNode with a Component child','returns an array with multiple children',"
				0","1
			",'returns an array with non-renderables removed with a mixed array as children',filterAndReduceChildren,renderableArray,originalChild,actualChild,'flattens sibling and nested arrays',flatList,'should have exported properties','Component','hydrate','should return a Provider and a Consumer','Provider','Consumer','should return a valid Provider Component',contextValue,child1,child2,providerComponent,'should return a VNode','should set VNode#type property','should set VNode.constructor property to prevent json injection','should set VNode#props property','should set VNode#key property',does,'should not set VNode#props.key property','props.key','should set VNode#ref property',emptyFunction,'should not set VNode#props.ref property','props.ref','should have ordered VNode properties',/^_/,'should preserve raw props','should support element children',kid1,kid2,"'should support multiple element children, given as arg list'",kid3,"'should handle multiple element children, given as an array'",'should support nested children','should support text children','textstuff','props.foo','should NOT set children prop when unspecified','should NOT merge adjacent text children',barClone,bazClone,baz2,baz2Clone,'six','should not merge nested adjacent text children','should not merge children that are boolean values','should not merge children of components','should respect defaultProps','should override defaultProps','should ignore props.children if children are manually specified',"
				c
			",childrenless,'should be available as named exports',toChildArray,'remove backticks',"`
# \`@mui/styled-engine\`

<p class=""description"">Configuring your preferred styling library.</p>
      `",'@mui/styled-engine','getDescription','trims the description',getDescription,"`
<p class=""description"">
  Some description
</p>
      `",'Some description',"`
<p class=""description"">
  Some \`description\`
</p>
      `",'should not be greedy',"`
<p class=""description"">
  Some description
</p>
## Foo
<p>bar</p>
      `",'getHeaders','should return a correct result',getHeaders,"`
---
title: React Alert component
components: Alert, AlertTitle
githubLabel: 'component: alert'
packageName: '@mui/lab'
waiAria: https://www.w3.org/TR/wai-aria-practices/#alert
authors: ['foo', 'bar']
---
`",'Alert','AlertTitle',githubLabel,'component: alert',packageName,'@mui/lab','React Alert component',waiAria,'https://www.w3.org/TR/wai-aria-practices/#alert',authors,'should work with authors broken in two lines',"`
---
title: React Alert component
components: Alert, AlertTitle
githubLabel: 'component: alert'
packageName: '@mui/lab'
waiAria: https://www.w3.org/TR/wai-aria-practices/#alert
authors:
  ['foo', 'bar']
---
`",'should work with one author per line',"`
---
title: React Alert component
components: Alert, AlertTitle
githubLabel: 'component: alert'
packageName: '@mui/lab'
waiAria: https://www.w3.org/TR/wai-aria-practices/#alert
authors:
  [
    'foo',
    'bar',
  ]
---
    `",'getContents',"'Split markdown into an array, separating demos'",'returns a single entry without a demo',getContents,'# SomeGuide\nwhich has no demo',"'uses a `{{""demo""` marker to split'","'# SomeGuide\n{{""demo"": ""GuideDemo.js"" }}\n## NextHeading'",'# SomeGuide\n',"'""demo"": ""GuideDemo.js"" '",'\n## NextHeading','ignores possible code','# SomeGuide\n```jsx\n<Button props={{\nfoo: 1\n}}','prepareMarkdown','returns the table of contents with html and emojis stripped',markdown,"`
# Support
## Community help (free)
### GitHub <img src=""/static/images/logos/github.svg"" width=""24"" height=""24"" alt=""GitHub logo"" loading=""lazy"" />
### Unofficial 👍
### Warning ⚠️
`",docs,en,toc,prepareMarkdown,pageFilename,translations,filename,'index.md',userLanguage,'en',ordered,hash,'github',level,'GitHub','unofficial','Unofficial','warning','Warning','community-help-free','Community help (free)','enables word-break for function signatures',"`
# Theming
## API
### responsiveFontSizes(theme, options) => theme
### createTheme(options, ...args) => theme
`",'responsivefontsizes-theme-options-theme',"'responsiveFontSizes(&#8203;theme, options) =&gt; theme'",'createtheme-options-args-theme',"'createTheme(&#8203;options, ...args) =&gt; theme'",'api','API','use english hash for different locales',markdownEn,"`
# Localization
## Locales
### Example
### Use same hash
`",markdownPt,"`
# Localização
## Idiomas
### Exemplo
### Usar o mesmo hash
`",markdownZh,"`
# 所在位置
## 语言环境
### 例
### 使用相同的哈希
`",tocEn,tocPt,zh,tocZh,'same-hash-test','localization.md','localization-pt.md','pt','localization-zh.md','zh','例','use-same-hash','使用相同的哈希','locales','语言环境','Exemplo','Usar o mesmo hash','Idiomas','Example','Use same hash','Locales','use translated hash for translations are not synced',"`
# Localização
## Idiomas
### Exemplo
### Usar o mesmo hash
### Usar traduzido
`",'usar-traduzido','Usar traduzido','should hash as expected','createTheme(options) => theme','createtheme-options-theme','Typography - Font family','typography-font-family',"""barre d'application""",'barre-dapplication','createGenerateClassName([options]) => class name generator','creategenerateclassname-options-class-name-generator','@mui/material/styles vs @mui/styles','mui-material-styles-vs-mui-styles','Blog 📝','blog',entry,renderInlineMarkdown,textToHash,`snapshot #${,} matches`,'should generate a unique hash',unique,'Styling solution','styling-solution','styling-solution-2','does not crash with default theme',createTheme,HighlightedCode,language,"""javascript""",'does not crash with default theme in dark mode',palette,'dark','does not crash with branding theme',getDesignTokens,'light','does not crash with branding theme in dark mode','return first level page',findActivePage,'/getting-started',pathname,'DescriptionIcon','/getting-started/installation','return nested page','return deep nested page','/components/radio-buttons','Radio button','new structure','/material-ui/components','ToggleOnIcon',subheader,'/components/inputs','/material-ui/react-autocomplete','/material-ui/react-buttons','Button','/material-ui/react-button-group','/material-ui/react-checkboxes','Checkbox','/material-ui/react-floating-action-button','/material-ui/react-radio-buttons','/material-ui/react-rating','/material-ui/react-selects','/material-ui/react-slider','/material-ui/react-switches','Switch','/material-ui/react-text-fields','Text field','/material-ui/react-transfer-list','/material-ui/react-toggle-button','get material-ui',getUrlProduct,'/material-ui/react-button/','material-ui','/zh/material-ui/react-button/','get base','/base/react-button-unstyled/','base','/zh/base/react-button-unstyled/','get joy-ui','/joy-ui/react-button/','joy-ui','/zh/joy-ui/react-button/','get system','/system/','/zh/system/basics/','get data-grid','/x/react-data-grid/components','data-grid','/zh/x/react-data-grid/components','get date-picker','/x/react-date-picker/components','date-picker','/zh/x/react-date-picker/components','should return correct title',pageToTitle,'/docs/src/pages/components/button/button.md','/components','Components','/customization/how-to-customize','How to customize','should remove `react-` prefix','/docs/pages/material/react-buttons.js','Buttons',"`
import * as React from 'react';
import PropTypes from 'prop-types';
import { withStyles } from '@mui/material/styles';
import Input from '@mui/material/Input';
import InputLabel from '@mui/material/InputLabel';
import FormControl from '@mui/material/FormControl';
import FormHelperText from '@mui/material/FormHelperText';
import Select from '@mui/material/Select';
import SliderUnstyled from '@mui/base/SliderUnstyled';
import FooBar, { Qux } from '@foo-bar/bip';
const styles = theme => ({
  container: {
    display: 'flex',
    flexWrap: 'wrap',
  },
  formContro
`",'should handle @ dependencies',getDependencies,codeLanguage,'JS','latest','react-dom','@emotion/react','@emotion/styled','@foo-bar/bip','@mui/material','@mui/base','prop-types','should handle * dependencies',"`
import * as React from 'react';
import PropTypes from 'prop-types';
import * as _ from '@unexisting/thing';
import Draggable from 'react-draggable';
import match from 'autosuggest-highlight/match';
import parse from 'autosuggest-highlight/parse';
import TextField from '@mui/material/TextField';
import Paper from '@mui/material/Paper';
import MenuItem from '@mui/material/MenuItem';
import { withStyles } from '@mui/material/styles';
const suggestions = [
`",'@unexisting/thing','autosuggest-highlight','react-draggable','should support direct import',"`
import * as React from 'react';
import PropTypes from 'prop-types';
import Grid from '@mui/material/Grid';
import { withStyles } from '@mui/material/styles';
import AdapterDateFns from '@mui/lab/AdapterDateFns';
import { LocalizationProvider as MuiPickersLocalizationProvider, KeyboardTimePicker, KeyboardDatePicker } from '@mui/lab';
`",'date-fns','should support import for side effect',"`
import * as React from 'react';
import PropTypes from 'prop-types';
import '@mui/material/Grid';
import '@mui/material/styles';
import '@mui/lab/AdapterDateFns';
import '@mui/lab';
import 'exceljs';
`",exceljs,'can collect required @types packages','TS','@types/foo-bar__bip','@types/prop-types','@types/react-dom','@types/react',typescript,'should handle multilines',"`
import * as React from 'react';
import AdapterDateFns from '@mui/lab/AdapterDateFns';
import {
  LocalizationProvider as MuiPickersLocalizationProvider,
  KeyboardTimePicker,
  KeyboardDatePicker,
} from '@mui/lab';
    `",'should include core if lab present',"`
import lab from '@mui/lab';
    `",'can use codesandbox deploys if a commit is given',"`
import * as Material from '@mui/material';
import * as Base from '@mui/base';
import * as IconsMaterial from '@mui/icons-material';
import * as Lab from '@mui/lab';
import * as Styles from '@mui/styles';
import * as System from '@mui/system';
import * as Utils from '@mui/utils';
    `",muiCommitRef,'2d0e8b4daf20b7494c818b6f8c4cc8423bc99d6f','https://pkg.csb.dev/mui/material-ui/commit/2d0e8b4d/@mui/material','@mui/icons-material','https://pkg.csb.dev/mui/material-ui/commit/2d0e8b4d/@mui/icons-material','https://pkg.csb.dev/mui/material-ui/commit/2d0e8b4d/@mui/lab','@mui/styles','https://pkg.csb.dev/mui/material-ui/commit/2d0e8b4d/@mui/styles','@mui/system','https://pkg.csb.dev/mui/material-ui/commit/2d0e8b4d/@mui/system','@mui/utils','https://pkg.csb.dev/mui/material-ui/commit/2d0e8b4d/@mui/utils','https://pkg.csb.dev/mui/material-ui/commit/2d0e8b4d/@mui/base','should date adapters',"`
import * as React from 'react';
import AdapterDateFns from '@mui/lab/AdapterDateFns';
import AdapterDayjs from '@mui/lab/AdapterDayjs';
import AdapterLuxon from '@mui/lab/AdapterLuxon';
import AdapterMoment from '@mui/lab/AdapterMoment';
    `",dayjs,luxon,'replace material related links',replaceMaterialLinks,"`
      <ul>
      <a href=""/guides/minimizing-bundle-size/"">reading this guide on minimizing bundle size</a>
      <a href=""/customization/theme-components/#default-props"">default props</a>
      <a data-no-markdown-link=""true"" tabindex=""0"" href=""/getting-started/usage/"">Get started</a>
      <li><a href=""/discover-more/related-projects/"">Tree view</a></li>
      </ul>
    `","`
      <ul>
      <a href=""/material-ui/guides/minimizing-bundle-size/"">reading this guide on minimizing bundle size</a>
      <a href=""/material-ui/customization/theme-components/#default-props"">default props</a>
      <a data-no-markdown-link=""true"" tabindex=""0"" href=""/material-ui/getting-started/usage/"">Get started</a>
      <li><a href=""/material-ui/discover-more/related-projects/"">Tree view</a></li>
      </ul>
    `",'should not change if links have been updated','replace correct component links',replaceComponentLinks,"`
      <ul>
      <li><a href=""/components/button-group/"">Button Group</a></li>
      <li><a href=""/components/buttons/"">Buttons</a></li>
      <li><a href=""/components/checkboxes/#main-content"">text</a></li>
      <li><a href=""/components/radio-buttons#main-content"">text</a></li>
      <li><a href=""/components/selects/#main-content"">text</a></li>
      <li><a href=""/components/switches/#main-content"">text</a></li>
      <li><a href=""/components/text-fields/#main-content"">text</a></li>
      <li><a href=""/components/avatars/#main-content"">text</a></li>
      <li><a href=""/components/badges/#main-content"">text</a></li>
      <li><a href=""/components/chips/#main-content"">text</a></li>
      <li><a href=""/components/dividers/#main-content"">text</a></li>
      <li><a href=""/components/icons/#main-content"">text</a></li>
      <li><a href=""/components/material-icons/#main-content"">text</a></li>
      <li><a href=""/components/lists/#main-content"">text</a></li>
      <li><a href=""/components/tables/#main-content"">text</a></li>
      <li><a href=""/components/tooltips/#main-content"">text</a></li>
      <li><a href=""/components/dialogs/#main-content"">text</a></li>
      <li><a href=""/components/snackbars/#main-content"">text</a></li>
      <li><a href=""/components/cards/#main-content"">text</a></li>
      <li><a href=""/components/breadcrumbs/#main-content"">text</a></li>
      <li><a href=""/components/drawers/#main-content"">text</a></li>
      <li><a href=""/components/links/#main-content"">text</a></li>
      <li><a href=""/components/menus/#main-content"">text</a></li>
      <li><a href=""/components/steppers/#main-content"">text</a></li>
      <li><a href=""/components/tabs/#main-content"">text</a></li>
      <li><a href=""/components/transitions/#main-content"">text</a></li>
      <li><a href=""/components/pickers/#main-content"">text</a></li>
      <li><a href=""/components/progress/#main-content"">text</a></li>
      -
      <li><a href=""/components/tree-view/"">Tree view</a></li>
      <li><a href=""/components/data-grid/demo/"">Demo</a></li>
      </ul>
    `","`
      <ul>
      <li><a href=""/material-ui/react-button-group/"">Button Group</a></li>
      <li><a href=""/material-ui/react-button/"">Buttons</a></li>
      <li><a href=""/material-ui/react-checkbox/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-radio-button#main-content"">text</a></li>
      <li><a href=""/material-ui/react-select/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-switch/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-text-field/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-avatar/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-badge/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-chip/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-divider/#main-content"">text</a></li>
      <li><a href=""/material-ui/icons/#main-content"">text</a></li>
      <li><a href=""/material-ui/material-icons/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-list/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-table/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-tooltip/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-dialog/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-snackbar/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-card/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-breadcrumbs/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-drawer/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-link/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-menu/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-stepper/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-tabs/#main-content"">text</a></li>
      <li><a href=""/material-ui/transitions/#main-content"">text</a></li>
      <li><a href=""/material-ui/pickers/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-progress/#main-content"">text</a></li>
      -
      <li><a href=""/material-ui/react-tree-view/"">Tree view</a></li>
      <li><a href=""/x/react-data-grid/demo/"">Demo</a></li>
      </ul>
    `",'should do nothing if the components have updated',"`
      <ul>
      <li><a href=""/material-ui/react-button-group/"">Button Group</a></li>
      <li><a href=""/material-ui/react-button/"">Buttons</a></li>
      <li><a href=""/material-ui/react-checkbox/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-radio-button#main-content"">text</a></li>
      <li><a href=""/material-ui/react-select/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-switch/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-text-field/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-avatar/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-badge/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-chip/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-divider/#main-content"">text</a></li>
      <li><a href=""/material-ui/icons/#main-content"">text</a></li>
      <li><a href=""/material-ui/material-icons/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-list/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-table/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-tooltip/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-dialog/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-snackbar/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-card/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-breadcrumbs/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-drawer/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-link/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-menu/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-stepper/#main-content"">text</a></li>
      <li><a href=""/material-ui/react-tabs/#main-content"">text</a></li>
      <li><a href=""/material-ui/transitions/#main-content"">text</a></li>
      <li><a href=""/material-ui/pickers/#main-content"">text</a></li>
      -
      <li><a href=""/material-ui/react-tree-view/"">Tree view</a></li>
      <li><a href=""/x/react-data-grid/demo/"">Demo</a></li>
      </ul>
    `",'replace correct API links',replaceAPILinks,"`
    <h2 id=""heading-api""><span class=""anchor-link"" id=""api""></span>API<a aria-labelledby=""heading-api"" class=""anchor-link-style"" href=""#api"" tabindex=""-1""><svg><use xlink:href=""#anchor-link-icon"" /></svg></a></h2><ul>
<li><a href=""/api/button/""><code>&lt;Button /&gt;</code></a></li>
<li><a href=""/api/no-ssr/""><code>&lt;Text /&gt;</code></a></li>
<li><a href=""/api/portal/""><code>&lt;Text /&gt;</code></a></li>
<li><a href=""/api/textarea-autosize/""><code>&lt;Text /&gt;</code></a></li>
<li><a href=""/api/button-base/""><code>&lt;ButtonBase /&gt;</code></a></li>
<li><a href=""/api/button-unstyled/""><code>&lt;ButtonUnstyled /&gt;</code></a></li>
<li><a href=""/api/tabs-list-unstyled/""><code>&lt;TabListUnstyled /&gt;</code></a></li>
<li><a href=""/api/tab-panel-unstyled/""><code>&lt;TabListUnstyled /&gt;</code></a></li>
<li><a href=""/api/unstable-trap-focus/""><code>&lt;UnstableTrapFocus /&gt;</code></a></li>
<li><a href=""/api/click-away-listener/""><code>&lt;UnstableTrapFocus /&gt;</code></a></li>
<li><a href=""/api/icon-button/""><code>&lt;IconButton /&gt;</code></a></li>
<li><a href=""/api/loading-button/""><code>&lt;LoadingButton /&gt;</code></a></li>
<li><a href=""/api/data-grid/data-grid/"">DataGrid</a></li>
<li><a href=""/api/data-grid/data-grid-pro/"">DataGridPro</a></li>
<li><a href=""/system/basics/"">System</a></li>
</ul>
    `","`
    <h2 id=""heading-api""><span class=""anchor-link"" id=""api""></span>API<a aria-labelledby=""heading-api"" class=""anchor-link-style"" href=""#api"" tabindex=""-1""><svg><use xlink:href=""#anchor-link-icon"" /></svg></a></h2><ul>
<li><a href=""/material-ui/api/button/""><code>&lt;Button /&gt;</code></a></li>
<li><a href=""/base/api/no-ssr/""><code>&lt;Text /&gt;</code></a></li>
<li><a href=""/base/api/portal/""><code>&lt;Text /&gt;</code></a></li>
<li><a href=""/base/api/textarea-autosize/""><code>&lt;Text /&gt;</code></a></li>
<li><a href=""/material-ui/api/button-base/""><code>&lt;ButtonBase /&gt;</code></a></li>
<li><a href=""/base/api/button-unstyled/""><code>&lt;ButtonUnstyled /&gt;</code></a></li>
<li><a href=""/base/api/tabs-list-unstyled/""><code>&lt;TabListUnstyled /&gt;</code></a></li>
<li><a href=""/base/api/tab-panel-unstyled/""><code>&lt;TabListUnstyled /&gt;</code></a></li>
<li><a href=""/base/api/unstable-trap-focus/""><code>&lt;UnstableTrapFocus /&gt;</code></a></li>
<li><a href=""/base/api/click-away-listener/""><code>&lt;UnstableTrapFocus /&gt;</code></a></li>
<li><a href=""/material-ui/api/icon-button/""><code>&lt;IconButton /&gt;</code></a></li>
<li><a href=""/material-ui/api/loading-button/""><code>&lt;LoadingButton /&gt;</code></a></li>
<li><a href=""/x/api/data-grid/data-grid/"">DataGrid</a></li>
<li><a href=""/x/api/data-grid/data-grid-pro/"">DataGridPro</a></li>
<li><a href=""/system/basics/"">System</a></li>
</ul>
    `",'should do nothing if the APIs have updated',"`
      <h2 id=""heading-api""><span class=""anchor-link"" id=""api""></span>API<a aria-labelledby=""heading-api"" class=""anchor-link-style"" href=""#api"" tabindex=""-1""><svg><use xlink:href=""#anchor-link-icon"" /></svg></a></h2><ul>
  <li><a href=""/material-ui/api/button/""><code>&lt;Button /&gt;</code></a></li>
  <li><a href=""/material-ui/api/button-base/""><code>&lt;ButtonBase /&gt;</code></a></li>
  <li><a href=""/base/api/button-unstyled/""><code>&lt;ButtonUnstyled /&gt;</code></a></li>
  <li><a href=""/material-ui/api/icon-button/""><code>&lt;IconButton /&gt;</code></a></li>
  <li><a href=""/material-ui/api/loading-button/""><code>&lt;LoadingButton /&gt;</code></a></li>
  </ul>
      `",'only replace links for new routes (/material-ui/* & /x/*)',replaceHtmlLinks,"`
    <ul>
    <li><a href=""/components/button-group/"">Button Group</a></li>
    <li><a href=""/components/buttons/"">Buttons</a></li>
    <li><a href=""/components/css-baseline/""></a></li>
    <li><a href=""/components/image-list/""></a></li>
    <li><a href=""/components/trap-focus/""></a></li>
    <li><a href=""/components/tree-view/"">Tree view</a></li>
    <li><a href=""/components/data-grid/demo/"">Demo</a></li>
    <li><a href=""/api/button/""><code>&lt;Button /&gt;</code></a></li>
    <li><a href=""/api/button-base/""><code>&lt;ButtonBase /&gt;</code></a></li>
    <li><a href=""/api/button-unstyled/""><code>&lt;ButtonUnstyled /&gt;</code></a></li>
    <li><a href=""/api/icon-button/""><code>&lt;IconButton /&gt;</code></a></li>
    <li><a href=""/api/loading-button/""><code>&lt;LoadingButton /&gt;</code></a></li>
    <li><a href=""/api/data-grid/data-grid/"">DataGrid</a></li>
    <li><a href=""/api/data-grid/data-grid-pro/"">DataGridPro</a></li>
    <li><a href=""/system/basics/"">System</a></li>
    <a href=""/guides/minimizing-bundle-size/"">reading this guide on minimizing bundle size</a>
    <a href=""/customization/theme-components/#default-props"">default props</a>
    <a data-no-markdown-link=""true"" tabindex=""0"" href=""/getting-started/usage/"">Get started</a>
    <li><a href=""/discover-more/related-projects/"">Tree view</a></li>
    </ul>
    `","`
    <ul>
    <li><a href=""/material-ui/react-button-group/"">Button Group</a></li>
    <li><a href=""/material-ui/react-button/"">Buttons</a></li>
    <li><a href=""/material-ui/react-css-baseline/""></a></li>
    <li><a href=""/material-ui/react-image-list/""></a></li>
    <li><a href=""/material-ui/react-trap-focus/""></a></li>
    <li><a href=""/material-ui/react-tree-view/"">Tree view</a></li>
    <li><a href=""/x/react-data-grid/demo/"">Demo</a></li>
    <li><a href=""/material-ui/api/button/""><code>&lt;Button /&gt;</code></a></li>
    <li><a href=""/material-ui/api/button-base/""><code>&lt;ButtonBase /&gt;</code></a></li>
    <li><a href=""/base/api/button-unstyled/""><code>&lt;ButtonUnstyled /&gt;</code></a></li>
    <li><a href=""/material-ui/api/icon-button/""><code>&lt;IconButton /&gt;</code></a></li>
    <li><a href=""/material-ui/api/loading-button/""><code>&lt;LoadingButton /&gt;</code></a></li>
    <li><a href=""/x/api/data-grid/data-grid/"">DataGrid</a></li>
    <li><a href=""/x/api/data-grid/data-grid-pro/"">DataGridPro</a></li>
    <li><a href=""/system/basics/"">System</a></li>
    <a href=""/material-ui/guides/minimizing-bundle-size/"">reading this guide on minimizing bundle size</a>
    <a href=""/material-ui/customization/theme-components/#default-props"">default props</a>
    <a data-no-markdown-link=""true"" tabindex=""0"" href=""/material-ui/getting-started/usage/"">Get started</a>
    <li><a href=""/material-ui/discover-more/related-projects/"">Tree view</a></li>
    </ul>
    `",FEATURE_TOGGLE,enable_system_scope,"`<li><a href=""/styles/api/"">Styles</a></li>`",'/system',"`<li><a href=""/system/styles/api/"">Styles</a></li>`",'[i18n] only replace links for new routes (/material-ui/* & /x/*)',"`
    <ul>
    <li><a href=""/zh/components/button-group/"">Button Group</a></li>
    <li><a href=""/zh/components/buttons/"">Buttons</a></li>
    <li><a href=""/zh/components/tree-view/"">Tree view</a></li>
    <li><a href=""/zh/components/data-grid/demo/"">Demo</a></li>
    <li><a href=""/zh/api/button/""><code>&lt;Button /&gt;</code></a></li>
    <li><a href=""/zh/api/button-base/""><code>&lt;ButtonBase /&gt;</code></a></li>
    <li><a href=""/zh/api/button-unstyled/""><code>&lt;ButtonUnstyled /&gt;</code></a></li>
    <li><a href=""/zh/api/icon-button/""><code>&lt;IconButton /&gt;</code></a></li>
    <li><a href=""/zh/api/loading-button/""><code>&lt;LoadingButton /&gt;</code></a></li>
    <li><a href=""/zh/api/data-grid/data-grid/"">DataGrid</a></li>
    <li><a href=""/zh/api/data-grid/data-grid-pro/"">DataGridPro</a></li>
    <li><a href=""/zh/system/basics/"">System</a></li>
    <a href=""/zh/guides/minimizing-bundle-size/"">reading this guide on minimizing bundle size</a>
    <a href=""/zh/customization/theme-components/#default-props"">default props</a>
    <a data-no-markdown-link=""true"" tabindex=""0"" href=""/zh/getting-started/usage/"">Get started</a>
    <li><a href=""/zh/discover-more/related-projects/"">Tree view</a></li>
    </ul>
    `",'/zh/material-ui/react-buttons',"`
    <ul>
    <li><a href=""/zh/material-ui/react-button-group/"">Button Group</a></li>
    <li><a href=""/zh/material-ui/react-button/"">Buttons</a></li>
    <li><a href=""/zh/material-ui/react-tree-view/"">Tree view</a></li>
    <li><a href=""/zh/x/react-data-grid/demo/"">Demo</a></li>
    <li><a href=""/zh/material-ui/api/button/""><code>&lt;Button /&gt;</code></a></li>
    <li><a href=""/zh/material-ui/api/button-base/""><code>&lt;ButtonBase /&gt;</code></a></li>
    <li><a href=""/zh/base/api/button-unstyled/""><code>&lt;ButtonUnstyled /&gt;</code></a></li>
    <li><a href=""/zh/material-ui/api/icon-button/""><code>&lt;IconButton /&gt;</code></a></li>
    <li><a href=""/zh/material-ui/api/loading-button/""><code>&lt;LoadingButton /&gt;</code></a></li>
    <li><a href=""/zh/x/api/data-grid/data-grid/"">DataGrid</a></li>
    <li><a href=""/zh/x/api/data-grid/data-grid-pro/"">DataGridPro</a></li>
    <li><a href=""/zh/system/basics/"">System</a></li>
    <a href=""/zh/material-ui/guides/minimizing-bundle-size/"">reading this guide on minimizing bundle size</a>
    <a href=""/zh/material-ui/customization/theme-components/#default-props"">default props</a>
    <a data-no-markdown-link=""true"" tabindex=""0"" href=""/zh/material-ui/getting-started/usage/"">Get started</a>
    <li><a href=""/zh/material-ui/discover-more/related-projects/"">Tree view</a></li>
    </ul>
    `",'should work with json',importDifference,"'You can learn about the difference by <a href=""/guides/minimizing-bundle-size/"">reading this guide on minimizing bundle size</a>.'",'/material-ui/api/',"'{""importDifference"":""You can learn about the difference by <a href=\\""/material-ui/guides/minimizing-bundle-size/\\"">reading this guide on minimizing bundle size</a>.""}'",json2,styleOverrides,"'The name <code>{{componentStyles.name}}</code> can be used when providing <a href=""/customization/theme-components/#default-props"">default props</a> or <a href=""/customization/theme-components/#global-style-overrides"">style overrides</a> in the theme.'","'{""styleOverrides"":""The name <code>{{componentStyles.name}}</code> can be used when providing <a href=\\""/material-ui/customization/theme-components/#default-props\\"">default props</a> or <a href=\\""/material-ui/customization/theme-components/#global-style-overrides\\"">style overrides</a> in the theme.""}'",'does nothing for old routes',"`
      <ul>
      <li><a href=""/components/button-group/"">Button Group</a></li>
      <li><a href=""/components/buttons/"">Buttons</a></li>
      <li><a href=""/components/tree-view/"">Tree view</a></li>
      <li><a href=""/components/data-grid/demo/"">Demo</a></li>
      <a href=""/guides/minimizing-bundle-size/"">reading this guide on minimizing bundle size</a>
      <a href=""/customization/theme-components/#default-props"">default props</a>
      <a data-no-markdown-link=""true"" tabindex=""0"" href=""/getting-started/usage/"">Get started</a>
      <li><a href=""/discover-more/related-projects/"">Tree view</a></li>
      </ul>
    `",'/components/buttons/',"`
      [reading this guide on minimizing bundle size](/guides/minimizing-bundle-size/)
      [default props](/customization/theme-components/#default-props)
      [Get started](/getting-started/usage/)
      [Tree view](/discover-more/related-projects/)
    `","`
      [reading this guide on minimizing bundle size](/material-ui/guides/minimizing-bundle-size/)
      [default props](/material-ui/customization/theme-components/#default-props)
      [Get started](/material-ui/getting-started/usage/)
      [Tree view](/material-ui/discover-more/related-projects/)
    `","`
      [ButtonGroup](/components/button-group/)
      [Buttons](/components/buttons/)
      [text](/components/checkboxes/#main-content)
      [text](/components/radio-buttons#main-content)
      [text](/components/selects/#main-content)
      [text](/components/switches/#main-content)
      [text](/components/text-fields/#main-content)
      [text](/components/avatars/#main-content)
      [text](/components/badges/#main-content)
      [text](/components/chips/#main-content)
      [text](/components/dividers/#main-content)
      [text](/components/icons/#main-content)
      [text](/components/material-icons/#main-content)
      [text](/components/lists/#main-content)
      [text](/components/tables/#main-content)
      [text](/components/tooltips/#main-content)
      [text](/components/dialogs/#main-content)
      [text](/components/snackbars/#main-content)
      [text](/components/cards/#main-content)
      [text](/components/breadcrumbs/#main-content)
      [text](/components/drawers/#main-content)
      [text](/components/links/#main-content)
      [text](/components/menus/#main-content)
      [text](/components/steppers/#main-content)
      [text](/components/tabs/#main-content)
      [text](/components/transitions/#main-content)
      [text](/components/pickers/#main-content)
      [text](/components/trap-focus/#main-content)
      [text](/components/css-baseline/#main-content)
      [text](/components/no-ssr/#main-content)
      [text](/components/image-list/#main-content)
      [text](/components/progress/#main-content)
      -
      [Tree view](/components/tree-view/)
      [Demo](/components/data-grid/demo/)
    `","`
      [ButtonGroup](/material-ui/react-button-group/)
      [Buttons](/material-ui/react-button/)
      [text](/material-ui/react-checkbox/#main-content)
      [text](/material-ui/react-radio-button#main-content)
      [text](/material-ui/react-select/#main-content)
      [text](/material-ui/react-switch/#main-content)
      [text](/material-ui/react-text-field/#main-content)
      [text](/material-ui/react-avatar/#main-content)
      [text](/material-ui/react-badge/#main-content)
      [text](/material-ui/react-chip/#main-content)
      [text](/material-ui/react-divider/#main-content)
      [text](/material-ui/icons/#main-content)
      [text](/material-ui/material-icons/#main-content)
      [text](/material-ui/react-list/#main-content)
      [text](/material-ui/react-table/#main-content)
      [text](/material-ui/react-tooltip/#main-content)
      [text](/material-ui/react-dialog/#main-content)
      [text](/material-ui/react-snackbar/#main-content)
      [text](/material-ui/react-card/#main-content)
      [text](/material-ui/react-breadcrumbs/#main-content)
      [text](/material-ui/react-drawer/#main-content)
      [text](/material-ui/react-link/#main-content)
      [text](/material-ui/react-menu/#main-content)
      [text](/material-ui/react-stepper/#main-content)
      [text](/material-ui/react-tabs/#main-content)
      [text](/material-ui/transitions/#main-content)
      [text](/material-ui/pickers/#main-content)
      [text](/material-ui/react-trap-focus/#main-content)
      [text](/material-ui/react-css-baseline/#main-content)
      [text](/material-ui/react-no-ssr/#main-content)
      [text](/material-ui/react-image-list/#main-content)
      [text](/material-ui/react-progress/#main-content)
      -
      [Tree view](/material-ui/react-tree-view/)
      [Demo](/x/react-data-grid/demo/)
    `","`
      [ButtonGroup](/material-ui/react-button-group/)
      [Buttons](/material-ui/react-button/)
      [text](/material-ui/react-checkbox/#main-content)
      [text](/material-ui/react-radio-button#main-content)
      [text](/material-ui/react-select/#main-content)
      [text](/material-ui/react-switch/#main-content)
      [text](/material-ui/react-text-field/#main-content)
      [text](/material-ui/react-avatar/#main-content)
      [text](/material-ui/react-badge/#main-content)
      [text](/material-ui/react-chip/#main-content)
      [text](/material-ui/react-divider/#main-content)
      [text](/material-ui/icons/#main-content)
      [text](/material-ui/material-icons/#main-content)
      [text](/material-ui/react-list/#main-content)
      [text](/material-ui/react-table/#main-content)
      [text](/material-ui/react-tooltip/#main-content)
      [text](/material-ui/react-dialog/#main-content)
      [text](/material-ui/react-snackbar/#main-content)
      [text](/material-ui/react-card/#main-content)
      [text](/material-ui/react-breadcrumbs/#main-content)
      [text](/material-ui/react-drawer/#main-content)
      [text](/material-ui/react-link/#main-content)
      [text](/material-ui/react-menu/#main-content)
      [text](/material-ui/react-stepper/#main-content)
      [text](/material-ui/react-tabs/#main-content)
      [text](/material-ui/transitions/#main-content)
      [text](/material-ui/pickers/#main-content)
      -
      [Tree view](/material-ui/react-tree-view/)
      [Demo](/x/react-data-grid/demo/)
    `","`
      [Button](/api/button)
      [No Ssr](/api/no-ssr)
      [Portal](/api/portal)
      [Textarea Autosize](/api/textarea-autosize)
      [ButtonBase](/api/button-base)
      [TabPanel](/api/tab-panel)
      [TabsList](/api/tab-panel)
      [ButtonUnstyled](/api/button-unstyled)
      [TabPanelUnstyled](/api/tab-panel-unstyled)
      [TabsListUnstyled](/api/tabs-list-unstyled)
      [TrapFocus](/api/trap-focus)
      [ClickAwayListener](/api/click-away-listener)
      [IconButton](/api/icon-button)
      [LoadingButton](/api/loading-button)
      [DataGrid](/api/data-grid/data-grid)
      [DataGridPro](/api/data-grid/data-grid-pro)
      [System](/system/basics)
    `","`
      [Button](/material-ui/api/button)
      [No Ssr](/base/api/no-ssr)
      [Portal](/base/api/portal)
      [Textarea Autosize](/base/api/textarea-autosize)
      [ButtonBase](/material-ui/api/button-base)
      [TabPanel](/material-ui/api/tab-panel)
      [TabsList](/material-ui/api/tab-panel)
      [ButtonUnstyled](/base/api/button-unstyled)
      [TabPanelUnstyled](/base/api/tab-panel-unstyled)
      [TabsListUnstyled](/base/api/tabs-list-unstyled)
      [TrapFocus](/base/api/trap-focus)
      [ClickAwayListener](/base/api/click-away-listener)
      [IconButton](/material-ui/api/icon-button)
      [LoadingButton](/material-ui/api/loading-button)
      [DataGrid](/x/api/data-grid/data-grid)
      [DataGridPro](/x/api/data-grid/data-grid-pro)
      [System](/system/basics)
    `","`
      [Button](/material-ui/api/button)
      [ButtonBase](/material-ui/api/button-base)
      [ButtonUnstyled](/base/api/button-unstyled)
      [IconButton](/material-ui/api/icon-button)
      [LoadingButton](/material-ui/api/loading-button)
      [DataGrid](/x/api/data-grid/data-grid)
      [DataGridPro](/x/api/data-grid/data-grid-pro)
      [System](/system/basics)
      `","'only replace links for components, api'",replaceMarkdownLinks,"`
        [ButtonGroup](/components/button-group/)
        [Buttons](/components/buttons/)
        [text](/components/checkboxes/#main-content)
        [text](/components/radio-buttons#main-content)
        [text](/components/selects/#main-content)
        [text](/components/switches/#main-content)
        [text](/components/text-fields/#main-content)
        [text](/components/avatars/#main-content)
        [text](/components/badges/#main-content)
        [text](/components/chips/#main-content)
        [text](/components/dividers/#main-content)
        [text](/components/icons/#main-content)
        [text](/components/material-icons/#main-content)
        [text](/components/lists/#main-content)
        [text](/components/tables/#main-content)
        [text](/components/tooltips/#main-content)
        [text](/components/dialogs/#main-content)
        [text](/components/snackbars/#main-content)
        [text](/components/cards/#main-content)
        [text](/components/breadcrumbs/#main-content)
        [text](/components/drawers/#main-content)
        [text](/components/links/#main-content)
        [text](/components/menus/#main-content)
        [text](/components/steppers/#main-content)
        [text](/components/tabs/#main-content)
        [text](/components/transitions/#main-content)
        [text](/components/pickers/#main-content)
        -
        [Tree view](/components/tree-view/)
        [Demo](/components/data-grid/demo/)

        [Button](/material-ui/api/button)
        [ButtonBase](/material-ui/api/button-base)
        [ButtonUnstyled](/base/api/button-unstyled)
        [IconButton](/material-ui/api/icon-button)
        [LoadingButton](/material-ui/api/loading-button)
        [DataGrid](/x/api/data-grid/data-grid)
        [DataGridPro](/x/api/data-grid/data-grid-pro)
        [System](/system/basics)
    `","`
        [ButtonGroup](/material-ui/react-button-group/)
        [Buttons](/material-ui/react-button/)
        [text](/material-ui/react-checkbox/#main-content)
        [text](/material-ui/react-radio-button#main-content)
        [text](/material-ui/react-select/#main-content)
        [text](/material-ui/react-switch/#main-content)
        [text](/material-ui/react-text-field/#main-content)
        [text](/material-ui/react-avatar/#main-content)
        [text](/material-ui/react-badge/#main-content)
        [text](/material-ui/react-chip/#main-content)
        [text](/material-ui/react-divider/#main-content)
        [text](/material-ui/icons/#main-content)
        [text](/material-ui/material-icons/#main-content)
        [text](/material-ui/react-list/#main-content)
        [text](/material-ui/react-table/#main-content)
        [text](/material-ui/react-tooltip/#main-content)
        [text](/material-ui/react-dialog/#main-content)
        [text](/material-ui/react-snackbar/#main-content)
        [text](/material-ui/react-card/#main-content)
        [text](/material-ui/react-breadcrumbs/#main-content)
        [text](/material-ui/react-drawer/#main-content)
        [text](/material-ui/react-link/#main-content)
        [text](/material-ui/react-menu/#main-content)
        [text](/material-ui/react-stepper/#main-content)
        [text](/material-ui/react-tabs/#main-content)
        [text](/material-ui/transitions/#main-content)
        [text](/material-ui/pickers/#main-content)
        -
        [Tree view](/material-ui/react-tree-view/)
        [Demo](/x/react-data-grid/demo/)

        [Button](/material-ui/api/button)
        [ButtonBase](/material-ui/api/button-base)
        [ButtonUnstyled](/base/api/button-unstyled)
        [IconButton](/material-ui/api/icon-button)
        [LoadingButton](/material-ui/api/loading-button)
        [DataGrid](/x/api/data-grid/data-grid)
        [DataGridPro](/x/api/data-grid/data-grid-pro)
        [System](/system/basics)
    `",`[Styles](/styles/api/)`,`[Styles](/system/styles/api/)`,'does not change after transformed',"`
        [ButtonGroup](/material-ui/react-button-group/)
        [Buttons](/material-ui/react-button/)
        [text](/material-ui/react-checkbox/#main-content)
        [text](/material-ui/react-radio-button#main-content)
        [text](/material-ui/react-select/#main-content)
        [text](/material-ui/react-switch/#main-content)
    `",'does not trasform material-ui',`[Trap Focus](https://mui.com/material-ui/react-trap-focus/)`,'replace material related pathname',`/guides/minimizing-bundle-size/`,`/material-ui/guides/minimizing-bundle-size/`,`/customization/theme-components/#default-props`,`/material-ui/customization/theme-components/#default-props`,`/getting-started/usage/`,`/material-ui/getting-started/usage/`,`/discover-more/related-projects/`,`/material-ui/discover-more/related-projects/`,`/components/button-group/`,`/material-ui/react-button-group/`,`/components/button-group/#main-content`,`/material-ui/react-button-group/#main-content`,`/components/buttons/`,`/material-ui/react-button/`,`/components/buttons/#main-content`,`/material-ui/react-button/#main-content`,`/components/checkboxes/`,`/material-ui/react-checkbox/`,`/components/checkboxes/#main-content`,`/material-ui/react-checkbox/#main-content`,`/components/radio-buttons/`,`/material-ui/react-radio-button/`,`/components/radio-buttons/#main-content`,`/material-ui/react-radio-button/#main-content`,`/components/selects/`,`/material-ui/react-select/`,`/components/selects/#main-content`,`/material-ui/react-select/#main-content`,`/components/switches/`,`/material-ui/react-switch/`,`/components/switches/#main-content`,`/material-ui/react-switch/#main-content`,`/components/text-fields/`,`/material-ui/react-text-field/`,`/components/text-fields/#main-content`,`/material-ui/react-text-field/#main-content`,`/components/avatars/`,`/material-ui/react-avatar/`,`/components/avatars/#main-content`,`/material-ui/react-avatar/#main-content`,`/components/badges/`,`/material-ui/react-badge/`,`/components/badges/#main-content`,`/material-ui/react-badge/#main-content`,`/components/chips/`,`/material-ui/react-chip/`,`/components/chips/#main-content`,`/material-ui/react-chip/#main-content`,`/components/dividers/`,`/material-ui/react-divider/`,`/components/dividers/#main-content`,`/material-ui/react-divider/#main-content`,`/components/icons/`,`/material-ui/icons/`,`/components/material-icons/`,`/material-ui/material-icons/`,`/components/lists/`,`/material-ui/react-list/`,`/components/lists/#main-content`,`/material-ui/react-list/#main-content`,`/components/image-list/`,`/material-ui/react-image-list/`,`/components/image-list/#main-content`,`/material-ui/react-image-list/#main-content`,`/components/no-ssr/`,`/material-ui/react-no-ssr/`,`/components/no-ssr/#main-content`,`/material-ui/react-no-ssr/#main-content`,`/components/trap-focus/`,`/material-ui/react-trap-focus/`,`/components/trap-focus/#main-content`,`/material-ui/react-trap-focus/#main-content`,`/components/progress/`,`/material-ui/react-progress/`,`/components/progress/#main-content`,`/material-ui/react-progress/#main-content`,`/components/tables/`,`/material-ui/react-table/`,`/components/tables/#main-content`,`/material-ui/react-table/#main-content`,`/components/tooltips/`,`/material-ui/react-tooltip/`,`/components/tooltips/#main-content`,`/material-ui/react-tooltip/#main-content`,`/components/dialogs/`,`/material-ui/react-dialog/`,`/components/dialogs/#main-content`,`/material-ui/react-dialog/#main-content`,`/components/snackbars/`,`/material-ui/react-snackbar/`,`/components/snackbars/#main-content`,`/material-ui/react-snackbar/#main-content`,`/components/cards/`,`/material-ui/react-card/`,`/components/cards/#main-content`,`/material-ui/react-card/#main-content`,`/components/breadcrumbs/`,`/material-ui/react-breadcrumbs/`,`/components/breadcrumbs/#main-content`,`/material-ui/react-breadcrumbs/#main-content`,`/components/drawers/`,`/material-ui/react-drawer/`,`/components/drawers/#main-content`,`/material-ui/react-drawer/#main-content`,`/components/links/`,`/material-ui/react-link/`,`/components/links/#main-content`,`/material-ui/react-link/#main-content`,`/components/menus/`,`/material-ui/react-menu/`,`/components/menus/#main-content`,`/material-ui/react-menu/#main-content`,`/components/steppers/`,`/material-ui/react-stepper/`,`/components/steppers/#main-content`,`/material-ui/react-stepper/#main-content`,`/components/tabs/`,`/material-ui/react-tabs/`,`/components/tabs/#main-content`,`/material-ui/react-tabs/#main-content`,`/components/transitions/`,`/material-ui/transitions/`,`/components/pickers/`,`/material-ui/pickers/`,`/components/about-the-lab/`,`/material-ui/about-the-lab/`,`/components/data-grid/demo/`,`/x/react-data-grid/demo/`,`/api/button/`,`/material-ui/api/button/`,`/api/no-ssr/`,`/base/api/no-ssr/`,`/api/portal/`,`/base/api/portal/`,`/api/textarea-autosize/`,`/base/api/textarea-autosize/`,`/api/button-unstyled/`,`/base/api/button-unstyled/`,`/api/loading-button/`,`/material-ui/api/loading-button/`,`/api/tab-list/`,`/material-ui/api/tab-list/`,`/api/tab-panel/`,`/material-ui/api/tab-panel/`,`/api/tab-panel-unstyled/`,`/base/api/tab-panel-unstyled/`,`/api/tabs-list-unstyled/`,`/base/api/tabs-list-unstyled/`,`/api/tabs-unstyled/`,`/base/api/tabs-unstyled/`,`/api/unstable-trap-focus/`,`/base/api/unstable-trap-focus/`,`/api/click-away-listener/`,`/base/api/click-away-listener/`,`/api/data-grid/data-grid/`,`/x/api/data-grid/data-grid/`,`/system/basic/`,`/x/api/data-grid/`,replaceUrl,`/components/data-grid/getting-started/#main-content`,'/x/react-data-grid',`/x/react-data-grid/getting-started/#main-content`,`/components/data-grid/components/#main-content`,`/x/react-data-grid/components/#main-content`,`/api/button-unstyled`,'/base/api/button-unstyled',`/base/api/button-unstyled`,`/styles/api/`,`/system/basics`,`/system/styles/api/`,`/zh/guides/minimizing-bundle-size/`,`/zh/material-ui/guides/minimizing-bundle-size/`,`/zh/components/data-grid/getting-started/#main-content`,'/zh/x/react-data-grid',`/zh/x/react-data-grid/getting-started/#main-content`,`/zh/components/data-grid/components/#main-content`,`/zh/x/react-data-grid/components/#main-content`,`/zh/api/button-unstyled`,'/zh/base/api/button-unstyled',`/zh/base/api/button-unstyled`,`/zh/styles/api/`,`/zh/system/styles/api/`,'does not replace for old routes','/components/buttons','does not replace for x marketing page','/x/','should preserve DOM nodes of options when re-ordering',groupedOptions,getRootProps,getInputLabelProps,getInputProps,getListboxProps,getOptionProps,useAutocomplete,"
              ",fooOptionAsFirst,barOptionAsSecond,barOptionAsFirst,fooOptionAsSecond,'createFilterOptions','defaults to getOptionLabel for text filtering',filterOptions,createFilterOptions,'cat','5678','dog','9abc','emu',inputValue,'filters without error with empty option set','option: limit','limits the number of suggested options to be shown',limit,'a1','a2','a3','a4','option: matchFrom',matchFrom,'any','ca','show all results that match','show only results that start with search','option: ignoreAccents','does not ignore accents',ignoreAccents,'áb','áe','ae','á','option: ignoreCase','matches results with case insensitive',ignoreCase,'Ab','Ae','should warn if the input is not binded','should not reset if the component value does not change on blur',freeSolo,'combobox','free','forwards style props on the Root component',ownerState,ownerStateProp,themeProp,other,BadgeUnstyled,'does not forward style props as DOM attributes if component slot is primitive',elementRef,'ownerState','theme','should render the children',ClickAwayListener,onClickAway,'prop: onClickAway','should be called when clicking away',handleClickAway,'should not be called when clicking inside','should be called when preventDefault is `true`','should not be called when clicking inside a portaled element',Inside a portal,'Inside a portal','should be called when clicking inside a portaled element and `disableReactTree` is `true`',disableReactTree,'should not be called even if the event propagation is stopped',"
              Outside a portal
            ","
                Stop inside a portal
              ",nativeEvent,stopImmediatePropagation,"
                Stop all inside a portal
              ",'Outside a portal','Stop all inside a portal','Stop inside a portal',startsWith,'16','onClickCapture',eventListenerName,'should be called if an element is interleaved between mousedown and mouseup',ancestorElements,ancestors,ancestor,findNearestCommonAncestor,elementA,elementB,ancestorsA,ancestorsB,'A and B share no common ancestor','Unreachable reached. This is a bug in findNearestCommonAncestor',ClickAwayListenerMouseDownPortal,toggleOpen,flag,"""trigger""","""interleaved-element""",Portaled Div,mouseDownTarget,fireDiscreteEvent,mouseUpTarget,'interleaved-element',clickTarget,'prop: mouseEvent','should not call `props.onClickAway` when `props.mouseEvent` is `false`','should call `props.onClickAway` when the appropriate mouse event is triggered',"""onMouseDown""",'prop: touchEvent','should not call `props.onClickAway` when `props.touchEvent` is `false`',touchEnd,'should call `props.onClickAway` when the appropriate touch event is triggered',"""onTouchStart""",touchStart,'should ignore `touchend` when preceded by `touchmove` event',"""onTouchEnd""",touchMove,'should handle null child','should generate the class correctly',generateUtilityClass,'MuiTest','slot','MuiTest-slot','should consider if slot should generate state class','Mui-active','Mui-checked','Mui-disabled','Mui-error','focused','Mui-focused','focusVisible','Mui-focusVisible','Mui-required','expanded','Mui-expanded','Mui-selected','ClassNameGenerator',ClassNameGenerator,'able to set custom generator',`foo-bar-${,configure,'foo-bar-MuiTest-slot','does not affect state class','should generate the classes correctly',generateUtilityClasses,'slot1','slot2',slot1,'MuiTest-slot1',slot2,'MuiTest-slot2',slot,focusVisible,'should have exports',MaterialUI,'should not have undefined exports',exportKey,'should add a modal only once',modalManager2,ModalManager,'managing modals',modal3,modalRef,'should add modal1',modalManager,isTopModal,'should add modal2','should add modal3','should remove modal2','should add modal2 2','should remove modal3','should remove modal2 2','should remove modal1','should not do anything',nonExisting,fixedNode,'mui-fixed','should handle the scroll','14px',getScrollbarSize,'should disable the scroll even when not overflowing','scrollHeight','clientHeight','should restore styles correctly if none existed before','restore styles','should restore styles correctly if overflow existed before','should restore styles correctly if overflow-x existed before',overflowX,'multi container','should work will multiple containers',toBeAriaHidden,'container aria-hidden',modalRef1,'should not contain aria-hidden on modal','should add aria-hidden to container siblings','should add aria-hidden to previous modals','should remove aria-hidden on siblings','should keep previous aria-hidden siblings hidden',sibling1,sibling2,ModalUnstyled,'should not render the children as the width is unknown',renderToString,NoSsr,'mounted',"""client-only""",'#client-only','prop: fallback','should render the fallback',"""fallback""",'prop: defer','should defer the rendering',defer,'render nothing on the server','should have access to the mountNode when disabledPortal={false}',refSpy,'should have access to the mountNode when disabledPortal={true}',disablePortal,"""woofPortal""",'.woofPortal','should have access to the mountNode when switching disabledPortal','should render in a different node',"""test1""","""woofPortal1""","""woofPortal2""",'.woofPortal1','.woofPortal2','should unmount when parent unmounts',containerRef,'should render overlay into container (document)','.test2','should render overlay into container (DOMNode)','should change container on prop change',ContainerTest,containerElement,"""test3""",'#test3','STRONG','BODY','should call ref after child effect',callOrder,handleRef,updateFunction,'effect',SliderUnstyled,'prop: marks','does not cause unknown-prop error',marks,'prop: orientation','sets the orientation via ARIA',orientation,"""vertical""",slider,'slider',attribute,'does not set the orientation via appearance for WebKit browsers','renders a slider',valueLabelDisplay,'aria-valuenow','readonly range',freeze,valueLabel,'should render the disabled classes','tabIndex','should not respond to drag events after becoming disabled','should not respond to drag events if disabled','should handle the resize event',TextareaAutosize,'textarea[aria-hidden=null]',shadow,'textarea[aria-hidden=true]',setLayout,'box-sizing','content-box','30px','should update when uncontrolled','should take the border into account with border-box',border,'border-box','border-bottom-width','should take the padding into account with content-box','padding-top',"'should have at least height of ""minRows""'",minRows,"'should have at max ""maxRows"" rows'",maxRows,"'should show scrollbar when having more rows than ""maxRows""'","'should update its height when the ""maxRows"" prop changes'",'should not sync height if container width is 0px','warnings','warns if layout is unstable but not crash',toErrorDev,'MUI: Too many re-renders.',strictModeDoubleLoggingSupressed,'should return focus to the root',TrapFocus,"""auto-focus""",strictEffects,'auto-focus',initialFocus,'should not return focus to the children when disableEnforceFocus is true',disableEnforceFocus,'should focus first focusable child in portal','should warn if the root content is not focusable',UnfocusableDialog,'MUI: The modal content node does not accept focus','should not attempt to focus nonexistent children',EmptyDialog,'should focus rootRef if no tabbable children are rendered','does not steal focus from a portaled element if any prop but open changes',disableAutoFocus,"""focus-root""","""portal-input""",portaledTextbox,'portal-input',disableRestoreFocus,isEnabled,'undesired: lazy root does not get autofocus',mountDeferredComponent,DeferredComponent,"""deferred-component""",'does not bounce focus around due to sync focus-restore + focus-contain',eventLog,"""focus-input""",'does not focus if isEnabled returns false','textbox','restores focus when closed','undesired: enabling restore-focus logic when closing has no effect','undesired: setting `disableRestoreFocus` to false before closing has no effect','interval',withFakeTimers,'contains the focus if the active element is removed',WithRemovableElement,hideButton,"""hide-button""","
                  I am going to disappear
                ",'hide-button','prop: disableAutoFocus','should not trap','should trap once the focus moves inside',"""outside-input""","
                ","""buton""",'outside-input','focus-input','should restore the focus','convert path as needed','./import-path.test/actual.js',jscodeshift,'./import-path.test/expected.js','The transformed version should be correct','update color module imports','./color-imports.test/actual.js','./color-imports.test/expected.js','should be idempotent','convert property as needed','./menu-item-primary-text.test/actual.js','./menu-item-primary-text.test/expected.js','update svg-icon imports','./svg-icon-imports.test/actual.js','./svg-icon-imports.test/expected.js','./optimal-imports.test/actual.js','./optimal-imports.test/expected.js','update theme spacing API','./theme-spacing-api.test/actual.js','./theme-spacing-api.test/expected.js','update theme spacing API for destructured','./theme-spacing-api.test/actual_destructured.js','./theme-spacing-api.test/expected_destructured.js','./top-level-imports.test/actual.js','./top-level-imports.test/expected.js','add adaptV4Theme as needed','./adapter-v4.test/actual.js','./adapter-v4.test/expected.js','works with core import','./adapter-v4.test/core-import.actual.js','./adapter-v4.test/core-import.expected.js','works with other path import','./adapter-v4.test/no-styles-import.actual.js','./adapter-v4.test/no-styles-import.expected.js','transforms props as needed','./autocomplete-rename-closeicon.test/actual.js','./autocomplete-rename-closeicon.test/expected.js','./autocomplete-rename-option.test/actual.js','./autocomplete-rename-option.test/expected.js','./avatar-circle-circular.test/actual.js','./avatar-circle-circular.test/expected.js','./badge-overlap-value.test/actual.js','./badge-overlap-value.test/expected.js','./box-borderradius-values.test/actual.js','./box-borderradius-values.test/expected.js','./box-rename-css.test/actual.js','./box-rename-css.test/expected.js','./box-rename-gap.test/actual.js','./box-rename-gap.test/expected.js','./box-sx-prop.test/actual.js','./box-sx-prop.test/expected.js',"'alias, transforms props as needed'",'./box-sx-prop.test/alias-actual.js','./box-sx-prop.test/alias-expected.js',"'alias, should be idempotent'",'./button-color-prop.test/actual.js','./button-color-prop.test/expected.js','./chip-variant-prop.test/actual.js','./chip-variant-prop.test/expected.js','./circularprogress-variant.test/actual.js','./circularprogress-variant.test/expected.js','./collapse-rename-collapsedheight.test/actual.js','./collapse-rename-collapsedheight.test/expected.js','./component-rename-prop.test/actual.js','newProp','./component-rename-prop.test/expected.js','transforms as needed','./core-styles-import.test/actual.js','./core-styles-import.test/expected.js','transforms createMuiTheme as needed','./create-theme.test/actual.js','./create-theme.test/expected.js','transforms with core import','./create-theme.test/core-import.actual.js','./create-theme.test/core-import.expected.js','existing custom createTheme','./create-theme.test/custom-fn.actual.js','./create-theme.test/custom-fn.expected.js','transforms exports as needed (lab sub module)','./date-pickers-moved-to-x.test/actual-sub-module.js','./date-pickers-moved-to-x.test/expected-sub-module.js','should be idempotent (lab sub module)','transforms exports as needed (lab root with only community exports)','./date-pickers-moved-to-x.test/actual-root-community.js','./date-pickers-moved-to-x.test/expected-root-community.js','should be idempotent (lab root with only community exports)','transforms exports as needed (lab root with pro exports)','./date-pickers-moved-to-x.test/actual-root-pro.js','./date-pickers-moved-to-x.test/expected-root-pro.js','should be idempotent (lab root with pro exports)','./dialog-props.test/actual.js','./dialog-props.test/expected.js','./dialog-title-props.test/actual.js','./dialog-title-props.test/expected.js','append to createCache','./emotion-prepend-cache.test/default-naming.actual.js','./emotion-prepend-cache.test/default-naming.expected.js','append to custom naming','./emotion-prepend-cache.test/custom-naming.actual.js','./emotion-prepend-cache.test/custom-naming.expected.js','turn existing prepend to true','./emotion-prepend-cache.test/replace-existing-prepend.actual.js','./emotion-prepend-cache.test/replace-existing-prepend.expected.js','./expansion-panel-component.test/actual.js','./expansion-panel-component.test/expected.js','./fab-variant.test/actual.js','./fab-variant.test/expected.js','./fade-rename-alpha.test/actual.js','./fade-rename-alpha.test/expected.js','should not modify local functions','./fade-rename-alpha.test/unmodified.js','./grid-justify-justifycontent.test/actual.js','./grid-justify-justifycontent.test/expected.js','transforms MuiThemeProvider as needed','./grid-list-component.test/actual.js','./grid-list-component.test/expected.js','./icon-button-size.test/actual.js','./icon-button-size.test/expected.js','falls back to the filename for naming','./jss-to-styled.test/Anonymous.actual.js','./jss-to-styled.test/Anonymous.expected.js','./jss-to-styled.test/first.actual.js','./jss-to-styled.test/first.expected.js','./jss-to-styled.test/second.actual.js','./jss-to-styled.test/second.expected.js','third','./jss-to-styled.test/third.actual.js','./jss-to-styled.test/third.expected.js','fourth','./jss-to-styled.test/fourth.actual.js','./jss-to-styled.test/fourth.expected.js','fifth','./jss-to-styled.test/fifth.actual.js','./jss-to-styled.test/fifth.expected.js','sixth','./jss-to-styled.test/sixth.actual.js','./jss-to-styled.test/sixth.expected.js','seventh','./jss-to-styled.test/seventh.actual.js','./jss-to-styled.test/seventh.expected.js','with createStyles','./jss-to-styled.test/withCreateStyles.actual.tsx','./jss-to-styled.test/withCreateStyles.expected.tsx','with createStyles on withStyles','./jss-to-styled.test/withCreateStyles1.actual.tsx','./jss-to-styled.test/withCreateStyles1.expected.tsx','with createStyles on withStyles directly','./jss-to-styled.test/withCreateStyles2.actual.tsx','./jss-to-styled.test/withCreateStyles2.expected.tsx','with createStyles directly','./jss-to-styled.test/withCreateStyles3.actual.tsx','./jss-to-styled.test/withCreateStyles3.expected.tsx','transforms React.Fragment','./jss-to-styled.test/eighth.actual.js','./jss-to-styled.test/eighth.expected.js','transforms Fragment','./jss-to-styled.test/nineth.actual.js','./jss-to-styled.test/nineth.expected.js','transforms <>','./jss-to-styled.test/tenth.actual.js','./jss-to-styled.test/tenth.expected.js','transforms SomeNamespace.SomeComponent','./jss-to-styled.test/eleventh.actual.js','./jss-to-styled.test/eleventh.expected.js','does not transform React.Suspense','./jss-to-styled.test/twelfth.actual.js','bugs - #28317 export function declaration','./jss-to-styled.test/exportFunction.actual.js','./jss-to-styled.test/exportFunction.expected.js','bugs - #28317 export class declaration','./jss-to-styled.test/exportClass.actual.js','./jss-to-styled.test/exportClass.expected.js','bugs - #29363 multiple makeStyles with the same classKeys','./jss-to-styled.test/multipleWithStyles.actual.js','./jss-to-styled.test/multipleWithStyles.expected.js','./link-underline-hover.test/actual.js','./link-underline-hover.test/expected.js','./material-ui-styles.test/actual.js','./material-ui-styles.test/expected.js','remove no variable import','./material-ui-styles.test/single-import.actual.js','./material-ui-styles.test/single-import.expected.js','transform core import','./material-ui-styles.test/core-import.actual.js','./material-ui-styles.test/core-import.expected.js','transform types import','./material-ui-styles.test/types-import.actual.js','./material-ui-styles.test/types-import.expected.js','./material-ui-types.test/actual.js','./material-ui-types.test/expected.js','./modal-props.test/actual.js','./modal-props.test/expected.js','transforms exports as needed','./moved-lab-modules.test/actual.js','./moved-lab-modules.test/expected.js','replace material-ui with mui','./mui-replace.test/actual.js','./mui-replace.test/expected.js','./pagination-round-circular.test/actual.js','./pagination-round-circular.test/expected.js','./preset-safe.test/actual.js','./preset-safe.test/expected.js','./root-ref.test/actual.js','./root-ref.test/expected.js','./skeleton-variant.test/actual.js','./skeleton-variant.test/expected.js','import StyleEngineProvider after MuiThemeProvider','./styled-engine-provider.test/mui-theme-provider.actual.js','./styled-engine-provider.test/mui-theme-provider.expected.js','import StyleEngineProvider after ThemeProvider','./styled-engine-provider.test/theme-provider.actual.js','./styled-engine-provider.test/theme-provider.expected.js','./table-props.test/actual.js','./table-props.test/expected.js','./tabs-scroll-buttons.test/actual.js','./tabs-scroll-buttons.test/expected.js','./textarea-minmax-rows.test/actual.js','./textarea-minmax-rows.test/expected.js','./theme-breakpoints-width.test/actual.js','./theme-breakpoints-width.test/expected.js','./theme-breakpoints.test/actual.js','./theme-breakpoints.test/expected.js','./theme-options.test/actual.js','./theme-options.test/expected.js','./theme-palette-mode.test/actual.js','./theme-palette-mode.test/expected.js','./theme-provider.test/actual.js','./theme-provider.test/expected.js','transforms MuiThemeProvider in core import','./theme-provider.test/core-import.actual.js','./theme-provider.test/core-import.expected.js','./theme-spacing.test/actual.js','./theme-spacing.test/expected.js','./theme-typography-round.test/actual.js','./theme-typography-round.test/expected.js','transforms transitions as needed','./transitions.test/actual.js','./transitions.test/expected.js','./use-autocomplete.test/actual.js','./use-autocomplete.test/expected.js','./use-transitionprops.test/actual.js','./use-transitionprops.test/expected.js','./variant-prop.test/actual.js','./variant-prop.test/expected.js','./with-mobile-dialog.test/actual.js','./with-mobile-dialog.test/expected.js','should not remove import from core','./with-mobile-dialog.test/no-withwidth.actual.js','./with-mobile-dialog.test/no-withwidth.expected.js','./with-width.test/actual.js','./with-width.test/expected.js','./with-width.test/no-withwidth.actual.js','./with-width.test/no-withwidth.expected.js','includes info about the environment relevant to MUI','should change capitalize dashes',getComponentName,'hi-world','HiWorld','should capitalize based on environment path.sep',`this${,sep,}dir`,'ThisDir','should have icons to test with',lstatSync,MUI_ICONS_SVG_DIR,isDirectory,'--output-dir',svgDir,innerPath,'/svg/production/',glob,'/**/production/*_24px.svg',renameFilter,RENAME_FILTER_MUI,disableLog,DISABLE_LOG,outputDir,beforeEachHook,os,tmpdir,'material-ui-icons-builder-test',currentTest,fullTitle,fse,emptyDir,'script outputs to directory','index.js',isFile,"'--svg-dir, --innerPath, --fileSuffix'",GAME_ICONS_SVG_DIR,'**/*.svg','/dice/svg/000000/transparent/',RENAME_FILTER_DEFAULT,'delapouite',actualFilePath,'dice','000000','transparent','Dice-six-faces-four.js',existsSync,actualFileData,encoding,"""import createSvgIcon from './utils/createSvgIcon'""",'Template rendering','/svg/','/*_24px.svg','should produce the expected output',cases,'Accessibility.js','StarRounded.js','QueueMusicOutlined.js','AccessAlarms.js','TimesOneMobiledata.js','ThirtyFps.js','SixtyFps.js','FiveMp.js','ElevenMp.js','TwentyFourMp.js','AccessAlarmsTwoTone.js','RecordVoiceOverTwoTone.js',MUI_ICONS_ROOT,'expected','return info for api page',extractApiPage,'/material-ui/docs/pages/material-ui/api/accordion-actions.js',apiPathname,'/material-ui/api/accordion-actions','extractPackageFilePath','return info if path is a package (material)',extractPackageFile,'/material-ui/packages/mui-material/src/Button/Button.js',packagePath,'mui-material',muiPackage,'return info if path is a package (lab)','/material-ui/packages/mui-lab/src/LoadingButton/LoadingButton.js','mui-lab','LoadingButton','return info if path is a package (base)','/material-ui/packages/mui-base/src/TabUnstyled/TabUnstyled.tsx','mui-base','TabUnstyled','return info if path is a package (data-grid)','/material-ui/packages/grid/x-data-grid/src/DataGrid.tsx','x-data-grid','mui-data-grid','DataGrid','return info if path is a package (data-grid-pro)','/material-ui/packages/grid/x-data-grid-pro/src/DataGridPro.tsx','x-data-grid-pro','mui-data-grid-pro','DataGridPro','return null if path is not a package','/material-ui/docs/pages/material/getting-started/getting-started.md','getGenericComponentInfo','return correct apiPathname',getGenericComponentInfo,process,`/packages/mui-material/src/Button/Button.js`,'/api/button/',muiName,'MuiButton',apiPagesDirectory,endsWith,`docs${,}pages${,}api-docs`,getInheritance,'ButtonBase','/api/button-base/',getDemos,'Button group',demoPathname,'/components/button-group/','Icon return correct Demos annotation',`/packages/mui-material/src/Icon/Icon.js`,'Icon','/api/icon/','MuiIcon','Icons','/components/icons/','Material icons','/components/material-icons/','getMaterialComponentInfo','return correct info for material component file',getMaterialComponentInfo,'/material-ui/api/button/','docs','/material-ui/api/button-base/',existed,readdirSync,'docs/data','/material-ui/react-button-group/','getBaseComponentInfo','return correct info for base component file',getBaseComponentInfo,`/packages/mui-base/src/ButtonUnstyled/ButtonUnstyled.tsx`,'ButtonUnstyled','/base/api/button-unstyled/',readFile,'/base/react-button/','updateMaterialTitle correctly',updateMaterialTitle,'/material-ui/docs/data/material-ui/components/accordion.md','title: React Accordion component','title: React Accordion','/material-ui/docs/data/material-ui/components/alert.md','title: React Alert component','title: React Alert','/material-ui/docs/data/material-ui/components/app-bar.md','title: App bar React component','title: React App Bar','/material-ui/docs/data/material-ui/components/autocomplete.md','title: React Autocomplete component','title: React Autocomplete','/material-ui/docs/data/material-ui/components/avatars.md','title: React Avatar component','title: React Avatar','/material-ui/docs/data/material-ui/components/backdrop.md','title: Backdrop React Component','title: React Backdrop','/material-ui/docs/data/material-ui/components/badges.md','title: React Badge component','title: React Badge','/material-ui/docs/data/material-ui/components/bottom-navigation.md','title: Bottom navigation React component','title: React Bottom Navigation','/material-ui/docs/data/material-ui/components/box.md','title: React Box component','title: React Box','/material-ui/docs/data/material-ui/components/breadcrumbs.md','title: React Breadcrumbs','/material-ui/docs/data/material-ui/components/buttons.md','title: React Button component','title: React Button','/material-ui/docs/data/material-ui/components/cards.md','title: React Card component','title: React Card','/material-ui/docs/data/material-ui/components/checkboxes.md','title: React Checkbox component','title: React Checkbox','/material-ui/docs/data/material-ui/components/chips.md','title: React Chip component','title: React Chip','/material-ui/docs/data/material-ui/components/click-away-listener.md','title: Detect click outside React component','title: React Click Away Listener','/material-ui/docs/data/material-ui/components/dialogs.md','title: React Dialog component','title: React Dialog','/material-ui/docs/data/material-ui/components/dividers.md','title: React Divider component','title: React Divider','/material-ui/docs/data/material-ui/components/drawers.md','title: React Drawer component','title: React Drawer','/material-ui/docs/data/material-ui/components/icons.md','title: React Icon component','title: React Icon','/material-ui/docs/data/material-ui/components/links.md','title: Link','title: React Link','/material-ui/docs/data/material-ui/components/lists.md','title: React List component','title: React List','/material-ui/docs/data/material-ui/components/material-icons.md','title: Material icons','title: Material Icons','/material-ui/docs/data/material-ui/components/menus.md','title: React Menu component','title: React Menu','/material-ui/docs/data/material-ui/components/pickers.md',"'title: Date picker, Time picker React components'","'title: React Date,Time Pickers'",'/material-ui/docs/data/material-ui/components/progress.md',"'title: Circular, Linear progress React components'","'title: React Circular,Linear Progress'",'/material-ui/docs/data/material-ui/components/radio-buttons.md','title: Radio buttons React component','title: React Radio Button','/material-ui/docs/data/material-ui/components/selects.md','title: React Select component','title: React Select','/material-ui/docs/data/material-ui/components/snackbars.md','title: React Snackbar component','title: React Snackbar','/material-ui/docs/data/material-ui/components/steppers.md','title: React Stepper component','title: React Stepper','/material-ui/docs/data/material-ui/components/switches.md','title: React Switch component','title: React Switch','/material-ui/docs/data/material-ui/components/tables.md','title: React Table component','title: React Table','/material-ui/docs/data/material-ui/components/tabs.md','title: React Tabs component','title: React Tabs','/material-ui/docs/data/material-ui/components/text-fields.md','title: Text Field React component','title: React Text Field','/material-ui/docs/data/material-ui/components/tooltips.md','title: React Tooltip component','title: React Tooltip','/material-ui/docs/data/material-ui/components/transitions.md','title: React Transition component','title: React Transition','/material-ui/docs/data/material-ui/components/trap-focus.md','title: Trap Focus React component','title: React Trap Focus','/material-ui/docs/data/material-ui/components/use-media-query.md','title: Media queries in React for responsive design','title: useMediaQuery React Hook','replace demo to relative path',removeDemoRelativePath,"`{{""demo"": ""pages/components/accordion/BasicAccordion.js"", ""bg"": true}}`","`{{""demo"": ""BasicAccordion.js"", ""bg"": true}}`","`{{""demo"": ""pages/system/grid/GridTemplateColumns.js"", ""bg"": true}}`","`{{""demo"": ""GridTemplateColumns.js"", ""bg"": true}}`",'add product: material-ui to frontmatter',addProductFrontmatter,"`
---
title: React Avatar component
components: Avatar, AvatarGroup, Badge
githubLabel: 'component: Avatar'
---`","`
---
product: material-ui
title: React Avatar component
components: Avatar, AvatarGroup, Badge
githubLabel: 'component: Avatar'
---`",'getNewDataLocation',getNewDataLocation,'material-ui/docs/src/pages/getting-started/installation/installation.md',directory,'material-ui/docs/data/material-ui/getting-started/installation','material-ui/docs/data/material-ui/getting-started/installation/installation.md','material-ui/docs/src/pages/system/advanced/advanced.md','material-ui/docs/data/system/advanced','material-ui/docs/data/system/advanced/advanced.md','getNewPageLocation',getNewPageLocation,'material-ui/docs/pages/getting-started/installation.js','material-ui/docs/pages/material-ui/getting-started','material-ui/docs/pages/material-ui/getting-started/installation.js','material-ui/docs/pages/components/buttons.js','material-ui/docs/pages/material-ui','material-ui/docs/pages/material-ui/react-button.js','material-ui/docs/pages/components/image-list.js','material-ui/docs/pages/material-ui/react-image-list.js','material-ui/docs/pages/components/no-ssr.js','material-ui/docs/pages/material-ui/react-no-ssr.js','material-ui/docs/pages/components/masonry.js','material-ui/docs/pages/material-ui/react-masonry.js','material-ui/docs/pages/components/trap-focus.js','material-ui/docs/pages/material-ui/react-trap-focus.js','material-ui/docs/pages/components/css-baseline.js','material-ui/docs/pages/material-ui/react-css-baseline.js','material-ui/docs/pages/components/about-the-lab.js','material-ui/docs/pages/material-ui/about-the-lab.js','should generate the classes based on the slots',composeClasses,`MuiTest-${,'MuiTest-root MuiTest-standard','should consider classes if available','standardOverride','slotOverride','MuiTest-root standardOverride MuiTest-standard','slotOverride MuiTest-slot','should ignore false values',"""assigns the provided value to the state's selectedValue""",ListboxState,highlightedValue,ListboxAction,ActionTypes,defaultReducer,'action: blur','resets the highlightedIndex',disableListWrap,disabledItemsFocusable,isOptionDisabled,optionComparer,optionStringifier,'action: optionClick','sets the selectedValue to the clicked value',optionClick,'add the clicked value to the selection if selectMultiple is set','remove the clicked value from the selection if selectMultiple is set and it was selected already','action: keyDown','Home key is pressed','highlights the first non-disabled option if the first is disabled','End key is pressed','highlights the last non-disabled option if the last is disabled','ArrowUp key is pressed','wraps the highlight around omitting disabled items','ArrowDown key is pressed','does not highlight any option if all are disabled','Enter key is pressed','selects the highlighted option','add the highlighted value to the selection if selectMultiple is set','action: textNavigation','should navigate to next match',textNavigation,searchString,'should not move highlight when no matched options','should highlight first match that is not disabled','should move highlight to disabled items if disabledItemsFocusable=true','should not move highlight when disabled wrap and match is before highlighted option','returns the provided existingProps without modification ',existingProps,appendOwnerState,'when a React component is provided as elementType','returns the provided existingProps with added ownerState',CustomComponent,'merges the provided ownerState with existing ones','extracts the fields starting with `on[A-Z]` and being a function',once,onInvalid,on1,xonClick,extractEventHandlers,'returns an empty object if an empty object is provided','returns an empty object if undefined is passed in','excludes the provided handlers from the result','should work',getHarness,MatSelectHarness,getValueText,getOptions,'First','should create the app',AppComponent,'should render title',compiled,'.content span','ng-add app is running!','ng-update app is running!','yarn-pnp-compat app is running!','should have the combobox role',comboboxElement,'should update the aria disabled attribute',comboboxInstance,'should have aria-owns and aria-haspopup attributes',dispatchMouseEvent,directive,CdkComboboxPopup,dialogInstance,injector,'aria-owns','aria-haspopup','should update aria-expanded attribute upon toggle of panel','should toggle focus upon toggling the panel',dialogElement,'should have a panel that is closed by default',hasPanel,'should have an open action of click by default','should not open panel when disabled','should update textContent on close of panel','testing input',applyButton,'#applyButton',applyButtonElement,'should close panel on outside click',otherDiv,'#other-content',otherDivElement,'should clean up the overlay on destroy','with a coerce open action property function',ComponentFixture,ComboboxToggle,combobox,DebugElement,CdkCombobox,waitForAsync,CdkComboboxModule,compileComponents,'should coerce single string into open action',openActions,'should coerce actions separated by space','focus click','should coerce actions separated by comma',"'focus,click,downKey'",'downKey','should coerce actions separated by commas and spaces',"'focus click,downKey'",'should throw error when given invalid open action','invalidAction','with various open actions','should open panel with focus open action','should open panel with click open action','should open panel with downKey open action',DOWN_ARROW,'should toggle panel with toggle open action','should close panel on escape key','should handle multiple open actions','click downKey',"`
  <button cdkCombobox #toggleCombobox=""cdkCombobox"" class=""example-combobox""
          [cdkComboboxTriggerFor]=""panel""
          [openActions]=""actions"">
    No Value
  </button>
  <div id=""other-content""></div>

  <ng-template #panel>
    <div #dialog cdkComboboxPopup>
      <input #input>
      <button id=""applyButton"" (click)=""toggleCombobox.updateAndClose(input.value)"">Apply</button>
    </div>
  </ng-template>`",ViewChild,ElementRef,'should generate a unique optionId for each option',optionIds,optionInstances,/cdk-option-\d+/,'should have set the selected input of the options to null by default',optionElements,'should update aria-selected when selected is changed programmatically','should update selected option on click event',selectedOptions,changedOption,'should update selected option on space or enter key press',listboxInstance,setActiveOption,listboxElement,SPACE,'should update active option on home and end key press',_listKeyManager,activeItem,HOME,'should be able to toggle listbox disabled state',isListboxDisabled,'should toggle option disabled state',isPurpleDisabled,'should toggle option aria-disabled state on listbox disabled state change','should not toggle selected on click of a disabled option','should not toggle selected on click in a disabled listbox','should change active item using type ahead',activeItemIndex,'should not handle space or enter on a disabled listbox','should not handle type ahead on a disabled listbox','should not select a disabled option using space or enter','should update active item upon arrow key presses','should skip disabled options when navigating with arrow keys',isSolarDisabled,'should focus and toggle the next item when pressing SHIFT + DOWN_ARROW',downKeyEvent,'with multiple selection',ListboxMultiselect,listbox,CdkListbox,CdkOption,CdkListboxModule,queryAll,'should select all options using the select all method','should deselect previously selected when multiple is false','should allow multiple selection when multiple is true','should deselect all options when multiple switches to false','with aria active descendant',ListboxActiveDescendant,'should update aria active descendant when enabled','aria-activedescendant','should update aria active descendant via arrow keys','should place focus on options and not set active descendant',isActiveDescendant,'with control value accessor implemented',ListboxControlValueAccessor,FormsModule,ReactiveFormsModule,'should be able to set the disabled state via setDisabledState',withContext,'Expected the selection list to be enabled.',every,'Expected every list option to be enabled.',setDisabledState,'Expected the selection list to be disabled.','should be able to select options via writeValue',writeValue,'arc','should be select multiple options by their values','stasis',selectedValues,getSelectedValues,'should be able to disable options from the control','should be able to toggle disabled state after form control is disabled','should be able to select options via setting the value in form control','purple','should only select the first matching option if multiple is not enabled','solar','should deselect an option selected via form control once its value changes','new-value','should maintain the form control on listbox destruction',showListbox,'inside a combobox',ListboxInsideCombobox,'should update combobox value on selection of an option','should update combobox value on selection via keyboard','should not close panel if listbox is in multiple mode',updateAndClose,"`
    <div cdkListbox
         [disabled]=""isListboxDisabled""
         (selectionChange)=""onSelectionChange($event)"">
      <div cdkOption
          [disabled]=""isPurpleDisabled"">
        Purple
      </div>
      <div cdkOption
           [disabled]=""isSolarDisabled"">
        Solar
      </div>
      <div cdkOption>Arc</div>
      <div cdkOption>Stasis</div>
    </div>`",ListboxWithOptions,onSelectionChange,ListboxSelectionChangeEvent,"`
    <div cdkListbox
         [multiple]=""isMultiselectable""
         (selectionChange)=""onSelectionChange($event)"">
      <div cdkOption>Purple</div>
      <div cdkOption>Solar</div>
      <div cdkOption>Arc</div>
      <div cdkOption>Stasis</div>
    </div>`","`
    <div cdkListbox
         [useActiveDescendant]=""isActiveDescendant"">
      <div cdkOption>Purple</div>
      <div cdkOption>Solar</div>
      <div cdkOption>Arc</div>
      <div cdkOption>Stasis</div>
    </div>`",focusedOption,"`
    <select cdkListbox
         [disabled]=""isDisabled""
         [multiple]=""isMultiselectable""
         (selectionChange)=""onSelectionChange($event)""
         [formControl]=""form""
         *ngIf=""showListbox""   ngDefaultControl>
      <option cdkOption [value]=""'purple'"">Purple</option>
      <option cdkOption [value]=""'solar'"">Solar</option>
      <option cdkOption [value]=""'arc'"">Arc</option>
      <option cdkOption [value]=""'stasis'"">Stasis</option>
    </select>`","`
    <button cdkCombobox #toggleCombobox class=""example-combobox""
            [cdkComboboxTriggerFor]=""panel""
            [openActions]=""'click'"">
      No Value
    </button>

    <ng-template #panel>
      <select cdkListbox
              [disabled]=""isDisabled""
              [multiple]=""isMultiselectable""
              (selectionChange)=""onSelectionChange($event)"">
        <option cdkOption [value]=""'purple'"">Purple</option>
        <option cdkOption [value]=""'solar'"">Solar</option>
        <option cdkOption [value]=""'arc'"">Arc</option>
        <option cdkOption [value]=""'stasis'"">Stasis</option>
      </select>
    </ng-template>
  `",'makes the first and last rows focusable but invisible',hoverContentStateForRow,HoverContentState,'shows and hides on-hover content only after a delay',row0,row1,ON,OFF,41,'shows the hover content if the data changes after initialization',renderData,'shows hover content for the focused row and makes the rows above and below focusable',focusEditCell,getEditCell,'should close the focus content when pressing escape','shows hover content for the editing row and makes the rows above and below ','focusable unless focus is in a different table row in which case it takes priority',openLens,'triggering edit','opens edit from on-hover button',triggerHoverState,clickOpenButton,lensIsOpen,clearLeftoverTimers,'opens edit from Enter on focued cell','does not trigger edit when disabled',nameEditDisabled,'focus manipulation',getRowCells,getCells,'sets tabindex to 0 on editable cells','unsets tabindex to 0 on disabled cells','arrow keys',dispatchKey,'moves focus up/down/left/right and prevents default',rowCells,rightEvent,RIGHT_ARROW,UP_ARROW,leftEvent,LEFT_ARROW,"'wraps around when reaching start or end of a row, skipping non-editable cells'",'does not fall off top or bottom of the table','ignores non arrow key events',TAB,'lens focus trapping behavior',getFocusablePaneElements,getEditBoundingBox,"'input, button, .cdk-focus-trap-anchor'",'keeps focus within the lens by default',focusableElements,'moves focus to the next cell when focus leaves end of lens with cdkPopoverEditTabOut','shows a lens with the value from the table',getNameInput,'Hydrogen','positions the lens at the top left corner and spans the full width of the cell',paneRect,getEditPane,cellRect,expectPixelsToEqual,'adjusts the positioning of the lens based on colspan',cellRects,colspan,"'updates the form and submits, closing the lens'",'Hydragon',clickSubmitButton,'does not close the lens on submit when form is invalid','closes lens on submit when form is invalid with ','cdkEditControlIgnoreSubmitUnlessValid = false',ignoreSubmitUnlessValid,'closes the lens on close',clickCloseButton,'closes and reopens a lens with modified value persisted','resets the lens to original value',clickRevertButton,'should not reset the values when clicking revert without making changes',getWeightInput,'1.007','resets the lens to previously submitted value','Hydragon X','closes the lens on escape','does not close the lens on escape with a modifier key','altKey','does not close the lens on click within lens','closes the lens on outside click','submits the lens on outside click with ',"'cdkEditControlClickOutBehavior = ""submit""'",clickOutBehavior,'submit','does nothing on outside click with ',"'cdkEditControlClickOutBehavior = ""noop""'",'sets focus on the first input in the lens','returns focus to the edited cell after closing','does not focus to the edited cell after closing if another element ','outside the lens is already focused','should pass the directionality to the overlay',ChemicalElement,weight,createElementData,1.007,'Helium',4.0026,'Lithium',6.941,'Beryllium',9.0122,'Boron',10.81,tableElement,"'.cdk-row, tr'","'.cdk-cell, td'",'should render initial state for uniform items',finishInit,contentWrapper,'.cdk-virtual-scroll-content-wrapper','should render 4 50px items to fill 200px space','should render extra content if first item is smaller than average','should render 4 items to fill 200px space based on 50px ','estimate from first item','should throw if maxBufferPx is less than minBufferPx',minBufferPx,maxBufferPx,"`
    <cdk-virtual-scroll-viewport
        autosize [minBufferPx]=""minBufferPx"" [maxBufferPx]=""maxBufferPx""
        [orientation]=""orientation"" [style.height.px]=""viewportHeight""
        [style.width.px]=""viewportWidth"">
      <div class=""item"" *cdkVirtualFor=""let size of items; let i = index"" [style.height.px]=""size""
           [style.width.px]=""size"">
        {{i}} - {{size}}
      </div>
    </cdk-virtual-scroll-viewport>
  `",styles,"`
    .cdk-virtual-scroll-content-wrapper {
      display: flex;
      flex-direction: column;
    }

    .cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper {
      flex-direction: row;
    }
  `",encapsulation,ViewEncapsulation,None,AutoSizeVirtualScroll,CdkVirtualScrollViewport,viewportSize,viewportCrossSize,'should scroll down slowly',executeAsyncScript,smoothScrollViewportTo,offScreen,"'.demo-virtual-scroll-uniform-size [data-index=""39""]'",onScreen,"'.demo-virtual-scroll-uniform-size [data-index=""40""]'",isVisibleInViewport,'should jump scroll position down and slowly scroll back up',scrollViewportTo,"'.demo-virtual-scroll-uniform-size [data-index=""0""]'",'with variable size','/virtual-scroll','.demo-virtual-scroll-variable-size cdk-virtual-scroll-viewport',"'.demo-virtual-scroll-variable-size [data-index=""19""]'","'.demo-virtual-scroll-variable-size [data-index=""20""]'","'.demo-virtual-scroll-variable-size [data-index=""18""]'","'.demo-virtual-scroll-variable-size [data-index=""0""]'",viewportRect,getRect,getLocation,getSize,elRect,ILocation,ISize,viewportEl,curOffset,do,co,'should allow toggling selection',cdkSelection,toggleSelection,'should allow selecting all',isAllSelected,toggleSelectAll,'should detect partial selection',isPartialSelected,'should clear selection when partial selected and toggling select-all','cdkSelectAll','should select all items when not all selected',getSelectAll,'unchecked',clickSelectAll,'should de-select all items when all selected','should de-select all items when partially selected',clickSelectionToggle,'indeterminate','should respond to selection toggle clicks','should emit the correct selection change events',selectionChange,'cherry','durian','cdkSelectionToggle','should respond to select-all toggle click',getSelectionToggle,'should select unselected item when clicked','should de-selected selected item when clicked','CdkSelection with multiple = false',ListWithSingleSelection,CdkSelectionModule,'should uncheck the previous selection when selecting new item','cdkSelectionColumn',MultiSelectTableWithSelectionColumn,CdkTableModule,'should show check boxes','should allow select all','should allow toggle rows','cdkRowSelection','should set .cdk-selected on selected rows',getRow,'cdk-selected','should set aria-selected on selected rows','cdkSelectionColumn with multiple = false',SingleSelectTableWithSelectionColumn,'should not show select all','input[cdkselectall]','should allow selecting one single row',"`
    <ul cdkSelection [dataSource]=""data"" [cdkSelectionMultiple]=""true""
        (cdkSelectionChange)=""selectionChange = $event"">
      <button cdkSelectAll #toggleAll=""cdkSelectAll"" (click)=""toggleAll.toggle($event)"">
        {{selectAllState(toggleAll.indeterminate | async, toggleAll.checked | async)}}
      </button>
      <li *ngFor=""let item of data; index as i"">
        <button cdkSelectionToggle #toggle=""cdkSelectionToggle""
            [cdkSelectionToggleValue]=""item""
            [cdkSelectionToggleIndex]=""i""
            (click)=""toggle.toggle()"">
          {{(toggle.checked | async) ? 'checked' : 'unchecked'}}
        </button>
        {{item}}
      </li>
    </ul>`",ListWithMultiSelection,CdkSelection,SelectionChange,private,_elementRef,_cdr,ChangeDetectorRef,selectAllState,indeterminateState,checkedState,'[cdkselectall]','[cdkselectiontoggle]',"`
    <ul cdkSelection [dataSource]=""data"" [cdkSelectionMultiple]=""false""
        (cdkSelectionChange)=""selectionChange = $event"" >
      <li *ngFor=""let item of data; index as i"">
        <button cdkSelectionToggle #toggle=""cdkSelectionToggle""
            [cdkSelectionToggleValue]=""item""
            [cdkSelectionToggleIndex]=""i""
            (click)=""toggle.toggle()"">
          {{(toggle.checked | async) ? 'checked' : 'unchecked'}}
        </button>
        {{item}}
      </li>
    </ul>`","`
    <table cdk-table cdkSelection [dataSource]=""data"" [cdkSelectionMultiple]=""true"">
      <cdk-selection-column cdkSelectionColumnName=""select""></cdk-selection-column>
      <ng-container cdkColumnDef=""name"">
        <th cdk-header-cell *cdkHeaderCellDef>Name</th>
        <td cdk-cell *cdkCellDef=""let element"">{{element}}</td>
      </ng-container>

      <tr cdk-header-row *cdkHeaderRowDef=""columns""></tr>
      <tr cdk-row *cdkRowDef=""let row; columns: columns;""
          cdkRowSelection [cdkRowSelectionValue]=""row""></tr>
    </table>
    `",'input[cdkselectiontoggle]','tr[cdkrowselection]',"`
    <table cdk-table cdkSelection [dataSource]=""data"" [cdkSelectionMultiple]=""false"">
      <cdk-selection-column cdkSelectionColumnName=""select""></cdk-selection-column>
      <ng-container cdkColumnDef=""name"">
        <th cdk-header-cell *cdkHeaderCellDef>Name</th>
        <td cdk-cell *cdkCellDef=""let element"">{{element}}</td>
      </ng-container>

      <tr cdk-header-row *cdkHeaderRowDef=""columns""></tr>
      <tr cdk-row *cdkRowDef=""let row; columns: columns;""
          cdkRowSelection [cdkRowSelectionValue]=""row""></tr>
    </table>
    `",'sets scrollbar track margin for sticky headers',stickyHeaders,'header-1','header-3',flushMicrotasks,FIREFOX,scrollerStyle,scrollerElement,'::-webkit-scrollbar-track','margin-top',headerRows,'margin-bottom','margin-left','sets scrollbar track margin for sticky footers',stickyFooters,'footer-1','footer-3',footerRows,'sets scrollbar track margin for sticky start columns',stickyStartColumns,'column-1','column-3',dataRows,'sets scrollbar track margin for sticky end columns',stickyEndColumns,'column-4','column-6','sets scrollbar track margin for a combination of sticky rows and columns',TestData,FakeDataSource,DataSource,_dataChange,BehaviorSubject,addData,connect,collectionViewer,CollectionViewer,combineLatest,viewChange,pipe,nextIndex,copiedData,`a_${,`b_${,`c_${,"`
    <div cdkTableScrollContainer>
    <table cdk-table [dataSource]=""dataSource"">
      <ng-container [cdkColumnDef]=""column"" *ngFor=""let column of columns""
                    [sticky]=""isStuck(stickyStartColumns, column)""
                    [stickyEnd]=""isStuck(stickyEndColumns, column)"">
        <th cdk-header-cell *cdkHeaderCellDef> Header {{column}} </th>
        <td cdk-cell *cdkCellDef=""let row""> {{column}} </td>
        <td cdk-footer-cell *cdkFooterCellDef> Footer {{column}} </td>
      </ng-container>

      <tr cdk-header-row *cdkHeaderRowDef=""columns; sticky: isStuck(stickyHeaders, 'header-1')"">
      </tr>
      <tr cdk-header-row *cdkHeaderRowDef=""columns; sticky: isStuck(stickyHeaders, 'header-2')"">
      </tr>
      <tr cdk-header-row *cdkHeaderRowDef=""columns; sticky: isStuck(stickyHeaders, 'header-3')"">
      </tr>

      <tr cdk-row *cdkRowDef=""let row; columns: columns""></tr>

      <tr cdk-footer-row *cdkFooterRowDef=""columns; sticky: isStuck(stickyFooters, 'footer-1')"">
      </tr>
      <tr cdk-footer-row *cdkFooterRowDef=""columns; sticky: isStuck(stickyFooters, 'footer-2')"">
      </tr>
      <tr cdk-footer-row *cdkFooterRowDef=""columns; sticky: isStuck(stickyFooters, 'footer-3')"">
      </tr>
    </table>
    </div>
  `","`
    .cdk-header-cell, .cdk-cell, .cdk-footer-cell {
      display: block;
      width: 20px;
      box-sizing: border-box;
    }
  `",StickyNativeLayoutCdkTableApp,dataSource,'column-2','column-5',CdkTable,isStuck,getHeaderRows,'.cdk-header-row',getFooterRows,'.cdk-footer-row','.cdk-row','cdk-cell','td.cdk-cell','should initialize without the message container',getMessagesContainer,'should be able to create a message element',ariaDescriber,'My Message','should be able to describe using an element',descriptionNode,'#description-with-existing-id',expectMessage,'should hide the message container','cdk-visually-hidden','should have visibility hidden','should not register empty strings',getMessageElements,'should not register non-string values','should not throw when trying to remove non-string value',removeDescription,'should de-dupe a message registered multiple times',element3,'should de-dupe a message registered multiple via an element node','should be able to register multiple messages','First Message','Second Message','should be able to unregister messages',CDK_DESCRIBEDBY_HOST_ATTRIBUTE,'should not remove nodes that were set as messages when unregistering','Expected node to be inside the document to begin with.','Expected no messages container on init.','Expected no messages container after the element was described.','Expected description node to still be in the DOM after it is','no longer being used.','should keep nodes set as descriptions inside their original position in the DOM',initialParent,'Expected node to have a parent initially.','Expected node to stay inside the same parent when used as a description.','Expected node to stay inside the same parent after not ','being used as a description.','should be able to unregister messages while having others registered','Persistent Message','should be able to append to an existing list of aria describedby',element4,'should be able to handle multiple regisitrations of the same message to an element','should not throw when attempting to describe a non-element node',createComment,'Not an element node','This looks like an element','should clear any pre-existing containers coming in from the server',extraContainer,'cdk-describedby-message-container','platform','server','.cdk-describedby-message-container','should not clear any pre-existing containers coming from the browser','should not describe messages that match up with the aria-label of the element',"'should assign an id to the description element, if it does not have one'",'[description-without-id]','should not overwrite the existing id of the description element','description-with-existing-id','should not remove pre-existing description nodes on destroy','Expected description node to still be in the DOM after ','it is no longer being used.','should remove the aria-describedby attribute if there are no more messages','Message','should be able to register the same message with different roles','tooltip/My Message','button/My Message','presentation/My Message','should de-dupe a message if it has been registered with the same role','should be able to unregister messages with a particular role',"'should not remove element if it is registered with same text, but different role'",messagesContainer,messages,messageElements,ariaDescribedBy,cdkDescribedBy,referenceId,messageElement,`#${,prefix,"`
    <div #element1></div>
    <div #element2></div>
    <div #element3></div>
    <div #element4 aria-describedby=""existing-aria-describedby1 existing-aria-describedby2""></div>
    <div id=""description-with-existing-id"">Hello</div>
    <div description-without-id>Hey</div>
  `",TestApp,'element1',_element1,'element2',_element2,'element3',_element3,'element4',_element4,AriaDescriber,'should be able to append/remove aria reference IDs',addAriaReferencedId,testElement,'reference_1',expectIds,'reference_2',removeAriaReferencedId,'should trim whitespace when adding/removing reference IDs','    reference_1   ','    reference_2   ','   reference_1   ','   reference_2   ','should ignore empty string','  ','should not add the same reference id if it already exists',getAriaReferenceIds,'should retrieve ids that are delimited by extra whitespace','reference_1      reference_2',ids,'manually registered element should receive focus classes',buttonElement,'cdk-focused','button should have cdk-focused class',changeHandler,'should detect focus via keyboard','button should have exactly 2 focus classes','cdk-keyboard-focused','button should have cdk-keyboard-focused class','keyboard','should detect focus via mouse','cdk-mouse-focused','button should have cdk-mouse-focused class','should detect focus via touch',dispatchFakeEvent,TOUCH_BUFFER_MS,'cdk-touch-focused','button should have cdk-touch-focused class','should detect programmatic focus','cdk-program-focused','button should have cdk-program-focused class','program','should detect fake mousedown from a screen reader on Chrome',defineProperties,offsetX,offsetY,'should detect fake mousedown from a screen reader on Firefox','focusVia keyboard should simulate keyboard focus',focusMonitor,focusVia,'focusVia mouse should simulate mouse focus','focusVia touch should simulate touch focus','focusVia program should simulate programmatic focus','should remove focus classes on blur',_onBlur,'button should not have any focus classes','should remove classes on stopMonitoring',stopMonitoring,'should remove classes when destroyed','should pass focus options to the native focus method',preventScroll,'should not clear the focus origin too early in the current event loop',"'should clear the focus origin after one tick with ""immediate"" detection'",'should check children if monitor was called with different checkChildren',monitor,'focusVia should change the focus origin when called on the focused node',fakeActiveElement,'focusVia should change the focus origin when called a focused child node','Parent should have exactly 2 focus classes and the `parent` class','Parent should have cdk-focused class','Parent should have cdk-keyboard-focused class','Parent should have cdk-mouse-focused class',"'FocusMonitor with ""eventual"" detection'",PlainButton,FocusMonitor,origin,FocusOrigin,A11yModule,FOCUS_MONITOR_DEFAULT_OPTIONS,detectionMode,FocusMonitorDetectionMode,EVENTUAL,fm,'focus origin change handler',patchElementFocus,"'should not clear the focus origin, even after a few seconds'",'cdkMonitorFocus',ButtonWithFocusClasses,ComplexComponentWithMonitorElementFocus,ComplexComponentWithMonitorSubtreeFocus,ComplexComponentWithMonitorSubtreeFocusAndMonitorElementFocus,FocusMonitorOnCommentNode,'button with cdkMonitorElementFocus','focusChanged','should initially not be focused','button should not have focus classes',focusChanged,'complex component with cdkMonitorElementFocus','should add focus classes on parent focus','should not add focus classes on child focus','complex component with cdkMonitorSubtreeFocus','should add focus classes on child focus','complex component with cdkMonitorSubtreeFocus and cdkMonitorElementFocus','should add keyboard focus classes on both elements when child is focused via keyboard','should not throw when trying to monitor focus on a non-element node','FocusMonitor observable stream','should emit inside the NgZone','zone spy',NgZone,isInAngularZone,"`<div class=""parent""><button>focus me!</button></div>`","`<button cdkMonitorElementFocus (cdkFocusChange)=""focusChanged($event)""></button>`",_origin,"`<div tabindex=""0"" cdkMonitorElementFocus><button></button></div>`","`<div tabindex=""0"" cdkMonitorSubtreeFocus><button></button></div>`",`<div cdkMonitorSubtreeFocus><button cdkMonitorElementFocus></button></div>`,`<ng-container cdkMonitorElementFocus></ng-container>`,'Calls preventFocus when it is created',mockInertStrategy,'preventFocus','allowFocus',SimpleFocusTrap,preventFocus,allowFocus,'Calls preventFocus when it is enabled',enabled,'Calls allowFocus when it is disabled','with FocusTrapManager',manager,FocusTrapManager,'Registers when it is created','register','Deregisters when it is disabled','deregister',deregister,componentType,"`
    <div #focusTrapElement>
      <input>
      <button>SAVE</button>
    </div>
    `",implements,AfterViewInit,'focusTrapElement',focusTrapElement,ConfigurableFocusTrap,_focusTrapFactory,ConfigurableFocusTrapFactory,ngAfterViewInit,MockFocusTrapInertStrategy,FocusTrapInertStrategy,'refocuses the first FocusTrap element when focus moves outside the FocusTrap',outsideFocusableElement,'Expected first focusable element to be focused',firstFocusableElement,'does not intercept focus when focus moves to another element in the FocusTrap',secondFocusableElement,'Expected second focusable element to be focused','should not intercept focus if it moved outside the trap and back in again',"`
    <textarea #outsideFocusable></textarea>
    <div #focusTrapElement>
      <input #firstFocusable>
      <button #secondFocusable>SAVE</button>
    </div>
    `",'outsideFocusable','firstFocusable','secondFocusable','activeElement',focusFirstTabbableElementWhenReady,'Enables a FocusTrap when it is registered',MockManagedFocusTrap,'_enable',_enable,'Disables a FocusTrap when it is deregistered','_disable',_disable,'Disables the previous FocusTrap when a new FocusTrap is registered','Filters duplicates before registering a new FocusTrap',ManagedFocusTrap,focusInitialElementWhenReady,'wrap focus from end to start',focusTrapInstance,focusFirstTabbableElement,toLowerCase,'Expected input element to be focused','Expected return value to be true if focus was shifted.','should wrap focus from start to end',focusLastTabbableElement,lastElement,IOS,`Expected ${,} element to be focused`,'should return false if it did not manage to find a focusable element',newFixture,FocusTrapWithoutFocusableElements,focusTrapDirective,'should be enabled by default','with bindings',FocusTrapWithBindings,'should clean up its anchor sibling elements on destroy','div.cdk-visually-hidden',renderFocusTrap,"'should set the appropriate tabindex on the anchors, based on the disabled state'",_isFocusTrapEnabled,'with focus targets',FocusTrapTargets,'should be able to set initial focus target','middle','should be able to pass in focus options to initial focusable element','#middle','should be able to prioritize the first focus target','should be able to pass in focus options to first focusable element','#first','should be able to prioritize the last focus target','should be able to pass in focus options to last focusable element','#last','should warn if the initial focus target is not focusable',alternateFixture,FocusTrapUnfocusableTarget,'special cases','should not throw when it has a SVG child',FocusTrapWithSvg,'with autoCapture','should automatically capture and return focus on init / destroy',FocusTrapWithAutoCapture,buttonOutsideTrappedRegion,showTrappedRegion,'auto-capture-target','should capture focus if auto capture is enabled later on',autoCaptureEnabled,'should automatically capture and return focus on init / destroy inside the shadow DOM',_supportsShadowDom,FocusTrapWithAutoCaptureInShadowDom,'should capture focus if auto capture is enabled later on inside the shadow DOM','should put anchors inside the outlet when set at the root of a template portal',FocusTrapInsidePortal,outlet,'.portal-outlet','Expected no buttons inside the outlet on init.','.cdk-focus-trap-anchor','Expected no focus trap anchors inside the outlet on init.',TemplatePortal,viewContainerRef,portalOutlet,attachTemplatePortal,'Expected one button inside the outlet after attaching.','Expected two focus trap anchors in the outlet after attaching.',"`
    <div cdkTrapFocus>
      <input>
      <button>SAVE</button>
    </div>
    `",CdkTrapFocus,AUTO_FOCUS_TEMPLATE,"`
  <button type=""button"">Toggle</button>
  <div *ngIf=""showTrappedRegion"" cdkTrapFocus [cdkTrapFocusAutoCapture]=""autoCaptureEnabled"">
    <input id=""auto-capture-target"">
    <button>SAVE</button>
  </div>
`",ShadowDom,"`
    <div *ngIf=""renderFocusTrap"" [cdkTrapFocus]=""_isFocusTrapEnabled"">
      <input>
      <button>SAVE</button>
    </div>
    `","`
    <div cdkTrapFocus>
      <input>
      <button>before</button>
      <button id=""first"" cdkFocusRegionStart></button>
      <button id=""middle"" cdkFocusInitial></button>
      <button id=""last"" cdkFocusRegionEnd></button>
      <button>after</button>
      <input>
    </div>
    `","`
    <div cdkTrapFocus>
      <div cdkFocusInitial></div>
    </div>
    `","`
    <div cdkTrapFocus>
      <svg xmlns=""http://www.w3.org/2000/svg"">
        <circle cx=""100"" cy=""100"" r=""100""/>
      </svg>
    </div>
    `","`
    <div cdkTrapFocus>
      <p>Hello</p>
    </div>
    `","`
  <div class=""portal-outlet"">
    <ng-template cdkPortalOutlet></ng-template>
  </div>

  <ng-template #template>
    <div cdkTrapFocus>
      <button>Click me</button>
    </div>
  </ng-template>
  `",'template',TemplateRef,CdkPortalOutlet,ViewContainerRef,'should detect NONE for non-browser platforms',fakePlatform,isBrowser,detector,HighContrastModeDetector,getHighContrastMode,'Expected high-contrast mode `NONE` on non-browser platforms',HighContrastMode,'should not apply any css classes for non-browser platforms',fakeDocument,getFakeDocument,_applyBodyHighContrastModeCssClasses,'Expected body not to have any CSS classes in non-browser platforms','should detect WHITE_ON_BLACK when backgrounds are coerced to black',"'rgb(0,0,0)'",'Expected high-contrast mode `WHITE_ON_BLACK`',WHITE_ON_BLACK,'should detect BLACK_ON_WHITE when backgrounds are coerced to white ',"'rgb(255,255,255)'",'Expected high-contrast mode `BLACK_ON_WHITE`',BLACK_ON_WHITE,'should detect NONE when backgrounds are not coerced ',"'rgb(1,2,3)'",'Expected high-contrast mode `NONE`','should apply css classes for BLACK_ON_WHITE high-contrast mode',HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS,BLACK_ON_WHITE_CSS_CLASS,'should apply css classes for WHITE_ON_BLACK high-contrast mode',WHITE_ON_BLACK_CSS_CLASS,'should not apply any css classes when backgrounds are not coerced',fakeComputedBackgroundColor,defaultView,'should do nothing on non-browser platforms',mostRecentModality,dispatchTouchEvent,'should detect keyboard input modality','should detect mouse input modality','should detect touch input modality','should detect changes in input modality','should emit when input modalities are detected',emitted,InputModality,modalityDetected,modality,'should emit changes in input modality',modalityChanged,'should detect fake screen reader mouse events as keyboard input modality on Chrome','should detect fake screen reader mouse events as keyboard input modality on Firefox','should detect fake screen reader touch events as keyboard input modality',createTouchEvent,'touches','should ignore certain modifier keys by default',ALT,CONTROL,MAC_META,META,SHIFT,'should not ignore modifier keys if specified',ignoreKeys,'should ignore keys if specified','should ignore mouse events that occur too closely after a touch event','should complete the various observables on destroy',modalityDetectedSpy,'modalityDetected complete spy',modalityChangedSpy,'modalityChanged complete spy',complete,'should return true for disabled elements',createElements,'mat-checkbox',appendElements,`Expected <${,} disabled> to be disabled`,'should return false for elements without disabled',}> not to be disabled`,'should return false for a `display: none` element',testContainerElement,"`<input style=""display: none;"">`",'Expected element with `display: none` to not be visible','should return false for the child of a `display: none` element',"`<div style=""display: none;"">
           <input>
         </div>`",'Expected element with `display: none` parent to not be visible','should return false for a `visibility: hidden` element',"`<input style=""visibility: hidden;"">`",'Expected element with `visibility: hidden` to not be visible','should return false for the child of a `visibility: hidden` element',"`<div style=""visibility: hidden;"">
           <input>
         </div>`",'Expected element with `visibility: hidden` parent to not be visible','should return true for an element with `visibility: hidden` ancestor and *closer* ','`visibility: visible` ancestor',"`<div style=""visibility: hidden;"">
           <div style=""visibility: visible;"">
             <input>
           </div>
         </div>`",'Expected element with `visibility: hidden` ancestor and closer ','`visibility: visible` ancestor to be visible','should return true for an element without visibility modifiers','Expected element without visibility modifiers to be visible','isFocusable','should return true for native form controls',}> to be focusable`,'should return true for an anchor with an href','google.com',`Expected <a> with href to be focusable`,'should return false for an anchor without an href',`Expected <a> without href not to be focusable`,'should return false for disabled form controls',} disabled> not to be focusable`,'should return true for a `display: none` element with ignoreVisibility',IsFocusableConfig,ignoreVisibility,'Expected element with `display: none` to be focusable','Expected element with `visibility: hidden` not to be focusable','Expected element with `visibility: hidden` parent not to be focusable','`visibility: visible` ancestor to be focusable','should return false for an element with an empty tabindex',"`Expected element with tabindex="""" not to be focusable`",'should return false for an element with a non-numeric tabindex','abba',`Expected element with non-numeric tabindex not to be focusable`,'should return true for an element with contenteditable','contenteditable',`Expected element with contenteditable to be focusable`,'should return false for inert div and span',}> not to be focusable`,'isTabbable','for non-iOS browsers',shouldSkip,'should by default treat video elements with controls as tabbable',video,createFromTemplate,'<video controls>',isTabbable,'should respect the tabindex for video elements with controls','should by default treat video elements without controls as tabbable in firefox','<video>','should mark form controls and anchors without tabindex attribute as tabbable',}> to be tabbable`,'should return true for div and span with tabindex == 0',"} tabindex=""0""> to be focusable`",'should return false for native form controls and anchor with tabindex == -1',"} tabindex=""-1""> not to be tabbable`","} tabindex=""0""> to be tabbable`",'should respect the inherited tabindex inside of frame elements',iframe,'<iframe>',HTMLFrameElement,"'<button tabindex=""0"">Not Tabbable</button>'",contentDocument,'should carefully try to access the frame element of an elements window',"'<button tabindex=""1"">Not Tabbable</button>'",SAFARI,'frameElement','Access Denied!','should mark elements which are contentEditable as tabbable',editableEl,"'<div contenteditable=""true"">'",'should never mark iframe elements as tabbable','should detect audio elements with controls as tabbable',audio,'<audio controls>','should always detect audio elements without controls as non-tabbable','<audio>','should not mark elements inside of invisible frames as tabbable','should never mark object frame elements as tabbable',objectEl,'<object>','for iOS browsers',WEBKIT,'should never allow div elements to be tabbable',"'<div tabindex=""0"">'",'should never allow span elements to be tabbable',spanEl,"'<span tabindex=""0"">Text</span>'",'should never allow button elements to be tabbable',"'<button tabindex=""0"">'",'should never allow anchor elements to be tabbable',anchorEl,"'<a tabindex=""0"">Link</a>'",nodeNames,tmpRoot,'should maintain the active item if the amount of items changes',keyManager,getLabel,itemList,FakeFocusable,notifyOnChanges,'should start off the activeItem as null',ListKeyManager,'should set the activeItem to null if an invalid index is passed in',setActiveItem,1337,'Key events','should emit tabOut when the tab key is pressed','tabOut spy',tabOut,take,onKeydown,fakeKeyEvents,'should emit tabOut when the tab key is pressed with a modifier','shiftKey','should emit an event whenever the active item changes','change spy',subscription,downArrow,upArrow,unsubscribe,"'should emit if the active item changed, but not the active index'",'should activate the first item when pressing down on a clean key manager','Expected active index to default to -1.','Expected first item to become active.','should not prevent the default keyboard action when pressing tab','should not do anything for unsupported key presses',unsupported,'should ignore the horizontal keys when only in vertical mode',withVerticalOrientation,withHorizontalOrientation,rightArrow,'should ignore the vertical keys when only in horizontal mode','withHomeAndEnd',withHomeAndEnd,'should focus the first item when Home is pressed',home,'should focus the last item when End is pressed','with `vertical` direction',KeyEventTestContext,nextKeyEvent,prevKeyEvent,runDirectionalKeyTests,'with `ltr` direction','with `rtl` direction','should set subsequent items as active when the next key is pressed','Expected active item to be 1 after one next key event.','Expected active item to be 2 after two next key events.','should set first item active when the next key is pressed if no active item','Expected active item to be 0 after next key if active item was null.','should set previous items as active when the previous key is pressed','Expected active item to be 0 after one next and one previous key event.','should do nothing when the prev key is pressed if no active item and not wrap','Expected nothing to happen if prev event occurs and no active item.','should skip disabled items','Expected active item to skip past disabled item on next event.','Expected active item to skip past disabled item on up arrow.','should work normally when disabled property does not exist','Expected active item to be 1 after one next event when disabled not set.','Expected active item to be 2 after two next events when ','disabled not set.','should not move active item past either end of the list',`Expected last item of the list to be active.`,`Expected active item to remain at the end of the list.`,`Expected first item of the list to be active.`,`Expected active item to remain at the beginning of the list.`,'should not move active item to end when the last item is disabled',`Expected second item of the list to be active.`,`Expected the second item to remain active.`,'should prevent the default keyboard action of handled events','should not do anything for arrow keys if the alt key is held down',runModifierKeyTest,'should not do anything for arrow keys if the control key is held down','ctrlKey','should not do anything for arrow keys if the meta key is held down','metaKey','should not do anything for arrow keys if the shift key is held down',modifier,ListKeyManagerModifierKey,initialActiveIndex,'programmatic focus','should setActiveItem()',`Expected activeItemIndex to be updated when setActiveItem() was called.`,'should be able to set the active item by reference',`Expected activeItemIndex to be updated.`,'should be able to set the active item without emitting an event',updateActiveItem,'should expose the active item correctly','Expected active item to be the second option.','Expected the active item to match the second option.','Expected active item to be the third option.','Expected the active item ID to match the third option.','should setFirstItemActive()',setFirstItemActive,`Expected setFirstItemActive() to set the active item to the first item.`,'should set the active item to the second item if the first one is disabled',`Expected the second item to be active if the first was disabled.`,'should setLastItemActive()',setLastItemActive,`Expected setLastItemActive() to set the active item to the last item.`,'should set the active item to the second to last item if the last is disabled',`Expected the second to last item to be active if the last was disabled.`,'should setNextItemActive()',setNextItemActive,`Expected setNextItemActive() to set the active item to the next item.`,'should set the active item to the next enabled item if next is disabled',`Expected setNextItemActive() to only set enabled items as active.`,'should setPreviousItemActive()',setPreviousItemActive,`Expected setPreviousItemActive() to set the active item to the previous.`,'should skip disabled items when setPreviousItemActive() is called',`Expected third item of the list to be active.`,`Expected setPreviousItemActive() to skip the disabled item.`,'should not emit an event if the item did not change','wrap mode','should return itself to allow chaining',withWrap,`Expected withWrap() to return an instance of ListKeyManager.`,'should wrap focus when arrow keying past items while in wrap mode','Expected last item to be active.','Expected active item to wrap to beginning.','Expected active item to wrap to end.','should set last item active when up arrow is pressed if no active item','Expected last item to be active on up arrow if no active item.','Expected active item to be 0 after wrapping back to beginning.','should not get into an infinite loop if all items are disabled','should be able to disable wrapping','skip predicate','should skip disabled items by default','should be able to skip items with a custom predicate',skipPredicate,skipItem,'typeahead mode',debounceInterval,withTypeAhead,'should throw if the items do not implement the getLabel method',invalidQueryList,QueryList,invalidManager,ListKeyManagerOption,/must implement/,'should debounce the input key presses','o',78,'n','should focus the first item that starts with a letter',84,"'should not move focus if a modifier, that is not allowed, is pressed'",tEvent,'should always allow the shift key','should focus the first item that starts with sequence of letters','should cancel any pending timers if a navigation key is pressed','should handle non-English input','едно','две','три',keyboardEvent,'д','should handle non-letter characters','[]','321','`!?',192,'`',219,'[','should not focus disabled items','should start looking for matches after the active item','Bilbo','Frodo','Pippin','Boromir','Aragorn','should wrap back around if there were no matches after the active item','should wrap back around if the last item is active','should be able to select the first item','should not do anything if there is no match',87,'w','should expose whether the user is currently typing',isTyping,'FocusKeyManager',FocusKeyManager,'should focus subsequent items when down arrow is pressed','should focus previous items when up arrow is pressed','should allow setting the focused item without calling focus',`Expected activeItemIndex to update after calling updateActiveItem().`,'should be able to set the focus origin',setFocusOrigin,'ActiveDescendantKeyManager',ActiveDescendantKeyManager,FakeHighlightable,'setActiveStyles','setInactiveStyles','should set subsequent items as active with the DOWN arrow',setActiveStyles,'should set previous items as active with the UP arrow','should set inactive styles on previously active items',setInactiveStyles,'should correctly update the announce text',ariaLiveElement,'should correctly update the politeness attribute',announcer,'Hey Google','assertive','should apply the aria-live value polite by default','should be able to clear out the aria-live element manually','should be able to clear out the aria-live element by setting a duration','should clear the duration of previous messages when announcing a new one','Hello there',2500,'should remove the aria-live element from the DOM on destroy','.cdk-live-announcer-element','Expected that the aria-live element was remove from the DOM.','should return a promise that resolves after the text has been announced','announce spy','something','should resolve the returned promise if another announcement is made before the timeout has expired','should ensure that there is only one live element at a time',extraElement,'cdk-live-announcer-element',LiveAnnouncer,la,getLiveElement,'Expected only one live announcer element in the DOM.','should clear any previous timers when a new one is started','should clear pending timeouts on destroy','with a custom element',customLiveElement,LIVE_ANNOUNCER_ELEMENT_TOKEN,'should allow to use a custom live element','Custom Element','with a default options',LIVE_ANNOUNCER_DEFAULT_OPTIONS,politeness,LiveAnnouncerDefaultOptions,'should pick up the default politeness from the injection token','CdkAriaLive',mutationCallbacks,announcerSpy,DivWithCdkAriaLive,invokeMutationCallbacks,MutationObserverFactory,'should default politeness to polite','New content','should dynamically update the politeness','Newer content','Newest content','should not announce the same text multiple times','Content','should be able to pass in a duration',"`<button (click)=""announceText('Test')"">Announce</button>`",live,announceText,"`
    <div
      [cdkAriaLive]=""politeness ? politeness : null""
      [cdkAriaLiveDuration]=""duration"">{{content}}</div>`",'Initial content','should toggle its expanded state','should set its expanded state to expanded','should set its expanded state to closed','should emit a closed event','should not emit a closed event when the item is closed already','should emit an opened event','should emit a destroyed event',destroyed,'that is disabled','should not toggle its expanded state','should not set its expanded state to expanded','should not set its expanded state to closed','should not emit a closed event','should not emit an opened event','should emit to and complete the `destroyed` stream on destroy',emitSpy,'emit spy','complete spy','should complete the `opened` stream on destroy','should complete the `closed` stream on destroy','items without accordion',SingleItem,CdkAccordionItem,secondItem,ItemGroupWithoutAccordion,'should not change expanded state based on unrelated items','should not change expanded state for disabled items','items in accordion',ItemGroupWithAccordion,'should change expanded state based on related items',`<cdk-accordion-item #item1></cdk-accordion-item>`,"`
    <cdk-accordion-item #item1></cdk-accordion-item>
    <cdk-accordion-item #item2></cdk-accordion-item>
  `","`
    <cdk-accordion>
      <cdk-accordion-item #item1></cdk-accordion-item>
      <cdk-accordion-item #item2></cdk-accordion-item>
    </cdk-accordion>
  `",'should ensure only one item is expanded at a time',SetOfItems,firstPanel,secondPanel,'should allow multiple items to be expanded simultaneously','should not register nested items to the same accordion',NestedItems,innerItem,outerItem,accordion,'should be able to expand and collapse all items in multiple mode',openAll,closeAll,some,'should not be able to expand all items if multiple mode is off','should be able to use closeAll even if multiple mode is disabled','should complete the accordion observables on destroy',stateSpy,'stateChanges complete spy',openCloseSpy,'openCloseAllActions complete spy',_stateChanges,_openCloseAllActions,"`
  <cdk-accordion [multi]=""multi"">
    <cdk-accordion-item></cdk-accordion-item>
    <cdk-accordion-item></cdk-accordion-item>
  </cdk-accordion>`",CdkAccordion,ViewChildren,"`
  <cdk-accordion>
    <cdk-accordion-item #outerItem=""cdkAccordionItem"">
      <cdk-accordion-item #innerItem=""cdkAccordionItem""></cdk-accordion-item>
    </cdk-accordion-item>
  </cdk-accordion>`",'outerItem','innerItem','should read dir from the html element if not specified on the body',InjectsDirectionality,'should read dir from the body even it is also specified on the html element','should default to ltr if nothing is specified on either body or the html element','should complete the `change` stream on destroy','should default to ltr if an invalid direction is set on the body','not-valid','Dir directive','should provide itself as Directionality',ElementWithDir,injectedDirectionality,'should emit a change event when the value changes',Direction,changeCount,'should complete the change stream on destroy','should default to ltr if an invalid value is passed in','should preserve the consumer-provided `dir` attribute while ','normalizing the directive value',ElementWithPredefinedAutoDir,'should be case-insensitive',ElementWithPredefinedUppercaseDir,"`
    <div [dir]=""direction"" (dirChange)=""changeCount = changeCount + 1"">
      <injects-directionality></injects-directionality>
    </div>
  `",Dir,"'<div dir=""auto""></div>'","'<div dir=""RTL""></div>'",'injects-directionality',Directionality,FakeDocument,'loads the copy content in textarea',COPY_CONTENT,'removes the textarea after destroy()',pendingCopy,'#copy','returns true when execCommand succeeds',clipboard,'does not move focus away from focused element',focusedInput,'does not move focus away from focused SVG element',createElementNS,'focusable','when execCommand fails',execCommand,throwError,'could not copy','returns false','removes the text area','returns false when execCommand returns false','copies content to clipboard upon click','copy','emits copied event true when copy succeeds',copied,'emits copied event false when copy fails','should be able to attempt multiple times before succeeding',maxAttempts,attempts,'beginCopy',PendingCopy,'should be able to attempt multiple times before failing','should destroy any pending copies when the directive is destroyed',fakeCopy,'copy spy','destroy spy','should wrap a string in an array',stringVal,'just a string',coerceArray,'should wrap a number in an array',numberVal,'should wrap an object in an array',objectVal,'clever','should wrap a null value in an array',nullVal,'should wrap an undefined value in an array',undefinedVal,'should not wrap an array in an array',arrayVal,'should coerce undefined to false',coerceBooleanProperty,'should coerce null to false','should coerce the empty string to true','should coerce zero to true',"'should coerce the string ""false"" to false'",'should coerce the boolean false to false','should coerce the boolean true to true',"'should coerce the string ""true"" to true'",'should coerce an arbitrary string to true','should coerce an object to true','should coerce an array to true','should add pixel units to a number value',coerceCssPixelValue,'1337px','should ignore string values','1337rem','should return an empty string for null','should return an empty string for undefined','should coerce an ElementRef into an element',coerceElement,"'should return the element, if a native element is passed in'",'should coerce undefined to 0 or default',coerceNumberProperty,'should coerce null to 0 or default','should coerce true to 0 or default','should coerce false to 0 or default','should coerce the empty string to 0 or default',"'should coerce the string ""1"" to 1'","'should coerce the string ""123.456"" to 123.456'",'123.456',123.456,"'should coerce the string ""-123.456"" to -123.456'",'-123.456','should coerce an arbitrary string to 0 or default','should coerce an arbitrary string prefixed with a number to 0 or default','123pink','should coerce the number 1 to 1','should coerce the number 123.456 to 123.456','should coerce the number -123.456 to -123.456','should coerce an object to 0 or default','should coerce an array to 0 or default','should split a string',coerceStringArray,'x y  z 1','should map values to string in an array','arr','ay','null',"'arr,ay'",'should work with a custom delimiter','1::2::3::4','::','should trim values and remove empty values',"',  x,  ,, '",'should map non-string values to string','should return an empty array for null','should return an empty array for undefined','should be able to select a single value',model,'should deselect the previously selected value','should throw an error if multiple values are passed to model',getMultipleValuesInSingleSelectionError,'should only preselect one value',SelectionModel,'multiple selection','should be able to select multiple options',changedSpy,'changed spy',changed,'should be able to select multiple options at the same time','should be able to preselect multiple options','should be able to sort the selected values','should sort values if `selected` has not been accessed before','changed event','should return the model that dispatched the event','SelectionModel change event','should return both the added and removed values',removed,added,'should have updated the selected value before emitting the change event','selection','should emit an event when a value is selected','should not emit multiple events for the same value','should not emit an event when preselecting values','SelectionModel initial change event','deselection','should emit an event when a value is deselected',deselect,'should not emit an event when a non-selected value is deselected','should emit a single event when clearing all of the selected options','disabling the change event','should still update the select value','should be able to determine whether it is empty',isEmpty,'should be able to determine whether it has a value',hasValue,'should be able to toggle an option','should be able to clear the selected options','should be empty if an empty array is passed for the preselected values','should be able to determine whether multiple values can be selected',multipleSelectionModel,isMultipleSelection,singleSelectionModel,'should notify registered listeners','listen handler',notify,'should not notify unregistered listeners',unregister,'should remove all listeners when destroyed','should open a dialog with a component',dialogRef,PizzaMsg,testViewContainerRef,viewContainerFixture,'Pizza',dialogContainerElement,'cdk-dialog-container','should open a dialog with a template',templateRefFixture,ComponentWithTemplateRef,localValue,'Bees','Knees',templateRef,'Cheese Bees Knees','should use injector from viewContainerRef for DialogInjector',dialogInjector,Injector,DirectiveWithViewContainer,'Expected the dialog component to be created with the injector from the viewContainerRef.','should open a dialog with a component and no ViewContainerRef','should apply the configured role to the dialog element','alertdialog','should apply the specified `aria-describedby`','description-element','should close a dialog and get back a result',afterCloseCallback,'afterClose callback','Charmander','should only emit the afterCloseEvent once when closed','should close a dialog via the escape key','should not close a dialog via the escape key if a modifier is pressed','should close from a ViewContainerRef with OnPush change detection',onPushFixture,ComponentWithOnPushViewContainer,'Expected one open dialog.','Expected no open dialogs.','should close when clicking on the overlay backdrop','.cdk-overlay-backdrop','should emit the backdropClick stream when clicking on the overlay backdrop',disableClose,'backdropClick spy',backdropClick,'should emit the keyboardEvent stream when key events target the overlay','keyboardEvent spy','should notify the observers if a dialog has been opened',afterOpened,'should notify the observers if all open dialogs have finished closing',ContentElementDialog,'afterAllClosed spy',afterAllClosed,'should emit the afterAllClosed stream on subscribe if there are no open dialogs','should override the width of the overlay pane','500px','should override the height of the overlay pane','should override the min-width of the overlay pane','should override the max-width of the overlay pane','should override the min-height of the overlay pane','300px','should override the max-height of the overlay pane','should be able to customize the position strategy',positionStrategy,'should allow for the dimensions to be updated',updateSize,'should allow setting the layout direction','.cdk-global-overlay-wrapper','should inject the correct layout direction in the component instance',directionality,'should fall back to injecting the global direction if none is passed by the config','should close all of the dialogs','should close all dialogs when the user goes forwards/backwards in history',mockLocation,simulateUrlPop,'should close all open dialogs when the location hash changes',simulateHashChange,'should have the componentInstance available in the afterClosed callback','afterClosed spy','should close all open dialogs on destroy','should complete the closed stream on destroy',closedCompleteSpy,'closed complete spy','passing in data','should be able to pass in data',stringParam,dateParam,DialogWithInjectedData,'should default to null if no data is passed','should not keep a reference to the component after the dialog is closed','Expected reference to have been cleared.','should assign a unique id to each dialog','should allow for the id to be overwritten','pizza','should throw when trying to open a dialog with the same id as another dialog',/must be unique/g,'should be able to find a dialog by id',getDialogById,'disableClose option','should prevent closing via clicks on the backdrop','should prevent closing via the escape key','should allow for the disableClose option to be updated while open','should work when opening from a template','hasBackdrop option','should have a backdrop',hasBackdrop,'should not have a backdrop','panelClass option','should have custom panel class',panelClass,'custom-panel-class','.custom-panel-class','backdropClass option','should have default backdrop class',backdropClass,'.cdk-overlay-dark-backdrop','should have custom backdrop class','custom-backdrop-class','.custom-backdrop-class','focus management','should focus the first tabbable element of the dialog on open (the default)','Expected first tabbable element (input) in the dialog to be focused.','should focus the dialog element on open','Expected container to be focused on open','should focus the first header element on open','first-heading',firstHeader,"'h1[tabindex=""-1""]'",'Expected first header to be focused on open','should focus the first element that matches the css selector from autoFocus on open',firstParagraph,"'p[tabindex=""-1""]'",'Expected first paragraph to be focused on open','should re-focus trigger element when dialog closes','dialog-trigger','Expected the focus to change when dialog was opened.','Expected that the trigger was refocused after the dialog is closed.','should re-focus trigger element inside the shadow DOM when dialog closes',ShadowDomComponent,'should allow the consumer to shift focus in afterClosed','input-to-be-focused','should move focus to the container if there are no focusable elements in the dialog',DialogWithoutFocusableElements,'Expected dialog container to be focused.','should allow for focus restoration to be disabled','should allow for focus to be restored to an element matching a selector','should allow for focus to be restored to a specific DOM node','should be able to set a custom aria-label','should not set the aria-labelledby automatically if it has an aria-label','Dialog with a parent Dialog',parentDialog,childDialog,ComponentThatProvidesMatDialog,DialogModule,getContainerElement,Location,useClass,SpyLocation,'should close dialogs opened by a parent when calling closeAll on a child Dialog','Expected a dialog to be opened','Expected closeAll on child Dialog to close dialog opened by parent','should close dialogs opened by a child when calling closeAll on a parent Dialog','Expected closeAll on parent Dialog to close dialog opened by child',"'should not close the parent dialogs, when a child is destroyed'",'Expected a dialog to remain opened','should close the top dialog via the escape key',Directive,'dir-with-view-container',changeDetection,ChangeDetectionStrategy,OnPush,'arbitrary-component',`<dir-with-view-container></dir-with-view-container>`,ComponentWithChildViewContainer,childWithViewContainer,childViewContainer,'arbitrary-component-with-template-ref',"`<ng-template let-data let-dialogRef=""dialogRef"">
      Cheese {{localValue}} {{data?.value}}{{setDialogRef(dialogRef)}}</ng-template>`",DialogRef,setDialogRef,'<p>Pizza</p> <input> <button>Close</button>',"`
    <h1>This is the title</h1>
  `",closeButtonAriaLabel,Inject,DIALOG_DATA,'<p>Pasta</p>',`<button>I'm a button</button>`,'should drag an element freely to a particular position',StandaloneDraggable,dragElement,dragElementViaMouse,"'translate3d(50px, 100px, 0px)'",'should drag an element freely to a particular position when the page is scrolled',cleanup,makeScrollable,'should continue dragging the element from where it was left off',"'translate3d(150px, 300px, 0px)'",'should continue dragging from where it was left off when the page is scrolled','should not drag an element with the right mouse button','should not drag the element if it was not moved more than the minimum distance','should be able to stop dragging after a double click','should preserve the previous `transform` value',"'translate3d(50px, 100px, 0px) translateX(-50%)'",'should not generate multiple own `translate3d` values','translateY(-50%)',"'translate3d(50px, 100px, 0px) translateY(-50%)'","'translate3d(150px, 300px, 0px) translateY(-50%)'",'should prevent the `mousedown` action for native draggable elements',draggable,mousedownEvent,'should not start dragging an element with a fake mousedown event','should prevent the default dragstart action','dragstart','should not prevent the default dragstart action when dragging is disabled',dragInstance,'touch dragging',dragElementViaTouch,'should prevent the default `touchmove` action on the page while dragging','Expected initial touchmove to be prevented.','Expected subsequent touchmose to be prevented.','should not prevent `touchstart` action for native draggable elements',touchstartEvent,'should not start dragging an element with a fake touchstart event',radiusX,radiusY,'mouse dragging when initial transform is none','should dispatch an event when the user has started dragging',startDraggingViaMouse,startedSpy,'should dispatch an event when the user has stopped dragging',endedSpy,distance,dropPoint,'should include the drag distance in the ended event','should emit when the user is moving the drag element','move spy','should not emit events if it was not moved more than the minimum distance',moveSpy,releasedSpy,'should emit to `moved` inside the NgZone','should complete the `moved` stream on destroy','should be able to lock dragging along the x axis',lockAxis,"'translate3d(50px, 0px, 0px)'","'translate3d(150px, 0px, 0px)'",'should be able to lock dragging along the y axis',"'translate3d(0px, 100px, 0px)'","'translate3d(0px, 300px, 0px)'",'should add a class while an element is being dragged','cdk-drag-dragging','should add a class while an element is being dragged with OnPush change detection',StandaloneDraggableWithOnPush,'should not add a class if item was not dragged more than the threshold','should be able to set an alternate drag root element',DraggableWithAlternateRoot,rootElementSelector,'.alternate-root',dragRoot,'should be able to set the cdkDrag element as handle if it has a different root element',DraggableWithAlternateRootAndSelfHandle,'should be able to set an alternate drag root element for ng-container',DraggableNgContainerWithAlternateRoot,'should preserve the initial transform if the root element changes',alternateRoot,'scale(2)','should handle the root element selector changing after init','should not be able to drag the element if dragging is disabled','cdk-drag-disabled','should enable native drag interactions if dragging is disabled',touchAction,webkitUserDrag,'should enable native drag interactions if not dragging','should disable native drag interactions if dragging','should re-enable drag interactions once dragging is over','should not stop propagation for the drag sequence start event by default','should not throw if destroyed before the first change detection run','should enable native drag interactions on the drag item when there is a handle',StandaloneDraggableWithHandle,'should disable native drag interactions on the drag handle',handleElement,'should enable native drag interactions on the drag handle if dragging is disabled',draggingDisabled,'should enable native drag interactions on the drag handle if dragging is disabled ','on init','should toggle native drag interactions based on whether the handle is disabled',handleInstance,'should be able to reset a freely-dragged item to its initial position','should preserve initial transform after resetting',"'translate3d(50px, 100px, 0px) scale(2)'",'should start dragging an item from its initial position after a reset',"'translate3d(25px, 50px, 0px)'",'should not dispatch multiple events for a mouse event right after a touch event','should round the transform value',13.37,"'translate3d(13px, 37px, 0px)'",'should allow for dragging to be constrained to an element',boundary,'.wrapper',"'translate3d(100px, 100px, 0px)'",'should be able to pass in a DOM node as the boundary','should adjust the x offset if the boundary becomes narrower after a viewport resize','should keep the old position if the boundary is invisible after a resize','should handle the element and boundary dimensions changing between drag sequences',"'translate3d(150px, 150px, 0px)'",'should adjust the y offset if the boundary becomes shorter after a viewport resize',"'translate3d(100px, 50px, 0px)'",'should reset the x offset if the boundary becomes narrower than the element ','after a resize','should reset the y offset if the boundary becomes shorter than the element after a resize',"'translate3d(100px, 0px, 0px)'",'should allow for the position constrain logic to be customized','constrain position spy',Point,constrainPosition,DragRef,"'translate3d(50px, 50px, 0px)'",'should throw if drag item is attached to an ng-container',DraggableOnNgContainer,/^cdkDrag must be attached to an element node/,'should cancel drag if the mouse moves before the delay is elapsed','now',currentTime,dragStartDelay,'Expected element not to be moved by default.',750,'Expected element not to be moved if the mouse moved before the delay.','should enable native drag interactions if mouse moves before the delay','should allow dragging after the drag start delay is elapsed','Expected element to be dragged after all the time has passed.','should not prevent the default touch action before the delay has elapsed','should handle the drag delay as a string','500','should be able to configure the drag start delay based on the event type',mouse,'Expected element not to be moved via touch because it has a delay.','Expected element to be moved via mouse because it has no delay.','should be able to get the current position',getFreeDragPosition,'should be able to set the current position programmatically',setFreeDragPosition,'should be able to set the current position',freeDragPosition,'should be able to get the up-to-date position as the user is dragging','should react to changes in the free drag position',"'translate3d(100px, 200px, 0px)'",'should be able to continue dragging after the current position was set','should include the dragged distance as the user is dragging','moved spy','should be able to configure the drag input defaults through a provider',DragDropConfig,previewClass,'custom-preview-class',boundaryElement,'.boundary','.root',previewContainer,PlainStandaloneDraggable,CDK_DRAG_CONFIG,'should not throw if touches and changedTouches are empty',startDraggingViaTouch,continueDraggingViaTouch,'should update the free drag position if the page is scrolled',"'translate3d(50px, 600px, 0px)'",'should update the free drag position if the user moves their pointer after the page ','is scrolled',"'translate3d(50px, 700px, 0px)'",'draggable with a handle','should not be able to drag the entire element if it has a handle','should be able to drag an element using its handle',handle,'should not be able to drag the element if the handle is disabled','should not be able to drag the element if the handle is disabled before init',StandaloneDraggableWithPreDisabledHandle,'should not be able to drag using the handle if the element is disabled','should be able to use a handle that was added after init',StandaloneDraggableWithDelayedHandle,showHandle,'should be able to use more than one handle to drag the element',StandaloneDraggableWithMultipleHandles,handles,'should be able to drag with a handle that is not a direct descendant',StandaloneDraggableWithIndirectHandle,'Expected not to be able to drag the element by itself.','Expected to drag the element by its handle.','should disable the tap highlight while dragging via the handle','webkitTapHighlightColor',webkitTapHighlightColor,'should preserve any existing `webkitTapHighlightColor`','should throw if drag handle is attached to an ng-container',DragHandleOnNgContainer,/^cdkDragHandle must be attached to an element node/,'should be able to drag an element using a handle with a shadow DOM child',StandaloneDraggableWithShadowInsideHandle,ShadowWrapper,handleChild,"'should prevent default dragStart on handle, not on entire draggable'",draggableEvent,handleEvent,'in a drop container','should be able to attach data to the drop container',DraggableInDropZone,dropInstance,'should register an item with the drop container','addItem','Extra',ITEM_HEIGHT,addItem,'should remove an item from the drop container','removeItem',removeItem,'should return the items sorted by their position in the DOM','Extra 0','Extra 1',getSortedItems,'should sync the drop list inputs with the drop list ref',dropListRef,_dropListRef,beforeStarted,'should be able to attach data to a drag item',dragItems,'should be able to overwrite the drop zone id',dropZoneId,'custom-id',drop,'should toggle a class when the user starts dragging an item',dropZone,'cdk-drop-list-dragging','cdk-drop-dragging','should toggle the drop dragging classes if there is nothing to trigger change detection',DraggableInDropZoneWithoutEvents,'should toggle a class when the user starts dragging an item with OnPush change detection',DraggableInOnPushDropZone,'should not toggle dragging class if the element was not dragged more than the threshold','should dispatch the `dropped` event when an item has been dropped',thirdItemRect,droppedSpy,previousIndex,currentIndex,previousContainer,isPointerOverContainer,'should expose whether an item was dropped over a container',CdkDragDrop,'should expose the drag distance when an item is dropped','should expose whether an item was dropped outside of a container',containerRect,'should dispatch the `sorted` event as an item is being sorted',draggedItem,elementRect,sortedSpy,'should not dispatch the `sorted` event when an item is dragged inside ','a single-item list','should not move items in a vertical list if the pointer is too far away','should not move the original element from its initial DOM position',dragElements,'.cdk-drag','should dispatch the `dropped` event in a horizontal drop zone',DraggableInHorizontalDropZone,'should dispatch the correct `dropped` event in RTL horizontal drop zone',observableOf,'should not move items in a horizontal list if pointer is too far away','should calculate the index if the list is scrolled while dragging',DraggableInScrollableVerticalDropZone,'should calculate the index if the list is scrolled while dragging inside the shadow DOM','should calculate the index if the viewport is scrolled while dragging',`Extra item ${,'should create a preview element while the item is dragged',itemRect,preview,'.cdk-drag-preview',previewRect,zeroPxRegex,/^0(px)?$/,'Expected element to be moved out into the body','Expected element to be removed from layout','fixed',getPropertyPriority,'Expect element position to be !important','important','-999em','Expected element to be invisible','Expected preview to be in the DOM','Expected preview content to match element','Expected preview element to inherit the directionality.','Expected preview width to match element','Expected preview height to match element',pointerEvents,'Expected pointer events to be disabled on the preview','Expected preview to have a high default zIndex.','1000','Expected the preview margin to be reset.','Expected element to be moved back into its old parent','Expected element to be within the layout','Expected element to be visible','Expected preview to be removed from the DOM','should be able to configure the preview z-index',dragStartThreshold,'3000','should create the preview inside the fullscreen element when in fullscreen mode',fullscreenElement,ELEMENT_NODE,Node,EventListenerOrEventListenerObject,DOCUMENT,'should be able to constrain the preview position',boundarySelector,'.cdk-drop-list',listRect,'should update the boundary if the page is scrolled while dragging','should update the boundary if a parent is scrolled while dragging',DraggableInScrollableParentContainer,'.scroll-container','should update the boundary if a parent is scrolled while dragging inside the shadow DOM','should clear the id from the preview','should clone the content of descendant canvas elements',DraggableWithCanvasInDropZone,sourceCanvas,'canvas',HTMLCanvasElement,getContext,'2d',getImageData,channel,'Expected source canvas to have data.',previewCanvas,toDataURL,'Expected cloned canvas to have the same content as the source.','should not throw when cloning an invalid canvas',DraggableWithInvalidCanvasInDropZone,'.cdk-drag-preview canvas','should clone the content of descendant input elements',DraggableWithInputsInDropZone,sourceInput,sourceTextarea,sourceSelect,previewInput,previewTextarea,previewSelect,'should preserve checked state for radio inputs in the content',DraggableWithRadioInputsInDropZone,sourceRadioInput,previewRadioInput,'Expected cloned radio input in preview has the same state as original radio input','.cdk-drag-placeholder',placeholderRadioInput,'Expected cloned radio input in placeholder has the same state as original radio input','Expected original radio input has preserved its original checked state','should clear the ids from descendants of the preview',extraChild,'child-id','preview-child','.preview-child',"'[id=""child-id""]'",'should not create a preview if the element was not dragged far enough','should pass the proper direction to the preview in rtl','should remove the preview if its `transitionend` event timed out','500ms','Expected preview to be in the DOM mid-way through the transition','Expected preview to be removed from the DOM if the transition timed out','should be able to set a single class on a preview','should be able to set multiple classes on a preview','custom-class-1','should emit the released event as soon as the item is released','ended spy','released spy',endedSubscription,ended,releasedSubscription,released,'should reset immediately when failed drag happens after a successful one',itemInstance,'dropped spy',dropped,'should not wait for transition that are not on the `transform` property','opacity 500ms ease','Expected preview to be removed from the DOM immediately','should pick out the `transform` duration if multiple properties are being transitioned',"'opacity 500ms ease, transform 1000ms ease'",'Expected preview to be in the DOM at the end of the opacity transition','Expected preview to be removed from the DOM at the end of the ','transform transition','should create a placeholder element while the item is dragged','Expected placeholder to be in the DOM','Expected placeholder to be inserted into the same parent','Expected placeholder content to match element','Expected pointer events to be disabled on placeholder','Expected placeholder to be removed from the DOM','should insert the preview into the `body` if previewContainer is set to `global`','global','should insert the preview into the parent node if previewContainer is set to `parent`','.drop-list',"'should insert the preview into a particular element, if specified'",alternatePreviewContainer,'should remove the id from the placeholder','should clear the ids from descendants of the placeholder','placeholder-child','.placeholder-child','should not create placeholder if the element was not dragged far enough','should move the placeholder as an item is being sorted down',assertDownwardSorting,'should move the placeholder as an item is being sorted down on a scrolled page','should move the placeholder as an item is being sorted up',assertUpwardSorting,'should move the placeholder as an item is being sorted up on a scrolled page','should move the placeholder as an item is being sorted to the right',getElementIndexByPosition,'should move the placeholder as an item is being sorted to the left',"'should lay out the elements correctly, if an element skips multiple positions when '",'sorting vertically',getElementSibligsByPosition,"'should lay out the elements correctly, when swapping down with a taller element'","`translate3d(0px, ${","}px, 0px)`","'should lay out the elements correctly, when swapping up with a taller element'","'should lay out elements correctly, when swapping an item with margin'",'sorting horizontally',"'should lay out the elements correctly, when swapping to the right with a wider element'",ITEM_WIDTH,`translate3d(${,"}px, 0px, 0px)`","'should lay out the elements correctly, when swapping left with a wider element'","'should lay out elements correctly, when horizontally swapping an item with margin'",'should not swap position for tiny pointer movements',pointerTop,'Expected position to swap.','Expected positions not to swap.','should swap position for pointer movements in the opposite direction','Expected positions to swap again.',"'it should allow item swaps in the same drag direction, if the pointer did not '",'overlap with the sibling item after the previous swap','should clean up the preview element if the item is destroyed mid-drag','Expected drag item to be in the DOM','Expected drag item to be removed from the DOM','should be able to customize the preview element',DraggableInDropZoneWithCustomPreview,'custom-preview','Custom preview','should handle the custom preview being removed',renderCustomPreview,'should be able to constrain the position of a custom preview','should be able to constrain the preview position with a custom function','should revert the element back to its parent after dragging with a custom ','preview has stopped',dragContainer,'Expected item to be in container.','Expected item to be returned to container.','should position custom previews next to the pointer','should keep the preview next to the trigger if the page was scrolled',"'translate3d(55px, 555px, 0px)'",'should lock position inside a drop container along the x axis','should lock position inside a drop container along the y axis','should inherit the position locking from the drop container','should be able to set a class on a custom preview','should be able to apply the size of the dragged element to a custom preview',matchPreviewSize,'should preserve the pickup position if the custom preview inherits the size of the ','dragged element',"'translate3d(8px, 33px, 0px)'",'should not have the size of the inserted preview affect the size applied via matchSize',DraggableInHorizontalFlexDropZoneWithMatchSizePreview,'should not throw when custom preview only has text',DraggableInDropZoneWithCustomTextOnlyPreview,'Hello One','should handle custom preview with multiple root nodes',DraggableInDropZoneWithCustomMultiNodePreview,'HelloOne','should be able to customize the placeholder',DraggableInDropZoneWithCustomPlaceholder,'custom-placeholder','Custom placeholder','should handle the custom placeholder being removed',renderPlaceholder,'should measure the custom placeholder after the first change detection',extraPlaceholderClass,'tall-placeholder',thirdItem,'should not throw when custom placeholder only has text',DraggableInDropZoneWithCustomTextOnlyPlaceholder,'should handle custom placeholder with multiple root nodes',DraggableInDropZoneWithCustomMultiNodePlaceholder,'should clear the `transform` value from siblings when item is dropped`','should not move the item if the list is disabled',dropElement,'cdk-drop-list-disabled','should not throw if the `touches` array is empty',endEvent,'should not move the item if the group is disabled',ConnectedDropZonesViaGroupDirective,groupedDragItems,groupDisabled,'should not sort an item if sorting the list is disabled',sortingDisabled,targetX,targetY,'Expected placeholder to stay in place.','should not throw if an item is removed after dragging has started',lastItemRect,'should not be able to start a drag sequence while another one is still active',otherItem,'.cdk-drag-dragging','Expected one item to be dragged initially.','Expected only one item to continue to be dragged.','should should be able to disable auto-scrolling',autoScrollDisabled,tickAnimationFrames,'should auto-scroll down if the user holds their pointer at bottom edge','should auto-scroll up if the user holds their pointer at top edge',initialScrollDistance,'should auto-scroll right if the user holds their pointer at right edge',DraggableInScrollableHorizontalDropZone,'should auto-scroll left if the user holds their pointer at left edge','should be able to start auto scrolling with a drag boundary','should stop scrolling if the user moves their pointer away',previousScrollTop,'should stop scrolling if the user stops dragging','should auto-scroll viewport down if the pointer is close to bottom edge',viewportRuler,ViewportRuler,getViewportSize,getViewportScrollPosition,'should auto-scroll viewport up if the pointer is close to top edge','should auto-scroll viewport right if the pointer is near right edge','should auto-scroll viewport left if the pointer is close to left edge',"'should auto-scroll the list, not the viewport, when the pointer is over the edge of '",'both the list and the viewport',"'should auto-scroll the viewport, when the pointer is over the edge of both the list '","'and the viewport, if the list cannot be scrolled in that direction'",'should be able to auto-scroll a parent container','should be able to configure the auto-scroll speed',autoScrollStep,'should pick up descendants inside of containers',DraggableInDropZoneWithContainer,'should not pick up items from descendant drop lists',NestedDropZones,innerList,outerList,innerClasses,outerClasses,draggingClass,'Expected inner list to start off as not dragging.','Expected outer list to start off as not dragging.','Expected inner list to be dragging.','Expected outer list to not be dragging.','should be able to re-enable a disabled drop list',tryDrag,'should be able to configure the drop input defaults through a provider',listAutoScrollDisabled,listOrientation,PlainStandaloneDropList,dropList,'should disable scroll snapping while the user is dragging','scrollSnapType','msScrollSnapType',scrollSnapType,msScrollSnapType,'should restore the previous inline scroll snap value','should be able to start dragging again if the dragged item is destroyed','.cdk-drop-list-dragging','Expected to drag initially.','Five','Six','Expected not to be dragging after item is destroyed.','Expected to be able to start a new drag sequence.','should make the placeholder available in the start event',CdkDragStart,getPlaceholderElement,'should not move item into position not allowed by the sort predicate','sort predicate spy',sortPredicate,'should not call the sort predicate for the same index','should throw if drop list is attached to an ng-container',DropListOnNgContainer,/^cdkDropList must be attached to an element node/,'should preserve the original `transform` of items in the list','rotate(180deg)',hasInitialTransform,'Expected items to preserve transform when dragging starts.','Expected preview to preserve transform when dragging starts.','Expected placeholder to preserve transform when dragging starts.','Expected items to preserve transform while dragging.','Expected preview to preserve transform while dragging.','Expected placeholder to preserve transform while dragging.','Expected items to preserve transform when dragging stops.','Expected preview to preserve transform when dragging stops.','Expected placeholder to preserve transform when dragging stops.','should sort correctly if the <html> node has been offset','in a connected drop container','should dispatch the `dropped` event when an item has been dropped into a new container',ConnectedDropZones,dropInstances,'should be able to move the element over a new container and return it',dropZones,initialRect,'Expected placeholder to be inside the first container.','Expected placeholder to be inside second container.','Expected placeholder to be back inside first container.','should be able to move the element over a new container and return it to the initial ',"'one, even if it no longer matches the enterPredicate'",enterPredicate,'should transfer the DOM element from one drop zone to another','should not be able to transfer an item into a container that is not in `connectedTo`',connectedTo,'should not be able to transfer an item that does not match the `enterPredicate`','should call the `enterPredicate` with the item and the container it is entering','enterPredicate spy',dragItem,'should be able to start dragging after an item has been transferred','should be able to return the last item inside its initial container','things','should update drop zone after element has entered',initialTargetZoneRect,targetElement,previousSibling,'Expected placeholder to be inside second container before last item.','Expected target rect to be outside of initial target zone rect','should enter as first child if entering from top',paddingTop,'Expected placeholder to be first child inside second container.','should enter as last child if entering from top in reversed container',targetDropZoneStyle,flexDirection,'column-reverse','Expected placeholder to be last child inside second container.','should not throw when entering from the top with an intermediate sibling present',ConnectedDropZonesWithIntermediateSibling,'should assign a default id on each drop zone','should be able to connect two drop zones by id','todo','done','should be able to connect two drop zones using the drop list group','should be able to pass a single id to `connectedTo`',"'should return DOM element to its initial container after it is dropped, in a container '",'with one draggable item',ConnectedDropZonesWithSingleItems,dropContainers,'Expected DOM element to be in first container',dropContainer,'Expected CdkDrag to be in first container in memory','Expected DOM element to be returned to first container','Expected CdkDrag to be returned to first container in memory',"'should be able to return an element to its initial container in the same sequence, '",'even if it is not connected to the current container','should not add child drop lists to the same group as their parents',NestedDropListGroups,group,_items,listOne,listTwo,'should not be able to drop an element into a container that is under another element',coverElement,targetGroupRect,extendStyles,'should set a class when a container can receive an item','cdk-drop-list-receiving','Expected neither of the containers to have the class.','Expected source container not to have the receiving class.','Expected target container to have the receiving class.','should toggle the `receiving` class when the item enters a new list','Expected old container to have the receiving class after exiting.','Expected new container not to have the receiving class after exiting.','should not set the receiving class if the item does not match the enter predicate',"'should set the receiving class on the source container, even if the enter predicate '",'does not match','should be able to move the item over an intermediate container before ','dropping it into the final one',intermediateRect,finalRect,'Expected placeholder to be inside third container.','should not be able to move an item into a drop container that the initial container is ','not connected to by passing it over an intermediate one that is','Expected placeholder to remain in the second container.',"'should return the item to its initial position, if sorting in the source container '",'was disabled','Expected placeholder to be at item index.','Expected placeholder to be at the target index.',firstInitialSiblingRect,'Expected placeholder to be back at the initial index.',"'should enter an item into the correct index when returning to the initial container, if '",'sorting is enabled',nextTargetRect,'Expected placeholder to be at the index at which it entered.','should return the last item to initial position when dragging back into a container with disabled sorting',lastIndex,'should toggle a class when dragging an item inside a wrapper component component ','with OnPush change detection',ConnectedWrappedDropZones,WrappedDropContainerComponent,startZone,targetZone,'Expected start not to have dragging class on init.','Expected target not to have dragging class on init.','Expected start to have dragging class after dragging has started.','Expected target not to have dragging class after dragging has started.','Expected start not to have dragging class once item has been moved over.','Expected target to have dragging class once item has been moved over.','should dispatch an event when an item enters a new container',containerEnterEvent,enteredSpy,itemEnterEvent,itemEnteredSpy,expectedEvent,CdkDragEnter,'should not throw if dragging was interrupted as a result of the entered event','should be able to drop into a new container after scrolling into view',4000,'should be able to drop into a new container inside the Shadow DOM','should be able to drop into a new container inside the Shadow DOM and ngIf',ConnectedDropZonesInsideShadowRootWithNgIf,'should not throw if its next sibling is removed while dragging',extraSibling,insertBefore,'should warn when the connected container ID does not exist',`CdkDropList could not find connected drop `,"`list with id ""does-not-exist""`",'should not be able to start a drag sequence while a connected container is active',itemInOtherList,'should insert the preview inside the shadow root by default','with nested drags','should not move draggable container when dragging child (multitouch)',NestedDragsComponent,stopDraggingViaTouch,containerDragStartedCount,containerDragStartedSpy,containerDragMovedCount,containerDragMovedSpy,containerDragReleasedCount,containerDragReleasedSpy,itemDragStartedSpy,itemDragMovedSpy,itemDragReleasedSpy,'should stop event propagation when dragging a nested item','should stop event propagation when dragging item nested via ng-template',NestedDragsThroughTemplate,"`
    <div class=""wrapper"" style=""width: 200px; height: 200px; background: green;"">
      <div
        cdkDrag
        [cdkDragBoundary]=""boundary""
        [cdkDragStartDelay]=""dragStartDelay""
        [cdkDragConstrainPosition]=""constrainPosition""
        [cdkDragFreeDragPosition]=""freeDragPosition""
        (cdkDragStarted)=""startedSpy($event)""
        (cdkDragReleased)=""releasedSpy($event)""
        (cdkDragEnded)=""endedSpy($event)""
        #dragElement
        style=""width: 100px; height: 100px; background: red;""></div>
    </div>
  `",'dragElement',CdkDrag,'started spy',point,"`
    <div cdkDrag #dragElement style=""width: 100px; height: 100px; background: red;""></div>
  `","`
    <div #dragElement cdkDrag [cdkDragDisabled]=""draggingDisabled""
      style=""width: 100px; height: 100px; background: red; position: relative"">
      <div #handleElement cdkDragHandle style=""width: 10px; height: 10px; background: green;""></div>
    </div>
  `",'handleElement',CdkDragHandle,"`
    <div #dragElement cdkDrag
      style=""width: 100px; height: 100px; background: red; position: relative"">
      <div
        #handleElement
        cdkDragHandle
        [cdkDragHandleDisabled]=""disableHandle""
        style=""width: 10px; height: 10px; background: green;""></div>
    </div>
  `",disableHandle,"`
    <div #dragElement cdkDrag
      style=""width: 100px; height: 100px; background: red; position: relative"">
      <div
        #handleElement
        *ngIf=""showHandle""
        cdkDragHandle style=""width: 10px; height: 10px; background: green;""></div>
    </div>
  `","`
    <div #dragElement cdkDrag
      style=""width: 100px; height: 100px; background: red; position: relative"">

      <passthrough-component>
        <div
          #handleElement
          cdkDragHandle
          style=""width: 10px; height: 10px; background: green;""></div>
      </passthrough-component>
    </div>
  `",'shadow-wrapper','<ng-content></ng-content>',"`
    <div #dragElement cdkDrag style=""width: 100px; height: 100px; background: red;"">
      <div cdkDragHandle style=""width: 10px; height: 10px;"">
        <shadow-wrapper>
          <div #handleChild style=""width: 10px; height: 10px; background: green;""></div>
        </shadow-wrapper>
      </div>
    </div>
  `",'handleChild',"`
    .cdk-drag-handle {
      position: absolute;
      top: 0;
      background: green;
      width: 10px;
      height: 10px;
    }
  `","`
    <div #dragElement cdkDrag
      style=""width: 100px; height: 100px; background: red; position: relative"">
      <div cdkDragHandle style=""left: 0;""></div>
      <div cdkDragHandle style=""right: 0;""></div>
    </div>
  `",DROP_ZONE_FIXTURE_TEMPLATE,"`
  <div
    cdkDropList
    class=""drop-list scroll-container""
    style=""width: 100px; background: pink;""
    [id]=""dropZoneId""
    [cdkDropListData]=""items""
    (cdkDropListSorted)=""sortedSpy($event)""
    (cdkDropListDropped)=""droppedSpy($event)"">
    <div
      *ngFor=""let item of items""
      cdkDrag
      [cdkDragData]=""item""
      [cdkDragBoundary]=""boundarySelector""
      [cdkDragPreviewClass]=""previewClass""
      [cdkDragPreviewContainer]=""previewContainer""
      [style.height.px]=""item.height""
      [style.margin-bottom.px]=""item.margin""
      (cdkDragStarted)=""startedSpy($event)""
      style=""width: 100%; background: red;"">{{item.value}}</div>
  </div>

  <div #alternatePreviewContainer></div>
`",CdkDropList,'alternatePreviewContainer','sorted spy',moveItemInArray,PreviewContainer,protected,"`
    .drop-list {
      max-height: 200px;
      overflow: auto;
      margin: 10vw 0 0 10vw;
    }
  `","`
    <div
      #scrollContainer
      class=""scroll-container""
      cdkScrollable>${","`
    .scroll-container {
      max-height: 200px;
      overflow: auto;
      margin: 10vw 0 0 10vw;
    }
  `",'scrollContainer',override,"`
    <div
      cdkDropList
      class=""drop-list scroll-container""
      style=""width: 100px; background: pink;""
      [id]=""dropZoneId""
      [cdkDropListData]=""items""
      (cdkDropListSorted)=""sortedSpy($event)""
      (cdkDropListDropped)=""droppedSpy($event)"">
        <ng-container [ngSwitch]=""true"">
          <div
            *ngFor=""let item of items""
            cdkDrag
            [cdkDragData]=""item""
            [cdkDragBoundary]=""boundarySelector""
            [style.height.px]=""item.height""
            [style.margin-bottom.px]=""item.margin""
            style=""width: 100%; background: red;"">{{item.value}}</div>
        </ng-container>
    </div>
  `",HORIZONTAL_FIXTURE_STYLES,"`
  .cdk-drop-list {
    display: block;
    width: 500px;
    background: pink;
    font-size: 0;
  }

  .cdk-drag {
    height: ${","}px;
    background: red;
    display: inline-block;
  }
`",HORIZONTAL_FIXTURE_TEMPLATE,"`
  <div
    class=""drop-list scroll-container""
    cdkDropList
    cdkDropListOrientation=""horizontal""
    [cdkDropListData]=""items""
    (cdkDropListDropped)=""droppedSpy($event)"">
    <div
      *ngFor=""let item of items""
      [style.width.px]=""item.width""
      [style.margin-right.px]=""item.margin""
      [cdkDragBoundary]=""boundarySelector""
      cdkDrag>{{item.value}}</div>
  </div>
`","`
    .drop-list {
      max-width: 300px;
      margin: 10vw 0 0 10vw;
      overflow: auto;
      white-space: nowrap;
    }
  `","`
    <div cdkDropList style=""width: 100px; background: pink;"">
      <div
        *ngFor=""let item of items""
        cdkDrag
        [cdkDragConstrainPosition]=""constrainPosition""
        [cdkDragBoundary]=""boundarySelector""
        [cdkDragPreviewClass]=""previewClass""
        style=""width: 100%; height: ${","}px; background: red;"">
          {{item}}

          <ng-container *ngIf=""renderCustomPreview"">
            <ng-template cdkDragPreview [matchSize]=""matchPreviewSize"">
              <div
                class=""custom-preview""
                style=""width: 50px; height: 50px; background: purple;"">Custom preview</div>
            </ng-template>
          </ng-container>
      </div>
    </div>
  `","`
    <div cdkDropList style=""width: 100px; background: pink;"">
      <div
        *ngFor=""let item of items""
        cdkDrag
        [cdkDragConstrainPosition]=""constrainPosition""
        [cdkDragBoundary]=""boundarySelector""
        style=""width: 100%; height: ${","}px; background: red;"">
          {{item}}
          <ng-template cdkDragPreview>Hello {{item}}</ng-template>
      </div>
    </div>
  `","`
    <div cdkDropList style=""width: 100px; background: pink;"">
      <div
        *ngFor=""let item of items""
        cdkDrag
        style=""width: 100%; height: ${","}px; background: red;"">
          {{item}}
          <ng-template cdkDragPreview>
            <span>Hello</span>
            <span>{{item}}</span>
          </ng-template>
      </div>
    </div>
  `","`
    <div
      cdkDropList
      (cdkDropListDropped)=""droppedSpy($event)""
      style=""width: 100px; background: pink;"">
      <div *ngFor=""let item of items"" cdkDrag
        style=""width: 100%; height: ${","}px; background: red;"">
          {{item}}
          <ng-container *ngIf=""renderPlaceholder"">
            <div
              class=""custom-placeholder""
              [ngClass]=""extraPlaceholderClass""
              *cdkDragPlaceholder>Custom placeholder</div>
          </ng-container>
      </div>
    </div>
  `","`
    .tall-placeholder {
      height: ${","}px;
    }
  `","`
    <div cdkDropList style=""width: 100px; background: pink;"">
      <div *ngFor=""let item of items"" cdkDrag
        style=""width: 100%; height: ${","}px; background: red;"">
          {{item}}
          <ng-template cdkDragPlaceholder>Hello {{item}}</ng-template>
      </div>
    </div>
  `","}px; background: red;"">
          {{item}}
          <ng-template cdkDragPlaceholder>
            <span>Hello</span>
            <span>{{item}}</span>
          </ng-template>
      </div>
    </div>
  `",CONNECTED_DROP_ZONES_STYLES,"`
  .cdk-drop-list {
    display: block;
    width: 100px;
    min-height: ${","}px;
    background: hotpink;
  }

  .cdk-drag {
    display: block;
    height: ${","}px;
    background: red;
  }
`",CONNECTED_DROP_ZONES_TEMPLATE,"`
  <div
    cdkDropList
    #todoZone=""cdkDropList""
    [cdkDropListData]=""todo""
    [cdkDropListConnectedTo]=""[doneZone]""
    (cdkDropListDropped)=""droppedSpy($event)""
    (cdkDropListEntered)=""enteredSpy($event)"">
    <div
      [cdkDragData]=""item""
      (cdkDragEntered)=""itemEnteredSpy($event)""
      *ngFor=""let item of todo""
      cdkDrag>{{item}}</div>
  </div>

  <div
    cdkDropList
    #doneZone=""cdkDropList""
    [cdkDropListData]=""done""
    [cdkDropListConnectedTo]=""[todoZone]""
    (cdkDropListDropped)=""droppedSpy($event)""
    (cdkDropListEntered)=""enteredSpy($event)"">
    <div
      [cdkDragData]=""item""
      (cdkDragEntered)=""itemEnteredSpy($event)""
      *ngFor=""let item of done""
      cdkDrag>{{item}}</div>
  </div>

  <div
    cdkDropList
    #extraZone=""cdkDropList""
    [cdkDropListData]=""extra""
    (cdkDropListDropped)=""droppedSpy($event)""
    (cdkDropListEntered)=""enteredSpy($event)"">
    <div
      [cdkDragData]=""item""
      (cdkDragEntered)=""itemEnteredSpy($event)""
      *ngFor=""let item of extra""
      cdkDrag>{{item}}</div>
  </div>
`",rawDragItems,'Four','entered spy','item entered spy',"`<div *ngIf=""true"">${","`
    .cdk-drop-list {
      display: block;
      width: 100px;
      min-height: ${","}px;
      background: hotpink;
    }

    .cdk-drag {
      display: block;
      height: ${","}px;
      background: red;
    }
  `","`
    <div cdkDropListGroup [cdkDropListGroupDisabled]=""groupDisabled"">
      <div
        cdkDropList
        [cdkDropListData]=""todo""
        (cdkDropListDropped)=""droppedSpy($event)"">
        <div [cdkDragData]=""item"" *ngFor=""let item of todo"" cdkDrag>{{item}}</div>
      </div>

      <div
        cdkDropList
        [cdkDropListData]=""done""
        (cdkDropListDropped)=""droppedSpy($event)"">
        <div [cdkDragData]=""item"" *ngFor=""let item of done"" cdkDrag>{{item}}</div>
      </div>
    </div>
  `","`
    <div #dragRoot class=""alternate-root"" style=""width: 200px; height: 200px; background: hotpink"">
      <div
        cdkDrag
        [cdkDragRootElement]=""rootElementSelector""
        #dragElement
        style=""width: 100px; height: 100px; background: red;""></div>
    </div>
  `",'dragRoot',"`
    <div
      cdkDropList
      #todoZone=""cdkDropList""
      [cdkDropListConnectedTo]=""[doneZone]""
      (cdkDropListDropped)=""droppedSpy($event)"">
      <div cdkDrag>One</div>
    </div>

    <div
      cdkDropList
      #doneZone=""cdkDropList""
      [cdkDropListConnectedTo]=""[todoZone]""
      (cdkDropListDropped)=""droppedSpy($event)"">
      <div cdkDrag>Two</div>
    </div>
  `","`
    <div cdkDropListGroup #group=""cdkDropListGroup"">
      <div cdkDropList #listOne=""cdkDropList"">
        <div cdkDropList #listThree=""cdkDropList""></div>
        <div cdkDropList #listFour=""cdkDropList""></div>
      </div>

      <div cdkDropList #listTwo=""cdkDropList""></div>
    </div>
  `",'group',CdkDropListGroup,'listOne','listTwo',"`
    <ng-container cdkDrag></ng-container>
  `","`
    <div cdkDrag>
      <ng-container cdkDragHandle></ng-container>
    </div>
  `","`
    <ng-container cdkDropList></ng-container>
  `","`
    <div cdkDropList style=""width: 100px; background: pink;"">
      <div *ngFor=""let item of items""
        cdkDrag
        [style.height.px]=""item.height""
        style=""width: 100%; background: red;"">{{item.value}}</div>
    </div>
  `","`
    <div cdkDropListGroup>
      <wrapped-drop-container [items]=""todo""></wrapped-drop-container>
      <wrapped-drop-container [items]=""done""></wrapped-drop-container>
    </div>
  `","`
    <div
      class=""drop-list scroll-container""
      cdkDropList
      style=""width: 100px; background: pink;""
      [id]=""dropZoneId""
      [cdkDropListData]=""items""
      (cdkDropListSorted)=""sortedSpy($event)""
      (cdkDropListDropped)=""droppedSpy($event)"">
      <div
        *ngFor=""let item of items""
        cdkDrag
        [cdkDragData]=""item""
        [style.height.px]=""item.height""
        [style.margin-bottom.px]=""item.margin""
        style=""width: 100%; background: red;"">
          {{item.value}}
          <canvas width=""100px"" height=""100px""></canvas>
        </div>
    </div>
  `",canvases,beginPath,arc,"`
    <div
      class=""drop-list scroll-container""
      cdkDropList
      style=""width: 100px; background: pink;""
      [id]=""dropZoneId""
      [cdkDropListData]=""items""
      (cdkDropListSorted)=""sortedSpy($event)""
      (cdkDropListDropped)=""droppedSpy($event)"">
      <div
        *ngFor=""let item of items""
        cdkDrag
        [cdkDragData]=""item""
        [style.height.px]=""item.height""
        [style.margin-bottom.px]=""item.margin""
        style=""width: 100%; background: red;"">
          {{item.value}}
          <canvas width=""0"" height=""0""></canvas>
        </div>
    </div>
  `",'passthrough-component',PassthroughComponent,'wrapped-drop-container',"`
    <div cdkDropList [cdkDropListData]=""items"">
      <div *ngFor=""let item of items"" cdkDrag>{{item}}</div>
    </div>
  `","`
    :host {
      height: 400px;
      width: 400px;
      position: absolute;
    }
    .container {
      height: 200px;
      width: 200px;
      position: absolute;
    }
    .item {
      height: 50px;
      width: 50px;
      position: absolute;
    }
  `","`
    <div
      cdkDrag
      #container
      class=""container""
      (cdkDragStarted)=""containerDragStartedSpy($event)""
      (cdkDragMoved)=""containerDragMovedSpy($event)""
      (cdkDragReleased)=""containerDragReleasedSpy($event)"">
      <div
        cdkDrag
        class=""item""
        #item
        (cdkDragStarted)=""itemDragStartedSpy($event)""
        (cdkDragMoved)=""itemDragMovedSpy($event)""
        (cdkDragReleased)=""itemDragReleasedSpy($event)"">
      </div>
    </div>`",'container drag started spy','container drag moved spy','container drag released spy','item drag started spy','item drag moved spy','item drag released spy',"`
    <div
      cdkDrag
      #container
      class=""container""
      (cdkDragStarted)=""containerDragStartedSpy($event)""
      (cdkDragMoved)=""containerDragMovedSpy($event)""
      (cdkDragReleased)=""containerDragReleasedSpy($event)"">
      <ng-container [ngTemplateOutlet]=""itemTemplate""></ng-container>
    </div>

    <ng-template #itemTemplate>
      <div
        cdkDrag
        class=""item""
        #item
        (cdkDragStarted)=""itemDragStartedSpy($event)""
        (cdkDragMoved)=""itemDragMovedSpy($event)""
        (cdkDragReleased)=""itemDragReleasedSpy($event)"">
      </div>
    </ng-template>
  `","`
    .drop-list {
      width: 100px;
      background: pink;
    }
  `","`
    <div cdkDropList class=""drop-list"" #outerList>
      <div cdkDropList class=""drop-list"" #innerList>
        <div
          *ngFor=""let item of items""
          cdkDrag
          style=""width: 100%; background: red; height: ${","}px;"">{{item}}</div>
      </div>
    </div>
  `",'outerList','innerList',`<div cdkDrag></div>`,`<div cdkDropList></div>`,"`
    .list {
      display: flex;
      width: 100px;
      flex-direction: row;
    }

    .item {
      display: flex;
      flex-grow: 1;
      flex-basis: 0;
      min-height: 50px;
    }
  `","`
    <div class=""list"" cdkDropList cdkDropListOrientation=""horizontal"">
      <div *ngFor=""let item of items"" class=""item"" cdkDrag>
        {{item}}

        <ng-template cdkDragPreview [matchSize]=""true"">
          <div class=""item"">{{item}}</div>
        </ng-template>
      </div>
    </div>
  `","`
    <div
      cdkDropList
      #todoZone=""cdkDropList""
      [cdkDropListData]=""todo""
      [cdkDropListConnectedTo]=""[doneZone]""
      (cdkDropListDropped)=""droppedSpy($event)""
      (cdkDropListEntered)=""enteredSpy($event)"">
      <div
        [cdkDragData]=""item""
        (cdkDragEntered)=""itemEnteredSpy($event)""
        *ngFor=""let item of todo""
        cdkDrag>{{item}}</div>
    </div>

    <div
      cdkDropList
      #doneZone=""cdkDropList""
      [cdkDropListData]=""done""
      [cdkDropListConnectedTo]=""[todoZone]""
      (cdkDropListDropped)=""droppedSpy($event)""
      (cdkDropListEntered)=""enteredSpy($event)"">

      <div>Hello there</div>
      <div>
        <div
          [cdkDragData]=""item""
          (cdkDragEntered)=""itemEnteredSpy($event)""
          *ngFor=""let item of done""
          cdkDrag>{{item}}</div>
      </div>
    </div>
  `","`
    <div #dragRoot class=""alternate-root"" style=""width: 200px; height: 200px; background: hotpink"">
      <div
        cdkDrag
        cdkDragRootElement="".alternate-root""
        cdkDragHandle
        #dragElement
        style=""width: 100px; height: 100px; background: red;""></div>
    </div>
  `","`
    <div
      cdkDropList
      class=""drop-list scroll-container""
      style=""width: 100px; background: pink;""
      [id]=""dropZoneId""
      [cdkDropListData]=""items""
      (cdkDropListSorted)=""sortedSpy($event)""
      (cdkDropListDropped)=""droppedSpy($event)"">
      <div
        *ngFor=""let item of items""
        cdkDrag
        [cdkDragData]=""item""
        [style.height.px]=""item.height""
        [style.margin-bottom.px]=""item.margin""
        style=""width: 100%; background: red;"">
          {{item.value}}
          <input [value]=""inputValue""/>
          <textarea [value]=""inputValue""></textarea>
          <select [value]=""inputValue"">
            <option value=""goodbye"">Goodbye</option>
            <option value=""hello"">Hello</option>
          </select>
        </div>
    </div>
  `","`
    <div
      cdkDropList
      class=""drop-list scroll-container""
      [cdkDropListData]=""items"">
      <div
        *ngFor=""let item of items""
        cdkDrag
        [cdkDragData]=""item"">
          {{item.id}}
          <input type=""radio"" name=""radio"" [checked]=""item.checked""/>
        </div>
    </div>
  `","`
    <div #dragRoot class=""alternate-root"" style=""width: 200px; height: 200px; background: hotpink"">
      <ng-container cdkDrag cdkDragRootElement="".alternate-root"">
        <div style=""width: 100px; height: 100px; background: red;""></div>
      </ng-container>
    </div>
  `",veryTallElement,'4000px',amount,16.6,'should be able to start dragging an item',DragItem,registry,isDragging,startDragging,'should be able to stop dragging an item',stopDragging,'should stop dragging an item if it is removed',removeDragItem,'should dispatch `mousemove` events after starting to drag via the mouse','pointerMove spy',pointerMove,'should dispatch `touchmove` events after starting to drag via touch','should dispatch pointer move events if event propagation is stopped','should dispatch `mouseup` events after ending the drag via the mouse','pointerUp spy',pointerUp,'should dispatch `touchend` events after ending the drag via touch','should dispatch pointer up events if event propagation is stopped','should complete the pointer event streams on destroy',pointerUpSpy,'pointerUp complete spy',pointerMoveSpy,'pointerMove complete spy',pointerUpSubscription,pointerMoveSubscription,'should not emit pointer events when dragging is over (multi touch)','should not prevent the default `touchmove` actions when nothing is being dragged','should prevent the default `touchmove` action when an item is being dragged','should prevent the default `touchmove` if the item does not consider itself as being ','dragged yet',shouldBeDragging,'should prevent the default `touchmove` if event propagation is stopped','should not prevent the default `selectstart` actions when nothing is being dragged','selectstart','should prevent the default `selectstart` action when an item is being dragged','should dispatch `scroll` events if the viewport is scrolled while dragging','scroll spy',scrolled,'should not dispatch `scroll` events when not dragging',registerDragItem,DragList,registerDropContainer,BlankComponent,'should be able to attach a DragRef to a DOM node',service,createDrag,'should be able to attach a DropListRef to a DOM node',createDropList,DropListRef,'should be able to move an item inside an array','should not do anything if the index is the same','should handle an index greater than the length','should handle an index less than zero','transferArrayItem','should be able to move an item from one array to another',transferArrayItem,'should handle an index greater than the target array length','should not do anything if the source array is empty','copyArrayItem','should be able to copy an item from one array to another',copyArrayItem,'should check whether the alt key is pressed',altEvent,hasModifierKey,'should check whether the shift key is pressed','should check whether the meta key is pressed','should check whether the ctrl key is pressed','should check if a particular modifier key is pressed',ctrlAltEvent,'should check if multiple specific modifier keys are pressed',ctrlAltShiftEvent,'retrieves the whether a query is currently matched','everything starts as true in the FakeMediaMatcher',breakpointObserver,isMatched,'reuses the same MediaQueryList for matching queries',mediaMatcher,queryCount,'query1','query2','splits combined query strings into individual matchMedia listeners',"'query1, query2'","'query2, query3'",'accepts an array of queries',queries,'1 query','2 query','red query','blue query','completes all events when the breakpoint manager is destroyed','test1','test2','emits an event on the observable when values change','(width: 999px)',queryMatchState,BreakpointState,setMatchesQuery,'emits an event on the observable with the matching state of all queries provided',queryOne,queryTwo,'(width: 700px)',breakpoints,breakpoint,'emits a true matches state when the query is matched','emits a false matches state when the query is not matched','emits one event when multiple queries change','observer','should not complete other subscribers when preceding subscriber completes',subscriptions,Subscription,emittedValues,export,FakeMediaQueryList,_listeners,mql,MediaQueryListEvent,media,setMatches,addListener,removeListener,Injectable,FakeMediaMatcher,_queries,Map,matchMedia,'This query is not being observed.','correctly returns a MediaQueryList to check for matches','(min-width: 1px)','(max-width: 1px)','should add CSS rules for provided queries when the platform is webkit or blink','123456px',getStyleTagByString,`(width: ${,BLINK,str,HTMLStyleElement,sheet,CSSStyleSheet,cssRules,rule,'should display context menu on right click inside of context component',getContextMenu,openContextMenu,'should close out the context menu when clicking in the context',getMenuContext,'should close out the context menu when clicking on element outside of the context','#other','should not close the menu on first auxclick after opening via contextmenu event','auxclick','should close the menu on first auxclick after opening programmatically','should close out the context menu when clicking a menu item',CdkMenuItem,'should re-open the same menu when right clicking twice in the context',menus,'two context menu triggers should result in a single context menu','should retain the context menu on right click inside the open menu',getNativeContextMenu,'should focus the first menuitem when the context menu is opened','first_menu_item','should not close context menu when pressing left arrow','should not close context menu when pressing right arrow','nested context menu triggers',NestedContextMenu,CdkMenuModule,getCutMenu,cutMenu,getCopyMenu,copyMenu,getCutMenuContext,cutContext,getCopyMenuContext,copyContext,openCutContextMenu,openCopyContextMenu,'should open the cut context menu only when right clicked in its trigger context','should open the nested copy context menu only when right clicked in nested context','should open the parent context menu only when right clicked in nested context and nested',' is disabled',copyMenuDisabled,'should close nested context menu when parent is opened','should close the parent context menu when nested is open','should close nested context menu when clicking in parent','should close parent context menu when clicking in nested menu','with context menu that has submenu',ContextMenuWithSubmenu,'should open context menu submenu without closing context menu',triggerNativeElement,'with menubar and inline menu on page',ContextMenuWithMenuBarAndInlineMenu,nativeMenuBar,nativeMenuBarTrigger,contextMenu,getFileMenu,fileMenu,getInlineMenuTrigger,nativeInlineMenuButton,getInlineMenuElement,nativeInlineMenu,openFileMenu,'should close the open context menu when clicking on the menubar element','should close the open context menu when clicking on the menubar menu item','should close the open context menu when clicking on the inline menu element','should close the open context menu when clicking on an inline menu item','should close the open menu when opening a context menu','with shared triggered menu',componentClass,'should allow a context menu and menubar trigger share a menu',MenuBarAndContextTriggerShareMenu,menuBarTrigger,contextTrigger,"`
    <div [cdkContextMenuTriggerFor]=""context""></div>
    <div id=""other""></div>

    <ng-template #context>
      <div cdkMenu>
        <button id=""first_menu_item"" cdkMenuItem></button>
      </div>
    </ng-template>
  `",SimpleContextMenu,CdkContextMenuTrigger,triggerElement,CdkMenu,nativeMenu,"`
    <div #cut_trigger [cdkContextMenuTriggerFor]=""cut"">
      <div
        #copy_trigger
        [cdkContextMenuDisabled]=""copyMenuDisabled""
        [cdkContextMenuTriggerFor]=""copy""
      ></div>
    </div>

    <ng-template #cut>
      <div #cut_menu cdkMenu></div>
    </ng-template>

    <ng-template #copy>
      <div #copy_menu cdkMenu></div>
    </ng-template>
  `",'cut_trigger','copy_trigger','cut_menu','copy_menu',"`
    <div [cdkContextMenuTriggerFor]=""cut""></div>

    <ng-template #cut>
      <div #cut_menu cdkMenu>
        <button cdkMenuItem [cdkMenuTriggerFor]=""copy""></button>
      </div>
    </ng-template>

    <ng-template #copy>
      <div #copy_menu cdkMenu></div>
    </ng-template>
  `",CdkMenuTrigger,"`
    <div cdkMenuBar id=""menu_bar"">
      <button #trigger cdkMenuItem [cdkMenuTriggerFor]=""file"">File</button>
    </div>

    <ng-template #file>
      <div cdkMenu #file_menu id=""file_menu""></div>
    </ng-template>

    <div [cdkContextMenuTriggerFor]=""context""></div>
    <ng-template #context>
      <div cdkMenu #context_menu>
        <button cdkMenuItem></button>
      </div>
    </ng-template>

    <div #inline_menu cdkMenu>
      <button #inline_menu_button cdkMenuItem></button>
    </div>
  `",CdkMenuBar,'context_menu','file_menu','inline_menu','inline_menu_button',"`
    <div cdkMenuBar>
      <button cdkMenuItem [cdkMenuTriggerFor]=""menu"">First</button>
    </div>

    <div [cdkContextMenuTriggerFor]=""menu""></div>

    <ng-template #menu>
      <div cdkMenu>
        <button cdkMenuItem></button>
      </div>
    </ng-template>
  `",'should toggle menuitemradio items',menuItems,'Keyboard handling','(with ltr layout)',MultiMenuWithSubmenu,nativeMenus,menuBarNativeItems,HTMLButtonElement,fileMenuNativeItems,grabElementsForTesting,nativeItems,focusMenuBar,'for MenuBar','should focus the first menu item when the menubar gets tabbed in','should toggle the last/first menu item on end/home key press','should not focus the last item when pressing end with modifier','should not focus the first item when pressing home with modifier',"'should focus the edit MenuItem on E, D character keys'",E,D,'should toggle and wrap when cycling the right/left arrow keys on menu bar ','without toggling menus','should toggle tabindex of menu bar items with left/right arrow keys',"""should open the focused menu item's menu and focus the first submenu""",' item on the down key',"""should open the focused menu item's menu and focus the last submenu""",' item on the up key','should open the focused menu items menu and focus first submenu item on space','should set the tabindex to 0 on the active item and reset the previous active items ','to -1 when navigating down to a submenu and within it using the arrow keys','for Menu',openShareMenu,'should open the submenu with focus on item with menu on right arrow press',"'menu bar, menu and submenu'",'share_menu','should cycle focus on down/up arrow without toggling menus','should focus the first/last item on home/end keys','should call user defined function and close out menus on space key on a non-trigger ','menu item','user defined callback spy',clickEmitter,'should close the submenu on left arrow and place focus back on its trigger',"'should close menu tree, focus next menu bar item and open its menu on right arrow '","""when currently focused item doesn't trigger a menu""",'edit_menu','should close first level menu and focus previous menubar item on left arrow','should close the open submenu and focus its trigger on escape press','re-focus trigger','should not close submenu and focus parent on escape with modifier',"'menu bar, file menu, share menu'",'should close out all menus on tab',"'should focus share MenuItem on S, H character key press'",S,H,'should handle keyboard actions if initial menu is opened programmatically',getMenuTrigger,'(with rtl layout)',afterAll,'should open the submenu for menu item with menu on left arrow','menu and submenu','should close the submenu and focus its trigger on right arrow',"'should close menu tree, focus next menu bar item and open its menu on left arrow when '","""focused item doesn't have a menu""",'should close first level menu and focus the previous menubar item on right',' arrow press','with menuitemcheckbox components',MenuWithCheckboxes,fontMenuItems,CdkMenuItemCheckbox,checkboxItems,openFontMenu,'should set the checked state on the focused checkbox on space key and keep the',' menu open','font_menu','with menuitemradio components',MenuWithRadioButtons,CdkMenuItemRadio,radioItems,'should set the checked state on the active radio button on space key and keep the','text_menu','background click closeout',MenuBarWithMenusAndInlineMenu,popoutMenus,triggers,nativeInlineMenuItem,isInline,'should close out all open menus when clicked outside the menu tree','#container','should not close open menus when clicking on a menu group',menuGroups,CdkMenuGroup,'should not close open menus when clicking on a menu','should not close when clicking on a CdkMenuItemCheckbox element','should not close when clicking on a non-menu element inside menu','#inner-element','menu should stay open if clicking on an inner span element','should close the open menu when clicking on an inline menu item','Mouse handling',shareMenuNativeItems,triggerFocus,'should toggle menu from menu bar when clicked','should not open menu when hovering over trigger in menu bar with no open siblings','should not change focused items when hovering over trigger in menu bar with no open ','siblings','should toggle open menus in menu bar if sibling is open when mouse moves from one item ','to the other','should not close the menu when re-hovering the trigger','should open a submenu when hovering over a trigger in a menu with no siblings open','should close menu when hovering over non-triggering sibling menu item','should retain open menus when hovering over root level trigger which opened them','should close out the menu tree when hovering over sibling item in menu bar','should close out the menu tree when clicking a non-triggering menu item','should allow keyboard down arrow to focus next item after focusing initial item','should not re-open a menu when hovering over the trigger in the menubar after clicking to ','open and then close it','should not set the tabindex when hovering over menubar item and there is no open',' sibling menu','should not change the tabindex when hovering between items','should not change the tabindex when navigating down to a submenu and within it using a mouse',"`
    <ul cdkMenuBar>
      <li role=""none"">
        <button cdkMenuItemChecked=""true"" cdkMenuItemRadio>
          first
        </button>
      </li>
      <li role=""none"">
        <button cdkMenuItemRadio>
          second
        </button>
      </li>
    </ul>
  `",MenuBarRadioGroup,"`
    <div>
      <div cdkMenuBar id=""menu_bar"">
        <button cdkMenuItem [cdkMenuTriggerFor]=""file"">File</button>
        <button cdkMenuItem [cdkMenuTriggerFor]=""edit"">Edit</button>
      </div>

      <ng-template #file>
        <div cdkMenu id=""file_menu"">
          <button cdkMenuItem>Save</button>
          <button cdkMenuItem [cdkMenuTriggerFor]=""share"">Share</button>
          <button cdkMenuItem>Open</button>
        </div>
      </ng-template>

      <ng-template #share>
        <div cdkMenu id=""share_menu"">
          <button (cdkMenuItemTriggered)=""clickEmitter.next()"" cdkMenuItem>Email</button>
          <button cdkMenuItem>Chat</button>
        </div>
      </ng-template>

      <ng-template #edit>
        <div cdkMenu id=""edit_menu"">
          <button cdkMenuItem>Undo</button>
          <button cdkMenuItem>Redo</button>
        </div>
      </ng-template>
    </div>
  `",EventEmitter,"`
    <div>
      <div cdkMenuBar id=""menu_bar"">
        <button cdkMenuItem [cdkMenuTriggerFor]=""font"">Font size</button>
      </div>

      <ng-template #font>
        <div cdkMenu id=""font_menu"">
          <button cdkMenuItemCheckbox>Small</button>
          <button cdkMenuItemCheckbox>Large</button>
        </div>
      </ng-template>
    </div>
  `","`
    <div>
      <div cdkMenuBar id=""menu_bar"">
        <button cdkMenuItem [cdkMenuTriggerFor]=""text"">Text</button>
      </div>

      <ng-template #text>
        <div cdkMenu id=""text_menu"">
          <button cdkMenuItemRadio>Bold</button>
          <button cdkMenuItemRadio>Italic</button>
        </div>
      </ng-template>
    </div>
  `","`
    <div id=""container"">
      <div cdkMenuBar>
        <button cdkMenuItem [cdkMenuTriggerFor]=""sub1"">Trigger</button>
      </div>

      <ng-template #sub1>
        <div cdkMenu>
          <div cdkMenuGroup>
            <button cdkMenuItemCheckbox>Trigger</button>
            <span id=""inner-element"">A nested non-menuitem element</span>
          </div>
        </div>
      </ng-template>
    </div>

    <div cdkMenu>
      <button #inline_menu_item cdkMenuItem></button>
    </div>
  `",'inline_menu_item','should not change state of sibling checked menuitemcheckbox','with MenuItems as radio button',MenuWithMultipleRadioGroups,'should change state of sibling menuitemradio in same group',keepOpen,'should not change state of menuitemradio in sibling group','should not change radiogroup state with disabled button',"`
    <div cdkMenuBar>
      <button cdkMenuItem [cdkMenuTriggerFor]=""panel""></button>
    </div>
    <ng-template #panel>
      <ul cdkMenu>
        <li role=""none"">
          <ul cdkMenuGroup>
            <li #first role=""none"">
              <button cdkMenuItemChecked=""true"" cdkMenuItemCheckbox>
                one
              </button>
            </li>
            <li role=""none"">
              <button cdkMenuItemCheckbox>
                two
              </button>
            </li>
          </ul>
        </li>
      </ul>
    </ng-template>
  `",CheckboxMenu,"`
    <div cdkMenuBar>
      <button cdkMenuItem [cdkMenuTriggerFor]=""panel""></button>
    </div>
    <ng-template #panel>
      <ul cdkMenu>
        <li role=""none"">
          <ul cdkMenuGroup>
            <li role=""none"">
              <button cdkMenuItemChecked=""true"" cdkMenuItemRadio>
                one
              </button>
            </li>
            <li role=""none"">
              <button cdkMenuItemRadio>
                two
              </button>
            </li>
          </ul>
        </li>
        <li role=""none"">
          <ul cdkMenuGroup>
            <li role=""none"">
              <button cdkMenuItemRadio>
                three
              </button>
            </li>
            <li role=""none"">
              <button cdkMenuItemRadio>
                four
              </button>
            </li>
          </ul>
        </li>
      </ul>
    </ng-template>
  `",'should have the menuitemcheckbox role',checkboxElement,'menuitemcheckbox','should set the aria disabled attribute','should not have a menu',hasMenu,'should toggle the aria checked attribute','should toggle checked state','should not toggle checked state when disabled','should emit on clicked emitter when triggered','cdkMenuItemCheckbox clicked spy',triggered,'should not emit on clicked emitter when disabled',`<button cdkMenuItemCheckbox>Click me!</button>`,SingleCheckboxButton,'should have the menuitemradio role',radioElement,'menuitemradio',radioButton,'cdkMenuItemRadio clicked spy',`<button cdkMenuItemRadio>Click me!</button>`,SimpleRadioButton,'should have the menuitem role',nativeButton,'menuitem','should coerce the disabled property','should toggle the aria disabled attribute','with complex inner elements',MatIcon,CDK_MENU,MENU_STACK,MenuStack,'should get the text for a simple menu item with no nested or wrapped elements',SingleMenuItem,'Click me!','should get the text for menu item with a single nested mat icon component',MenuItemWithIcon,'unicorn Click me!',typeahead,'should get the text for menu item with single nested component with the material ','icon class',MenuItemWithIconClass,'should get the text for a menu item with bold marked text',MenuItemWithBoldElement,"'should get the text for a menu item with nested icon, nested icon class and nested '",'wrapping elements',MenuItemWithMultipleNestings,'unicorn Click menume!',`<button cdkMenuItem>Click me!</button>`,"`
    <button cdkMenuItem [cdkMenuitemTypeaheadLabel]=""typeahead"">
      <mat-icon>unicorn</mat-icon>
      Click me!
    </button>
  `","`
    <button cdkMenuItem [cdkMenuitemTypeaheadLabel]=""typeahead"">
      <div class=""material-icons"">unicorn</div>
      Click me!
    </button>
  `",` <button cdkMenuItem><b>Click</b> me!</button> `,"`
    <button cdkMenuItem [cdkMenuitemTypeaheadLabel]=""typeahead"">
      <div>
        <div class=""material-icons"">unicorn</div>
        <div>
          Click
        </div>
        <mat-icon>menu</mat-icon>
        <div>me<b>!</b></div>
      </div>
    </button>
  `",'mat-icon','should fill the menu stack with the latest menu at the end of the stack and oldest at',' the start of the stack',openAllMenus,'menu stack closed spy',menuStack,callArgs,CallInfo,'should close triggering menu and all menus below it',getElementsForTesting,'menu stack should only have the single menu',peek,"`
    <div>
      <div cdkMenuBar id=""menu_bar"">
        <button cdkMenuItem [cdkMenuTriggerFor]=""file"">File</button>
      </div>

      <ng-template #file>
        <div cdkMenu id=""file_menu"">
          <button cdkMenuItem [cdkMenuTriggerFor]=""share"">Share</button>
        </div>
      </ng-template>

      <ng-template #share>
        <div cdkMenu id=""share_menu"">
          <button cdkMenuItem [cdkMenuTriggerFor]=""chat"">Chat</button>
        </div>
      </ng-template>

      <ng-template #chat>
        <div cdkMenu id=""chat_menu"">
          <button cdkMenuItem>GVC</button>
        </div>
      </ng-template>
    </div>
  `",menuBar,menuItemElement,'should set aria-haspopup to menu','menu','should  have a menu','with nested sub-menus',MenuBarWithNestedSubMenus,nativeTriggers,setDocumentDirection,'should toggle the aria-expanded attribute','should hide menus on initial load','should only open the attached menu',getMenu,'should not open the menu when menu item disabled','should toggle the attached menu','should open a nested submenu when nested trigger is clicked','should close all menus when root menu is closed','should close nested submenu and leave parent open','first level menu should stay open','should emit request to open event on menu open','cdkMenuItem open request emitter','should emit request to close event on menu close','cdkMeuItem close request emitter',closedSpy,'cdkMenu closed emitter','should position the overlay below the trigger by default for a horizontal Menu','MenuBar is horizontal by default','should fallback to positioning the overlay above the trigger for horizontal Menu ','styled to bottom of viewport','trigger button position set to the bottom of the viewport','should position nested submenu overlay to right by default in ltr layout','should fallback to positioning nested submenu overlay to the left in ltr layout','trigger positioned on the right','should position nested submenu overlay to the left by default in rtl layout','should fallback to positioning nested submenu overlay to the right in rtl layout','trigger positioned on the left','should position nested submenu at trigger level by default','submenu should be at height of its trigger by default','should allow two triggers in different menubars to open the same menu',TriggersWithSameMenuDifferentMenuBars,'should allow two triggers in the same menubar open the same menu',TriggersWithSameMenuSameMenuBar,'should allow a trigger in a submenu references its parent menu',TriggerOpensItsMenu,'standalone',StandaloneTriggerWithInlineMenu,nativeTrigger,submenuNativeItem,submenuItem,'should have its tabindex set to 0','should reset the tabindex to 0 when shift-tabbing out of standalone trigger','should reset the tabindex to 0 when tabbing out of submenu','should open the menu on trigger','should toggle the menu on trigger','should toggle the menu on keyboard events','should close the open menu on background click',nativeInlineItem,"`
    <div cdkMenuBar><button cdkMenuItem [cdkMenuTriggerFor]=""noop"">Click me!</button></div>
    <ng-template #noop><div cdkMenu></div></ng-template>
  `",TriggerForEmptyMenu,"`
    <div cdkMenuBar>
      <button cdkMenuItem [cdkMenuTriggerFor]=""sub1"">First</button>
    </div>

    <ng-template #sub1>
      <div cdkMenu>
        <button cdkMenuItem [cdkMenuTriggerFor]=""sub2"">Second</button>
      </div>
    </ng-template>

    <ng-template #sub2>
      <div cdkMenu>
        <button cdkMenuItem>Third</button>
      </div>
    </ng-template>
  `","`
    <div cdkMenuBar>
      <button cdkMenuItem [cdkMenuTriggerFor]=""menu"">First</button>
    </div>
    <div cdkMenuBar>
      <button cdkMenuItem [cdkMenuTriggerFor]=""menu"">Second</button>
    </div>

    <ng-template #menu>
      <div cdkMenu>
        <button cdkMenuItem></button>
      </div>
    </ng-template>
  `","`
    <div cdkMenuBar>
      <button cdkMenuItem [cdkMenuTriggerFor]=""menu"">First</button>
      <button cdkMenuItem [cdkMenuTriggerFor]=""menu"">Second</button>
    </div>

    <ng-template #menu>
      <div cdkMenu>
        <button cdkMenuItem></button>
      </div>
    </ng-template>
  `","`
    <div cdkMenuBar>
      <button cdkMenuItem [cdkMenuTriggerFor]=""menu""></button>
    </div>

    <ng-template #menu>
      <div cdkMenu>
        <button cdkMenuItem [cdkMenuTriggerFor]=""menu""></button>
      </div>
    </ng-template>
  `","`
    <button cdkMenuItem [cdkMenuTriggerFor]=""sub1"">First</button>

    <ng-template #sub1>
      <div cdkMenu>
        <button #submenu_item cdkMenuItem [cdkMenuTriggerFor]=""sub2"">Second</button>
      </div>
    </ng-template>

    <div cdkMenu>
      <button #inline_item cdkMenuItem></button>
    </div>
  `",'submenu_item','inline_item','should toggle menuitemcheckbox','when configured inline',InlineMenu,nativeMenuItems,'should focus the first menu item when it gets tabbed in','menu aim',getSlope,getYIntercept,slope,mouseout,mouseOutOf,mouseenter,mousemove,inElement,getElementAt,'with ltr layout and menu at top of page moving down and right',WithComplexNestedMenus,nativeFileTrigger,nativeFileButtons,nativeEditTrigger,nativeEditButtons,nativeShareTrigger,'#file_menu','#edit_menu',openMenuOnHover,menuElement,'No element trigger provided. Is it visible in the DOM?',inMenu,getNextPoint,getNextPointIterator,currentPoint,currElement,numEnters,nextElement,'should close the edit menu when hovering directly down from the edit menu trigger to the print item without waiting',editPosition,printPosition,numEnterEvents,'should close the edit menu after moving towards submenu and stopping',sharePosition,'should not close the edit submenu when hovering into its items in time',pastePosition,'should close the edit menu when hovering into its items slowly','with rtl layout and menu at bottom of page moving up and left',WithComplexNestedMenusOnBottom,currPoint,'should close the edit menu when hovering directly up from the edit menu trigger to the print item without waiting',undoPosition,"`
    <div cdkMenuBar>
      <button cdkMenuItem [cdkMenuTriggerFor]=""panel""></button>
    </div>
    <ng-template #panel>
      <ul cdkMenu>
        <li role=""none"">
          <button cdkMenuItemChecked=""true"" cdkMenuItemCheckbox>first</button>
        </li>
        <li role=""none"">
          <button cdkMenuItemCheckbox>second</button>
        </li>
      </ul>
    </ng-template>
  `",MenuCheckboxGroup,"`
    <div cdkMenu>
      <button cdkMenuItem>Inbox</button>
      <button cdkMenuItem>Starred</button>
    </div>
  `","`
    <div cdkTargetMenuAim cdkMenuBar>
      <button #file_trigger cdkMenuItem [cdkMenuTriggerFor]=""file"">File</button>
    </div>

    <ng-template #file>
      <div
        id=""file_menu""
        style=""display: flex; flex-direction: column;""
        cdkMenu
        cdkTargetMenuAim
      >
        <button #edit_trigger cdkMenuItem [cdkMenuTriggerFor]=""edit"">Edit</button>
        <button #share_trigger cdkMenuItem [cdkMenuTriggerFor]=""share"">Share</button>
        <button cdkMenuItem>Open</button>
        <button cdkMenuItem>Rename</button>
        <button cdkMenuItem>Print</button>
      </div>
    </ng-template>

    <ng-template #edit>
      <div
        id=""edit_menu""
        style=""display: flex; flex-direction: column;""
        cdkMenu
        cdkTargetMenuAim
      >
        <button cdkMenuItem>Undo</button>
        <button cdkMenuItem>Redo</button>
        <button cdkMenuItem>Cut</button>
        <button cdkMenuItem>Copy</button>
        <button cdkMenuItem>Paste</button>
      </div>
    </ng-template>

    <ng-template #share>
      <div
        id=""share_menu""
        style=""display: flex; flex-direction: column;""
        cdkMenu
        cdkTargetMenuAim
      >
        <button cdkMenuItem>GVC</button>
        <button cdkMenuItem>Gmail</button>
        <button cdkMenuItem>Twitter</button>
      </div>
    </ng-template>
  `",'file_trigger','edit_trigger','share_trigger',"`
    <div cdkMenuBar cdkTargetMenuAim style=""position: fixed; bottom: 0"">
      <button #file_trigger cdkMenuItem [cdkMenuTriggerFor]=""file"">File</button>
    </div>

    <ng-template #file>
      <div
        id=""file_menu""
        style=""display: flex; flex-direction: column""
        cdkMenu
        cdkTargetMenuAim
      >
        <button cdkMenuItem>Print</button>
        <button cdkMenuItem>Rename</button>
        <button cdkMenuItem>Open</button>
        <button #share_trigger cdkMenuItem [cdkMenuTriggerFor]=""share"">Share</button>
        <button #edit_trigger cdkMenuItem [cdkMenuTriggerFor]=""edit"">Edit</button>
      </div>
    </ng-template>

    <ng-template #edit>
      <div
        id=""edit_menu""
        style=""display: flex; flex-direction: column""
        cdkMenu
        cdkTargetMenuAim
      >
        <button cdkMenuItem>Undo</button>
        <button cdkMenuItem>Redo</button>
        <button cdkMenuItem>Cut</button>
        <button cdkMenuItem>Copy</button>
        <button cdkMenuItem>Paste</button>
      </div>
    </ng-template>

    <ng-template #share>
      <div
        id=""share_menu""
        style=""display: flex; flex-direction: column""
        cdkMenu
        cdkTargetMenuAim
      >
        <button cdkMenuItem>GVC</button>
        <button cdkMenuItem>Gmail</button>
        <button cdkMenuItem>Twitter</button>
        <button cdkMenuItem>Facebook</button>
      </div>
    </ng-template>
  `",'should emit on mouseEnter observable when mouse enters a tracked element','mouse enter spy',entered,mockElements,'should emit on mouseExit observable when mouse exits a tracked element','mouse exit spy',exited,'should be aware of newly created/added components and track them',showThird,getComponentsForTesting,'should toggle focused items when hovering from one to another','focus toggle spy',argsFor,'should toggle active and previous items when hovering from one to another',mouseOut,focusTracker,previousElement,'wrapper',`<ng-content></ng-content>`,MockWrapper,FocusableElement,"`
    <div>
      <wrapper>First</wrapper>
      <wrapper>Second</wrapper>
      <wrapper *ngIf=""showThird"">Third</wrapper>
    </div>
  `",MultiElementWithConditionalComponent,_allItems,PointerFocusTracker,'should trigger the callback when the content of the element changes',ComponentWithTextContent,'doSomething','should trigger the callback when the content of the children changes',ComponentWithChildTextContent,'should disconnect the MutationObserver when the directive is disabled',observeSpy,'observe spy',disconnectSpy,'disconnect spy',overrideProvider,'debounced',ComponentWithDebouncedListener,invokeCallbacks,ObserversModule,'should debounce the content changes','ContentObserver injectable','basic usage',contentObserver,ContentObserver,UnobservedComponentWithTextContent,'content observer','should only create one MutationObserver when observing the same element twice',mof,'create',sub1,'text text',"`
    <div
      (cdkObserveContent)=""doSomething()""
      [cdkObserveContentDisabled]=""disabled"">{{text}}</div>
  `",doSomething,"`<div (cdkObserveContent)=""doSomething()""><div>{{text}}</div></div>`","`<div (cdkObserveContent)=""spy($event)"" [debounce]=""debounce"">{{text}}</div>`",debounce,'MutationObserver callback',`<div #contentEl>{{text}}</div>`,'contentEl','overlayTwo keyboard event spy','should not dispatch keyboard events when propagation is stopped','should dispose of the global keyboard event handler correctly','should skip overlays that do not have keydown event subscriptions','should not add the same overlay to the stack multiple times','should not run change detection if there are no `keydownEvents` observers',appRef,'tick',outsideClickDispatcher,'should dispatch mouse click events to the attached overlays','overlayOne mouse click event spy','overlayTwo mouse click event spy',outsidePointerEvents,'should dispatch auxiliary button click events to the attached overlays','overlayOne auxiliary click event spy','overlayTwo auxiliary click event spy','should dispatch mouse click events to the attached overlays even when propagation is stopped','overlay mouse click event spy','should dispose of the global click event handler correctly','should dispatch the click event when click is on an element outside the overlay','overlay mouse click spy','should not dispatch the click event when click is on an element inside the overlay','should dispatch an event when a click is started outside the overlay and ','released outside of it','should not dispatch an event when a click is started inside the overlay and ','released inside of it','should not dispatch an event when a click is started outside the overlay and ','should dispatch an event when a context menu is triggered outside the overlay','overlay contextmenu spy','should not dispatch an event when a context menu is triggered inside the overlay','should not throw an error when closing out related components via the ','outsidePointerEvents emitter on background click',firstOverlayRef,secondOverlayRef,thirdOverlayRef,'background click handler spy','change detection behavior','should not run change detection if there is no portal attached to the overlay','should not run change detection if the click was made outside the overlay but there are no `outsidePointerEvents` observers','should not run change detection if the click was made inside the overlay and there are `outsidePointerEvents` observers','should run change detection if the click was made outside the overlay and there are `outsidePointerEvents` observers','should open an overlay inside a fullscreen element and move it to the body',TestComponentWithTemplatePortals,templatePortal,fullscreenListeners,'should open an overlay inside the body and move it to a fullscreen element',`<ng-template cdk-portal>Cake</ng-template>`,CdkPortal,NgModule,PortalModule,FullscreenOverlayContainer,OverlayTestModule,'should remove the overlay container element from the DOM on destruction','.cdk-overlay-container','Expected the overlay container to be in the DOM after opening an overlay','Expected the overlay container *not* to be in the DOM after destruction','should add and remove css classes from the container element','commander-shepard',"'Expected the overlay container to have class ""commander-shepard""'","'Expected the overlay container not to have class ""commander-shepard""'",'should remove overlay containers from the server when on the browser','cdk-overlay-container','should remove overlay containers from other unit tests','should not remove extra containers that were created on the browser','can change positionStrategy via input',expectedPositionStrategy,flexibleConnectedTo,withFlexibleDimensions,withPositions,originX,originY,overlayX,overlayY,ConnectedOverlayDirectiveTest,overlayDirective,connectedOverlayDirective,actualPositionStrategy,getConfig,FlexibleConnectedPositionStrategy,'should destroy the overlay when the directive is destroyed',getPaneElement,'Expected the overlay pane element to be removed when disposed.','should use a connected position strategy with a default set of positions',strategy,positions,'should set and update the `dir` attribute',boundingBox,'.cdk-overlay-connected-position-bounding-box','should close when pressing escape','Expected overlay to have been detached.','should not close when pressing escape with a modifier','should prevent closing via clicks on the backdrop by default','should prevent closing via the escape key with disableClose option','should not depend on the order in which the `origin` and `open` are set',propOrderFixture,ConnectedOverlayPropertyInitOrder,'inputs','should set the width',pane,'250px','should set the height','100vh','50vh','should set the min width','should set the min height','should create the backdrop if designated','should not create the backdrop by default','should be able to change hasBackdrop after the overlay has been initialized','should set the custom backdrop class','mat-test-class','should set the custom panel class','cdk-test-panel-class','should set the offsetX','translateX(5px)','translateX(15px)','should set the offsetY','translateY(45px)','translateY(55px)','should be able to update the origin after init',triggerRect,'#trigger',overlayRect,triggerOverride,otherTrigger,'#otherTrigger','should be able to use non-directive origin',nonDirectiveTrigger,'#nonDirectiveTrigger','should update the positions if they change after init',positionOverrides,'should take the offset from the position','should be able to set the viewport margin',viewportMargin,'should allow for flexible positioning to be enabled',flexibleDimensions,'should allow for growing after open to be enabled',growAfterOpen,'should allow for pushing to be enabled','should update the element size if it changes while open','should be able to set transform origin selector',transformOriginSelector,'.cdk-test-panel-class','outputs','should emit when the backdrop was clicked',backdropClickHandler,'should emit when the position has changed',positionChangeHandler,latestCall,ConnectedOverlayPositionChange,`Expected directive to emit an instance of ConnectedOverlayPositionChange.`,'should emit when attached',attachHandler,attachResult,`Expected pane to be populated with HTML elements when attach was called.`,'should emit when detached',detachHandler,'should emit the keydown events from the overlay',keydownHandler,'should emit when detached externally',scrollStrategy,scrollStrategies,'should not emit after the directive is destroyed','detach spy',"`
  <button cdk-overlay-origin id=""trigger"" #trigger=""cdkOverlayOrigin"">Toggle menu</button>
  <button cdk-overlay-origin id=""otherTrigger"" #otherTrigger=""cdkOverlayOrigin"">Toggle menu</button>
  <button id=""nonDirectiveTrigger"" #nonDirectiveTrigger>Toggle menu</button>

  <ng-template cdk-connected-overlay
            [cdkConnectedOverlayOpen]=""isOpen""
            [cdkConnectedOverlayWidth]=""width""
            [cdkConnectedOverlayHeight]=""height""
            [cdkConnectedOverlayPositionStrategy]=""positionStrategy""
            [cdkConnectedOverlayOrigin]=""triggerOverride || trigger""
            [cdkConnectedOverlayHasBackdrop]=""hasBackdrop""
            [cdkConnectedOverlayViewportMargin]=""viewportMargin""
            [cdkConnectedOverlayFlexibleDimensions]=""flexibleDimensions""
            [cdkConnectedOverlayGrowAfterOpen]=""growAfterOpen""
            [cdkConnectedOverlayPush]=""push""
            [cdkConnectedOverlayScrollStrategy]=""scrollStrategy""
            [cdkConnectedOverlayDisableClose]=""disableClose""
            cdkConnectedOverlayBackdropClass=""mat-test-class""
            cdkConnectedOverlayPanelClass=""cdk-test-panel-class""
            (backdropClick)=""backdropClickHandler($event)""
            [cdkConnectedOverlayOffsetX]=""offsetX""
            [cdkConnectedOverlayOffsetY]=""offsetY""
            (positionChange)=""positionChangeHandler($event)""
            (attach)=""attachHandler()""
            (detach)=""detachHandler()""
            (overlayKeydown)=""keydownHandler($event)""
            [cdkConnectedOverlayMinWidth]=""minWidth""
            [cdkConnectedOverlayMinHeight]=""minHeight""
            [cdkConnectedOverlayPositions]=""positionOverrides""
            [cdkConnectedOverlayTransformOriginOn]=""transformOriginSelector"">
    <p>Menu content</p>
  </ng-template>`",CdkConnectedOverlay,CdkOverlayOrigin,'otherTrigger','nonDirectiveTrigger',FlexibleConnectedPositionStrategyOrigin,ScrollStrategy,'backdropClick handler','positionChange handler',ConnectionPositionPair,'attachHandler','detachHandler',"`
  <button cdk-overlay-origin #trigger=""cdkOverlayOrigin"">Toggle menu</button>
  <ng-template cdk-connected-overlay>Menu content</ng-template>`",'should load a component into an overlay',componentPortal,'should load a template portal into an overlay','Cake','should disable pointer events of the pane element if detached',paneElement,'Expected the overlay pane to enable pointerEvents when attached.','Expected the overlay pane to disable pointerEvents when detached.','should open multiple overlays',pizzaOverlayRef,cakeOverlayRef,'should ensure that the most-recently-attached overlay is on top',hostElement,'Expected pizza to be on the bottom.','Expected cake to be on top.','Expected pizza to still be on the bottom.','Expected cake to still be on top.','should take the default direction from the global Directionality','should set the direction',OverlayConfig,'should emit when an overlay is attached','attachments spy',attachments,'should emit the attachment event after everything is added to the DOM','Expected the overlay to have been attached.','Expected the backdrop to have been attached.','should emit when an overlay is detached','detachments spy',detachments,'should not emit to the detach stream if the overlay has not been attached','should not emit to the detach stream on dispose if the overlay was not attached','should emit the detachment event after the overlay is removed from the DOM','Expected the overlay to have been detached.','should emit and complete the observables when an overlay is disposed',disposeSpy,'dispose spy',attachCompleteSpy,'attachCompleteSpy spy',detachCompleteSpy,'detachCompleteSpy spy','should complete the attachment observable before the detachment one',callbackOrder,'attach','detach','should default to the ltr direction','should skip undefined values when applying the defaults','should clear out all DOM element references on dispose','Expected overlay host to be defined.','Expected overlay element to be defined.',backdropElement,'Expected backdrop element to be defined.','Expected overlay host not to be referenced.','Expected overlay element not to be referenced.','Expected backdrop element not to be referenced.','should clear the backdrop timeout if the transition finishes first','should clear the backdrop timeout if the overlay is disposed','should be able to use the `Overlay` provider during app initialization',CustomErrorHandler,ErrorHandler,_overlay,handleError,useExisting,'should keep the direction in sync with the passed in Directionality',customDirectionality,getDirection,'should add and remove the overlay host as the ref is being attached and detached','Expected host element to be in the DOM.','Expected host element not to have been removed immediately.',zone,simulateZoneExit,'Expected host element to have been removed once the zone stabilizes.','Expected host element to be back in the DOM.','should be able to dispose an overlay on navigation',disposeOnNavigation,'should add and remove classes while open','custom-class-one','Expected class to be initially missing',addPanelClass,'Expected class to be added',removePanelClass,'Expected class to be removed','custom-class-two','should not throw when trying to add or remove and empty string class','positioning','should apply the positioning strategy',FakePositionStrategy,'.fake-positioned','should have the overlay in the DOM in position strategy when reattaching',overlayPresentInDom,OverlayRef,apply,'Expected host element to be attached to the DOM.','should not apply the position if it detaches before the zone stabilizes','apply','should be able to swap position strategies',firstStrategy,secondStrategy,updatePositionStrategy,'should not do anything when trying to swap a strategy with itself','should not throw when disposing multiple times in a row','should not trigger timers when disposing of an overlay','size','should apply the width set in the config','should support using other units if a string width is provided','200%','should apply the height set in the config','should support using other units if a string height is provided','should apply the min width set in the config','should apply the min height set in the config','should apply the max width set in the config','should apply the max height set in the config','should support zero widths and heights','should be able to reset the various size properties',updatePosition,'should create and destroy an overlay backdrop','cdk-overlay-backdrop-showing','backdropClickHander','should complete the backdrop click stream once the overlay is destroyed',completeHandler,'backdrop complete handler','should apply the default overlay backdrop class','cdk-overlay-dark-backdrop','should apply a custom class to the backdrop','cdk-overlay-transparent-backdrop','should apply multiple custom classes to the overlay','should disable the pointer events of a backdrop that is being removed','should insert the backdrop before the overlay host in the DOM order',host,'Expected backdrop to be before the host in the DOM','should remove the event listener from the backdrop','should set a class on the backdrop when animations are disabled',NoopAnimationsModule,'cdk-overlay-backdrop-noop-animation','panelClass','should apply a custom overlay pane class','should be able to apply multiple classes','should remove the custom panel class when the overlay is detached','Expected class to be re-added','should wait for the overlay to be detached before removing the panelClass','Expected class not to be removed immediately','Expected class to be removed on stable','scroll strategy','should attach the overlay ref to the scroll strategy',fakeScrollStrategy,FakeScrollStrategy,'Expected scroll strategy to have been attached to the current overlay ref.','should enable the scroll strategy when the overlay is attached','Expected scroll strategy to be enabled.','should disable the scroll strategy once the overlay is detached','Expected scroll strategy to be disabled.','should disable the scroll strategy when the overlay is destroyed','should detach the scroll strategy when the overlay is destroyed','should be able to swap scroll strategies',updateScrollStrategy,'<p>Pizza</p>',PositionStrategy,'fake-positioned',OverlayReference,'should throw when attempting to attach to multiple different overlays',attachOverlay,'should not throw when trying to apply after being disposed','should not throw when trying to re-apply the last position after being disposed',reapplyLastPosition,'should for the virtual keyboard offset when positioning the overlay',originElement,createPositionedBlockElement,'70px',withPush,originRect,'should calculate position with simulated zoom in Safari','270px','400px','should clean up after itself when disposed','cdk-overlay-connected-position-bounding-box','without flexible dimensions and pushing',ORIGIN_HEIGHT,DEFAULT_HEIGHT,ORIGIN_WIDTH,DEFAULT_WIDTH,OVERLAY_HEIGHT,OVERLAY_WIDTH,"'when not near viewport edge, not scrolled'",ORIGIN_LEFT,ORIGIN_TOP,runSimplePositionTests,'when scrolled',veryLargeElement,2100,'when near viewport edge','should reposition the overlay if it would go off the top of the screen','should reposition the overlay if it would go off the left of the screen',originCenterY,'should reposition the overlay if it would go off the bottom of the screen','25px','should reposition the overlay if it would go off the right of the screen','should recalculate and set the last position with recalculateLastPosition()','Expected overlay to be re-aligned to the trigger in the previous position.',"'should default to the initial position, if no positions fit in the viewport'",'Expected overlay to be re-aligned to the trigger in the initial position.','should position a panel properly when rtl',`500px`,'should position a panel with the x offset provided','should be able to set the default x offset',withDefaultOffsetX,'should have the position offset x take precedence over the default offset x','should position a panel with the y offset provided','should be able to set the default y offset',withDefaultOffsetY,'should have the position offset y take precedence over the default offset y','should allow for the fallback positions to specify their own offsets','with transform origin','should set the proper transform-origin when aligning to start/bottom',withTransformOriginOn,'.transform-origin','should set the proper transform-origin when aligning to end/bottom','should set the proper transform-origin when centering vertically','left center','should set the proper transform-origin when centering horizontally','should set the proper transform-origin when aligning to start/top','should set the proper transform-origin when aligning to start/bottom in rtl','should set the proper transform-origin when aligning to end/bottom in rtl','with origin set to a point','should be able to render at the primary position',setOrigin,'should be able to render at a fallback position',getViewportRect,'should be able to position relative to a point with width and height','should position the panel correctly when the origin is an SVG element',createBlockElement,'should account for the `offsetX` pushing the overlay out of the screen','should account for the `offsetY` pushing the overlay out of the screen','40px','should emit onPositionChange event when the position changes','positionChangeHandler',positionChanges,`Expected strategy to emit an instance of ConnectedOverlayPositionChange.`,'should emit the onPositionChange event even if none of the positions fit','should pick the fallback position that shows the largest area of the element','should re-use the preferred position when re-applying while locked in',withLockedPosition,recalcSpy,'reapplyLastPosition','should not retain the last preferred position when overriding the positions',"'should position a panel below, left-aligned'","'should position to the right, center aligned vertically'","'should position to the left, below'","'should position above, right aligned'","'should position below, centered'",originCenterX,'should center the overlay on the origin','with pushing','should be able to push an overlay into the viewport when it goes out on the right','should be able to push an overlay into the viewport when it goes out on the left','should be able to push an overlay into the viewport when it goes out on the top','should be able to push an overlay into the viewport when it goes out on the bottom','should set a margin when pushing the overlay into the viewport horizontally',withViewportMargin,'should set a margin when pushing the overlay into the viewport vertically','should not mess with the left offset when pushing from the top',"'should align to the trigger if the overlay is wider than the viewport, but the trigger '",'is still within the viewport','200vw','should push into the viewport if the overlay is wider than the viewport and the trigger','out of the viewport',"'should keep the element inside the viewport as the user is scrolling, '",'with position locking disabled','Expected overlay to be in the viewport initially.','Expected overlay to stay in the viewport after scrolling.',"'should not continue pushing the overlay as the user scrolls, if position '",'locking is enabled',scrollBy,initialOverlayTop,'Expected overlay to be inside the viewport initially.',currentOverlayTop,'Expected overlay to no longer be completely inside the viewport.','Expected overlay to maintain its previous position.','with flexible dimensions','should align the overlay to `flex-start` when the content is flowing to the right','flex-start','should align the overlay to `flex-end` when the content is flowing to the left','flex-end','should align the overlay to `center` when the content is centered','should support offsets when centering',overlayCenterY,overlayCenterX,'translateX(-15px) translateY(20px)','should become scrollable when it hits the viewport edge with a flexible height','should become scrollable when it hits the viewport edge with a flexible width','should not collapse the height if the size is less than the minHeight','should not collapse the width if the size is less than the minWidth','should take `weight` into account when determining which position to pick','should be able to opt-in to having the overlay grow after it was opened',withGrowAfterOpen,'should calculate the `bottom` value correctly with upward-flowing content ','and a scrolled page',`200px`,'should set the proper styles when the `bottom` value is exactly zero','should set the proper styles when the `top` value is exactly zero','should set the proper styles when the `left` value is exactly zero','should set the proper styles when the `right` value is exactly zero','should calculate the bottom offset correctly with a viewport margin','should center flexible overlay with push on a scrolled page','should size the bounding box correctly when opening downwards on a scrolled page',boundingBoxRect,'should not push the overlay if it is exactly as wide as the viewport','should not push the overlay if it is exactly as tall as the viewport','should position an overlay that is flowing to the left correctly on a page that is ','scrolled horizontally','should size the bounding box that is flowing to the left correctly on a page that is ','should set the maxWidth and maxHeight on the bounding box when exact dimension are ','not used',overlayStyle,boundingBoxStyle,'should set the maxWidth and maxHeight on the overlay pane when exact dimensions are used',"'should collapse the overlay vertically if overlay is outside of viewport, but taller '",'than the minHeight',bottomOffset,'than the minHeight that is set as a pixel string',"'should collapse the overlay horizontally if overlay is outside of viewport, but wider '",'than the minWidth',rightOffset,'than the minWidth that is set as a pixel string','should account for sub-pixel deviations in the size of the overlay',originalGetBoundingClientRect,zoomOffset,'onPositionChange with scrollable view properties',scrollable,onPositionChangeSubscription,'0 1000px 1000px 0',createOverflowContainerElement,withScrollableContainers,CdkScrollable,scrollableViewProperties,'should not have origin or overlay clipped or out of view without scroll',isOriginClipped,isOriginOutsideView,isOverlayClipped,isOverlayOutsideView,'should evaluate if origin is clipped if scrolled slightly down','should evaluate if origin is out of view and overlay is clipped if scrolled enough','should evaluate the overlay and origin are both out of the view',61,'positioning properties','in ltr','should use `left` when positioning an element at the start','should use `right` when positioning an element at the end','in rtl','should use `right` when positioning an element at the start','should use `left` when positioning an element at the end','should use `top` when positioning at element along the top','should use `bottom` when positioning at element along the bottom','validations','should throw when attaching without any positions','should throw when passing in something that is missing a connection point','should throw when passing in something that has an invalid X position','should throw when passing in something that has an invalid Y position','panel classes','should be able to apply a class based on the position','is-below','should be able to apply multiple classes based on the position','is-under','should not throw if an empty string is passed in as a panel class','should remove the panel class when detaching','should clear the previous classes when the position changes','is-center','is-in-the-middle',overlayClassList,'should not clear the existing `panelClass` from the `OverlayRef`','rebeccapurple',"`
    <div
      class=""transform-origin""
      style=""width: ${",}px; height: ${,"}px;""></div>
  `",TestOverlay,"'should position the element to the (top, left) with an offset'",elementStyle,parentStyle,marginBottom,marginRight,"'should position the element to the (bottom, right) with an offset'",'15em','should overwrite previously applied positioning',centerHorizontally,centerVertically,'40%','should not set any alignment by default','should center the element','should center the element with an offset','should center the element with an offset in rtl','should make the element position: static','should wrap the element in a `cdk-global-overlay-wrapper`','cdk-global-overlay-wrapper','should remove the parent wrapper from the DOM','should set the element width','should set the element height','should reset the horizontal position and offset when the width is 100%','should reset the horizontal position and offset when the width is 100% and the ','maxWidth is 100%','should not reset the horizontal position and offset when the width is 100% and','there is a defined maxWidth','should reset the vertical position and offset when the height is 100%','should reset the vertical position and offset when the height is 100% and the ','maxHeight is 100%','should not reset the vertical position and offset when the height is 100% and ','there is a defined maxHeight','should not throw when attempting to apply after the overlay has been disposed','should take its width and height from the overlay config','should update the overlay size when setting it through the position strategy',"'should take the dimensions from the overlay config, when they are set both in the '",'config and the strategy','should center the element in RTL','should invert `justify-content` when using `left` in RTL','should invert `justify-content` when using `right` in RTL','should clean up after itself when it has been disposed','should position the overlay to the start in ltr','should position the overlay to the start in rtl','should position the overlay to the end in ltr','60px','should position the overlay to the end in rtl',BlankPortal,'should not be able to scroll programmatically along the x axis',scrollPage,'Expected the page to be scrollable.',clickOn,'Expected the page not to be scrollable.','Exected page to be scrollable again.','should not be able to scroll programmatically along the y axis','should not be able to scroll via the keyboard along the y axis',Key,ARROW_DOWN,'Expected the page to be scrollable again.','should not be able to scroll via the keyboard along the x axis',ARROW_RIGHT,'should not be able to scroll the page after reaching the end of an element along the y axis','scroller',`document.getElementById('scroller').scrollTop = 200;`,'Expected the page not to have scrolled.','should not be able to scroll the page after reaching the end of an element along the x axis',`document.getElementById('scroller').scrollLeft = 200;`,`document.getElementById('${,}').click()`,`window.scrollTo(${,});`,'should toggle scroll blocking along the y axis',skipIOS,'Expected viewport to be scrollable initially.','Expected <html> element to be offset by the previous scroll amount.','Expected the viewport not to scroll.','Expected old scroll position to have bee restored after disabling.','Expected user to be able to scroll after disabling.','should toggle scroll blocking along the x axis',forceScrollElement,'3000px','should toggle the `cdk-global-scrollblock` class','cdk-global-scrollblock','should restore any previously-set inline styles','13px','37px','should keep the content width',previousContentWidth,'should not clobber user-defined scroll-behavior',rootStyle,CSSStyleDeclaration,scrollBehavior,bodyStyle,'smooth',initialRootValue,initialBodyValue,spec,'<p>Focaccia</p>',FocacciaMsg,'should detach the overlay as soon as the user scrolls','should not attempt to detach the overlay after it has been detached','should detach inside the NgZone','detachment spy','should be able to reposition the overlay up to a certain threshold before closing',threshold,'updatePosition','should not close if the user starts scrolling away and comes back','<p>Mozarella</p>',MozarellaMsg,'should update the overlay position when the page is scrolled',overlayConfig,reposition,'should not be updating the position after the overlay is detached','should not be updating the position after the overlay is destroyed','should be able to close the overlay once it is out of view',autoClose,PastaMsg,'should update the package.json',runner,runSchematicAsync,'ng-add',appTree,toPromise,packageJson,getFileContent,'/package.json',PackageJson,dependencies,'@angular/cdk','~0.0.0-PLACEHOLDER',"'Expected the modified ""dependencies"" to be sorted alphabetically.'",tasks,task,'node-package','Expected the package manager to be scheduled in order to update lock files.','should respect version range from CLI ng-add command',addPackageToPackageJson,'^9.0.0','Expected the package manager to not run since the CDK version ','was already inserted.','should create drag-drop files and add them to module',createTestApp,'drag-drop',baseOptions,moduleContent,'/projects/material/src/app/app.module.ts',files,'/projects/material/src/app/foo/foo.component.css','/projects/material/src/app/foo/foo.component.html','/projects/material/src/app/foo/foo.component.spec.ts','/projects/material/src/app/foo/foo.component.ts',/import.*Foo.*from '.\/foo\/foo.component'/,"/declarations:\s*\[[^\]]+?,\r?\n\s+FooComponent\r?\n/m",'should add drag-drop module','DragDropModule','style option','should respect the option value','scss','/projects/material/src/app/foo/foo.component.scss',"'should respect the deprecated ""styleext"" option value'",overwrite,'angular.json',projects,material,projectType,'application',schematics,'@schematics/angular:component',styleext,'projects/material','should not generate invalid stylesheets','styl',"'Expected the schematic to generate a plain ""css"" file.'","'Expected the schematic to not generate a ""stylus"" file'",'/projects/material/src/app/foo/foo.component.styl','should fall back to the @schematics/angular:component option value','less','/projects/material/src/app/foo/foo.component.less','inlineStyle option',inlineStyle,'inlineTemplate option',inlineTemplate,'skipTests option',skipTests,"'should respect the deprecated global ""spec"" option value'",'should properly resolve referenced resources in components',runFixers,writeFile,createTestCaseSetup,'migration-v6',MIGRATION_PATH,resolveBazelPath,'./external-resource-resolution_input.ts',testContent,"`<div cdk-connected-overlay [origin]=""test""></div>`","`<div cdk-connected-overlay [cdkConnectedOverlayOrigin]=""test""></div>`",'/projects/material/test.html','/projects/cdk-testing/src/some-tmpl.html','/projects/cdk-testing/src/test-cases/local.html',readContent,'Expected absolute devkit tree paths to work.','Expected relative paths with parent segments to work.','Expected relative paths without explicit dot to work.','should not check stylesheet twice if referenced in component','./global-stylesheets_input.ts',testStylesheetPath,'projects/cdk-testing/src/test-cases/global-stylesheets-test.scss','./global-stylesheets-test.scss','/projects/cdk-testing/third_party/materialize.css/bundle.css',`[cdkPortalOutlet] {\n  color: red;\n}\n`,'should not check stylesheets outside of project target',subProjectStylesheet,'[cdkPortalHost] {\n  color: red;\n}\n','/sub_project/node_modules/materialize.css/package.json','/sub_project/assets/test.css',expectAsync,toBeRejected,'should properly report invalid method calls','./method-call-checks_input.ts',logOutput,"/@15:5 - Found call to ""FocusMonitor\.monitor"".*renderer.*has been removed/","/@16:5 - Found call to ""FocusMonitor\.monitor"".*renderer.*has been removed/",'should not error if module resolution tries a non-existent path where a path segment ','matches an existing file','/node_modules/some-other-module/package.json',`{}`,'/node_modules/some-other-module/styles.css','/projects/cdk-testing/src/main.ts',`import 'some-other-module/styles.css/non/existent';`,toBeResolved,'should remove the tilde from angular imports',writeLines,TEST_PATH,`@use '~@angular/material' as mat;`,`@import '~@angular/material/theming';`,`@import '~@angular/cdk/overlay-prebuilt.css';`,`@include mat.button-theme();`,`@include mat-core();`,runMigration,splitFile,`@use '@angular/material' as mat;`,`@import '@angular/material/theming';`,`@import '@angular/cdk/overlay-prebuilt.css';`,'should handle an arbitrary amount of whitespace',`@use                               '~@angular/material' as mat;`,`@include mat.core();`,`@use                               '@angular/material' as mat;`,'should preserve tilde after the start',`@use '~@angular/~material' as mat;`,`@import '@angular/cdk/~overlay-prebuilt.css';`,`@use '@angular/~material' as mat;`,'should handle different types of quotes',"`@use ""~@angular/material"" as mat;`","`@use ""@angular/material"" as mat;`",'should preserve the tilde in non-angular imports',`@use '~@angular-momentum/material' as mat;`,`@import '~@angular-momentum/material/theming';`,'should remove remove .scss file extension',`@use '~@angular/material.scss' as mat;`,`@import '~@angular/material/theming.scss';`,'should properly detect imports','/test.ts',"`
      @NgModule({
        imports: [TestModule],
      })
      export class MyModule {}
    `",hasNgModuleImport,'TestModule','NotExistent','should detect build tsconfig path inside of angular.json file',testTree,'/my-custom-config.json','/angular.json',my_name,architect,build,tsConfig,'./my-custom-config.json',getWorkspaceConfigGracefully,getTargetTsconfigPath,'my_name','build','my-custom-config.json',WorkspacePath,'should be able to read workspace configuration which is using JSONC features','/my-build-config.json',"`{
      // Comments are only supported in JSONC.
      ""version"": 1,
      ""projects"": {
        ""with_tests"": {
          ""targets"": {
            ""build"": {
              ""options"": {
                ""tsConfig"": ""./my-build-config.json""
              }
            }
          }
        }
      }
    }`",'with_tests','my-build-config.json','should detect test tsconfig path inside of angular.json file','/my-test-config.json','should detect test tsconfig path inside of .angular.json file','/.angular.json',with_tests,'should be registered with the scrollable directive with the scroll service',componentScrollable,scrollContainers,'should have the scrollable directive deregistered when the component is destroyed','should notify through the directive and service that a scroll event occurred',directiveSpy,'directive scroll callback',elementScrolled,throttleTime,serviceSpy,'service scroll callback',scrollingElement,'should not execute the global events in the Angular zone',ngZone,isStable,'should not execute the scrollable events in the Angular zone','should be able to unsubscribe from the global scrollable','global scroll callback','should complete the `scrolled` stream on destroy','should complete the scrollable stream when it is destroyed','should not register the same scrollable twice',scrollSubscription,'Nested scrollables',ScrollDispatcher,NestedScrollingComponent,interestingElement,'should be able to identify the containing scrollables of an element',getAncestorScrollContainers,scrollableElementIds,getElementRef,'scrollable-1','scrollable-1a','allows a raw HTMLElement','should emit when one of the ancestor scrollable containers is scrolled',ancestorScrolled,grandparent,'#scrollable-1','should emit when one of the ancestor scrollable containers is scrolled (HTMLElement API)','should not emit when a non-ancestor is scrolled',stranger,'#scrollable-2','lazy subscription','should lazily add global listeners as service subscriptions are added and removed',_globalSubscription,'Expected no global listeners on init.','Expected global listeners after a subscription has been added.','Expected global listeners to have been removed after the subscription has stopped.',"'should remove global listeners on unsubscribe, despite any other live scrollables'",'Expected multiple scrollables','Expected global listeners to have been removed after ','the subscription has stopped.','Expected scrollable count to stay the same','should remove the global subscription on destroy',"`<div #scrollingElement cdkScrollable style=""height: 9999px""></div>`",ScrollingComponent,'scrollingElement',"`
    <div id=""scrollable-1"" cdkScrollable>
      <div id=""scrollable-1a"" cdkScrollable>
        <div #interestingElement></div>
      </div>
      <div id=""scrollable-1b"" cdkScrollable></div>
    </div>
    <div id=""scrollable-2"" cdkScrollable></div>
  `",'interestingElement','should initially be scrolled to top-left',expectOverlapping,firstRowStart,firstRowEnd,lastRowStart,lastRowEnd,measureScrollOffset,maxOffset,'should scrollTo top-left','should scrollTo bottom-right','should scroll to top-end','should scroll to bottom-start','in RTL context','should initially be scrolled to top-right',"`
    <div #scrollContainer class=""scroll-container"" cdkScrollable [dir]=""dir"">
      <div class=""row"">
        <div #firstRowStart class=""cell""></div>
        <div #firstRowEnd class=""cell""></div>
      </div>
      <div class=""row"">
        <div #lastRowStart class=""cell""></div>
        <div #lastRowEnd class=""cell""></div>
      </div>
    </div>`","`
    .scroll-container {
      width: 100px;
      height: 100px;
      overflow: auto;
    }

    .row {
      display: flex;
      flex-direction: row;
    }

    .cell {
      flex: none;
      width: 100px;
      height: 100px;
    }
  `",ScrollableViewport,'firstRowStart','firstRowEnd','lastRowStart','lastRowEnd','should get the viewport size','should get the viewport bounds when the page is not scrolled',bounds,'should get the viewport bounds when the page is scrolled',1500,startingWindowWidth,'should get the bounds based on client coordinates when the page is pinch-zoomed','should get the scroll position when the page is not scrolled',scrollPos,'should get the scroll position when the page is scrolled','should dispatch an event when the window is resized','viewport changed spy','should dispatch an event when the orientation is changed','should be able to throttle the callback','should run the resize event outside the NgZone',"'should run events outside of the NgZone, even if the subcription is from inside'",'should render initial state','should get the data length',getDataLength,'should update viewport size',checkViewportSize,'should update the viewport size when the page viewport changes','checkViewportSize','should get the rendered range',getRenderedRange,'should render the first 4 50px items to fill 200px space','should contract the rendered range when changing to less data','should get the rendered content offset',triggerScroll,itemSize,getOffsetToRenderedContentStart,'should have 50px offset since first 50px item is not rendered','should get the scroll offset','should get the rendered content size',measureRenderedContentSize,'should render 4 50px items with combined size of 200px to fill 200px space','should measure range size',measureRangeSize,'combined size of 2 50px items should be 100px','should measure range size when items has a margin',hasMargin,'combined size of 2 50px items with a 10px margin should be 110px','should set total content size',setTotalContentSize,'should set total content size in horizontal mode','should set a class based on the orientation',viewportElement,'.cdk-virtual-scroll-viewport','cdk-virtual-scroll-orientation-vertical','cdk-virtual-scroll-orientation-horizontal','should set the vertical class if an invalid orientation is set','diagonal','should set rendered range',setRenderedRange,'.item','Expected 1 item to be rendered','Expected item with index 2 to be rendered','2 - 2','should set content offset to top of content',setRenderedContentOffset,'to-start','should set content offset to bottom of content','to-end','should scroll to offset',scrollToOffset,'should scroll to index',scrollToIndex,'should scroll to offset in horizontal mode','should scroll to index in horizontal mode','should output scrolled index',scrolledToIndex,'should update viewport as user scrolls down',expectedRange,`rendered range should match expected value at scroll offset ${,`rendered content offset should match expected value at `,`scroll offset ${,`rendered content size should match expected value at offset ${,'should update viewport as user scrolls up',`rendered content offset should match expected value at scroll `,`offset ${,'should render buffer element at the end when scrolled to the top',"'should render the first 5 50px items to fill 200px space, '",'plus one buffer element at the end','should render buffer element at the start and end when scrolled to the middle',"'should render 6 50px items to fill 200px space, plus one '",'buffer element at the start and end','should render buffer element at the start when scrolled to the bottom',"'should render the last 5 50px items to fill 200px space, plus one '",'buffer element at the start','should handle dynamic item size','should render 2 100px items to fill 200px space','should handle dynamic buffer size','should expand to 1 buffer element on each side','should handle dynamic item array','should be scrolled to bottom of 10 item list','should be scrolled to bottom of 5 item list','should handle dynamic item array with dynamic buffer','should render from first item','should handle dynamic item array keeping position when possible','should be scrolled to index 50 item list','should be kept the scroll position','should update viewport as user scrolls right in horizontal mode','should update viewport as user scrolls left in horizontal mode','should work with a Set','how','are','you','newly emitted items should be rendered','should work with an Observable',Subject,'no items should be rendered','should work with a DataSource',ArrayDataSource,'should disconnect from data source on destroy','connect','should trackBy value by default',virtualForOf,_viewContainerRef,'should trackBy index when specified',trackBy,'should recycle views when template cache is large enough to accommodate','_getEmbeddedViewArgs',_getEmbeddedViewArgs,'should not recycle views when template cache is full',templateCacheSize,'should render up to maxBufferPx when buffer dips below minBufferPx','should have 2 buffer items initially','should not render additional buffer yet','should render 2 more buffer items','should register and degregister with ScrollDispatcher','should emit on viewChange inside the Angular zone',zoneTest,'zone test','should not throw when disposing of a view that will not fit in the cache','viewChange change detection behavior',ApplicationRef,ar,'should not run change detection if there are no viewChange listeners','should run change detection if there are any viewChange listeners','with RTL direction',FixedSizeVirtualScrollWithRtlDirection,contentWrapperEl,ScrollingModule,'should initially be scrolled all the way right and showing the first item in horizontal',' mode',/translateX\(0(px)?\)/,'0 - 0','should scroll through items as user scrolls to the left in horizontal mode','translateX(-300px)','6 - 6','should interpret scrollToOffset amount as an offset from the right in horizontal mode','should scroll to the correct index in horizontal mode','should emit the scrolled to index in horizontal mode','with no VirtualScrollStrategy',VirtualScrollWithNoStrategy,'should fail on construction',"'Error: cdk-virtual-scroll-viewport requires the ""itemSize"" property to be set.'",'with item that injects ViewContainerRef',VirtualScrollWithItemInjectingViewContainer,InjectsViewContainer,'should render the values in the correct sequence when an item is ','injecting ViewContainerRef','with delayed initialization',DelayedInitializationVirtualScroll,CommonModule,'should call custom trackBy when virtual for is added after init',renderVirtualFor,'with append only',VirtualScrollWithAppendOnly,'should not remove item that have already been rendered','rendered offset should always start at 0','should have 0px offset as we are using appendOnly',animationFrameScheduler,"`
    <cdk-virtual-scroll-viewport
        [itemSize]=""itemSize"" [minBufferPx]=""minBufferPx"" [maxBufferPx]=""maxBufferPx""
        [orientation]=""orientation"" [style.height.px]=""viewportHeight""
        [style.width.px]=""viewportWidth"" (scrolledIndexChange)=""scrolledToIndex = $event""
        [class.has-margin]=""hasMargin"">
      <div class=""item""
           *cdkVirtualFor=""let item of items; let i = index; trackBy: trackBy; \
                           templateCacheSize: templateCacheSize""
           [style.height.px]=""itemSize"" [style.width.px]=""itemSize"">
        {{i}} - {{item}}
      </div>
    </cdk-virtual-scroll-viewport>
  `","`
    .cdk-virtual-scroll-content-wrapper {
      display: flex;
      flex-direction: column;
    }

    .cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper {
      flex-direction: row;
    }

    .cdk-virtual-scroll-viewport {
      background-color: #f5f5f5;
    }

    .item {
      box-sizing: border-box;
      border: 1px dashed #ccc;
    }

    .has-margin .item {
      margin-bottom: 10px;
    }
  `",FixedSizeVirtualScroll,CdkVirtualForOf,TrackByFunction,"`
    <cdk-virtual-scroll-viewport dir=""rtl""
        [itemSize]=""itemSize"" [minBufferPx]=""minBufferPx"" [maxBufferPx]=""maxBufferPx""
        [orientation]=""orientation"" [style.height.px]=""viewportHeight""
        [style.width.px]=""viewportWidth"" (scrolledIndexChange)=""scrolledToIndex = $event"">
      <div class=""item""
           *cdkVirtualFor=""let item of items; let i = index; trackBy: trackBy; \
                           templateCacheSize: templateCacheSize""
           [style.height.px]=""itemSize"" [style.width.px]=""itemSize"">
        {{i}} - {{item}}
      </div>
    </cdk-virtual-scroll-viewport>
  `","`
    .cdk-virtual-scroll-content-wrapper {
      display: flex;
      flex-direction: column;
    }

    .cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper {
      flex-direction: row;
    }

    .cdk-virtual-scroll-viewport {
      background-color: #f5f5f5;
    }

    .item {
      box-sizing: border-box;
      border: 1px dashed #ccc;
    }
  `","`
    <cdk-virtual-scroll-viewport>
      <div class=""item"" *cdkVirtualFor=""let item of items"">{{item}}</div>
    </cdk-virtual-scroll-viewport>
  `","`
    .cdk-virtual-scroll-viewport {
      background-color: #f5f5f5;
    }

    .item {
      box-sizing: border-box;
      border: 1px dashed #ccc;
    }
  `",'[injects-view-container]',"`
    <cdk-virtual-scroll-viewport itemSize=""50"">
      <div injects-view-container class=""item"" *cdkVirtualFor=""let item of items"">{{item}}</div>
    </cdk-virtual-scroll-viewport>
  `","`
    .cdk-virtual-scroll-content-wrapper {
      display: flex;
      flex-direction: column;
    }

    .cdk-virtual-scroll-viewport {
      width: 200px;
      height: 200px;
      background-color: #f5f5f5;
    }

    .item {
      width: 100%;
      height: 50px;
      box-sizing: border-box;
      border: 1px dashed #ccc;
    }
  `",20000,"`
    <cdk-virtual-scroll-viewport [itemSize]=""itemSize"">
      <ng-container *ngIf=""renderVirtualFor"">
        <div class=""item"" *cdkVirtualFor=""let item of items; trackBy: trackBy"">{{item}}</div>
      </ng-container>
    </cdk-virtual-scroll-viewport>
  `",'trackBy',"`
    <cdk-virtual-scroll-viewport appendOnly itemSize=""50"">
      <div class=""item"" *cdkVirtualFor=""let item of items"">{{item}}</div>
    </cdk-virtual-scroll-viewport>
  `",'with a connected data source',contentChangedCount,'with a rendered header with the right number of header cells','customHeaderRowClass',columnsToRender,'with rendered rows with right number of row cells','customRowClass','with column class names provided to header and data row cells',`cdk-column-${,'with the right accessibility roles','table','cell','should disconnect the data source when table is destroyed','should re-render the rows when the data changes','should clear the `mostRecentCellOutlet` on destroy',CdkCellOutlet,mostRecentCellOutlet,'should correctly use the differ to add/remove/move rows',addInitialIndexAttribute,'initialIndex',initialRows,'when the data is heterogeneous',temp,changedRows,'when the data contains multiple occurrences of the same object instance',numInitialRows,'should clear the row view containers on destroy',rowOutlet,_rowOutlet,viewContainer,headerPlaceholder,_headerRowOutlet,'clear','should match the right table content with dynamic data',initialDataLength,expectTableToMatchContent,'Column A','Column B','Column C','Footer A','Footer B','Footer C','should be able to dynamically change the columns for header and rows','column_c','column_b',changedTableContent,rowData,'should be able to show a message when no data is being displayed','.cdk-no-data-row',originalData,noDataRow,'should show the no data row if there is no data on init',SimpleCdkTableApp,'.cdk-table','should render no rows when the data is null',setupTableTestApp,NullDataCdkTableApp,'should be able to render multiple header and footer rows',MultipleHeaderFooterRowsCdkTableApp,'first-header','second-header','first-footer','second-footer','should be able to project a caption',NativeHtmlTableWithCaptionApp,'should be able to project colgroup and col',NativeHtmlTableWithColgroupAndCol,colgroupsAndCols,"'colgroup, col'",'colgroup','col','with different data inputs other than data source',baseData,'a_1','b_1','c_1','a_2','b_2','c_2','a_3','b_3','c_3',CdkTableWithDifferentDataInputsApp,'should render with data array input',expectedRender,'a_4','b_4','c_4',renderRows,'should render with data stream input',stream,'a_5','b_5','c_5','should throw an error if the data source is not valid','dataSource',getTableUnknownDataSourceError,'missing row defs','should be able to render without a header row def',MissingHeaderRowDefCdkTableApp,'should be able to render without a data row def',MissingRowDefCdkTableApp,'should be able to render without a footer row def',MissingFooterRowDefCdkTableApp,'should render correctly when using native HTML tags',thisFixture,NativeHtmlTableApp,thisTableElement,'should be able to nest tables',NestedHtmlTableApp,outerTable,innerTable,outerRows,HTMLTableRowElement,'tbody',innerRows,'should be able to show a message when no data is being displayed in a native table','should apply correct roles for native table elements',HTMLTableElement,rowGroups,"'thead, tbody, tfoot'","'Expected table to have a thead, tbody, and tfoot'","'Expected thead, tbody, and tfoot to have role=""rowgroup""'",'should hide thead/tfoot when there are no header/footer rows',NativeTableWithNoHeaderOrFooterRows,"'thead, tfoot'",'Expected table to have a thead and tfoot','Expected thead and tfoot to be `display: none`','should render cells even if row data is falsy',BooleanRowCdkTableApp,'should be able to apply class-friendly css class names for the column cells',CrazyColumnNameCdkTableApp,'cdk-column-crazy-column-NAME-1-------_----2','should not clobber an existing table role',CustomRoleCdkTableApp,'treegrid','should throw an error if two column definitions have the same name',DuplicateColumnDefNameCdkTableApp,getTableDuplicateColumnNameError,'column_a','should throw an error if a column definition is requested but not defined',MissingColumnDefCdkTableApp,getTableUnknownColumnError,'should pick up columns that are indirect descendants',TableWithIndirectDescendantDefs,'should throw an error if a column definition is requested but not defined after render',columnDefinitionMissingAfterRenderFixture,MissingColumnDefAfterRenderCdkTableApp,'should throw an error if the row definitions are missing',MissingAllRowDefsCdkTableApp,getTableMissingRowDefsError,'should not throw an error if columns are undefined on initialization',UndefinedColumnsCdkTableApp,headerRow,'should be able to dynamically add/remove column definitions',DynamicColumnDefinitionsCdkTableApp,columnA,'columnA',dynamicColumns,columnB,'columnB',"'should be able to register column, row, and header row definitions outside content'",OuterTableApp,WrapperCdkTableApp,'Content Column A','Content Column B','Injected Column A','Injected Column B','injected row with when predicate','should be able to register a no data row defined outside the table','using when predicate','should be able to display different row templates based on the row data',WhenRowCdkTableApp,'index_1_special_row','c3_special_row','should error if there is row data that does not have a matching row template',whenRowWithoutDefaultFixture,WhenRowWithoutDefaultCdkTableApp,getTableMissingMatchingRowDefError,'should fail when multiple rows match data without multiTemplateDataRows',whenFixture,WhenRowMultipleDefaultsCdkTableApp,getTableMultipleDefaultRowDefsError,'with multiTemplateDataRows','should be able to render multiple rows per data object',multiTemplateDataRows,'should have the correct data and row indicies',showIndexColumns,'Index','Data Index','Render Index','should have the correct data and row indicies when data contains multiple instances of ','the same object instance','should not throw when multiTemplateDataRows is coerced from a static value',CoercedMultiTemplateDataRows,'with sticky positioning',PositionDirections,expectNoStickyStyles,'cdk-table-sticky',expectStickyBorderClass,} to be unset`,expectStickyStyles,directions,'sticky',`Expected zIndex to be ${,directionValue,expectationMessage,`Expected direction ${,} to be ${,stickyClass,`cdk-table-sticky-border-elem-${,"'on ""display: flex"" table style'",StickyFlexLayoutCdkTableApp,'should stick and unstick headers',mostRecentStickyHeaderRowsUpdate,sizes,offsets,mostRecentStickyFooterRowsUpdate,mostRecentStickyColumnsUpdate,mostRecentStickyEndColumnsUpdate,'should stick and unstick footers','should stick the correct footer row','should stick and unstick left columns',getFooterCells,'should stick and unstick right columns','should reverse directions for sticky columns in rtl',firstColumnWidth,lastColumnWidth,headerCells,footerCells,"'should stick and unstick combination of sticky header, footer, and columns'",'on native table layout',firstHeaderHeight,thirdFooterHeight,'should stick tfoot when all rows are stuck','tfoot','footer-2','101','with trackBy',createTestComponentWithTrackyByTable,trackByStrategy,TrackByCdkTableApp,'cdk-table',mutateData,'should add/remove/move rows with reference-based trackBy','reference','should add/remove/move rows with changed references without property-based trackBy','should add/remove/move rows with changed references with property-based trackBy','propertyA','should add/remove/move rows with changed references with index-based trackBy','should change row implicit data even when trackBy finds no changes',firstRow,'a_1 b_1','a_2 b_2','should match the right table content with dynamic data source',DynamicDataSourceCdkTableApp,dynamicDataSource,newDynamicDataSource,newData,'should be able to apply classes to rows based on their context',RowContextCdkTableApp,rowElements,'cdk-row','custom-row-class-first','custom-row-class-last','custom-row-class-even','custom-row-class-odd',enableRowContextClasses,'should be able to apply classes to cells based on their row context',cellElements,'custom-cell-class-first','custom-cell-class-last','custom-cell-class-even','custom-cell-class-odd',enableCellContextClasses,cellElement,BooleanDataSource,Observable,"`
    <cdk-table [dataSource]=""dataSource""
               (contentChanged)=""contentChangedCount = contentChangedCount + 1"">
      <ng-container cdkColumnDef=""column_a"">
        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.a}} </cdk-cell>
        <cdk-footer-cell *cdkFooterCellDef> Footer A</cdk-footer-cell>
      </ng-container>

      <ng-container cdkColumnDef=""column_b"">
        <cdk-header-cell *cdkHeaderCellDef> Column B</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.b}} </cdk-cell>
        <cdk-footer-cell *cdkFooterCellDef> Footer B</cdk-footer-cell>
      </ng-container>

      <ng-container cdkColumnDef=""column_c"">
        <cdk-header-cell *cdkHeaderCellDef> Column C</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.c}} </cdk-cell>
        <cdk-footer-cell *cdkFooterCellDef> Footer C</cdk-footer-cell>
      </ng-container>

      <cdk-header-row class=""customHeaderRowClass""
                      *cdkHeaderRowDef=""columnsToRender""></cdk-header-row>
      <cdk-row class=""customRowClass""
               *cdkRowDef=""let row; columns: columnsToRender""></cdk-row>
      <cdk-footer-row class=""customFooterRowClass""
                      *cdkFooterRowDef=""columnsToRender""></cdk-footer-row>

      <div *cdkNoDataRow>No data</div>
    </cdk-table>
  `","`
    <cdk-table [dataSource]=""dataSource"">
      <ng-container cdkColumnDef=""column_a"">
        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.a}}</cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""column_b"">
        <cdk-header-cell *cdkHeaderCellDef> Column B</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.b}}</cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""column_c"">
        <cdk-header-cell *cdkHeaderCellDef> Column C</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.c}}</cdk-cell>
      </ng-container>

      <cdk-header-row *cdkHeaderRowDef=""columnsToRender""></cdk-header-row>
      <cdk-row *cdkRowDef=""let row; columns: columnsToRender""></cdk-row>
    </cdk-table>
  `","`
    <cdk-table [dataSource]=""dataSource"">
      <ng-container cdkColumnDef=""column_a"">
        <cdk-header-cell *cdkHeaderCellDef></cdk-header-cell>
        <cdk-cell *cdkCellDef=""let data""> {{data}} </cdk-cell>
      </ng-container>

      <cdk-header-row *cdkHeaderRowDef=""['column_a']""></cdk-header-row>
      <cdk-row *cdkRowDef=""let row; columns: ['column_a']""></cdk-row>
    </cdk-table>
  `","`
    <cdk-table [dataSource]=""dataSource""
               (contentChanged)=""contentChangedCount = contentChangedCount + 1"">
      <ng-container cdkColumnDef=""column_a"">
        <cdk-header-cell *cdkHeaderCellDef></cdk-header-cell>
        <cdk-cell *cdkCellDef=""let data""> {{data}} </cdk-cell>
      </ng-container>

      <cdk-header-row *cdkHeaderRowDef=""['column_a']""></cdk-header-row>
      <cdk-row *cdkRowDef=""let row; columns: ['column_a']""></cdk-row>
    </cdk-table>
  `","`
    <cdk-table [dataSource]=""[]"">
      <ng-container cdkColumnDef=""first-header"">
        <th cdk-header-cell *cdkHeaderCellDef> first-header </th>
      </ng-container>

      <ng-container cdkColumnDef=""second-header"">
        <th cdk-header-cell *cdkHeaderCellDef> second-header </th>
      </ng-container>

      <ng-container cdkColumnDef=""first-footer"">
        <td cdk-footer-cell *cdkFooterCellDef> first-footer </td>
      </ng-container>

      <ng-container cdkColumnDef=""second-footer"">
        <td cdk-footer-cell *cdkFooterCellDef> second-footer </td>
      </ng-container>

      <tr cdk-header-row *cdkHeaderRowDef=""['first-header']""></tr>
      <tr cdk-header-row *cdkHeaderRowDef=""['second-header']""></tr>
      <tr cdk-footer-row *cdkFooterRowDef=""['first-footer']""></tr>
      <tr cdk-footer-row *cdkFooterRowDef=""['second-footer']""></tr>
    </cdk-table>
  `","`
    <cdk-table [dataSource]=""dataSource"" [multiTemplateDataRows]=""multiTemplateDataRows"">
      <ng-container cdkColumnDef=""column_a"">
        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.a}}</cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""column_b"">
        <cdk-header-cell *cdkHeaderCellDef> Column B</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.b}}</cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""column_c"">
        <cdk-header-cell *cdkHeaderCellDef> Column C</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.c}}</cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""index1Column"">
        <cdk-header-cell *cdkHeaderCellDef> Column C</cdk-header-cell>
        <cdk-cell *cdkCellDef> index_1_special_row</cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""c3Column"">
        <cdk-header-cell *cdkHeaderCellDef> Column C</cdk-header-cell>
        <cdk-cell *cdkCellDef> c3_special_row</cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""index"">
        <cdk-header-cell *cdkHeaderCellDef> Index</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let index = index""> {{index}}</cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""dataIndex"">
        <cdk-header-cell *cdkHeaderCellDef> Data Index</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let dataIndex = dataIndex""> {{dataIndex}}</cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""renderIndex"">
        <cdk-header-cell *cdkHeaderCellDef> Render Index</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let renderIndex = renderIndex""> {{renderIndex}}</cdk-cell>
      </ng-container>

      <cdk-header-row *cdkHeaderRowDef=""columnsToRender""></cdk-header-row>
      <cdk-row *cdkRowDef=""let row; columns: columnsToRender""></cdk-row>
      <cdk-row *cdkRowDef=""let row; columns: columnsForIsIndex1Row; when: isIndex1""></cdk-row>
      <cdk-row *cdkRowDef=""let row; columns: columnsForHasC3Row; when: hasC3""></cdk-row>
    </cdk-table>
  `",columnsForIsIndex1Row,'index1Column',columnsForHasC3Row,'c3Column',isIndex1,_rowData,hasC3,_index,indexColumns,'dataIndex','renderIndex',"`
    <cdk-table [dataSource]=""dataSource"" multiTemplateDataRows>
      <ng-container cdkColumnDef=""column_a"">
        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.a}}</cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""column_b"">
        <cdk-header-cell *cdkHeaderCellDef> Column B</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.b}}</cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""column_c"">
        <cdk-header-cell *cdkHeaderCellDef> Column C</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.c}}</cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""index1Column"">
        <cdk-header-cell *cdkHeaderCellDef> Column C</cdk-header-cell>
        <cdk-cell *cdkCellDef> index_1_special_row</cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""c3Column"">
        <cdk-header-cell *cdkHeaderCellDef> Column C</cdk-header-cell>
        <cdk-cell *cdkCellDef> c3_special_row</cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""index"">
        <cdk-header-cell *cdkHeaderCellDef> Index</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let index = index""> {{index}}</cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""dataIndex"">
        <cdk-header-cell *cdkHeaderCellDef> Data Index</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let dataIndex = dataIndex""> {{dataIndex}}</cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""renderIndex"">
        <cdk-header-cell *cdkHeaderCellDef> Render Index</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let renderIndex = renderIndex""> {{renderIndex}}</cdk-cell>
      </ng-container>

      <cdk-header-row *cdkHeaderRowDef=""columnsToRender""></cdk-header-row>
      <cdk-row *cdkRowDef=""let row; columns: columnsToRender""></cdk-row>
      <cdk-row *cdkRowDef=""let row; columns: columnsForIsIndex1Row; when: isIndex1""></cdk-row>
      <cdk-row *cdkRowDef=""let row; columns: columnsForHasC3Row; when: hasC3""></cdk-row>
    </cdk-table>
  `","`
    <cdk-table [dataSource]=""dataSource"">
      <ng-container cdkColumnDef=""column_a"">
        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.a}}</cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""column_b"">
        <cdk-header-cell *cdkHeaderCellDef> Column B</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.b}}</cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""column_c"">
        <cdk-header-cell *cdkHeaderCellDef> Column C</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.c}}</cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""index1Column"">
        <cdk-header-cell *cdkHeaderCellDef> Column C</cdk-header-cell>
        <cdk-cell *cdkCellDef> index_1_special_row </cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""c3Column"">
        <cdk-header-cell *cdkHeaderCellDef> Column C</cdk-header-cell>
        <cdk-cell *cdkCellDef> c3_special_row </cdk-cell>
      </ng-container>

      <cdk-header-row *cdkHeaderRowDef=""columnsToRender""></cdk-header-row>
      <cdk-row *cdkRowDef=""let row; columns: ['index1Column']; when: isIndex1""></cdk-row>
      <cdk-row *cdkRowDef=""let row; columns: ['c3Column']; when: hasC3""></cdk-row>
    </cdk-table>
  `","`
    <cdk-table [dataSource]=""dataSource"">
      <ng-container cdkColumnDef=""column_a"">
        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.a}}</cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""column_b"">
        <cdk-header-cell *cdkHeaderCellDef> Column B</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.b}}</cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""column_c"">
        <cdk-header-cell *cdkHeaderCellDef> Column C</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.c}}</cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""index1Column"">
        <cdk-header-cell *cdkHeaderCellDef> Column C</cdk-header-cell>
        <cdk-cell *cdkCellDef> index_1_special_row </cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""c3Column"">
        <cdk-header-cell *cdkHeaderCellDef> Column C</cdk-header-cell>
        <cdk-cell *cdkCellDef> c3_special_row </cdk-cell>
      </ng-container>

      <cdk-header-row *cdkHeaderRowDef=""columnsToRender""></cdk-header-row>
      <cdk-row *cdkRowDef=""let row; columns: columnsToRender""></cdk-row>
      <cdk-row *cdkRowDef=""let row; columns: ['index1Column']""></cdk-row>
      <cdk-row *cdkRowDef=""let row; columns: ['c3Column']; when: hasC3""></cdk-row>
    </cdk-table>
  `","`
    <cdk-table [dataSource]=""dataSource"">
      <ng-container cdkColumnDef=""column_a"">
        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.a}}</cdk-cell>
      </ng-container>

      <cdk-header-row *cdkHeaderRowDef=""columnsToRender""></cdk-header-row>
      <cdk-row *cdkRowDef=""let row; columns: columnsToRender""></cdk-row>
    </cdk-table>
  `","`
    <cdk-table [dataSource]=""dataSource"" [trackBy]=""trackBy"">
      <ng-container cdkColumnDef=""column_a"">
        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.a}}</cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""column_b"">
        <cdk-header-cell *cdkHeaderCellDef> Column B</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.b}}</cdk-cell>
      </ng-container>

      <cdk-header-row *cdkHeaderRowDef=""columnsToRender""></cdk-header-row>
      <cdk-row *cdkRowDef=""let row; columns: columnsToRender""></cdk-row>
    </cdk-table>
  `",StickyPositioningListenerTest,StickyPositioningListener,StickyUpdate,stickyColumnsUpdated,stickyEndColumnsUpdated,stickyHeaderRowsUpdated,stickyFooterRowsUpdated,"`
    <cdk-table [dataSource]=""dataSource"" [dir]=""dir"">
      <ng-container [cdkColumnDef]=""column"" *ngFor=""let column of columns""
                    [sticky]=""isStuck(stickyStartColumns, column)""
                    [stickyEnd]=""isStuck(stickyEndColumns, column)"">
        <cdk-header-cell *cdkHeaderCellDef> Header {{column}} </cdk-header-cell>
        <cdk-cell *cdkCellDef>{{column}}</cdk-cell>
        <cdk-footer-cell *cdkFooterCellDef> Footer {{column}} </cdk-footer-cell>
      </ng-container>

      <cdk-header-row *cdkHeaderRowDef=""columns; sticky: isStuck(stickyHeaders, 'header-1')"">
      </cdk-header-row>
      <cdk-header-row *cdkHeaderRowDef=""columns; sticky: isStuck(stickyHeaders, 'header-2')"">
      </cdk-header-row>
      <cdk-header-row *cdkHeaderRowDef=""columns; sticky: isStuck(stickyHeaders, 'header-3')"">
      </cdk-header-row>

      <cdk-row *cdkRowDef=""let row; columns: columns""></cdk-row>

      <cdk-footer-row *cdkFooterRowDef=""columns; sticky: isStuck(stickyFooters, 'footer-1')"">
      </cdk-footer-row>
      <cdk-footer-row *cdkFooterRowDef=""columns; sticky: isStuck(stickyFooters, 'footer-2')"">
      </cdk-footer-row>
      <cdk-footer-row *cdkFooterRowDef=""columns; sticky: isStuck(stickyFooters, 'footer-3')"">
      </cdk-footer-row>
    </cdk-table>
  `","`
    .cdk-header-cell, .cdk-cell, .cdk-footer-cell {
      display: block;
      width: 20px;
    }
    .cdk-header-row, .cdk-row, .cdk-footer-row {
      display: flex;
    }
  `",STICKY_POSITIONING_LISTENER,"`
    <table cdk-table [dataSource]=""dataSource"">
      <ng-container [cdkColumnDef]=""column"" *ngFor=""let column of columns""
                    [sticky]=""isStuck(stickyStartColumns, column)""
                    [stickyEnd]=""isStuck(stickyEndColumns, column)"">
        <th cdk-header-cell *cdkHeaderCellDef> Header {{column}} </th>
        <td cdk-cell *cdkCellDef=""let row""> {{column}} </td>
        <td cdk-footer-cell *cdkFooterCellDef> Footer {{column}} </td>
      </ng-container>

      <tr cdk-header-row *cdkHeaderRowDef=""columns; sticky: isStuck(stickyHeaders, 'header-1')"">
      </tr>
      <tr cdk-header-row *cdkHeaderRowDef=""columns; sticky: isStuck(stickyHeaders, 'header-2')"">
      </tr>
      <tr cdk-header-row *cdkHeaderRowDef=""columns; sticky: isStuck(stickyHeaders, 'header-3')"">
      </tr>

      <tr cdk-row *cdkRowDef=""let row; columns: columns""></tr>

      <tr cdk-footer-row *cdkFooterRowDef=""columns; sticky: isStuck(stickyFooters, 'footer-1')"">
      </tr>
      <tr cdk-footer-row *cdkFooterRowDef=""columns; sticky: isStuck(stickyFooters, 'footer-2')"">
      </tr>
      <tr cdk-footer-row *cdkFooterRowDef=""columns; sticky: isStuck(stickyFooters, 'footer-3')"">
      </tr>
    </table>
  `","`
    <cdk-table [dataSource]=""dataSource"">
      <ng-container [cdkColumnDef]=""column"" *ngFor=""let column of dynamicColumns"">
        <cdk-header-cell *cdkHeaderCellDef> {{column}} </cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{column}} </cdk-cell>
      </ng-container>

      <cdk-header-row *cdkHeaderRowDef=""dynamicColumns""></cdk-header-row>
      <cdk-row *cdkRowDef=""let row; columns: dynamicColumns;""></cdk-row>
    </cdk-table>
  `","`
    <cdk-table [dataSource]=""dataSource"" role=""treegrid"">
      <ng-container cdkColumnDef=""column_a"">
        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.a}}</cdk-cell>
      </ng-container>

      <cdk-header-row *cdkHeaderRowDef=""columnsToRender""></cdk-header-row>
      <cdk-row *cdkRowDef=""let row; columns: columnsToRender""></cdk-row>
    </cdk-table>
  `","`
    <cdk-table [dataSource]=""dataSource"">
      <ng-container [cdkColumnDef]=""columnsToRender[0]"">
        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.a}}</cdk-cell>
      </ng-container>

      <cdk-header-row *cdkHeaderRowDef=""columnsToRender""></cdk-header-row>
      <cdk-row *cdkRowDef=""let row; columns: columnsToRender""></cdk-row>
    </cdk-table>
  `",'crazy-column-NAME-1!@#$%^-_&*()2',"`
    <cdk-table [dataSource]=""dataSource"">
      <ng-container cdkColumnDef=""column_a"">
        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.a}}</cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""column_a"">
        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.a}}</cdk-cell>
      </ng-container>

      <cdk-header-row *cdkHeaderRowDef=""['column_a']""></cdk-header-row>
      <cdk-row *cdkRowDef=""let row; columns: ['column_a']""></cdk-row>
    </cdk-table>
  `","`
    <cdk-table [dataSource]=""dataSource"">
      <ng-container cdkColumnDef=""column_b"">
        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.a}}</cdk-cell>
      </ng-container>

      <cdk-header-row *cdkHeaderRowDef=""['column_a']""></cdk-header-row>
      <cdk-row *cdkRowDef=""let row; columns: ['column_a']""></cdk-row>
    </cdk-table>
  `","`
    <cdk-table [dataSource]=""dataSource"">
      <ng-container cdkColumnDef=""column_b"">
        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.a}}</cdk-cell>
      </ng-container>

      <cdk-header-row *cdkHeaderRowDef=""displayedColumns""></cdk-header-row>
      <cdk-row *cdkRowDef=""let row; columns: displayedColumns""></cdk-row>
    </cdk-table>
  `",displayedColumns,"`
    <cdk-table [dataSource]=""dataSource"">
      <ng-container cdkColumnDef=""column_a"">
        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.a}}</cdk-cell>
      </ng-container>
    </cdk-table>
  `","`
    <cdk-table [dataSource]=""dataSource"">
      <ng-container cdkColumnDef=""column_a"">
        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.a}} </cdk-cell>
        <cdk-footer-cell *cdkFooterCellDef> Footer A </cdk-footer-cell>
      </ng-container>

      <cdk-row *cdkRowDef=""let row; columns: ['column_a']""></cdk-row>
      <cdk-footer-row *cdkFooterRowDef=""['column_a']""></cdk-footer-row>
    </cdk-table>
  `","`
    <cdk-table [dataSource]=""dataSource"">
      <ng-container cdkColumnDef=""column_a"">
        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.a}} </cdk-cell>
        <cdk-footer-cell *cdkFooterCellDef> Footer A </cdk-footer-cell>
      </ng-container>

      <cdk-header-row *cdkHeaderRowDef=""['column_a']""></cdk-header-row>
      <cdk-footer-row *cdkFooterRowDef=""['column_a']""></cdk-footer-row>
    </cdk-table>
  `","`
    <cdk-table [dataSource]=""dataSource"">
      <ng-container cdkColumnDef=""column_a"">
        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.a}} </cdk-cell>
        <cdk-footer-cell *cdkFooterCellDef> Footer A </cdk-footer-cell>
      </ng-container>

      <cdk-header-row *cdkHeaderRowDef=""['column_a']""></cdk-header-row>
      <cdk-row *cdkRowDef=""let row; columns: ['column_a']""></cdk-row>
    </cdk-table>
  `","`
    <cdk-table [dataSource]=""dataSource"">
      <ng-container cdkColumnDef=""column_a"">
        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.a}}</cdk-cell>
      </ng-container>

      <cdk-header-row *cdkHeaderRowDef=""undefinedColumns""></cdk-header-row>
      <cdk-row *cdkRowDef=""let row; columns: undefinedColumns""></cdk-row>
    </cdk-table>
  `",undefinedColumns,"`
    <cdk-table [dataSource]=""dataSource"">
      <ng-container cdkColumnDef=""column_a"">
        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row; let first = first;
                               let last = last; let even = even; let odd = odd""
                  [ngClass]=""{
                    'custom-cell-class-first': enableCellContextClasses && first,
                    'custom-cell-class-last': enableCellContextClasses && last,
                    'custom-cell-class-even': enableCellContextClasses && even,
                    'custom-cell-class-odd': enableCellContextClasses && odd
                  }"">
          {{row.a}}
        </cdk-cell>
      </ng-container>
      <cdk-header-row *cdkHeaderRowDef=""columnsToRender""></cdk-header-row>
      <cdk-row *cdkRowDef=""let row; columns: columnsToRender;
                           let first = first; let last = last; let even = even; let odd = odd""
               [ngClass]=""{
                 'custom-row-class-first': enableRowContextClasses && first,
                 'custom-row-class-last': enableRowContextClasses && last,
                 'custom-row-class-even': enableRowContextClasses && even,
                 'custom-row-class-odd': enableRowContextClasses && odd
               }"">
      </cdk-row>
    </cdk-table>
  `",'wrapper-table',"`
    <cdk-table [dataSource]=""dataSource"">
      <ng-container cdkColumnDef=""content_column_a"">
        <cdk-header-cell *cdkHeaderCellDef> Content Column A </cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.a}} </cdk-cell>
      </ng-container>
      <ng-container cdkColumnDef=""content_column_b"">
        <cdk-header-cell *cdkHeaderCellDef> Content Column B </cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.b}} </cdk-cell>
      </ng-container>

      <cdk-row *cdkRowDef=""let row; columns: columns""></cdk-row>
      <div *cdkNoDataRow>No data</div>
    </cdk-table>
  `",AfterContentInit,ContentChildren,CdkColumnDef,columnDefs,ContentChild,CdkHeaderRowDef,headerRowDef,CdkRowDef,rowDefs,CdkNoDataRow,ngAfterContentInit,columnDef,addColumnDef,rowDef,addRowDef,addHeaderRowDef,setNoDataRow,"`
    <wrapper-table [dataSource]=""dataSource"" [columns]=""columnsToRender"">
      <ng-container cdkColumnDef=""injected_column_a"">
        <cdk-header-cell *cdkHeaderCellDef> Injected Column A </cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.a}} </cdk-cell>
      </ng-container>
      <ng-container cdkColumnDef=""injected_column_b"">
        <cdk-header-cell *cdkHeaderCellDef> Injected Column B </cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.b}} </cdk-cell>
      </ng-container>

      <!-- Only used for the 'when' row, the first row -->
      <ng-container cdkColumnDef=""special_column"">
        <cdk-cell *cdkCellDef=""let row""> injected row with when predicate </cdk-cell>
      </ng-container>

      <cdk-header-row *cdkHeaderRowDef=""columnsToRender""></cdk-header-row>
      <cdk-row class=""first-row"" *cdkRowDef=""let row; columns: ['special_column']; when: firstRow"">
      </cdk-row>
    </wrapper-table>
  `",'content_column_a','content_column_b','injected_column_a','injected_column_b',"`
    <table cdk-table [dataSource]=""dataSource"">
      <ng-container cdkColumnDef=""column_a"">
        <th cdk-header-cell *cdkHeaderCellDef> Column A</th>
        <td cdk-cell *cdkCellDef=""let row""> {{row.a}}</td>
      </ng-container>

      <ng-container cdkColumnDef=""column_b"">
        <th cdk-header-cell *cdkHeaderCellDef> Column B</th>
        <td cdk-cell *cdkCellDef=""let row""> {{row.b}}</td>
      </ng-container>

      <ng-container cdkColumnDef=""column_c"">
        <th cdk-header-cell *cdkHeaderCellDef> Column C</th>
        <td cdk-cell *cdkCellDef=""let row""> {{row.c}}</td>
      </ng-container>

      <tr cdk-header-row *cdkHeaderRowDef=""columnsToRender""></tr>
      <tr cdk-row *cdkRowDef=""let row; columns: columnsToRender"" class=""customRowClass""></tr>
      <tr *cdkNoDataRow>
        <td>No data</td>
      </tr>
    </table>
  `","`
    <table cdk-table [dataSource]=""dataSource"">
      <ng-container cdkColumnDef=""column_a"">
        <th cdk-header-cell *cdkHeaderCellDef> Column A</th>
        <td cdk-cell *cdkCellDef=""let row"">{{row.a}}</td>
      </ng-container>

      <ng-container cdkColumnDef=""column_b"">
        <th cdk-header-cell *cdkHeaderCellDef> Column B</th>
        <td cdk-cell *cdkCellDef=""let row"">
          <table cdk-table [dataSource]=""dataSource"">
            <ng-container cdkColumnDef=""column_a"">
              <th cdk-header-cell *cdkHeaderCellDef> Column A</th>
              <td cdk-cell *cdkCellDef=""let row""> {{row.a}}</td>
            </ng-container>

            <ng-container cdkColumnDef=""column_b"">
              <th cdk-header-cell *cdkHeaderCellDef> Column B</th>
              <td cdk-cell *cdkCellDef=""let row""> {{row.b}}</td>
            </ng-container>

            <ng-container cdkColumnDef=""column_c"">
              <th cdk-header-cell *cdkHeaderCellDef> Column C</th>
              <td cdk-cell *cdkCellDef=""let row""> {{row.c}}</td>
            </ng-container>

            <tr cdk-header-row *cdkHeaderRowDef=""columnsToRender""></tr>
            <tr cdk-row *cdkRowDef=""let row; columns: columnsToRender"" class=""customRowClass""></tr>
          </table>
        </td>
      </ng-container>

      <ng-container cdkColumnDef=""column_c"">
        <th cdk-header-cell *cdkHeaderCellDef> Column C</th>
        <td cdk-cell *cdkCellDef=""let row"">{{row.c}}</td>
      </ng-container>

      <tr cdk-header-row *cdkHeaderRowDef=""columnsToRender""></tr>
      <tr cdk-row *cdkRowDef=""let row; columns: columnsToRender"" class=""customRowClass""></tr>
    </table>
  `","`
    <table cdk-table [dataSource]=""dataSource"">
      <ng-container cdkColumnDef=""column_a"">
        <th cdk-header-cell *cdkHeaderCellDef> Column A</th>
        <td cdk-cell *cdkCellDef=""let row""> {{row.a}}</td>
      </ng-container>

      <ng-container cdkColumnDef=""column_b"">
        <th cdk-header-cell *cdkHeaderCellDef> Column B</th>
        <td cdk-cell *cdkCellDef=""let row""> {{row.b}}</td>
      </ng-container>

      <ng-container cdkColumnDef=""column_c"">
        <th cdk-header-cell *cdkHeaderCellDef> Column C</th>
        <td cdk-cell *cdkCellDef=""let row""> {{row.c}}</td>
      </ng-container>

      <tr cdk-row *cdkRowDef=""let row; columns: columnsToRender"" class=""customRowClass""></tr>
    </table>
  `","`
    <table cdk-table [dataSource]=""dataSource"">
      <caption>Very important data</caption>
      <ng-container cdkColumnDef=""column_a"">
        <th cdk-header-cell *cdkHeaderCellDef> Column A</th>
        <td cdk-cell *cdkCellDef=""let row""> {{row.a}}</td>
      </ng-container>

      <tr cdk-header-row *cdkHeaderRowDef=""columnsToRender""></tr>
      <tr cdk-row *cdkRowDef=""let row; columns: columnsToRender"" class=""customRowClass""></tr>
    </table>
  `","`
    <table cdk-table [dataSource]=""dataSource"">
      <colgroup>
        <col>
      </colgroup>
      <col>
      <ng-container cdkColumnDef=""column_a"">
        <th cdk-header-cell *cdkHeaderCellDef> Column A</th>
        <td cdk-cell *cdkCellDef=""let row""> {{row.a}}</td>
      </ng-container>
      <ng-container cdkColumnDef=""column_b"">
        <th cdk-header-cell *cdkHeaderCellDef> Column B</th>
        <td cdk-cell *cdkCellDef=""let row""> {{row.b}}</td>
      </ng-container>

      <tr cdk-header-row *cdkHeaderRowDef=""columnsToRender""></tr>
      <tr cdk-row *cdkRowDef=""let row; columns: columnsToRender"" class=""customRowClass""></tr>
    </table>
  `","`
    <cdk-table [dataSource]=""dataSource"">
      <ng-container [ngSwitch]=""true"">
        <ng-container cdkColumnDef=""column_a"">
          <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>
          <cdk-cell *cdkCellDef=""let row""> {{row.a}}</cdk-cell>
        </ng-container>
      </ng-container>

      <cdk-header-row *cdkHeaderRowDef=""['column_a']""></cdk-header-row>
      <cdk-row *cdkRowDef=""let row; columns: ['column_a']""></cdk-row>
    </cdk-table>
  `",'cdk-header-cell','th.cdk-header-cell',footerRow,'cdk-footer-cell','td.cdk-footer-cell',getActualTableContent,actualTableContent,missedExpectations,checkCellContent,actualCell,expectedCell,`Expected cell contents to be ${,} but was ${,} total rows but got ${,expectedRow,} cells in row but got ${,cellIndex,'should render the basic columns','PropertyA','PropertyB','PropertyC','should throw an error if the text column is not in the content of a table',MissingTableApp,getTableTextColumnMissingParentTableError,'should throw an error if the text column does not have a name',TextColumnWithoutNameApp,getTableTextColumnMissingNameError,'should allow for alternate header text',headerTextB,'column-b','should allow for custom data accessor',dataAccessorA,propertyA,'a_1!','a_2!','should update values when data changes','changed-a_1',propertyB,propertyC,'changed-a_2','with options',createTestComponent,TextColumnOptions,BasicTextColumnApp,TEXT_COLUMN_OPTIONS,'should be able to provide a header text transformation',defaultHeaderTextTransform,}!`,'propertyA!','propertyB!','propertyC!','should be able to provide a general data accessor',defaultDataAccessor,`A: ${,'propertyB',`B: ${,'propertyC',`C: ${,'A: a_1','B: b_1','C: c_1','A: a_2','B: b_2','C: c_2',"`
    <cdk-table [dataSource]=""data"">
      <cdk-text-column name=""propertyA"" [dataAccessor]=""dataAccessorA""></cdk-text-column>
      <cdk-text-column name=""propertyB"" [headerText]=""headerTextB""></cdk-text-column>
      <cdk-text-column name=""propertyC"" [justify]=""justifyC""></cdk-text-column>

      <cdk-header-row *cdkHeaderRowDef=""displayedColumns""></cdk-header-row>
      <cdk-row *cdkRowDef=""let row; columns: displayedColumns""></cdk-row>
    </cdk-table>
  `",justifyC,"`
    <cdk-text-column name=""column-a""></cdk-text-column>
  `","`
    <cdk-table [dataSource]=""data"">
      <cdk-text-column [dataAccessor]=""dataAccessorA""></cdk-text-column>

      <cdk-header-row *cdkHeaderRowDef=""displayedColumns""></cdk-header-row>
      <cdk-row *cdkRowDef=""let row; columns: displayedColumns""></cdk-row>
    </cdk-table>
  `",'should be possible to call `preventDefault` multiple times',preventDefaultSpy,'synthetic keyboard event','shadow DOM','should allow dispatched mouse events to propagate through the shadow root','listener','should allow dispatched keyboard events to propagate through the shadow root','should allow dispatched pointer events to propagate through the shadow root',dispatchPointerEvent,'should allow dispatched fake events to propagate through the shadow root','fake','should create HarnessLoader','should find required HarnessLoader for child element',subcomponentsLoader,getChildLoader,'.subcomponents','should error after failing to find required HarnessLoader for child element','Expected to throw','Failed to find element matching one of the following queries:',"'\n(HarnessLoader for element matching selector: ""error"")'",'should find all HarnessLoaders for child elements',loaders,getAllChildLoaders,"'.subcomponents,.counters'",'should get first matching component for required harness',harness,SubComponentHarness,'List of test tools','should throw if no matching component found for required harness',countersLoader,'.counters',"'\n(SubComponentHarness with host element matching selector: ""test-sub"")'",'should get first matching component for optional harness',getHarnessOrNull,'should get null if no matching component found for optional harness','should get all matching components for all harnesses',harnesses,getAllHarnesses,'should check if harness is found',hasHarness,'ComponentHarness',MainComponentHarness,getMainComponentHarnessFromEnvironment,'should locate a required element based on CSS selector','Main Component','should throw when failing to locate a required element based on CSS selector',errorItem,"'\n(TestElement for element matching selector: ""wrong locator"")'",'should locate an optional element based on CSS selector',present,optionalUsername,missing,nullItem,'Hello Yi from Angular 2!','should locate all elements based on CSS selector',allLabels,'Count:','AsyncCounter:','should locate required sub harnesses',getTestTools,'Protractor','TestBed','Other','should throw when failing to locate required sub harnesses',errorSubComponent,"'\n(WrongComponentHarness with host element matching selector: ""wrong-selector"")'",'should locate optional sub harnesses',optionalSubComponent,nullComponentHarness,'should locate all sub harnesses',alllists,allLists,items1,getItems,items2,items3,items4,'Unit Test','Integration Test','Performance Test','Mutation Test','should wait for async operation to complete',asyncCounter,increaseCounter,'should send enter key',specialKey,specaialKey,sendEnter,'enter','should send alt+j key',sendAltJ,'alt-j','should load required harness with ancestor selector restriction',subcomp,requiredAncestorRestrictedSubcomponent,'List of other 1','should throw when failing to find required harness with ancestor selector restriction',requiredAncestorRestrictedMissingSubcomponent,"'\n(SubComponentHarness with host element matching selector: ""test-sub""'","' satisfying the constraints: has ancestor matching selector "".not-found"")'",'should load optional harness with ancestor selector restriction',subcomp1,subcomp2,parallel,optionalAncestorRestrictedSubcomponent,optionalAncestorRestrictedMissingSubcomponent,'should load all harnesses with ancestor selector restriction',subcomps1,subcomps2,allAncestorRestrictedSubcomponent,allAncestorRestrictedMissingSubcomponent,title1,title2,'List of other 2','should load all harnesses with multiple ancestor selector restriction',subcomps,multipleAncestorSelectorsSubcomponent,'should load all harnesses with direct ancestor selector restriction',directAncestorSelectorSubcomponent,'should handle a compound selector with an ancestor',compoundSelectorWithAncestor,'Div inside parent','Span inside parent','should handle a selector with comma inside attribute with an ancestor',quotedContentSelectorWithAncestor,'Has comma inside attribute','HarnessPredicate','should find subcomponents with filter function (specific item count)',fourItemLists,'List of test methods','should find subcomponents with string matcher (specific title)',toolsLists,'should find no subcomponents if predicate does not match',fourItemToolsLists,'should find subcomponents with string matcher (title regex)',testLists,'should find subcomponents that match selector',lastList,'should error if predicate does not match but a harness is required',requiredFourIteamToolsLists,"'\n(SubComponentHarness with host element matching selector: ""test-sub"" satisfying'","' the constraints: title = ""List of test tools"", item count = 4)'",'should have correct description for debugging',predicate,HarnessPredicate,addOption,regexes,/test/gim,"/""test""/",`test`,"`""test""`",`test = {`,"`""regexes"":[/test/gim,/""test""/],`","`""strings"":[""test"",""\\""test\\""""],`","`""numbers"":[10]}`",'TestElement',expectAsyncError,'should be able to clear','Yi',getProperty,'sendKeys method should throw if no keys have been specified',getNoKeysSpecifiedError,'should be able to click','should be able to click with no modifiers',clickTest,modifiersResult,clickModifiersResult,'---','should be able to click with shift and meta modifiers','shift---meta','should be able to click at a specific position within an element',clickTestResult,'10-10','should be able to click at a specific position with shift and meta modifiers','should be able to click the center of an element','50-50','should be able to click the center of an element with shift meta modifiers','should be able to right click at a specific position within an element',contextmenuTestResult,rightClick,'50-50-2','should be able to right click with modifiers','-alt-control-','should be able to send key','Input: Yi','focuses the element before sending key',getActiveElementId,'should be able to type in values with a decimal',numberInput,numberInputValue,'Number value: 123.456','should be able to set a negative input value on a reactive form control','-123','Number value: -123','should be able to retrieve dimensions','should dispatch `mouseenter` and `mouseover` on hover',hoverTest,classAttr,'hovering','pointer-over','should dispatch `mouseleave` and `mouseout` on mouseAway',mouseAway,'should be able to getAttribute',memoStr,"`
        This is an example that shows how to use component harness
        You should use getAttribute('value') to retrieve the text in textarea
      `",'should be able to getCssValue','should focus and blur element',buttonId,'should be able to get the value of a property','should be able to set the value of an input','should be able to set the value of a select in single selection mode',changeEventCounter,singleSelectValue,singleSelectChangeEventCounter,selectOptions,'Select: three','Change events: 1','should be able to set the value of a select in multi-selection mode',multiSelect,multiSelectValue,multiSelectChangeEventCounter,"'Multi-select: one,three'",'Change events: 2','should check if selector matches',matchesSelector,'button:not(.fake-class)','button:disabled','should get correct text excluding certain selectors',subcomponentAndSpecialHarnesses,subHarnessHost,'ProtractorTestBedOther','should dispatch a basic custom event',customEventBasic,'myCustomEvent','Basic event: 1','should dispatch a custom event with attached data',customEventObject,"'Event with object: {""message"":""Hello"",""value"":1337}'",'should get TestElements and ComponentHarnesses',subcomponentHarnessesAndElements,checkIsElement,'#counter',checkIsHarness,subHarness,titleText,'should get TestElements and ComponentHarnesses with redundant queries',subcomponentHarnessAndElementsRedundant,'.subcomponents test-sub:nth-child(1)','.subcomponents test-sub:nth-child(2)','.other test-sub:nth-child(1)','.other test-sub:nth-child(2)','should get harnesses of different types matching same element',SubComponentSpecialHarness,'should throw when multiple queries fail to match',missingElementsAndHarnesses,'Expected to throw.',"'\n(TestElement for element matching selector: "".not-found""),'",' the constraints: title = /not found/)','should check if element is focused','should be able to get the text of a hidden element',hiddenElement,hidden,ComponentHarness,TestElement,harnessType,ComponentHarnessConstructor,finalCheck,'should create HarnessLoader from ProtractorEnvironment',ProtractorHarnessEnvironment,'can get elements outside of host',globalEl,'I am a sibling!','should be able to retrieve the ElementFinder from a ProtractorElement',getNativeElement,getTagName,'test-main','shadow DOM interaction','should not pierce shadow boundary by default',shadows,'should pierce shadow boundary when using piercing query',queryFn,piercingQueryFn,'Shadow 1','Shadow 2','should allow querying across shadow boundary',deepShadow,'environment independent',crossEnvironmentSpecs,switchTo,'should create HarnessLoader from fixture','should create ComponentHarness for fixture',TestbedHarnessEnvironment,harnessForFixture,'should be able to load harness through document root loader',documentRootHarnesses,documentRootLoader,FakeOverlayHarness,fixtureHarnesses,'This is a fake overlay.',subcomponents,globalElement,'should be able to wait for tasks outside of Angular within native async/await',getTaskStateResult,'result','should be able to wait for tasks outside of Angular within async test zone','should be able to wait for tasks outside of Angular within fakeAsync test zone','should be able to retrieve the native DOM element from a UnitTestElement','should wait for async operation to complete in fakeAsync test','manualChangeDetection should prevent auto change detection',detectChangesSpy,'detectChanges',manualChangeDetection,'parallel should only auto detect changes once before and after','parallel inside manualChangeDetection should not cause change detection',piercingQuerySelectorAll,'should create HarnessLoader from WebDriverHarnessEnvironment',SeleniumWebDriverHarnessEnvironment,wd,'should be able to retrieve the WebElement from a WebDriverElement','should add monitored class and listener upon monitoring',input1,autofillMonitor,'cdk-text-field-autofill-monitored',listenerOptions,'should not add multiple listeners to the same element','should remove monitored class and listener upon stop monitoring','should stop monitoring all monitored elements upon destroy',inputEl1,inputEl2,input2,inputEl3,input3,'should emit and add filled class upon start animation',animationStartCallback,autofillStreamEvent,AutofillEvent,autofillStream,'cdk-text-field-autofilled',animationName,'cdk-text-field-autofill-start',isAutofilled,'should emit and remove filled class upon end animation','cdk-text-field-autofill-end','should cleanup filled class if monitoring stopped in autofilled state',classlist,'should complete the stream when monitoring is stopped','autofillStream complete','should emit on stream inside the NgZone','autofill spy','should not emit on init if input is unfilled','cdkAutofill',AutofillMonitor,InputWithCdkAutofilled,TextFieldModule,afm,'monitor',EMPTY,'stopMonitoring','should monitor host element on init','should stop monitoring host element on destroy',"`
    <input #input1>
    <input #input2>
    <input #input3>
  `",'input1','input2','input3',`<input #input cdkAutofill>`,'should resize the textarea based on its content',previousHeight,"`
    Once upon a midnight dreary, while I pondered, weak and weary,
    Over many a quaint and curious volume of forgotten lore—
        While I nodded, nearly napping, suddenly there came a tapping,
    As of some one gently rapping, rapping at my chamber door.
    “’Tis some visitor,” I muttered, “tapping at my chamber door—
                Only this and nothing more.”`",autosize,resizeToFitContent,'Expected textarea to have grown with added content.','Expected textarea height to match its scrollHeight',"`
        Ah, distinctly I remember it was in the bleak December;
    And each separate dying ember wrought its ghost upon the floor.
        Eagerly I wished the morrow;—vainly I had sought to borrow
        From my books surcease of sorrow—sorrow for the lost Lenore—
    For the rare and radiant maiden whom the angels name Lenore—
                Nameless here for evermore.`",'should keep the placeholder size if the value is shorter than the placeholder',AutosizeTextAreaWithContent,CdkTextareaAutosize,'Expected textarea height not to have changed','should set a min-height based on minRows','Expected a min-height to be set via minRows.',previousMinHeight,'Expected increased min-height with minRows increase.','should set a max-height based on maxRows','Expected a max-height to be set via maxRows.',previousMaxHeight,'Expected increased max-height with maxRows increase.','should reduce textarea height when minHeight decreases','Expected decreased height with minRows decrease.','should export the cdkAutosize reference','should initially set the rows of a textarea to one','Expected the directive to initially set the rows property to one.','Expected the textarea to have the rows property set to one.','Expected the rows property to be set to one. ','The amount of rows will be specified using CSS.','Expected the textarea to grow to two rows.','should calculate the proper height based on the specified amount of max rows','Expected textarea to not have a vertical scrollbar.','Expected textarea to have a vertical scrollbar.','should properly resize to content on init',"`
      Line
      Line
      Line
      Line
      Line`",'should properly resize to placeholder on init','should resize when an associated form control value changes',fixtureWithForms,AutosizeTextareaWithNgModel,"`
        And the silken, sad, uncertain rustling of each purple curtain
    Thrilled me—filled me with fantastic terrors never felt before;
        So that now, to still the beating of my heart, I stood repeating
        “’Tis some visitor entreating entrance at my chamber door—
    Some late visitor entreating entrance at my chamber door;—
                This it is and nothing more.” `",'Expected increased height when ngModel is updated.','should resize when the textarea value is changed programmatically',"`
      How much wood would a woodchuck chuck
      if a woodchuck could chuck wood?
    `",'Expected the textarea height to have increased.','should trigger a resize when the window is resized','resizeToFitContent','should not trigger a resize when it is disabled',fixtureWithoutAutosize,AutosizeTextareaWithoutAutosize,"`
    Line
    Line
    Line
    Line
    Line`",'Expected textarea to still have the same size.','Expected textarea to a have scrollbar.','Expected textarea to have grown after enabling autosize.','Expected textarea not to have a scrollbar','Expected textarea to have the original size.','Expected textarea to have a scrollbar.','should handle an undefined placeholder',textareaStyleReset,"`
    textarea {
      padding: 0;
      border: none;
      overflow: auto;
    }`","`
    <textarea cdkTextareaAutosize [cdkAutosizeMinRows]=""minRows"" [cdkAutosizeMaxRows]=""maxRows""
        #autosize=""cdkTextareaAutosize"" [placeholder]=""placeholder"">{{content}}</textarea>`",'autosize',"`<textarea cdkTextareaAutosize [value]=""value""></textarea>`",AutosizeTextAreaWithValue,"`<textarea cdkTextareaAutosize [(ngModel)]=""model""></textarea>`","`<textarea [cdkTextareaAutosize]=""false"">{{content}}</textarea>`",'should be able to expand and collapse dataNodes',generateData,sixthNode,treeControl,dataNodes,expand,'Expect second node to be expanded',expansionModel,'Expect second node in expansionModel','Expect only second node in expansionModel','Expect second node to stay expanded','Expect sixth node in expansionModel','Expect two dataNodes in expansionModel','Expect second node to be collapsed','Expect one node in expansionModel','Expect sixth node to stay expanded','should toggle descendants correctly',numNodes,numChildren,numGrandChildren,expandDescendants,expandedNodesNum,`Expect expanded ${,} nodes`,`Expect second node's children to be expanded`,`Expect second node grand children to be expanded`,'should be able to expand/collapse all the dataNodes',collapseAll,`Expect no expanded nodes`,expandAll,totalNumber,`Expect ${,} expanded nodes`,'with children array',getStaticChildren,NestedTreeControl,"'maintains node expansion state based on trackBy function, if provided'",getChildren,secondNode,'Expect second node to still be expanded',dataLength,childLength,grandChildLength,grandChildren,'should clear out the `mostRecentTreeNode` on destroy',configureCdkTreeTestingModule,SimpleCdkTreeApp,CdkTreeNode,mostRecentTreeNode,'should complete the viewChange stream on destroy','completeSpy','flat tree','should initialize',treeElement,'cdk-tree','with rendered dataNodes',getNodes,'Expect nodes to be defined','customNodeClass','tree','treeitem','with the right aria-levels',addChild,ariaLevels,'aria-level','with the right aria-expanded attrs','with the right data',expectFlatTreeToMatch,pizzaTopping,} - ${,pizzaCheese,} + ${,pizzaBase,'should be able to use units different from px for the indentation',indent,'15rem','rem','should default to px if no unit is set for string value indentation','17','should be able to set zero as the indent level',paddingNodes,'should reset the opposite direction padding if the direction changes',paddingLeft,'with toggle',CdkTreeAppWithToggle,'should expand/collapse the node',`Expect no expanded node`,toggleRecursively,`Expect node expanded`,`Expect node collapsed`,'should expand/collapse the node recursively',`Expect nodes expanded`,`Expect parent node expanded`,`Expected child node expanded`,'with when node template',WhenNodeCdkTreeApp,`[topping_1] - [cheese_1] + [base_1]`,`[topping_2] - [cheese_2] + [base_2]`,`[topping_3] - [cheese_3] + [base_3]`,`topping_4 - cheese_4 + base_4`,'with array data source',ArrayDataSourceCdkTreeApp,`[topping_4] - [cheese_4] + [base_4]`,'with observable data source',ObservableDataSourceCdkTreeApp,CdkTreeAppWithTrackBy,createTrackByTestComponent,'property',initialNodes,'should add/remove/move nodes with reference-based trackBy',changedNodes,'should add/remove/move nodes with property-based trackBy','should add/remove/move nodes with index-based trackBy','should pick up indirect descendant node definitions',SimpleCdkTreeAppWithIndirectNodes,'nested tree',NestedCdkTreeApp,expectNestedTreeToMatch,`topping_1 - cheese_1 + base_1`,`topping_2 - cheese_2 + base_2`,`topping_3 - cheese_3 + base_3`,'with nested child data',`topping_5 - cheese_5 + base_5`,`topping_6 - cheese_6 + base_6`,'with correct aria-level on nodes',levels,'with static children',StaticNestedCdkTreeApp,'with when node',WhenNodeNestedCdkTreeApp,`>> topping_2 - cheese_2 + base_2`,NestedCdkTreeAppWithToggle,ariaExpanded,'should expand/collapse the node multiple times',ArrayDataSourceNestedCdkTreeApp,ObservableDataSourceNestedCdkTreeApp,NestedCdkTreeAppWithTrackBy,`c${,mutateChildren,observableChildren,'should add/remove/move children nodes with reference-based trackBy','should add/remove/move children nodes with property-based trackBy','should add/remove/move children nodes with index-based trackBy','should throw an error when missing function in nested tree',NestedCdkErrorTreeApp,getTreeControlFunctionsMissingError,'should throw an error when missing function in flat tree',FlatCdkErrorTreeApp,'with depth',DepthNestedCdkTreeApp,'should have correct depth for nested tree',depthElements,'.tree-test-level',expectedLevels,actualLevels,dataIndex,TreeControl,isFlat,`topping_${,`cheese_${,`base_${,'.cdk-tree-node',expectedPaddingIndent,expectedPaddingUnits,expectedTree,checkNode,expectedNode,actualTextContent,expectedTextContent,`Expected node contents to be ${,checkLevel,rawLevel,actualLevel,expectedLevel,`Expected node level to be ${,checkNodeContent,checkNodeDescendants,expectedDescendant,actualDescendant,`Expected node descendant num to be ${,"`
    <cdk-tree [dataSource]=""dataSource"" [treeControl]=""treeControl"">
      <cdk-tree-node *cdkTreeNodeDef=""let node"" class=""customNodeClass""
                     cdkTreeNodePadding [cdkTreeNodePaddingIndent]=""indent""
                     cdkTreeNodeToggle>
                     {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}
      </cdk-tree-node>
    </cdk-tree>
  `",getLevel,isExpandable,FlatTreeControl,CdkTree,CdkTreeNodePadding,"`
    <cdk-tree [dataSource]=""dataSource"" [treeControl]=""treeControl"">
      <ng-container [ngSwitch]=""true"">
        <cdk-tree-node *cdkTreeNodeDef=""let node"" class=""customNodeClass""
                      cdkTreeNodePadding [cdkTreeNodePaddingIndent]=""indent""
                      cdkTreeNodeToggle>
                      {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}
        </cdk-tree-node>
      </ng-container>
    </cdk-tree>
  `","`
    <cdk-tree [dataSource]=""dataSource"" [treeControl]=""treeControl"">
      <cdk-nested-tree-node *cdkTreeNodeDef=""let node"" class=""customNodeClass"">
                     {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}
         <ng-template cdkTreeNodeOutlet></ng-template>
      </cdk-nested-tree-node>
    </cdk-tree>
  `","`
    <cdk-tree [dataSource]=""dataSource"" [treeControl]=""treeControl"">
      <cdk-nested-tree-node *cdkTreeNodeDef=""let node"" class=""customNodeClass"">
                     {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}
         <ng-template cdkTreeNodeOutlet></ng-template>
      </cdk-nested-tree-node>
       <cdk-nested-tree-node *cdkTreeNodeDef=""let node; when: isSecondNode"" class=""customNodeClass"">
                     >> {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}
         <ng-template cdkTreeNodeOutlet></ng-template>
      </cdk-nested-tree-node>
    </cdk-tree>
  `",isSecondNode,"`
    <cdk-tree [dataSource]=""dataSource"" [treeControl]=""treeControl"">
      <cdk-tree-node *cdkTreeNodeDef=""let node"" class=""customNodeClass""
                     cdkTreeNodePadding
                     cdkTreeNodeToggle [cdkTreeNodeToggleRecursive]=""toggleRecursively"">
                     {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}
      </cdk-tree-node>
    </cdk-tree>
  `","`
    <cdk-tree [dataSource]=""dataSource"" [treeControl]=""treeControl"">
      <cdk-nested-tree-node *cdkTreeNodeDef=""let node"" class=""customNodeClass""
                            cdkTreeNodeToggle [cdkTreeNodeToggleRecursive]=""toggleRecursively"">
                     {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}
        <div *ngIf=""treeControl.isExpanded(node)"">
          <ng-template cdkTreeNodeOutlet></ng-template>
        </div>
      </cdk-nested-tree-node>
    </cdk-tree>
  `","`
    <cdk-tree [dataSource]=""dataSource"" [treeControl]=""treeControl"">
      <cdk-tree-node *cdkTreeNodeDef=""let node"" class=""customNodeClass""
                     cdkTreeNodePadding [cdkTreeNodePaddingIndent]=""28""
                     cdkTreeNodeToggle>
                     {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}
      </cdk-tree-node>
       <cdk-tree-node *cdkTreeNodeDef=""let node; when: isOddNode"" class=""customNodeClass""
                     cdkTreeNodePadding [cdkTreeNodePaddingIndent]=""28""
                     cdkTreeNodeToggle>
                     [{{node.pizzaTopping}}] - [{{node.pizzaCheese}}] + [{{node.pizzaBase}}]
      </cdk-tree-node>
    </cdk-tree>
  `",isOddNode,"`
    <cdk-tree [dataSource]=""dataArray"" [treeControl]=""treeControl"">
      <cdk-tree-node *cdkTreeNodeDef=""let node""
                     cdkTreeNodePadding [cdkTreeNodePaddingIndent]=""28""
                     cdkTreeNodeToggle>
                     [{{node.pizzaTopping}}] - [{{node.pizzaCheese}}] + [{{node.pizzaBase}}]
      </cdk-tree-node>
    </cdk-tree>
  `",dataArray,"`
    <cdk-tree [dataSource]=""dataObservable"" [treeControl]=""treeControl"">
      <cdk-tree-node *cdkTreeNodeDef=""let node""
                     cdkTreeNodePadding [cdkTreeNodePaddingIndent]=""28""
                     cdkTreeNodeToggle>
                     [{{node.pizzaTopping}}] - [{{node.pizzaCheese}}] + [{{node.pizzaBase}}]
      </cdk-tree-node>
    </cdk-tree>
  `",dataObservable,"`
    <cdk-tree [dataSource]=""dataArray"" [treeControl]=""treeControl"">
      <cdk-nested-tree-node *cdkTreeNodeDef=""let node"">
                     [{{node.pizzaTopping}}] - [{{node.pizzaCheese}}] + [{{node.pizzaBase}}]
         <ng-template cdkTreeNodeOutlet></ng-template>
      </cdk-nested-tree-node>
    </cdk-tree>
  `","`
    <cdk-tree [dataSource]=""dataObservable"" [treeControl]=""treeControl"">
      <cdk-nested-tree-node *cdkTreeNodeDef=""let node"">
                     [{{node.pizzaTopping}}] - [{{node.pizzaCheese}}] + [{{node.pizzaBase}}]
         <ng-template cdkTreeNodeOutlet></ng-template>
      </cdk-nested-tree-node>
    </cdk-tree>
  `",FakeTreeControl,BaseTreeControl,getDescendants,"`
    <cdk-tree [dataSource]=""dataSource"" [treeControl]=""treeControl"">
      <cdk-tree-node *cdkTreeNodeDef=""let node"" class=""customNodeClass"">
                     {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}
         <ng-template cdkTreeNodeOutlet></ng-template>
      </cdk-tree-node>
    </cdk-tree>
  `","`
    <cdk-tree [dataSource]=""dataArray"" [treeControl]=""treeControl"">
      <cdk-nested-tree-node *cdkTreeNodeDef=""let node; let level = level"">
          <span class=""tree-test-level"">{{level}}</span>
           [{{node.pizzaTopping}}] - [{{node.pizzaCheese}}] + [{{node.pizzaBase}}]
         <ng-template cdkTreeNodeOutlet></ng-template>
      </cdk-nested-tree-node>
    </cdk-tree>
  `","`
    <cdk-tree [dataSource]=""dataSource"" [treeControl]=""treeControl"" [trackBy]=""trackByFn"">
      <cdk-tree-node *cdkTreeNodeDef=""let node"" class=""customNodeClass"">
                     {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}
      </cdk-tree-node>
    </cdk-tree>
  `",trackByFn,"`
    <cdk-tree [dataSource]=""dataArray"" [treeControl]=""treeControl"" [trackBy]=""trackByFn"">
      <cdk-nested-tree-node *cdkTreeNodeDef=""let node"">
           [{{node.pizzaTopping}}] - [{{node.pizzaCheese}}] + [{{node.pizzaBase}}]
         <ng-template cdkTreeNodeOutlet></ng-template>
      </cdk-nested-tree-node>
    </cdk-tree>
  `",'should load harness for a table',tables,MatTableHarness,'should get the different kinds of rows in the table','should get cells inside a row','should be able to get the text of a cell',secondRow,cellTexts,'4.0026','He','should be able to get the column name of a cell',fifthRow,cellColumnNames,getColumnName,'weight','symbol','should be able to filter cells by text','1.0079','should be able to filter cells by column name',columnName,'should load all autocomplete harnesses',autocompletes,MatAutocompleteHarness,'should get disabled state','#plain','#disabled','should focus and blur an input','should be able to type in an input',enterText,'should be able to get filtered options',/New/,'New York','should load all badge harnesses',badges,MatBadgeHarness,'should be able to get the text of a badge',badge,'#simple',simpleContent,'Changed','should get whether a badge is overlapping','#overlapping',isOverlapping,overlap,'should get whether a badge is disabled','should load harness for a bottom sheet',bottomSheets,MatBottomSheetHarness,'should be able to get aria-label of the bottom sheet','Confirm purchase.',bottomSheet,getAriaLabel,'should be able to dismiss the bottom sheet',dismiss,'should load all button toggle group harnesses',MatButtonToggleGroupHarness,'should load the toggles inside the group',toggles,getToggles,'should get whether the group is disabled','should get the group appearance',getAppearance,appearance,'legacy','should load all button harnesses',MatButtonHarness,'should load button with exact text','Basic button','should click a button',clicked,'should find card with text',cards,MatCardHarness,/spitz breed/,getTitleText,'Shiba Inu','should get subtitle text',card,getSubtitleText,'Dog Breed','should act as a harness loader for user content',footerSubcomponents,'should load checkbox with name',MatCheckboxHarness,'first-name',getLabelText,'should get checked state',checkedCheckbox,uncheckedCheckbox,'should get name',getName,'should get label text',firstCheckbox,secondCheckbox,'Second','should toggle checkbox','should get whether a chip list is disabled',chipList,MatChipListboxHarness,'should get the orientation of a chip list',getOrientation,'should be able to get the selected chips in a list',getChips,selectedChips,'Chip 2','should be able to trigger chip removal',MatChipHarness,'should load all datepicker input harnesses',MatDatepickerInputHarness,'should get whether the input has an associated calendar',hasCalendar,'should set the input value','1/1/2020','should get the minimum date of the input','should be able to open and close a calendar in popup mode',isCalendarOpen,openCalendar,closeCalendar,'should load harness for dialog',dialogs,MatDialogHarness,'should load harness for dialog with specific id','my-dialog','other','#my-dialog','should be able to get role of dialog',getRole,'should be able to close dialog','should load all divider harnesses',dividers,MatDividerHarness,'should check if divider is inset',isInset,'should get divider orientation','should be able to load accordion',accordions,MatAccordionHarness,'should be able to load expansion panels',MatExpansionPanelHarness,'should be able to toggle expansion state of panel','should be able to get text content of expansion panel',getTextContent,'I am the content!','should be able to get expansion panels of accordion',getExpansionPanels,'should be able to load harnesses',formFields,MatFormFieldHarness,'should be able to get control of form-field',getControl,MatInputHarness,'should be able to get error messages and hints of form-field',getTextErrors,getTextHints,'Hint',requiredControl,'should be able to check if form field is invalid',isControlValid,'should be able to load grid-list harnesses',MatGridListHarness,'should be able to load grid-tile harnesses',MatGridTileHarness,'should be able to get tiles of grid-list with filters',gridList,tiles,getTiles,headerText,/Tile [34]/,'should be able to check whether tile has header',hasHeader,"'Tile 1 (no header, no footer)'",'should be able to check whether tile has footer',hasFooter,getFooterText,'Tile 3 footer','should load all icon harnesses',icons,MatIconHarness,'should get the name of an icon',names,'fontIcon','svgIcon','ligature_icon','should get the namespace of an icon',namespaces,getNamespace,'fontIcons','svgIcons','should get whether an icon is inline',inlineStates,'should load all input harnesses','should load input with a specific value','Sushi','should be able to set value of input','should be able to get disabled state','should be able to get type of input',getType,inputType,'should get all items',MatListHarness,'Item 3','should get all items matching text',/[13]/,'should get items by subheader',sections,getItemsGroupedBySubheader,'Section 1','Section 2','should get list item text and lines',getLinesText,'Item','should load all menu harnesses',menues,MatMenuHarness,enabledMenu,disabledMenu,'should get menu text',firstMenu,secondMenu,getTriggerText,'Settings','Disabled menu','should open and close',triggerText,'should load all paginator harnesses',paginators,MatPaginatorHarness,'should be able to navigate between pages',paginator,pageIndex,goToNextPage,goToPreviousPage,'should be able to go to the last page',goToLastPage,'should be able to set the page size',pageSize,setPageSize,'should load all progress bar harnesses',progressBars,MatProgressBarHarness,'should get the value','should get the mode',getMode,'determinate','should load all progress spinner harnesses',progressSpinners,MatProgressSpinnerHarness,impliedIndeterminate,'should load all radio-group harnesses',MatRadioGroupHarness,'should get name of radio-group','flavors','should check radio button',MatRadioButtonHarness,'should get label text of buttons',firstRadio,secondRadio,thirdRadio,'Chocolate','Vanilla','Strawberry','should load all select harnesses',selects,'should be able to check whether a select is in multi-selection mode',isMultiple,'should be able to open and close a select','should be able to get the value text from a select','Tacos','should load all drawer harnesses',drawers,MatDrawerHarness,'should be able to get the mode of a drawer','side','should get the drawers within a container',MatDrawerContainerHarness,getDrawers,'Hello from the drawer','should get the content of a container',getContent,'Hello from the content','should load all drawer content harnesses',contentElements,MatDrawerContentHarness,'should load all slide-toggle harnesses',slideToggles,MatSlideToggleHarness,'should load slide-toggle with name',enabledToggle,disabledToggle,firstToggle,secondToggle,'should toggle slide-toggle',checkedToggle,uncheckedToggle,'should load all slider harnesses',sliders,MatSliderHarness,'should get value of slider','should get percentage of slider',getPercentage,'should get max value of slider',getMaxValue,'should be able to set value of slider','should load harness for simple snack-bar',snackBarRef,'Hi!',snackBars,MatSnackBarHarness,'should be able to get message of simple snack-bar','Subscribed to newsletter.',snackBar,getMessage,'should be able to get action description of simple snack-bar','Unsubscribe',getActionDescription,'should be able to check whether simple snack-bar has action','With action',hasAction,'No action','should load harness for mat-sort',sorts,MatSortHarness,'should be able to filter headers by their sorted state',getSortHeaders,sortDirection,'asc','should be able to get the label of a header','Dessert','Calories','Fat','Carbs','Protein','should get the disabled state of a header',thirdHeader,disableThirdHeader,'should get the sorted direction of a header',secondHeader,getSortDirection,'desc','should load all stepper harnesses',steppers,MatStepperHarness,'should get the steps of a stepper',stepper,steps,getSteps,'should be able to get the template-based label of a step','should go forward when pressing the next button',secondStep,nextButton,MatStepperNextHarness,'should load harness for tab-group',tabGroups,MatTabGroupHarness,'should load harness for tab-group with selected tab label',selectedTabLabel,'should be able to get tabs of tab-group',tabGroup,tabs,getTabs,'should be able to select tab from tab-group',getSelectedTab,selectTab,'FAQ','should find all toolbars',toolbars,MatToolbarHarness,'should find toolbar with text','My App',hasMultipleRows,'should find toolbar with regex',/Row/,'should get toolbar text',getRowsAsText,'Row 1','Row 2 Button 1  Button 2','should load all tooltip harnesses',tooltips,MatTooltipHarness,'should be able to show a tooltip','should be able to hide a tooltip','should be able to get the text of a tooltip',getTooltipText,'Tooltip message','should return empty when getting the tooltip text while closed','should get correct number of children and descendants',MatTreeHarness,treeDescendants,'should correctly get correct node with text',treeNodes,/Flat Group/,secondGroup,'Flat Group 1','should correctly get tree structure',getTreeStructure,'Flat Group 2',firstGroup,/Flat Group 1/,'Flat Leaf 1.1','Flat Leaf 1.2','Flat Leaf 1.3','throws an error is the Google Maps JavaScript API was not loaded',mapSpy,createMapSpy,DEFAULT_OPTIONS,createMapConstructorSpy,"'Namespace google not found, cannot construct embedded google '",'map. Please install the Google Maps JavaScript API: ','https://developers.google.com/maps/documentation/javascript/','tutorial#Loading_the_Maps_API','initializes a Google map',mapConstructorSpy,'sets height and width of the map','750px','650px','350px','should be able to set a number value as the width/height','600','600px','should be able to set null as the width/height','sets center and zoom of the map',center,lng,zoom,mapTypeId,setCenter,setZoom,'sets map options',170,setOptions,'should set a default center if the custom options do not provide one','should set a default zoom level if the custom options do not provide one',"'should not set a default zoom level if the custom options provide ""zoom: 0""'",'gives precedence to center and zoom over options',inputOptions,correctedOptions,'exposes methods that change the configuration of the Google Map',GoogleMap,fitBounds,testBounds,panBy,panTo,testPosition,panToBounds,'exposes methods that get information about the Google Map',getBounds,getCenter,getClickableIcons,getHeading,getMapTypeId,getProjection,getStreetView,getTilt,getZoom,'initializes event handlers that are set on the map',addSpy,'center_changed','rightclick','bounds_changed','dblclick','drag','dragend','heading_changed','idle','maptypeid_changed','projection_changed','tilesloaded','tilt_changed','zoom_changed','should be able to add an event listener after init',projectionChanged,'should set the map type','terrain',google,maps,MapTypeId,'roadmap',setMapTypeId,'sets mapTypeId through the options','satellite','should emit mapInitialized event when the map is initialized',mapInitializedSpy,toHaveBeenCalledOnceWith,googleMap,'should emit authFailure event when window.gm_authFailure is called',gm_authFailure,authFailure,fixture1,fixture2,'test-app',"`<google-map [height]=""height""
                         [width]=""width""
                         [center]=""center""
                         [zoom]=""zoom""
                         [options]=""options""
                         [mapTypeId]=""mapTypeId""
                         (mapClick)=""handleClick($event)""
                         (centerChanged)=""handleCenterChanged()""
                         (mapRightclick)=""handleRightclick($event)""
                         (mapInitialized)=""mapInitializedSpy($event)"">
            </google-map>`",LatLngLiteral,MapOptions,MapMouseEvent,handleCenterChanged,handleRightclick,'mapInitialized','initializes a Google Map Bicycling Layer',bicyclingLayerSpy,createBicyclingLayerSpy,bicyclingLayerConstructorSpy,createBicyclingLayerConstructorSpy,setMap,"`<google-map>
                <map-bicycling-layer></map-bicycling-layer>
            </google-map>`",'initializes a Google Map Circle',circleSpy,createCircleSpy,circleConstructorSpy,createCircleConstructorSpy,radius,'sets center and radius from input',CircleOptions,'gives precedence to other inputs over options',expectedOptions,circleOptions,'exposes methods that provide information about the Circle',circleComponent,MapCircle,getRadius,getDraggable,getEditable,getVisible,'initializes Circle event handlers','radius_changed',circleDragend,"`<google-map>
                <map-circle [options]=""options""
                            [center]=""center""
                            [radius]=""radius""
                            (centerChanged)=""handleCenterChange()""
                            (circleClick)=""handleClick()""
                            (circleRightclick)=""handleRightclick()"">
                </map-circle>
            </google-map>`",handleCenterChange,'initializes a Google Maps DirectionsRenderer',directionsRendererSpy,createDirectionsRendererSpy,DEFAULT_DIRECTIONS,directionsRendererConstructorSpy,createDirectionsRendererConstructorSpy,'sets directions from directions input','gives precedence to directions over options',updatedDirections,DirectionsResult,geocoded_waypoints,partial_match,place_id,types,routes,'exposes methods that provide information from the DirectionsRenderer',directionsRendererComponent,MapDirectionsRenderer,getDirections,getPanel,getRouteIndex,'initializes DirectionsRenderer event handlers','directions_changed',"`<google-map>
               <map-directions-renderer [options]=""options""
                                        [directions]=""directions""
                                        (directionsChanged)=""handleDirectionsChanged()"">
               </map-directions-renderer>
             </google-map>`",directionsRenderer,DirectionsRendererOptions,handleDirectionsChanged,'does not initialize the Google Maps Directions Service immediately',directionsServiceConstructorSpy,'initializes the Google Maps Directions Service when `route` is called',mapDirectionsService,'home',destination,'work',travelMode,'BICYCLING',TravelMode,'calls route on inputs','OK',DirectionsStatus,directionsServiceSpy,_request,response,MapDirectionsResponse,'should register a listener when subscribing to an event',setTarget,getLazyEmitter,'should register a listener if the subscription happened before there was a target','should remove the listener when unsubscribing','should remove the listener when the manager is destroyed','should remove the listener when the target is changed','should trigger the subscription to an event','subscription',triggerListeners,'should be able to register multiple listeners to the same event',firstSpy,'subscription one',secondSpy,'subscription two','should run listeners inside the NgZone',dummyZone,'should maintain subscriptions when swapping out targets',alternateTarget,TestEventTarget,'addListener',"`No listeners registered for ""${","}"" event.`",'does not initialize the Google Maps Geocoder immediately',geocoderConstructorSpy,'initializes the Google Maps Geocoder after `geocode` is called',geocoder,geocode,'calls geocode on inputs',GeocoderResult,GeocoderStatus,geocoderSpy,region,'Europe',MapGeocoderResponse,'initializes a Google Map Ground Overlay',groundOverlaySpy,createGroundOverlaySpy,groundOverlayOptions,groundOverlayConstructorSpy,createGroundOverlayConstructorSpy,clickable,'exposes methods that provide information about the Ground Overlay',groundOverlayComponent,MapGroundOverlay,getOpacity,getUrl,'initializes Ground Overlay event handlers',groundOverlay,mapDblclick,'should be able to change the image after init','foo.png','url','should recreate the ground overlay when the bounds change',oldOverlay,newOverlay,"`<google-map>
                <map-ground-overlay [url]=""url""
                                    [bounds]=""bounds""
                                    [clickable]=""clickable""
                                    [opacity]=""opacity""
                                    (mapClick)=""handleClick()"">
                </map-ground-overlay>
            </google-map>`",LatLngBoundsLiteral,'initializes a Google Map heatmap layer',heatmapSpy,createHeatmapLayerSpy,heatmapConstructorSpy,createHeatmapLayerConstructorSpy,'should throw if the `visualization` library has not been loaded',visualization,"/Namespace `google.maps.visualization` not found, cannot construct heatmap/",'sets heatmap inputs',HeatmapLayerOptions,LatLng,37.782,122.447,122.445,122.443,"'sets heatmap options, ignoring map'",dissipating,'exposes methods that provide information about the heatmap',heatmap,getData,'should update the heatmap data when the input changes',setData,'should create a LatLng object if a LatLngLiteral is passed in',latLngConstructor,createLatLngConstructorSpy,latLngSpy,"`
    <google-map>
      <map-heatmap-layer [data]=""data"" [options]=""options"">
      </map-heatmap-layer>
    </google-map>`",MapHeatmapLayer,HeatmapData,'initializes a Google Map Info Window',infoWindowSpy,createInfoWindowSpy,infoWindowConstructorSpy,createInfoWindowConstructorSpy,'sets position','sets options',InfoWindowOptions,disableAutoPan,'gives preference to position over options','exposes methods that change the configuration of the info window',fakeMarker,Marker,fakeMarkerComponent,getAnchor,MapMarker,infoWindowComponent,MapInfoWindow,shouldFocus,'should not try to reopen info window multiple times for the same marker','exposes methods that provide information about the info window','test content',getPosition,getZIndex,'initializes info window event handlers','closeclick','content_changed','domready','position_changed','zindex_changed',infoWindow,zindexChanged,'should be able to open an info window without passing in an anchor','should allow for the focus behavior to be changed when opening the info window',"`<google-map>
               <map-info-window [position]=""position""
                                [options]=""options""
                                (closeclick)=""handleClose()"">
                 test content
               </map-info-window>
             </google-map>`",handleClose,'initializes a Google Map Kml Layer',kmlLayerSpy,createKmlLayerSpy,kmlLayerConstructorSpy,createKmlLayerConstructorSpy,'sets url from input',KmlLayerOptions,DEMO_URL,'gives precedence to url input over options',expectedUrl,'www.realurl.kml',DEFAULT_KML_OPTIONS,'exposes methods that provide information about the KmlLayer',kmlLayerComponent,MapKmlLayer,getDefaultViewport,metadata,KmlLayerMetadata,author,'test@test.com','author',uri,'www.author.com',hasScreenOverlays,'metadata',snippet,'...',getMetadata,getStatus,'initializes KmlLayer event handlers','defaultviewport_changed','status_changed',kmlLayer,defaultviewportChanged,"`<google-map>
                <map-kml-layer [options]=""options""
                               [url]=""url""
                               (kmlClick)=""handleClick()""
                               (statusChanged)=""handleStatusChange()"">
                </map-kml-layer>
            </google-map>`",handleStatusChange,'throws an error if the clustering library has not been loaded',MarkerClusterer,markerClustererConstructorSpy,createMarkerClustererConstructorSpy,markerClustererSpy,"'MarkerClusterer class not found, cannot construct a marker cluster. '",'Please install the MarkerClustererPlus library: ','https://github.com/googlemaps/js-markerclustererplus','initializes a Google Map Marker Clusterer',ariaLabelFn,averageCenter,batchSize,batchSizeIE,calculator,clusterClass,enableRetinaIcons,gridSize,ignoreHidden,imageExtension,imagePath,imageSizes,maxZoom,minimumClusterSize,zoomOnClick,'sets marker clusterer inputs','testClusterClass','testImageExtension','testImagePath','testTitle','sets marker clusterer options',MarkerClustererOptions,'png','gives precedence to specific inputs over options','jpeg','sets Google Maps Markers in the MarkerClusterer',addMarkers,anyMarkerMatcher,'updates Google Maps Markers in the Marker Clusterer','state2',removeMarkers,repaint,'state0','exposes marker clusterer methods',markerClustererComponent,markerClusterer,fitMapToMarkers,getAverageCenter,getBatchSizeIE,markers,'testText',getCalculator,getClusterClass,getClusters,getEnableRetinaIcons,getGridSize,getIgnoreHidden,getImageExtension,getImagePath,getImageSizes,getMaxZoom,getMinimumClusterSize,getStyles,getTotalClusters,getTotalMarkers,getZoomOnClick,'initializes marker clusterer event handlers','clusteringbegin','clusteringend',"`<google-map>
               <map-marker-clusterer [ariaLabelFn]=""ariaLabelFn""
                                     [averageCenter]=""averageCenter""
                                     [batchSize]=""batchSize""
                                     [batchSizeIE]=""batchSizeIE""
                                     [calculator]=""calculator""
                                     [clusterClass]=""clusterClass""
                                     [enableRetinaIcons]=""enableRetinaIcons""
                                     [gridSize]=""gridSize""
                                     [ignoreHidden]=""ignoreHidden""
                                     [imageExtension]=""imageExtension""
                                     [imagePath]=""imagePath""
                                     [imageSizes]=""imageSizes""
                                     [maxZoom]=""maxZoom""
                                     [minimumClusterSize]=""minimumClusterSize""
                                     [styles]=""styles""
                                     [title]=""title""
                                     [zIndex]=""zIndex""
                                     [zoomOnClick]=""zoomOnClick""
                                     [options]=""options""
                                     (clusteringbegin)=""onClusteringBegin()""
                                     (clusterClick)=""onClusterClick()"">
                 <map-marker *ngIf=""state === 'state1'""></map-marker>
                 <map-marker *ngIf=""state === 'state1' || state === 'state2'""></map-marker>
                 <map-marker *ngIf=""state === 'state2'""></map-marker>
               </map-marker-clusterer>
             </google-map>`",MapMarkerClusterer,AriaLabelFn,Calculator,ClusterIconStyle,'state1',onClusteringBegin,onClusterClick,'initializes a Google Map marker',markerSpy,createMarkerSpy,DEFAULT_MARKER_OPTIONS,markerConstructorSpy,createMarkerConstructorSpy,'sets marker inputs',MarkerOptions,'marker title','marker label','icon.png',"'sets marker options, ignoring map'",'icon name','updated title','updated label','exposes methods that provide information about the marker',getAnimation,getClickable,getCursor,'cursor',getIcon,'icon',getShape,'initializes marker event handlers','animation_changed','clickable_changed','cursor_changed','draggable_changed','flat_changed','icon_changed','shape_changed','title_changed','visible_changed',flatChanged,"`<google-map>
               <map-marker [title]=""title""
                           [position]=""position""
                           [label]=""label""
                           [clickable]=""clickable""
                           [options]=""options""
                           [icon]=""icon""
                           [visible]=""visible""
                           (mapClick)=""handleClick()""
                           (positionChanged)=""handlePositionChanged()"">
               </map-marker>
             </google-map>`",MarkerLabel,handlePositionChanged,'initializes a Google Map Polygon',polygonSpy,createPolygonSpy,polygonConstructorSpy,createPolygonConstructorSpy,paths,'sets path from input',PolygonOptions,'gives precedence to path input over options',polygonOptions,'exposes methods that provide information about the Polygon',polygonComponent,MapPolygon,getPath,getPaths,'initializes Polygon event handlers',polygon,polygonDragend,"`<google-map>
                <map-polygon [options]=""options""
                              [paths]=""paths""
                              (polygonClick)=""handleClick()""
                              (polygonRightclick)=""handleRightclick()"">
                </map-polygon>
            </google-map>`",'initializes a Google Map Polyline',polylineSpy,createPolylineSpy,polylineConstructorSpy,createPolylineConstructorSpy,PolylineOptions,polylineOptions,'exposes methods that provide information about the Polyline',polylineComponent,MapPolyline,'initializes Polyline event handlers',polyline,polylineDragend,"`<google-map>
                <map-polyline [options]=""options""
                              [path]=""path""
                              (polylineClick)=""handleClick()""
                              (polylineRightclick)=""handleRightclick()"">
                </map-polyline>
            </google-map>`",'initializes a Google Map Rectangle',rectangleSpy,createRectangleSpy,rectangleConstructorSpy,createRectangleConstructorSpy,'sets bounds from input',east,north,west,south,RectangleOptions,'gives precedence to bounds input over options',rectangleOptions,'exposes methods that provide information about the Rectangle',rectangleComponent,MapRectangle,'initializes Rectangle event handlers',rectangle,rectangleDragend,"`<google-map>
                <map-rectangle [options]=""options""
                               [bounds]=""bounds""
                               (boundsChanged)=""handleBoundsChange()""
                               (rectangleClick)=""handleClick()""
                               (rectangleRightclick)=""handleRightclick()"">
                </map-rectangle>
            </google-map>`",handleBoundsChange,'initializes a Google Map Traffic Layer',trafficLayerSpy,createTrafficLayerSpy,trafficLayerOptions,trafficLayerConstructorSpy,createTrafficLayerConstructorSpy,autoRefresh,"`<google-map>
                <map-traffic-layer [autoRefresh]=""autoRefresh"">
                </map-traffic-layer>
            </google-map>`",'initializes a Google Map Transit Layer',transitLayerSpy,createTransitLayerSpy,transitLayerConstructorSpy,createTransitLayerConstructorSpy,"`<google-map>
                <map-transit-layer></map-transit-layer>
            </google-map>`",'should get year',2017,JAN,'should get month','should get date','should get day of week',getDayOfWeek,'should get long month names',getMonthNames,'long','should get short month names','short','Jan','Feb','Mar','Jun','Jul','Aug','Sep','Oct','Nov','Dec','should get narrow month names','narrow','J','should get month names in a different locale',setLocale,da,'januar','februar','marts','april','maj','juni','juli','august','september','oktober','november','december','should get date names',getDateNames,'14','18','19','22','24','25','26','27','28','29','31','should get date names in a different locale',ja,Intl,'1日','2日','3日','4日','5日','6日','7日','8日','9日','10日','11日','12日','13日','14日','15日','16日','17日','18日','19日','20日','21日','22日','23日','24日','25日','26日','27日','28日','29日','30日','31日','should get long day of week names',getDayOfWeekNames,'Sunday','Monday','Tuesday','Wednesday','Thursday','Saturday','should get short day of week names','Sun','Mon','Tue','Wed','Thu','Fri','Sat','should get narrow day of week names','W','should get day of week names in a different locale','日曜日','月曜日','火曜日','水曜日','木曜日','金曜日','土曜日','should get year name',getYearName,'2017','should get year name in a different locale','should get first day of week',getFirstDayOfWeek,'should not create Date with month over/under-flow',createDate,'should not create Date with date over/under-flow',"""should get today's date""",sameDate,today,"""should be equal to today's date""",'should parse string according to given format','1/2/2017','M/d/yyyy','d/M/yyyy',FEB,'should parse string according to first matching format','yyyy/d/M','should throw if parse formats are an empty array','Formats array must not be empty.','should parse number',timestamp,'MM/dd/yyyy','should parse Date','should parse empty string as null','should parse based on the specified locale',de,'02.01.2017','P','should parse invalid value as invalid',isDateInstance,"'Expected to parse as ""invalid date"" object'",'should format date according to given format','01/02/2017','should format with a different locale','PP',stripDirectionalityCharacters,"'Jan 2, 2017'",'2. jan. 2017','should throw when attempting to format invalid date',/DateFnsAdapter: Cannot format invalid date\./,'should add years',addCalendarYears,2018,2016,'should respect leap years when adding years',2015,'should add months',addCalendarMonths,DEC,'should respect month length differences when adding months',MAR,'should add days',addCalendarDays,'should clone','should compare dates',compareDate,'should clamp date at lower bound',clampDate,'should clamp date at upper bound','should clamp date already within bounds','should count today as a valid date instance','should count an invalid date as an invalid date instance','should count a string as not a date instance','1/1/2017','should create valid dates from valid ISO strings',assertValidDate,deserialize,'1985-04-12T23:20:50.52Z','1996-12-19T16:39:57-08:00','1937-01-01T12:00:27.87+00:20','1990-13-31T23:59:00Z','Not valid','should create invalid date','DateFnsAdapter with MAT_DATE_LOCALE override',DateAdapter,Locale,DateFnsModule,MAT_DATE_LOCALE,'should take the default locale id from the MAT_DATE_LOCALE injection token',/[\u200e\u200f]/g,} to be a date instance`,"},`",` but was ${,'shows resize handle overlays on header row hover and while a resize handle is in use',getOverlayThumbElement,headerRowHeight,getHeaderRowHeight,tableHeight,getTableHeight,'mat-column-resize-overlay-thumb',isApproximately,beginColumnResizeWithMouse,getOverlayThumbTopElement,completeResizeWithMouseInProgress,endHoverState,'resizes the target column via mouse input',initialTableWidth,getTableWidth,initialColumnWidth,getColumnWidth,initialColumnPosition,getColumnOriginPosition,initialNextColumnPosition,initialThumbPosition,getOverlayThumbPosition,updateResizeWithMouseInProgress,thumbPositionDelta,columnPositionDelta,nextColumnPositionDelta,'should not start dragging using the right mouse button',initialPosition,'cancels an active mouse resize with the escape key','notifies subscribers of a completed resize via ColumnResizeNotifier',resize,ColumnSize,columnResize,columnResizeNotifier,resizeCompleted,resizeColumnWithMouse,'does not notify subscribers of a canceled resize','performs a column resize triggered via ColumnResizeNotifier',173,1.0079,symbol,'Li','Be',10.811,'should open the panel when the input is focused',panelOpen,`Expected panel state to start out closed.`,`Expected panel state to read open when input is focused.`,`Expected panel to display when input is focused.`,'Alabama','California','should not open the panel on focus if the input is readonly','Expected panel state to start out closed.','Expected panel to stay closed.','should not open using the arrow keys when the input is readonly','should open the panel programmatically',openPanel,`Expected panel state to read open when opened programmatically.`,`Expected panel to display when opened programmatically.`,'should show the panel when the first open is after the initial zone stabilization',runOutsideAngular,`Expected panel to be visible.`,'should close the panel when the user clicks away',`Expected clicking outside the panel to set its state to closed.`,`Expected clicking outside the panel to close the panel.`,'should close the panel when the user clicks away via auxilliary button','should close the panel when the user taps away on a touch device',`Expected tapping outside the panel to set its state to closed.`,`Expected tapping outside the panel to close the panel.`,'should close the panel when an option is clicked','mat-option',`Expected clicking an option to set the panel state to closed.`,`Expected clicking an option to close the panel.`,'should close the panel when a newly created option is clicked',typeInElement,'al',NodeListOf,clearElement,`Expected clicking a new option to set the panel state to closed.`,`Expected clicking a new option to close the panel.`,'should close the panel programmatically',closePanel,`Expected closing programmatically to set the panel state to closed.`,`Expected closing programmatically to close the panel.`,'should not throw when attempting to close the panel of a destroyed autocomplete','should hide the panel when the options list is empty','.mat-mdc-autocomplete-panel',`Expected panel to start out visible.`,'mat-mdc-autocomplete-visible','af',`Expected panel to hide itself when empty.`,'mat-mdc-autocomplete-hidden','should keep the label floating until the panel closes','Expected label to float as soon as panel opens.','always','Expected label to return to auto state after panel closes.','should not open the panel when the `input` event is invoked on a non-focused input',`Expected panel state to stay closed.`,'should not mess with label placement if set to never','never','Expected label to stay static.','Expected label to stay in static state after close.','should not mess with label placement if set to always','Expected label to stay elevated on open.','Expected label to stay elevated after close.','should toggle the visibility when typing and closing the panel','Expected panel to be visible.','Expected panel to be hidden.','should animate the label when the input is focused',inputContainer,'_animateAndLockLabel',_animateAndLockLabel,'should provide the open state of the panel',`Expected the panel to be unopened initially.`,`Expected the panel to be opened on focus.`,'should emit an event when the panel is opened',openedSpy,'should not emit the `opened` event when no options are being shown',filteredStates,'should emit the `opened` event if the options come in after the panel is shown','CA','should not emit the opened event multiple times while typing','Alabam','should emit an event when the panel is closed','should not emit the `closed` event when no options were shown','should not be able to open the panel if the autocomplete is disabled',autocompleteDisabled,`Expected panel to remain closed.`,'should continue to update the model if the autocomplete is disabled',stateCtrl,'should set aria-haspopup depending on whether the autocomplete is disabled','listbox','should close the panel when pressing escape','Expected input to be focused.','Expected panel to be open.','Expected input to continue to be focused.','Expected panel to be closed.','Expected panel to reopen on click.','should not close the panel when clicking on the input',SimpleAutocomplete,'Expected panel to be opened on focus.','Expected panel to remain opened after clicking on the input.','should not close the panel when clicking on the input inside shadow DOM',SimpleAutocompleteShadowDom,'should have the correct text direction in RTL',rtlFixture,'should update the panel direction if it changes for the trigger',dirProvider,'should be able to set a custom value for the `autocomplete` attribute',AutocompleteWithNativeAutocompleteAttribute,'changed','should not throw when typing in an element with a null and disabled autocomplete',InputWithoutAutocompleteAndDisabled,'forms integration','should update control value as user types with input value','Expected control value to be updated as user types.','l','should update control value when autofilling','Expected input not to have focus.','Expected value to be propagated to the form control.','should update control value when option is selected with option value','Expected control value to equal the selected option value.','should update the control back to a string if user types after an option is selected','Californi','Expected control value to revert back to string.','should fill the text field with display value when an option is selected',`Expected text field to fill with selected value.`,'should fill the text field with value if displayWith is not set',displayWith,'test value',`Expected input to fall back to selected option's value.`,'should fill the text field correctly if value is set to obj programmatically','AL',`Expected input to fill with matching option's viewValue.`,'should clear the text field if value is reset programmatically',`Expected input value to be empty after reset.`,'should disable input in view when disabled programmatically',formFieldElement,'.mat-mdc-form-field',`Expected input to start out enabled in view.`,'mat-form-field-disabled',`Expected input underline to start out with normal styles.`,`Expected input to be disabled in view when disabled programmatically.`,`Expected input underline to display disabled styles.`,'should mark the autocomplete control as dirty as user types',dirty,`Expected control to start out pristine.`,`Expected control to become dirty when the user types into the input.`,'should mark the autocomplete control as dirty when an option is selected',`Expected control to become dirty when an option was selected.`,'should not mark the control dirty when the value is set programmatically',`Expected control to stay pristine if value is set programmatically.`,'should mark the autocomplete control as touched on blur',touched,`Expected control to start out untouched.`,`Expected control to become touched on blur.`,'should disable the input when used with a value accessor and without `matInput`',plainFixture,PlainAutocompleteInputWithFormControl,formControl,'keyboard events',DOWN_ARROW_EVENT,UP_ARROW_EVENT,ENTER_EVENT,'should not focus the option when DOWN key is pressed',_handleKeydown,'should not close the panel when DOWN key is pressed',`Expected panel state to stay open when DOWN key is pressed.`,`Expected panel to keep displaying when DOWN key is pressed.`,'should set the active item to the first option when DOWN key is pressed',optionEls,'Expected first down press to open the pane.',activeOption,'Expected first option to be active.','mat-mdc-option-active','Expected second option to be active.','should set the active item to the last option when UP key is pressed','Expected first up press to open the pane.','Expected last option to be active.','should set the active item properly after filtering','should fill the text field when an option is selected with ENTER',`Expected text field to fill with selected value on ENTER.`,'should prevent the default enter key action','Expected the default action to have been prevented.','should not prevent the default enter action for a closed panel after a user action','Default action should not be prevented.','should not interfere with the ENTER key when pressing a modifier','Expected input to start off blank.','Expected panel to start off open.','Expected panel to remain open.','Expected input to remain blank.','Expected the default ENTER action not to have been prevented.',"'should fill the text field, not select an option, when SPACE is entered'",'New',SPACE_EVENT,`Expected option not to be selected on SPACE.`,'should mark the control dirty when selecting an option from the keyboard',`Expected control to become dirty when option was selected by ENTER.`,'should open the panel again when typing after making a selection',`Expected panel state to read closed after ENTER key.`,`Expected panel to close after ENTER key.`,`Expected panel state to read open when typing in input.`,`Expected panel to display when typing in input.`,'should not open the panel if the `input` event was dispatched with changing the value','should scroll to active options below the fold','.cdk-overlay-pane .mat-mdc-autocomplete-panel',`Expected panel not to scroll.`,`Expected panel to reveal the sixth option.`,'should scroll to active options below if the option height is variable','should scroll to active options on UP arrow',initialScrollTop,`Expected panel to reveal last option.`,'should not scroll to active options that are fully in the panel',`Expected panel not to scroll up since sixth option still fully visible.`,'should scroll to active options that are above the panel',`Expected panel to scroll up when option is above panel.`,'should prevent the default action when pressing escape',escapeEvent,'should not close the panel when pressing escape with a modifier','Expected panel to stay open.','Expected default action not to be prevented.','should close the panel when pressing ALT + UP_ARROW',upArrowEvent,'should close the panel when tabbing away from a trigger without results','Expected panel to be rendered.','Expected panel to be removed.','should not close when a click event occurs on the outside while the panel has focus','should reset the active option when closing with the escape key','Expected no active option.','Expected to find an active option.','Expected no active options.','should reset the active option when closing by selecting with enter','should not prevent the default action when a modifier key is pressed',`Expected autocompete not to block ${,} key`,'option groups',AutocompleteWithGroups,'Expected the panel not to scroll.','Expected panel to reveal the sixth option.','Expected panel to reveal last option.',472,'Expected panel not to scroll.','Expected panel to scroll up when option is above panel.',104,'should scroll back to the top when reaching the first option with preceding group label','Expected panel to be scrolled to the top.','should scroll to active option when group is indirect descendant',AutocompleteWithIndirectGroups,'aria','should set role of input to combobox','Expected role of input to be combobox.','should set role of autocomplete panel to listbox','Expected role of the panel to be listbox.','should point the aria-labelledby of the panel to the field label',labelId,'should add a custom aria-labelledby to the panel',ariaLabelledby,'myLabelId',} myLabelId`,'should trim aria-labelledby if the input does not have a label',`myLabelId`,'should clear aria-labelledby from the panel if an aria-label is set','My label','should clear aria-labelledby if the form field does not have a label','should support setting a custom aria-label','Custom Label','should set aria-autocomplete to list','aria-autocomplete','Expected aria-autocomplete attribute to equal list.','list','should set aria-activedescendant based on the active option','Expected aria-activedescendant to be absent if no active item.','Expected aria-activedescendant to match the active item after 1 down arrow.','Expected aria-activedescendant to match the active item after 2 down arrows.','should set aria-expanded based on whether the panel is open','Expected aria-expanded to be false while panel is closed.','Expected aria-expanded to be true while panel is open.','Expected aria-expanded to be false when panel closes again.','should set aria-expanded properly when the panel is hidden','zz','Expected aria-expanded to be false when panel hides itself.','should set aria-owns based on the attached autocomplete','Expected aria-owns to match attached autocomplete.','should not set aria-owns while the autocomplete is closed','should restore focus to the input when clicking to select a value','Expected focus to be restored to the input.','should remove autocomplete-specific aria attributes when autocomplete is disabled','Fallback positions','should use below positioning by default',inputReference,'.mdc-text-field',inputBottom,panelTop,`Expected panel top to match input bottom by default.`,'mat-mdc-autocomplete-panel-above','should reposition the panel on scroll',spacer,'Expected panel top to match input bottom after scrolling.','should fall back to above position if panel cannot fit below',inputTop,panelBottom,`Expected panel to fall back to above position.`,'should allow the panel to expand when the number of results increases',initialPanelHeight,"'should align panel properly when filtering in ""above"" position'",`Expected panel to stay aligned after filtering.`,'should fall back to above position when requested if options are added while ','the panel is open','75px',inputRect,panelRect,`Expected panel top to be below input before repositioning.`,'FK','Fake State',`Expected panel to fall back to above position after repositioning.`,'should not throw if a panel reposition is requested while the panel is closed','should be able to force below position even if there is not enough space','below','Expected panel to be below the input.','should be able to force above position even if there is not enough space','above','Expected panel to be above the input.','should handle the position being changed after the first open','Option selection','should deselect any other selected option',componentOptions,`Clicked option should be selected.`,`Previous option should not be selected.`,`New Clicked option should be selected.`,'should call deselect only on the previous selected option','deselect','should be able to preselect the first option',autoActiveFirstOption,'Expected first option to be highlighted.','should skip to the next enabled option if the first one is disabled ','when using `autoActiveFirstOption`','Expected third option to be highlighted.','should remove aria-activedescendant when panel is closed with autoActiveFirstOption','Expected no active descendant on init.','Expected active descendant while open.','Expected no active descendant when closed.','should be able to preselect the first option when the floating label is disabled','should be able to configure preselecting the first option globally',MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,'should handle `optionSelections` being accessed too early','option selection spy',optionSelections,MatOptionSelectionChange,'should emit to `optionSelections` if the list of options changes',openAndSelectFirstOption,'OR','Oregon','WV','West Virginia','should reposition the panel when the amount of options changes','Cali',`Expected panel top to match input bottom when there is only one option.`,`Expected panel switch to the above position if the options no longer fit.`,'panel closing',MatAutocompleteTrigger,closingActionSpy,closingActionsSub,'closing action listener',panelClosingActions,'should emit panel close event when clicking away','should emit panel close event when tabbing out',tabEvent,'should not emit when tabbing away from a closed panel','should emit panel close event when selecting an option','without matInput',AutocompleteWithNativeInput,'should not throw when clicking outside','with panel classes in the default options','should apply them if provided as string',overlayPanelClass,'default1',panelClassList,'should apply them if provided as array','default2','misc','should allow basic use without any forms directives',AutocompleteWithoutForms,'should display an empty input when the value is undefined with ngModel',AutocompleteWithNgModel,'should display the number when the selected option is the number zero',AutocompleteWithNumbers,selectedNumber,'should work when input is wrapped in ngIf',NgIfAutocomplete,'should filter properly with ngIf after setting the active item',matOptions,'should throw if the user attempts to open the panel too early',AutocompleteWithoutPanel,getMatAutocompleteMissingPanelError,"'should not throw on init, even if the panel is not defined'",'Something','should transfer the mat-autocomplete classes to the panel element','mat-autocomplete','class-one','class-two','should remove old classes when the panel class changes','class-three class-four','class-three','class-four','should reset correctly when closed programmatically',MAT_AUTOCOMPLETE_SCROLL_STRATEGY,'should handle autocomplete being attached to number inputs',AutocompleteWithNumberInputAndNgModel,'1337','automatically selecting the active option',autoSelectActiveOption,"'should update the input value as the user is navigating, without changing the model '",'value or closing the panel','should revert back to the last typed value if the user presses escape','should emit a closed event if no option is displayed','_x','should clear the input if the user presses escape while there was a pending ','auto selection and there is no previous value','should propagate the auto-selected value if the user clicks away','should propagate the auto-selected value if the user tabs away','should propagate the auto-selected value if the user presses enter on it','should allow the user to click on an option different from the auto-selected one','FL','Florida','should have correct width when opened',widthFixture,parseFloat,'should update the width while the panel is open','should not reopen a closed autocomplete when returning to a blurred tab','Expected panel to remain closed.','should update the panel width if the window is resized','should have panel width match host width by default','should have panel width set to string value',panelWidth,'should have panel width set to number value','should show the panel when the options are initialized later within a component with ','OnPush change detection',AutocompleteWithOnPushDelay,visibleClass,'should emit an event when an option is selected',AutocompleteWithSelectEvent,optionSelected,MatAutocompleteSelectedEvent,'Washington','should refocus the input after the selection event is emitted','should emit an event when a newly-added option is selected','Puerto Rico','should emit an event when an option is activated',AutocompleteWithActivatedEvent,optionActivated,'should not emit the optionActivated event when the active option is reset','should be able to set a custom panel connection element',AutocompleteWithDifferentOrigin,alternateOrigin,'.origin','Expected autocomplete panel to align with the bottom of the new origin.','should be able to change the origin after the panel has been opened','should be able to re-type the same value when it is reset while open','Cal','Expected initial value to be propagated to model','Expected input value to reset when model is reset','Expected new value to be propagated to model','should not close when clicking inside alternate origin','should emit from `autocomplete.closed` after click outside inside the NgZone',inZoneSpy,'in zone spy',enableLongStackTrace,onStable,SIMPLE_AUTOCOMPLETE_TEMPLATE,"`
  <mat-form-field [floatLabel]=""floatLabel"" [style.width.px]=""width"">
    <mat-label *ngIf=""hasLabel"">State</mat-label>
    <input
      matInput
      placeholder=""State""
      [matAutocomplete]=""auto""
      [matAutocompletePosition]=""position""
      [matAutocompleteDisabled]=""autocompleteDisabled""
      [formControl]=""stateCtrl"">
  </mat-form-field>

  <mat-autocomplete [class]=""panelClass"" #auto=""matAutocomplete"" [displayWith]=""displayFn""
    [disableRipple]=""disableRipple"" [aria-label]=""ariaLabel"" [aria-labelledby]=""ariaLabelledby""
    (opened)=""openedSpy()"" (closed)=""closedSpy()"">
    <mat-option
      *ngFor=""let state of filteredStates""
      [value]=""state""
      [style.height.px]=""state.height""
      [disabled]=""state.disabled"">
      <span>{{ state.code }}: {{ state.name }}</span>
    </mat-option>
  </mat-autocomplete>
`",OnDestroy,valueSub,disableRipple,'class-one class-two','autocomplete opened spy','autocomplete closed spy',MatAutocomplete,MatFormField,MatOption,'KS','Kansas','MA','Massachusetts','NY','PA','Pennsylvania','TN','Tennessee','VA','Virginia','WY','Wyoming',valueChanges,RegExp,'gi',displayFn,"`
    <mat-form-field *ngIf=""isVisible"">
      <input matInput placeholder=""Choose"" [matAutocomplete]=""auto"" [formControl]=""optionCtrl"">
    </mat-form-field>

    <mat-autocomplete #auto=""matAutocomplete"">
      <mat-option *ngFor=""let option of filteredOptions | async"" [value]=""option"">
         {{option}}
      </mat-option>
    </mat-autocomplete>
  `",optionCtrl,filteredOptions,startWith,'should prevent click handlers from executing when disabled','click-counter',ExpectedConditions,presenceOf,'div.mat-ripple-element','disable-toggle','should apply class based on color attribute',buttonDebugElement,aDebugElement,buttonColor,'primary','mat-primary','accent','mat-accent','should expose the ripple instance',MatButton,'should not clear previous defined classes','button[mat-fab]','should have accent palette by default',fabButtonDebugEl,'Expected fab buttons to use accent palette by default','button[mat-mini-fab]',miniFabButtonDebugEl,'Expected mini-fab buttons to use accent palette by default','button[mat-fab] extended','should be extended',extendedFabButtonDebugEl,'.extended-fab-test','mat-mdc-extended-fab',extended,'button[mat-button]','should handle a click on the button',clickCount,'should not increment if disabled','should disable the native button element',buttonNativeElement,'Expected button not to be disabled','Expected button to be disabled','a[mat-button]','should not redirect if disabled','should remove tabindex if disabled','should add aria-disabled attribute if disabled','should not add aria-disabled attribute if disabled is false',"'Expect aria-disabled=""false""'","'Expect disabled=""false""'",'Expect no aria-disabled','Expect no disabled','should be able to set a custom tabindex','Expected custom tabindex to be set','Expected custom tabindex to be overwritten when disabled.','should not set a default tabindex on enabled links','should not run change detection for disabled anchor but should prevent the default behavior and stop event propagation','stopImmediatePropagation','button ripples',buttonRippleDebugElement,buttonRippleInstance,MatRipple,anchorDebugElement,anchorRippleDebugElement,anchorRippleInstance,'should disable the ripple if matRippleDisabled input is set',rippleDisabled,'should disable the ripple when the button is disabled','Expected an enabled button[mat-button] to have an enabled ripple','Expected an enabled a[mat-button] to have an enabled ripple','Expected a disabled button[mat-button] not to have an enabled ripple','Expected a disabled a[mat-button] not to have an enabled ripple','should have a focus indicator',buttonNativeElements,"'a, button'",'.mat-mdc-focus-indicator','MatFabDefaultOptions',MatFabDefaultOptions,MatButtonModule,MAT_FAB_DEFAULT_OPTIONS,'should override default color in component','should default to accent if config does not specify color',"`
    <button [tabIndex]=""tabIndex"" mat-button type=""button"" (click)=""increment()""
      [disabled]=""isDisabled"" [color]=""buttonColor"" [disableRipple]=""rippleDisabled"">
      Go
    </button>
    <a [tabIndex]=""tabIndex"" href=""http://www.google.com"" mat-button [disabled]=""isDisabled""
      [color]=""buttonColor"">
      Link
    </a>
    <button mat-fab>Fab Button</button>
    <button mat-fab [extended]=""extended"" class=""extended-fab-test"">Extended</button>
    <button mat-mini-fab>Mini Fab Button</button>
  `",ThemePalette,'should show a card','mat-card','should default the card to the `raised` appearance',BasicCard,'.mat-mdc-card','mdc-card--outlined','should be able to change the card appearance','outlined','should be able to change the default card appearance using DI',MAT_CARD_CONFIG,'<mat-card></mat-card>',MatCard,'should get card text','Shiba InuDog Breed The Shiba Inu is the smallest of ','the six original and distinct spitz breeds of dog from ',"'Japan. A small, agile dog that copes very well with '","'mountainous terrain, the Shiba Inu was originally bred '",'for hunting. LIKESHARE','should get title text',"'should be checked when clicked, and unchecked when clicked again'",checkboxEl,'test-checkbox','input[id=test-checkbox-input]',"'Expect checkbox ""checked"" property to be true'","'Expect checkbox ""checked"" property to be false'",'should toggle the checkbox when pressing space','should set the initial input text',inputInstance,DEFAULT_INITIAL_VALUE,'should focus the input','should update the internal value as it is set','NEW_VALUE',`<mat-chip><span matChipEditInput></span></mat-chip>`,ChipEditInputContainer,'should add the `mat-mdc-chip-set` class',chipGridNativeElement,'mat-mdc-chip-set','should toggle the chips disabled state based on whether it is disabled',chipGridInstance,'should disable a chip that is added after the list became disabled','should not set a role on the grid when the list is empty','should be able to set a custom role','focus behaviors',StandardChipGrid,StandardChipGridWithAnimations,'should focus the first chip on focus',primaryActions,'should focus the primary action when calling the `focus` method','should not be able to become focused when disabled','Expected grid to not be focused.','Expected grid to continue not to be focused','should remove the tabindex from the grid if it is disabled','on chip destroy','should focus the next item',midItem,'should focus the previous item','should not focus if chip grid is not focused','should focus the grid if the last focused item is removed','should move focus to the last chip when the focused chip was deleted inside a ','component with animations',BrowserAnimationsModule,focusIndicators,'.mat-mdc-chip-primary-focus-indicator','keyboard behavior','LTR (default)',ChipGridWithRemove,trailingActions,'.mdc-evolution-chip__action--trailing','should focus previous column when press LEFT ARROW','should focus next column when press RIGHT ARROW','should not handle arrow key events from non-chip elements',previousActiveElement,'Expected focused item not to have changed.','RTL','should focus previous column when press RIGHT ARROW','should focus next column when press LEFT ARROW','should allow focus to escape when tabbing away',nativeChips,'mat-chip-row',firstNativeChip,'Expected tabIndex to be set to -1 temporarily.','Expected tabIndex to be reset back to 0','should account for the direction changing','should move focus to the first chip when pressing HOME','should move focus to the last chip when pressing END','should ignore all non-tab navigation keyboard events from an editing chip',keysToIgnore,'FormFieldChipGrid',FormFieldChipGrid,'should maintain focus if the active chip is deleted',secondChip,'.mat-mdc-chip',secondChipAction,'.mdc-evolution-chip__action--primary',_chips,findIndex,_hasFocus,'when the input has focus','should not focus the last chip when press DELETE',expectNoCellFocused,'should focus the last chip when press BACKSPACE',expectLastCellFocused,'should not focus the last chip when pressing BACKSPACE on a non-empty input','should complete the stateChanges stream on destroy','stateChanges complete',stateChanges,'should point the label id to the chip input','for','with chip remove','should properly focus next item if chip is removed through click',_handleAnimationend,_handleTransitionend,'chip grid with chip input',InputChipGrid,nativeChipGrid,'mat-chip-grid','should take an initial view value with reactive forms','[pizza-1]',chipGrid,'should set the view value from the form','Expect chip grid to have no initial value','should update the form value when the view changes',`Expected the control's value to be empty initially.`,'123-8','should clear the value when the control is reset','pizza-1','should set the control to touched when the chip grid is touched','Expected the control to start off as untouched.','Expected the control to be touched.','should not set touched when a disabled chip grid is touched','Expected the control to stay untouched.',"""should set the control to dirty when the chip grid's value changes in the DOM""",`Expected control to be dirty after value was changed by user.`,'should not set the control to dirty when the value changes programmatically',`Expected control to stay pristine after programmatic change.`,'should set an asterisk after the placeholder if the control is required',requiredMarker,'.mat-mdc-form-field-required-marker',"`Expected placeholder not to have an asterisk, as control was not required.`","`Expected placeholder to have an asterisk, as control was required.`",'should mark the component as required if the control has a required validator',Validators,'should blur the form field when the active chip is blurred','mat-focused','should keep focus on the input after adding the first chip',chipEls,foods,'Expected all chips to be removed.','Expected input to remain focused.','should set aria-invalid if the form field is invalid','should not focus the last chip when pressing DELETE','should focus the last chip when pressing BACKSPACE when input is empty',"'should not focus the last chip when pressing BACKSPACE after changing input, '",'until BACKSPACE is released and pressed again','should focus last chip after pressing BACKSPACE after creating a chip','error messages',ChipGridWithFormErrorMessages,errorTestComponent,chipGridEl,'mat-form-field','should not show any errors if the user has not interacted',untouched,'Expected untouched form control','mat-error','Expected no error message',"'Expected aria-invalid to be set to ""false"".'",'should display an error message when the grid is touched and invalid','Expected form control to be invalid',markAsTouched,'Expected container to have the invalid CSS class.','mat-form-field-invalid','Expected one error message to have been rendered.',"'Expected aria-invalid to be set to ""true"".'",'should display an error message when the parent form is submitted',submitted,'Expected form not to have been submitted','Expected form to have been submitted','should hide the errors and show the hints once the chip grid becomes valid','mat-hint','Expected no hints to be shown.','Expected container not to have the invalid class when valid.','Expected no error messages when the input is valid.','Expected one hint to be shown once the input is valid.','should set the proper aria-live attribute on the error messages','sets the aria-describedby on the input to reference errors when in error state',hintId,'.mat-mdc-form-field-hint',describedBy,'hint should be shown',errorIds,'.mat-mdc-form-field-error',errorDescribedBy,'errors should be shown',animationsModule,MatChipsModule,MatFormFieldModule,MatInputModule,MockNgZone,chipGridDebugElement,MatChipGrid,"`
    <mat-chip-grid [tabIndex]=""tabIndex"" [role]=""role"" #chipGrid>
      <mat-chip-row *ngFor=""let i of chips""
                    [editable]=""editable"">
        {{name}} {{i + 1}}
      </mat-chip-row>
    </mat-chip-grid>
    <input name=""test"" [matChipInputFor]=""chipGrid""/>`","`
    <mat-form-field>
      <mat-label>Add a chip</mat-label>
      <mat-chip-grid #chipGrid>
        <mat-chip-row *ngFor=""let chip of chips"" (removed)=""remove(chip)"">{{chip}}</mat-chip-row>
      </mat-chip-grid>
      <input name=""test"" [matChipInputFor]=""chipGrid""/>
    </mat-form-field>
  `",'Chip 0','Chip 1',"`
    <mat-form-field>
      <mat-label>New food...</mat-label>
      <mat-chip-grid #chipGrid placeholder=""Food"" [formControl]=""control"">
        <mat-chip-row *ngFor=""let food of foods"" [value]=""food.value"" (removed)=""remove(food)"">
          {{ food.viewValue }}
        </mat-chip-row>
      </mat-chip-grid>
      <input
          [matChipInputFor]=""chipGrid""
          [matChipInputSeparatorKeyCodes]=""separatorKeyCodes""
          [matChipInputAddOnBlur]=""addOnBlur""
          (matChipInputTokenEnd)=""add($event)""/>
    </mat-form-field>
  `",'steak-0',viewValue,'Steak','tacos-2','sandwich-3','Sandwich','Chips','eggs-5','Eggs','pasta-6','sushi-7',separatorKeyCodes,addOnBlur,MatChipInputEvent,}-${,chipInput,food,MatChipRow,"`
<form #form=""ngForm"" novalidate>
  <mat-form-field>
    <mat-chip-grid #chipGrid [formControl]=""formControl"">
      <mat-chip-row *ngFor=""let food of foods"" [value]=""food.value"">
      {{food.viewValue}}
      </mat-chip-row>
    </mat-chip-grid>
    <input name=""test"" [matChipInputFor]=""chipGrid""/>
    <mat-hint>Please select a chip, or type to add a new chip</mat-hint>
    <mat-error>Should have value</mat-error>
  </mat-form-field>
</form>
  `",NgForm,"`
    <mat-chip-grid #chipGrid>
      <mat-chip-row *ngFor=""let i of numbers"" (removed)=""remove(i)"">{{i}}</mat-chip-row>
      <input name=""test"" [matChipInputFor]=""chipGrid""/>
    </mat-chip-grid>`",animations,'dummyAnimation',':leave',animate,"`
    <mat-form-field>
      <mat-chip-grid #chipGrid>
        <mat-chip-row [value]=""i"" (removed)=""removeChip($event)"" *ngFor=""let i of chips"">
          Chip {{i + 1}}
          <span matChipRemove>Remove</span>
        </mat-chip-row>
      </mat-chip-grid>
      <input name=""test"" [matChipInputFor]=""chipGrid""/>
    </mat-form-field>
  `",MatChipEvent,'emits the (chipEnd) on enter keyup',testChipInput,'add',inputNativeElement,'should have a default id','should allow binding to the `placeholder` input','bound placeholder','should become disabled if the list is disabled',chipInputDirective,'should be aria-required if the list is required','should be required if the list is required','should allow focus to escape when tabbing forwards',gridElement,'should set input styling classes','mat-mdc-input-element','mat-mdc-form-field-input-control','mat-mdc-chip-input','mdc-text-field__input','[addOnBlur]','allows (chipEnd) when true',_blur,'disallows (chipEnd) when false','[separatorKeyCodes]','does not emit (chipEnd) when a non-separator key is pressed',COMMA,'emits (chipEnd) when a custom separator keys is pressed','emits accepts the custom separator keys in a Set','emits (chipEnd) when the separator keys are configured globally',PlatformModule,TestChipInput,MAT_CHIPS_DEFAULT_OPTIONS,MatChipsDefaultOptions,inputDebugElement,MatChipInput,'should not emit the chipEnd event if a separator is pressed with a modifier key','should set aria-describedby correctly when a non-empty list of ids is passed to setDescribedByIds',setDescribedByIds,'a b c','should set aria-describedby correctly when an empty list of ids is passed to setDescribedByIds',"`
    <mat-form-field>
      <mat-chip-grid #chipGrid [required]=""required"">
        <mat-chip-row>Hello</mat-chip-row>
        <input [matChipInputFor]=""chipGrid""
                  [matChipInputAddOnBlur]=""addOnBlur""
                  (matChipInputTokenEnd)=""add($event)""
                  [placeholder]=""placeholder"" />
      </mat-chip-grid>
    </mat-form-field>
  `",chipListboxNativeElement,'should not have the aria-selected attribute when it is not selectable',selectable,chipsValid,chipListboxInstance,'should disable a chip that is added after the listbox became disabled','should not set aria-required when it does not have a role','with selected chips',SelectedChipListbox,'should not override chips selected',instanceChips,'Expected first option to be selected.','Expected second option to be not selected.','Expected third option to be selected.','should have role listbox','should not have role when empty','Expect no role attribute',StandardChipListbox,'Expected listbox to not be focused.','Expected listbox to continue not to be focused','should remove the tabindex from the listbox if it is disabled','should not focus if chip listbox is not focused','should focus the listbox if the last focused item is removed','should focus previous item when press LEFT ARROW','should focus next item when press RIGHT ARROW','should focus the first item when pressing HOME',lastAction,'should focus the last item when pressing END','should focus previous item when press RIGHT ARROW','should focus next item when press LEFT ARROW','should use user defined tabIndex','Expected tabIndex to be set to user defined value 4.','Expected tabIndex to be reset back to 4','selection logic',BasicChipListbox,'should remove selection if chip has been removed',chipListbox,'Expected selection to be removed when option no longer exists.','should select an option that was added after initialization','Potatoes','potatoes-8','Expect value contain the value of the last option','Expect last option selected','should not select disabled chips','Expect value to be undefined','Expect disabled chip not selected','Expect no selected chips','chip list with chip input','Expect pizza-1 chip to be selected','Expect chip to be not selected after toggle selected','Expect chip listbox to have no initial value','Expect chip to be selected',`Expected control's value to be set to the new option.`,'should clear the selection when a nonexistent option value is selected',`Expected chip with the value to be selected.`,'gibberish',`Expected chip with the old value not to be selected.`,'should clear the selection when the control is reset','should set the control to touched when the chip listbox is touched',nativeChipListbox,'mat-chip-listbox','should not set touched when a disabled chip listbox is touched',"""should set the control to dirty when the chip listbox's value changes in the DOM""",'should be able to programmatically select a falsy option',falsyFixture,FalsyValueChipListbox,'Expected first option to be selected','should not focus the active chip when the value is set programmatically',chipArray,MultiSelectionChipListbox,chipListboxDebugElement,MatChipListbox,"`
    <mat-chip-listbox [tabIndex]=""tabIndex"" [selectable]=""selectable"" [role]=""role"">
      <mat-chip-option *ngFor=""let i of chips"" (select)=""chipSelect(i)""
        (deselect)=""chipDeselect(i)"">
        {{name}} {{i + 1}}
      </mat-chip-option>
    </mat-chip-listbox>`",chipSelect,chipDeselect,"`
      <mat-chip-listbox [formControl]=""control"" [required]=""isRequired""
        [tabIndex]=""tabIndexOverride"" [selectable]=""selectable"">
        <mat-chip-option *ngFor=""let food of foods"" [value]=""food.value"" [disabled]=""food.disabled"">
          {{ food.viewValue }}
        </mat-chip-option>
      </mat-chip-listbox>
  `",tabIndexOverride,MatChipOption,"`
      <mat-chip-listbox [multiple]=""true"" [formControl]=""control""
        [required]=""isRequired""
        [tabIndex]=""tabIndexOverride"" [selectable]=""selectable"">
        <mat-chip-option *ngFor=""let food of foods"" [value]=""food.value"" [disabled]=""food.disabled"">
          {{ food.viewValue }}
        </mat-chip-option>
      </mat-chip-listbox>
  `","`
      <mat-chip-listbox [formControl]=""control"">
        <mat-chip-option *ngFor=""let food of foods"" [value]=""food.value"">
          {{ food.viewValue }}
        </mat-chip-option>
      </mat-chip-listbox>
  `","`
    <mat-chip-listbox>
        <mat-chip-option *ngFor=""let food of foods"" [value]=""food.value"" [selected]=""food.selected"">
            {{ food.viewValue }}
        </mat-chip-option>
    </mat-chip-listbox>
  `",'adds the `mat-chip` class',chipNativeElement,'mat-mdc-chip','emits focus only once for multiple clicks',chipInstance,_onFocus,'emits destroy on destruction','chipDestroy',shouldShow,chipDestroy,'allows color customization','mat-warn','allows selection','chipSelectionChange','mat-mdc-chip-selected',chipSelectionChange,isUserInput,'should not prevent the default click action','should not dispatch `selectionChange` event when deselecting a non-selected chip','selectionChange spy','should not dispatch `selectionChange` event when selecting a selected chip','should not dispatch `selectionChange` event when selecting a selected chip via ','user interaction',selectViaInteraction,'should not dispatch `selectionChange` through setter if the value did not change','should be able to disable ripples through ripple global options at runtime',_isRippleDisabled,'Expected chip ripples to be enabled.',globalRippleOptions,'Expected chip ripples to be disabled.','should have the correct role','when selectable is true','should selects/deselects the currently focused chip on SPACE',CHIP_SELECTED_EVENT,MatChipSelectionChange,CHIP_DESELECTED_EVENT,'should have correct aria-selected in single selection mode','should have the correct aria-selected in multi-selection mode','should disable focus on the checkmark','.mdc-evolution-chip__checkmark-svg','when selectable is false','SPACE ignores selection','should not have the aria-selected attribute','should update the aria-disabled for disabled chips','should contain a focus indicator inside the text label','.mdc-evolution-chip__text-label',"`
    <mat-chip-listbox>
      <div *ngIf=""shouldShow"">
        <mat-chip-option [selectable]=""selectable""
                 [color]=""color"" [selected]=""selected"" [disabled]=""disabled""
                 (focus)=""chipFocus($event)"" (destroyed)=""chipDestroy($event)""
                 (selectionChange)=""chipSelectionChange($event)"">
          <span class=""avatar"" matChipAvatar></span>
          {{name}}
        </mat-chip-option>
      </div>
    </mat-chip-listbox>`",SingleChip,chipFocus,'should apply a CSS class to the remove icon','.mdc-evolution-chip__icon--trailing','mat-mdc-chip-remove','should ensure that the button cannot submit its parent form','should not set the `type` attribute on non-button elements','span.mat-mdc-chip-remove','should emit (removed) event when exit animation is complete',testChip,removable,triggerRemoveSequence,didRemove,'should not start MDC exit animation if parent chip is disabled',HIDDEN,'should not make the element aria-hidden when it is focusable','should prevent the default SPACE action','should prevent the default ENTER action','mat-mdc-focus-indicator','should prevent the default click action',"`
    <mat-chip-set>
      <mat-chip
        [removable]=""removable""
        [disabled]=""disabled""
        (removed)=""didRemove()"">
        <button matChipRemove></button>
        <span matChipRemove></span>
      </mat-chip>
    </mat-chip-set>
  `",TestChip,'didRemove spy','adds the `mat-mdc-chip` class','does not add the `mat-basic-chip` class','mat-basic-chip','allows removal','chipRemove',chipRemove,'when removable is true','DELETE emits the (removed) event',DELETE_EVENT,'BACKSPACE emits the (removed) event',BACKSPACE_EVENT,'when removable is false','DELETE does not emit the (removed) event','BACKSPACE does not emit the (removed) event','should update the aria-label for disabled chips',primaryActionElement,'sends focus to first grid cell on mousedown','mdc-evolution-chip__action--primary','emits focus only once for multiple focus() calls','editable behavior','should begin editing on double click','.mat-chip-edit-input','should begin editing on ENTER','editing behavior',editInputInstance,MatChipEditInput,'chipEdit',editInputDebugElement,keyDownOnPrimaryAction,keyDownEvent,getEditInput,'should not delete the chip on DELETE or BACKSPACE','Delete','should stop editing on focusout',chipEdit,'should stop editing on ENTER','should emit the new chip value when editing completes',chipValue,'chip value','should use the projected edit input if provided','projected-edit-input','should use the default edit input if none is projected',useCustomEditInput,editInputNoProject,'should focus the chip content if the edit input has focus on completion','should focus the chip content if the body has focus on completion','should not change focus if another element has focus on completion',"`
    <mat-chip-grid #chipGrid>
      <div *ngIf=""shouldShow"">
        <mat-chip-row [removable]=""removable""
                 [color]=""color"" [disabled]=""disabled"" [editable]=""editable""
                 (destroyed)=""chipDestroy($event)""
                 (removed)=""chipRemove($event)"" (edited)=""chipEdit($event)"">
          {{name}}
          <button matChipRemove>x</button>
          <span *ngIf=""useCustomEditInput"" class=""projected-edit-input"" matChipEditInput></span>
        </mat-chip-row>
        <input matInput [matChipInputFor]=""chipGrid"" #chipInput>
      </div>
    </mat-chip-grid>`",'chipInput',MatChipEditedEvent,chipSetNativeElement,chipSetInstance,'should disable a chip that is added after the set became disabled','should have role presentation by default','should allow a custom role to be specified','should sync the disabled state to indirect descendant chips',IndirectDescendantsChipSet,chipSetDebugElement,MatChipSet,MatChip,"`
      <mat-chip-set>
        <mat-chip *ngFor=""let i of chips"">
          {{name}} {{i + 1}}
        </mat-chip>
      </mat-chip-set>
  `",BasicChipSet,"`
    <mat-chip-set>
      <ng-container [ngSwitch]=""true"">
        <mat-chip *ngFor=""let i of chips"">
          {{name}} {{i + 1}}
        </mat-chip>
      </ng-container>
    </mat-chip-set>
  `",'adds a class to indicate that it is a basic chip',BasicChip,'mat-mdc-basic-chip','should be able to set a static tabindex',BasicChipWithStaticTabindex,'should be able to set a dynamic tabindex',BasicChipWithBoundTabindex,'should have its ripple disabled',chipDebugElement,chipRippleDebugElement,chipRippleInstance,'Expected basic chip ripples to be disabled.','MatChip','should be able to disable ripples with the `[rippleDisabled]` input','should disable ripples when the chip is disabled','should make disabled chips non-focusable','should return the chip text if value is undefined','should return the chip value if defined','should return the chip value if set to null',"`
    <mat-chip-set>
      <div *ngIf=""shouldShow"">
        <mat-chip [removable]=""removable""
                 [color]=""color"" [disabled]=""disabled""
                 (focus)=""chipFocus($event)"" (destroyed)=""chipDestroy($event)""
                 (removed)=""chipRemove($event)"" [value]=""value"" [disableRipple]=""rippleDisabled"">
          {{name}}
        </mat-chip>
      </div>
    </mat-chip-set>`",`<mat-basic-chip>Hello</mat-basic-chip>`,"`<mat-basic-chip role=""button"" tabindex=""3"">Hello</mat-basic-chip>`","`<mat-basic-chip role=""button"" [tabIndex]=""tabindex"">Hello</mat-basic-chip>`",'should get correct number of grid harnesses',MatChipGridHarness,'should get correct number of rows','should get the chip input harness',getInput,'should get whether the grid is disabled','should get whether the grid is required','should get whether the grid is invalid',isInvalid,"`
    <mat-chip-grid [formControl]=""control"" [required]=""required"" #grid>
      <mat-chip-row>Chip A</mat-chip-row>
      <mat-chip-row>Chip B</mat-chip-row>
      <mat-chip-row>Chip C</mat-chip-row>
      <input [matChipInputFor]=""grid""/>
    </mat-chip-grid>
  `",ChipGridHarnessTest,'should get correct number of chip harnesses','should get the chip text content','Basic Chip','Chip','Chip with avatar','Disabled Chip','Chip Row','should be able to remove a chip',removeChipSpy,'removeChip','should get the disabled state of a chip',disabledStates,'should get the remove button of a chip','.has-remove-button',getRemoveButton,'should find avatar in chip','.mat-mdc-chip-with-avatar',avatar,getAvatar,avatarHost,'Coronavirus','should find icon in chip','.mat-mdc-chip-with-icon-avatar','coronavirus',"`
    <mat-basic-chip>Basic Chip</mat-basic-chip>
    <mat-chip>Chip <span matChipTrailingIcon>trailing_icon</span></mat-chip>
    <mat-chip class=""mat-mdc-chip-with-icon-avatar"">
      <mat-icon matChipAvatar aria-label=""Coronavirus"" aria-hidden=""false"">coronavirus</mat-icon>
      Chip with avatar
    </mat-chip>
    <mat-chip
      class=""has-remove-button""
      disabled>Disabled Chip <span matChipRemove>remove_icon</span>
    </mat-chip>
    <mat-chip-row (removed)=""removeChip()"">Chip Row</mat-chip-row>
  `",ChipHarnessTest,'should get correct number of chip input harnesses',MatChipInputHarness,'should get the disabled state','should get whether the input is required','should get whether the input placeholder',getPlaceholder,'should get and set the input value','should control the input focus state',"`
    <mat-chip-grid #grid1>
      <input [matChipInputFor]=""grid1"" [required]=""required"" placeholder=""Placeholder"" />
    </mat-chip-grid>

    <mat-chip-grid #grid2>
      <input [matChipInputFor]=""grid2"" disabled />
    </mat-chip-grid>
  `",ChipInputHarnessTest,'should get correct number of listbox harnesses','should get the number of options','should get whether the listbox is in multi-selection mode','should get whether the listbox is disabled','should get whether the listbox is required','should get selection when no options are selected','should get selection in single-selection mode','Blue','should get selection in multi-selection mode','Green','should be able to select specific options',selectChips,/Blue|Yellow/,'Yellow',"`
    <mat-chip-listbox [multiple]=""isMultiple"" [disabled]=""disabled"" [required]=""required"">
      <mat-chip-option *ngFor=""let option of options"" [selected]=""option.selected"">
        {{option.text}}
      </mat-chip-option>
    </mat-chip-listbox>
  `",ChipListboxHarnessTest,'Red',MatChipOptionHarness,'should get whether the chip is selected','Basic Chip Option','Chip Option','Selected Chip Option','should be able to select a chip','should be able to deselect a chip','should be able to toggle the selected state of a chip',"`
    <mat-chip-listbox>
      <mat-basic-chip-option> Basic Chip Option </mat-basic-chip-option>
      <mat-chip-option> <mat-chip-avatar>C</mat-chip-avatar>Chip Option </mat-chip-option>
      <mat-chip-option selected>
        Selected Chip Option
        <span matChipTrailingIcon>trailing_icon</span>
      </mat-chip-option>
      <mat-chip-option disabled>
        Chip Option
        <span matChipRemove>remove_icon</span>
      </mat-chip-option>
    </mat-chip-listbox>
  `",ChipOptionHarnessTest,MatChipRowHarness,'should get whether the chip is editable',"`
    <mat-chip-grid #grid>
      <mat-basic-chip-row [editable]=""editable""> Basic Chip Row </mat-basic-chip-row>
      <mat-chip-row [editable]=""editable""> Chip Row </mat-chip-row>
      <input [matChipInputFor]=""grid"" />
    </mat-chip-grid>
  `",ChipRowHarnessTest,'should get correct number of set harnesses',MatChipSetHarness,'should get correct number of chips',"`
    <mat-chip-set>
      <mat-chip> Chip A </mat-chip>
      <mat-chip> Chip B </mat-chip>
      <mat-chip> Chip C </mat-chip>
    </mat-chip-set>
  `",ChipSetHarnessTest,'should complete the `stateChanges` stream on destroy',BasicOption,optionInstance,'should not emit to `onSelectionChange` if selecting an already-selected option','selection change spy','should not emit to `onSelectionChange` if deselecting an unselected option','should be able to set a custom id','custom-option','should select the option when pressing space',optionDebugElement,optionNativeElement,'should select the option when pressing enter','should not do anything when pressing the selection keys with a modifier','ripples','should show ripples by default','Expected ripples to be enabled by default','.mat-ripple-element','Expected no ripples to show up initially','Expected one ripple to show up after a fake click.','should not show ripples if the option is disabled','Expected no ripples to show up after click on a disabled option.','inside inert group',InsideGroup,MatOptionModule,MAT_OPTION_PARENT_COMPONENT,inertGroups,'should remove all accessibility-related attributes from the group','mat-optgroup','should mirror the group label inside the option','Option(Group)',"`<mat-option [id]=""id"" [disabled]=""disabled""></mat-option>`","`
    <mat-optgroup label=""Group"">
      <mat-option>Option</mat-option>
    </mat-optgroup>
  `",'should open a dialog',expectToExist,'mat-dialog-container','should open a template dialog','.my-template-dialog','should close by clicking on the backdrop',waitForDialog,clickOnBackdrop,'should close by pressing escape',pressKeys,'should close by pressing escape when the first tabbable element has lost focus',clickElementAtPoint,"'should close by clicking on the ""close"" button'",'should focus the first focusable element',expectFocusOn,'mat-dialog-container input','should restore focus to the element that opened the dialog',openButton,'should prevent tabbing out of the dialog','#close','should be able to prevent closing by clicking on the backdrop','should be able to prevent closing by pressing escape',waitForElement,'should emit when dialog opening animation is complete','afterOpen spy','Expected the dialog component to be created with the injector from ','the viewContainerRef.',afterClosed,'should invoke the afterClosed callback inside the NgZone','should dispose of dialog if view container is destroyed while animating','should dispatch the beforeClosed and afterClosed events when the ','overlay is detached externally',beforeClosedCallback,'beforeClosed callback','afterClosed callback',beforeClosed,'should close a dialog and get back a result before it is closed',beforeCloseHandler,'beforeClose callback','dialog container exists when beforeClose is called','Bulbasaur','should not close a dialog via the escape key with a modifier','Expected dialog to set a default max-width on overlay pane','80vw','should override the top offset of the overlay pane','should override the bottom offset of the overlay pane','should override the left offset of the overlay pane','should override the right offset of the overlay pane','125px','should allow for the position to be updated','should reset the overlay dimensions to their initial size','should use the passed in ViewContainerRef from the config','should close all of the dialogs when the injectable is destroyed','should complete open and close streams when the injectable is destroyed',afterOpenedSpy,'after opened spy',afterAllClosedSpy,'after all closed spy',afterOpenedSubscription,afterAllClosedSubscription,'should allow the consumer to disable closing a dialog on navigation',closeOnNavigation,'Expected component instance to be defined.','should be able to attach a custom scroll strategy','scroll strategy enable spy','should be able to pass in an alternate ComponentFactoryResolver',ComponentFactoryResolver,resolver,'resolveComponentFactory',componentFactoryResolver,resolveComponentFactory,'should toggle `aria-hidden` on the overlay container siblings','Expected sibling to be hidden','Expected overlay container not to be hidden.','Expected sibling to no longer be hidden.','should restore `aria-hidden` to the overlay container siblings on close','Expected sibling to be hidden.','Expected sibling to remain hidden.','should not set `aria-hidden` on `aria-live` elements','Expected live element not to be hidden.','should recapture focus when clicking on the backdrop','Expected input to be focused on open','Expected input to stay focused after click','should recapture focus to the first tabbable element when clicking on the backdrop with ',"'autoFocus set to ""first-tabbable"" (the default)'",'should recapture focus to the container when clicking on the backdrop with ',"'autoFocus set to ""dialog""'",'.mat-mdc-dialog-container','Expected container to stay focused after click','should recapture focus to the first header when clicking on the backdrop with ',"'autoFocus set to ""first-heading""'","'.mat-mdc-dialog-title[tabindex=""-1""]'",'Expected first header to stay focused after click','should recapture focus to the first element that matches the css selector when ','clicking on the backdrop with autoFocus set to a css selector',firstButton,'[mat-dialog-close]','Expected first button to be focused on open','Expected first button to stay focused after click','should attach the focus trap even if automatic focus is disabled','Expected the focus not to have changed before the animation finishes.','should re-focus the trigger via keyboard when closed via escape key',lastFocusOrigin,focusOrigin,'Expected the trigger button to be blurred','Expected the trigger button to be focused via keyboard','should re-focus the trigger via mouse when backdrop has been clicked','Expected the trigger button to be focused via mouse','should re-focus via keyboard if the close button has been triggered through keyboard','button[mat-dialog-close]','should re-focus via mouse if the close button has been clicked','MAT-DIALOG-CONTAINER','should be able to disable focus restoration','Expected focus not to have been restored.','should not move focus if it was moved outside the dialog while animating',otherButton,'other-button','Expected focus to be on the alternate button.','Expected focus to stay on the alternate button.','dialog content elements',MatDialogRef,'inside component dialog',runContentElementTests,'inside template portal',ComponentWithContentElementTemplateRef,'should close the dialog when clicking on the close button','should not close if [mat-dialog-close] is applied on a non-button node','div[mat-dialog-close]','should allow for a user-specified aria-label on the close button','.close-with-aria-label','Best close button ever',"'should set the ""type"" attribute of the close button if not set manually'",'should not override type attribute of the close button if set manually','button.with-submit','should return the [mat-dialog-close] result when clicking the close button','button.close-with-true','should set the aria-labelledby attribute to the id of the title','[mat-dialog-title]','Expected title element to have an id.','Expected the aria-labelledby to match the title id.','should add correct css class according to given [align] input in [mat-dialog-actions]','mat-dialog-actions','Expected action buttons to not have class align-center','mat-mdc-dialog-actions-align-center','Expected action buttons to have class align-end','mat-mdc-dialog-actions-align-end','should be able to set a custom aria-labelledby',ariaLabelledBy,'Labelled By','should not set the aria-labelledby automatically if it has an aria-label ','and an aria-labelledby','should set the aria-labelledby attribute to the config provided aria-labelledby ','instead of the mat-dialog-title id','should dispose backdrop if containing dialog view is destroyed',showChildView,'MDC-based MatDialog with a parent MatDialog',MatDialog,MatDialogModule,'should close dialogs opened by a parent when calling closeAll on a child MatDialog','Expected closeAll on child MatDialog to close dialog opened by parent','should close dialogs opened by a child when calling closeAll on a parent MatDialog','Expected closeAll on parent MatDialog to close dialog opened by child','should not close the parent dialogs when a child is destroyed','MDC-based MatDialog with default options',defaultConfig,MAT_DIALOG_DEFAULT_OPTIONS,oc,'should use the provided defaults','should be overridable by open() options','MDC-based MatDialog with animations enabled','should return the current state of the dialog',dialogCloseDuration,getState,MatDialogState,'MatDialog with explicit injector provided',ModuleBoundDialogParentComponent,'should use the standalone injector and render the dialog successfully',openDialog,'module-bound-dialog-child-component',"`<dir-with-view-container *ngIf=""showChildView""></dir-with-view-container>`","`<ng-template let-data let-dialogRef=""dialogRef"">
    Cheese {{localValue}} {{data?.value}}{{setDialogRef(dialogRef)}}</ng-template>`","`
    <h1 mat-dialog-title>This is the title</h1>
    <mat-dialog-content>Lorem ipsum dolor sit amet.</mat-dialog-content>
    <mat-dialog-actions align=""end"">
      <button mat-dialog-close>Close</button>
      <button class=""close-with-true"" [mat-dialog-close]=""true"">Close and return true</button>
      <button
        class=""close-with-aria-label""
        aria-label=""Best close button ever""
        [mat-dialog-close]=""true""></button>
      <div mat-dialog-close>Should not close</div>
      <button class=""with-submit"" type=""submit"" mat-dialog-close>Should have submit</button>
    </mat-dialog-actions>
  `","`
    <ng-template>
      <h1 mat-dialog-title>This is the title</h1>
      <mat-dialog-content>Lorem ipsum dolor sit amet.</mat-dialog-content>
      <mat-dialog-actions align=""end"">
        <button mat-dialog-close>Close</button>
        <button class=""close-with-true"" [mat-dialog-close]=""true"">Close and return true</button>
        <button
          class=""close-with-aria-label""
          aria-label=""Best close button ever""
          [mat-dialog-close]=""true""></button>
        <div mat-dialog-close>Should not close</div>
        <button class=""with-submit"" type=""submit"" mat-dialog-close>Should have submit</button>
      </mat-dialog-actions>
    </ng-template>
  `",MAT_DIALOG_DATA,_injector,_dialog,ngModuleRef,createNgModuleRef,ModuleBoundDialogModule,ModuleBoundDialogComponent,ModuleBoundDialogService,'<module-bound-dialog-child-component></module-bound-dialog-child-component>','<p>{{service.name}}</p>',ModuleBoundDialogChildComponent,'should open a dialog when created',MatTestDialogOpener,withComponent,ExampleComponent,'should throw an error if no dialog component is provided','MatTestDialogOpener does not have a component provided.','should pass data to the component',dialogContainer,'Data: test','should get closed result data',ExampleDialogResult,'#close-btn',closedResult,'closed',"`
    Data: {{data}}
    <button id=""close-btn"" (click)=""close()"">Close</button>
  `",'should update input value when user types','text-input','abc123','number input','number-input','should increment when increment button clicked',perform,'text-area','autosize-textarea','should resize correctly','autosize-text-area','aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa','should enfore max rows','aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa','aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa','should default to floating labels',MatInputWithLabel,'Expected MatInput to set floatingLabel to auto by default.','should default to global floating label type',MAT_FORM_FIELD_DEFAULT_OPTIONS,'Expected MatInput to set floatingLabel to always from global option.','should not be treated as empty if type is date',MatInputDateTestController,getSupportedInputTypes,_control,'should be treated as empty if type is date on unsupported browser','should treat text input type as empty at init',MatInputTextTestController,'should treat password input type as empty at init',MatInputPasswordTestController,'should treat number input type as empty at init',MatInputNumberTestController,'should not be empty after input entered',triggerEventHandler,'should update the placeholder when input entered',MatInputWithStaticLabel,_shouldLabelFloat,'should not be empty when the value set before view init',MatInputWithValueBinding,'should add id','should add aria-owns to the label for the associated control','should add aria-required reflecting the required state',MatInputWithRequired,'Expected aria-required to reflect required state of false','Expected aria-required to reflect required state of true','should not overwrite existing id',MatInputWithId,'test-id',"""validates there's only one hint label per side""",MatInputInvalidHintTestController,wrappedErrorMessage,getMatFormFieldDuplicatedHintError,"""validates there's only one hint label per side (attribute)""",MatInputInvalidHint2TestController,'validates that matInput child is present',MatInputMissingMatInputTestController,getMatFormFieldMissingControlError,'validates that matInput child is present after initialization',MatInputWithNgIf,renderInput,'validates the type',MatInputInvalidTypeTestController,'supports hint labels attribute',MatInputHintLabelTestController,'sets an id on hint labels',hint,'supports hint labels elements',MatInputHintLabel2TestController,'sets an id on the hint element','supports label required star',MatInputLabelRequiredTestComponent,'should show the required star when using a FormControl',MatInputWithRequiredFormControl,'should not hide the required star if input is disabled','hide label required star when set to hide the required marker',hideRequiredMarker,'supports the disabled attribute as binding',MatInputWithDisabled,wrapperEl,'.mat-mdc-text-field-wrapper','mdc-text-field--disabled',`Expected form field not to start out disabled.`,`Expected form field to look disabled after property is set.`,'supports the disabled attribute as binding for select',MatInputSelect,selectEl,'should add a class to the form-field if animations are disabled',formFieldEl,'mat-form-field-no-animations','should add a class to the form field if it has a native select','mat-mdc-form-field-type-mat-native-select','supports the required attribute as binding','supports the required attribute as binding for select','supports the type attribute as binding',MatInputWithType,'password','supports textarea',MatInputTextareaWithBindings,'supports select',nativeSelect,'sets the aria-describedby when a hintLabel is set',`initial ${,'supports user binding to aria-describedby',MatInputWithSubscriptAndAriaDescribedBy,userDescribedByValue,'custom-error custom-error-two',`custom-error custom-error-two ${,'custom-error',`custom-error ${,showError,setErrors,/^custom-error mat-mdc-error-\d+$/,'sets the aria-describedby to the id of the mat-hint','sets the aria-describedby with multiple mat-hint instances',MatInputMultipleHintTestController,startId,endId,'start end','should set a class on the hint element based on its alignment','#start','#end','mat-mdc-form-field-hint-end',"'sets the aria-describedby when a hintLabel is set, in addition to a mat-hint'",MatInputMultipleHintMixedTestController,hintLabel,'.mat-mdc-form-field-hint:not(.mat-mdc-form-field-hint-end)',endLabel,'.mat-mdc-form-field-hint.mat-mdc-form-field-hint-end',ariaValue,'should float when floatLabel is set to default and text is entered',MatInputWithDynamicLabel,'mdc-floating-label--float-above',shouldFloat,'should always float the label when floatLabel is set to always','should float labels when select has value','should mark a multi-select as being inline',HTMLSelectElement,'mat-mdc-native-select-inline','should mark a select with a size as being inline','should not float the label if the selectedIndex is negative',"'should not float labels when select has no value, no option label, '",'no option innerHtml',MatInputSelectWithNoLabelNoValue,'should floating labels when select has no value but has option label',MatInputSelectWithLabel,'should floating labels when select has no value but has option innerHTML',MatInputSelectWithInnerHtml,'should not throw if a native select does not have options',MatInputSelectWithoutOptions,'should be able to toggle the floating label programmatically',containerInstance,'should not have prefix and suffix elements when none are specified','.mat-mdc-form-field-prefix','.mat-mdc-form-field-suffix','should add prefix and suffix elements when specified',MatInputWithPrefixAndSuffix,textPrefixEl,'.mat-mdc-form-field-text-prefix',textSuffixEl,'.mat-mdc-form-field-text-suffix',iconPrefixEl,'.mat-mdc-form-field-icon-prefix',iconSuffixEl,'.mat-mdc-form-field-icon-suffix','Prefix','Suffix','favorite','should update empty class when value changes programmatically and OnPush',MatInputOnPush,'should set the focused class when the input is focused',MatInput,_focusChanged,'should remove the focused class if the input becomes disabled while focused',"'should only show the native control placeholder, when there is a label, on focus'",MatInputWithLabelAndPlaceholder,'mat-form-field-hide-placeholder','Label','Value',"'should always show the native control placeholder when floatLabel is set to ""always""'",'should not add the `placeholder` attribute if there is no placeholder',MatInputWithoutPlaceholder,'should not add the native select class if the control is not a native select','should preserve the native placeholder on a non-legacy appearance','should use the native input value when determining whether ','the element is empty with a custom accessor',MatInputWithCustomAccessor,CustomMatInputAccessor,'should default the form field color to primary',MatInputWithColor,'should be able to change the form field color','should set a class on the input depending on whether it is in a form field',MatInputInsideOutsideFormField,inFormField,'.inside',outsideFormField,'.outside','MatMdcInput with forms',MatInputWithFormErrorMessages,'should display an error message when the input is touched and invalid','not valid','should not reset text-field validity if focus changes for an invalid input','mdc-text-field--invalid','should display an error message when the parent form group is submitted',MatInputWithFormGroupErrorMessages,formGroup,formGroupDirective,'should hide the errors and show the hints once the input becomes valid','valid value','should not hide the hint if there are no error messages',renderError,'Expected one hint to be shown on load.','Expected one hint to still be shown.','sets the aria-describedby to reference errors when in error state','should set `aria-invalid` to true if the input is empty','incorrect',"'Expected aria-invalid to be set to ""true""'",'custom error behavior','should display an error message when a custom error matcher returns true',MatInputWithCustomErrorStateMatcher,'Expected no error messages','Expected no error messages after being touched.',errorState,'Expected one error messages to have been rendered.','should display an error message when global error matcher returns true',ErrorStateMatcher,isErrorState,'Expected an error message','should display an error message when using ShowOnDirtyErrorStateMatcher',ShowOnDirtyErrorStateMatcher,'Expected no error messages when touched',markAsDirty,'Expected one error message when dirty','should update the value when using FormControl.setValue',MatInputWithFormControl,'should display disabled styles when using FormControl.disable()',`Expected form field to look disabled after disable() is called.`,'should not treat the number 0 as empty',MatInputZeroTestController,'should update when the form field value is patched without emitting',patchValue,'should update notch size after changing appearance to outline',MatInputWithAppearance,'MatFormField default options','should be fill appearance if no default options provided','fill','should be fill appearance if empty default options provided','should be able to change the default appearance','should default hideRequiredMarker to false','should be able to change the default value of hideRequiredMarker and appearance','should be able to change the default color',MatInputSimple,'defaults subscriptSizing to false',MatInputWithSubscriptSizing,subscriptElement,'.mat-mdc-form-field-subscript-wrapper',subscriptSizing,'mat-mdc-form-field-subscript-dynamic-size',sizing,'changes the default value of subscriptSizing (undefined input)','changes the default value of subscriptSizing (no input)',MatIconModule,"`
    <mat-form-field [floatLabel]=""floatLabel"">
      <mat-label>Label</mat-label>
      <input matNativeControl id=""test-id"" placeholder=""test"">
    </mat-form-field>`","`<mat-form-field><input matInput [disabled]=""disabled""></mat-form-field>`","`<mat-form-field><input matInput [required]=""required""></mat-form-field>`","`<mat-form-field><input matInput [type]=""type""></mat-form-field>`","`
    <mat-form-field [hideRequiredMarker]=""hideRequiredMarker"">
      <mat-label>hello</mat-label>
      <input matInput required [disabled]=""disabled"">
    </mat-form-field>`","`
    <mat-form-field>
      <input matInput placeholder=""Hello"" [formControl]=""formControl"">
    </mat-form-field>`",`<mat-form-field><input matInput><mat-hint>{{label}}</mat-hint></mat-form-field>`,"`
    <mat-form-field [hintLabel]=""label"">
      <input matInput aria-describedby=""initial"">
    </mat-form-field>`","`
    <mat-form-field [hintLabel]=""label"">
      <input matInput [formControl]=""formControl"" [aria-describedby]=""userDescribedByValue"">
      <mat-error *ngIf=""showError"">Some error</mat-error>
    </mat-form-field>`","`<mat-form-field><input matInput [type]=""t""></mat-form-field>`",'file',"`
    <mat-form-field hintLabel=""Hello"">
      <input matInput>
      <mat-hint>World</mat-hint>
    </mat-form-field>`","`
    <mat-form-field>
      <input matInput>
      <mat-hint>Hello</mat-hint>
      <mat-hint>World</mat-hint>
    </mat-form-field>`","`
    <mat-form-field>
      <input matInput>
      <mat-hint align=""start"" [id]=""startId"">Hello</mat-hint>
      <mat-hint align=""end"" [id]=""endId"">World</mat-hint>
    </mat-form-field>`","`
    <mat-form-field hintLabel=""Hello"">
      <input matInput>
      <mat-hint align=""end"">World</mat-hint>
    </mat-form-field>`","`
    <mat-form-field>
      <input matInput type=""date"" placeholder=""Placeholder"">
    </mat-form-field>`","`
    <mat-form-field>
      <mat-label>Label</mat-label>
      <input matInput type=""text"" placeholder=""Placeholder"">
    </mat-form-field>`","`
    <mat-form-field>
      <input matInput type=""password"" placeholder=""Placeholder"">
    </mat-form-field>`","`
    <mat-form-field>
      <input matInput type=""number"" placeholder=""Placeholder"">
    </mat-form-field>`","`
    <mat-form-field>
      <input matInput type=""number"" placeholder=""Placeholder"" [(ngModel)]=""value"">
    </mat-form-field>`","`
    <mat-form-field>
      <input matInput placeholder=""Label"" [value]=""value"">
    </mat-form-field>`",'Initial',"`
    <mat-form-field>
      <input matInput placeholder=""Label"">
    </mat-form-field>
  `","`
    <mat-form-field [floatLabel]=""shouldFloat"">
      <mat-label>Label</mat-label>
      <input matInput placeholder=""Placeholder"">
    </mat-form-field>`","`
    <mat-form-field>
      <textarea matNativeControl [rows]=""rows"" [cols]=""cols"" [wrap]=""wrap"" placeholder=""Snacks"">
      </textarea>
    </mat-form-field>`",cols,'hard',`<mat-form-field><input></mat-form-field>`,"`
    <form #form=""ngForm"" novalidate>
      <mat-form-field>
        <input matInput [formControl]=""formControl"">
        <mat-hint>Please type something</mat-hint>
        <mat-error *ngIf=""renderError"">This field is required</mat-error>
      </mat-form-field>
    </form>
  `",/valid value/,"`
    <form [formGroup]=""formGroup"">
      <mat-form-field>
        <input matInput
            formControlName=""name""
            [errorStateMatcher]=""customErrorStateMatcher"">
        <mat-hint>Please type something</mat-hint>
        <mat-error>This field is required</mat-error>
      </mat-form-field>
    </form>
  `",FormGroup,customErrorStateMatcher,"`
    <form [formGroup]=""formGroup"" novalidate>
      <mat-form-field>
        <input matInput formControlName=""name"">
        <mat-hint>Please type something</mat-hint>
        <mat-error>This field is required</mat-error>
      </mat-form-field>
    </form>
  `",FormGroupDirective,"`
    <mat-form-field>
      <mat-icon matIconPrefix>favorite</mat-icon>
      <div matTextPrefix>Prefix</div>
      <input matInput>
      <div matTextSuffix>Suffix</div>
      <mat-icon matIconSuffix>favorite</mat-icon>
    </mat-form-field>
  `","`
    <mat-form-field>
      <input matInput *ngIf=""renderInput"">
    </mat-form-field>
  `","`
    <mat-form-field>
      <mat-label>Label</mat-label>
      <input matInput [formControl]=""formControl"">
    </mat-form-field>
  `","`
    <mat-form-field>
      <mat-label>Label</mat-label>
      <input matInput>
    </mat-form-field>
  `","`
    <mat-form-field [floatLabel]=""floatLabel"" [appearance]=""appearance"">
      <mat-label>Label</mat-label>
      <input matInput placeholder=""Placeholder"">
    </mat-form-field>
  `",FloatLabelType,MatFormFieldAppearance,"`
    <mat-form-field [appearance]=""appearance"">
      <mat-label>My Label</mat-label>
      <input matInput placeholder=""Placeholder"">
    </mat-form-field>
  `","`
    <mat-form-field [subscriptSizing]=""sizing"">
      <mat-label>My Label</mat-label>
      <input matInput placeholder=""Placeholder"" required>
    </mat-form-field>
  `",SubscriptSizing,"`
    <mat-form-field>
      <input matInput>
    </mat-form-field>
  `","`
    <mat-form-field>
      <mat-label>Label</mat-label>
      <select matNativeControl id=""test-id"" [disabled]=""disabled"" [required]=""required"">
        <option value=""volvo"">Volvo</option>
        <option value=""saab"">Saab</option>
        <option value=""mercedes"">Mercedes</option>
        <option value=""audi"">Audi</option>
      </select>
    </mat-form-field>`","`
    <mat-form-field>
      <mat-label>Form-field label</mat-label>
      <select matNativeControl>
        <option value="""" disabled selected></option>
        <option value=""saab"">Saab</option>
        <option value=""mercedes"">Mercedes</option>
        <option value=""audi"">Audi</option>
      </select>
    </mat-form-field>`","`
    <mat-form-field>
      <mat-label>Label</mat-label>
      <select matNativeControl>
        <option value="""" label=""select a car""></option>
        <option value=""saab"">Saab</option>
        <option value=""mercedes"">Mercedes</option>
        <option value=""audi"">Audi</option>
      </select>
    </mat-form-field>`","`
    <mat-form-field>
      <mat-label>Label</mat-label>
      <select matNativeControl>
        <option value="""">select a car</option>
        <option value=""saab"">Saab</option>
        <option value=""mercedes"">Mercedes</option>
        <option value=""audi"">Audi</option>
      </select>
    </mat-form-field>`","`
    <mat-form-field>
      <input matInput customInputAccessor placeholder=""Placeholder"">
    </mat-form-field>`","`
    <mat-form-field>
      <select matNativeControl>
      </select>
    </mat-form-field>`",'input[customInputAccessor]',MAT_INPUT_VALUE_ACCESSOR,_value,"`
    <mat-form-field [color]=""color"">
      <input matNativeControl>
    </mat-form-field>`","`
    <mat-form-field>
      <input class=""inside"" matNativeControl>
    </mat-form-field>

    <input class=""outside"" matNativeControl>
  `","`
    <mat-form-field>
      <mat-label>Hello</mat-label>
      <input matInput [formControl]=""formControl"">
    </mat-form-field>`",'should have e2e tests','should apply an additional class to lists without lines',ListWithOneItem,'mat-list-item','mat-mdc-list-item','mdc-list-item--with-one-line','should apply a particular class to lists with two lines',ListWithTwoLineItem,'mdc-list-item--with-two-lines','should apply a particular class to lists with three lines',ListWithThreeLineItem,'mdc-list-item--with-three-lines','should apply a class to list items with avatars',ListWithAvatar,'mdc-list-item--with-leading-avatar','should have a strong focus indicator configured for all list-items',ListWithManyLines,debugEl,'Expected all list items to have a strong focus indicator element.','should not clear custom classes provided by user',ListWithItemWithCssClass,'should update classes if number of lines change',ListWithDynamicNumberOfLines,showThirdLine,'should add aria roles properly',ListWithMultipleItems,'Expect mat-list no role','Expect mat-list-item no role','should not show ripples for non-nav lists',ListWithOneAnchorItem,MatListItem,_hostElement,'should allow disabling ripples for specific nav-list items',NavListWithOneAnchorItem,disableItemRipple,'should create an action list',ActionListWithoutType,'should set the proper class on the action list host','mat-action-list','mat-mdc-action-list','should enable ripples for action lists by default','should allow disabling ripples for specific action list items','should set default type attribute to button for action list','.mat-mdc-list-item','should not change type attribute if it is already specified',ActionListWithType,'should allow disabling ripples for the whole nav-list',disableListRipple,'should allow disabling ripples for the entire action list','should disable item ripples when list ripples are disabled via the input in nav list',rippleTarget,'Expected ripples to be enabled by default.','Expected ripples to go away.','Expected no ripples after list ripples are disabled.','should disable item ripples when list ripples are disabled via the input in an action list','should be able to disable a single list item',ListWithDisabledItems,'mdc-list-item--disabled',firstItemDisabled,'should be able to disable the entire list',listDisabled,BaseTestList,'Paprika','A seasoning','Pepper','Another seasoning',"`
  <mat-list>
    <a mat-list-item>
      Paprika
    </a>
  </mat-list>`","`
  <mat-nav-list [disableRipple]=""disableListRipple"">
    <a mat-list-item [disableRipple]=""disableItemRipple"">
      Paprika
    </a>
  </mat-nav-list>`","`
  <mat-action-list [disableRipple]=""disableListRipple"">
    <button mat-list-item [disableRipple]=""disableItemRipple"">
      Paprika
    </button>
  </mat-action-list>`","`
  <mat-action-list>
    <button mat-list-item type=""submit"">
      Paprika
    </button>
  </mat-action-list>`","`
  <mat-list>
    <mat-list-item>
      Paprika
    </mat-list-item>
  </mat-list>`","`
  <mat-list>
    <mat-list-item *ngFor=""let item of items"">
      <img src="""">
      <h3 matListItemTitle>{{item.name}}</h3>
      <p matListItemLine>{{item.description}}</p>
    </mat-list-item>
  </mat-list>`","`
  <mat-list>
    <mat-list-item *ngFor=""let item of items"">
      <h3 matListItemTitle>{{item.name}}</h3>
      <p matListItemLine>{{item.description}}</p>
      <p matListItemLine>Some other text</p>
    </mat-list-item>
  </mat-list>`","`
  <mat-list>
    <mat-list-item *ngFor=""let item of items"">
      <h3 matListItemTitle>Line 1</h3>
      <p matListItemLine>Line 2</p>
      <p matListItemLine>Line 3</p>
      <p matListItemLine>Line 4</p>
    </mat-list-item>
  </mat-list>`","`
  <mat-list>
    <mat-list-item>
      <img src="""" matListItemAvatar>
      Paprika
    </mat-list-item>
    <mat-list-item>
      Pepper
    </mat-list-item>
  </mat-list>`","`
  <mat-list>
    <mat-list-item class=""test-class"" *ngFor=""let item of items"">
      <h3 matListItemTitle>{{item.name}}</h3>
      <p matListItemLine>{{item.description}}</p>
    </mat-list-item>
  </mat-list>`","`
  <mat-list>
    <mat-list-item *ngFor=""let item of items"">
      <h3 matListItemTitle>{{item.name}}</h3>
      <p matListItemLine>{{item.description}}</p>
      <p matListItemLine *ngIf=""showThirdLine"">Some other text</p>
    </mat-list-item>
  </mat-list>`","`
  <mat-list>
    <mat-list-item *ngFor=""let item of items"">
      {{item.name}}
    </mat-list-item>
  </mat-list>`","`
  <mat-list [disabled]=""listDisabled"">
    <mat-list-item [disabled]=""firstItemDisabled"">One</mat-list-item>
    <mat-list-item>Two</mat-list-item>
    <mat-list-item>Three</mat-list-item>
  </mat-list>`",'should be able to set a value on a list option',optionValues,'inbox','starred','sent-mail','archive','drafts',optionValue,listOptions,'should not emit a selectionChange event if an option changed programmatically','onSelectionChange','should emit a selectionChange event if an option got clicked','should be able to dispatch one selected item',testListItem,MatListOption,selectList,selectionList,MatSelectionList,'should be able to dispatch multiple selected items',testListItem2,'should be able to specify a color for list options',optionNativeElements,selectionListColor,firstOptionColor,'should explicitly set the `accent` color','should be able to deselect an option','should not add the mdc-list-item--selected class (in multiple mode)','mdc-list-item--selected','should not allow selection of disabled items','before click','after click','should be able to un-disable disabled items','should be able to use keyboard select with SPACE',getFocusIndex,'should be able to select an item using ENTER','should not be able to toggle a disabled option using SPACE',selectionModel,'should focus the first option when the list takes focus for the first time','should focus the first selected option when list receives focus','should focus previous item when press UP ARROW','should focus next item when press DOWN ARROW','should be able to focus the first item when pressing HOME','should select all items using ctrl + a','should not select disabled items when pressing ctrl + a','should select all items using ctrl + a if some items are selected','should deselect all with ctrl + a if all options are selected','should dispatch the selectionChange event when selecting via ctrl + a','should be able to jump focus down to an item by typing',firstOption,83,'s','should be able to skip to an item by typing',"'should be able to skip to an item by typing the letter ""A""'",'should not select items while using the typeahead','should be able to select all options',"'should be able to select all options, even if they are disabled'",'should be able to deselect all options',deselectAll,"'should be able to deselect all options, even if they are disabled'",'should update the list value when an item is selected programmatically','should update the item selected state when it is selected via the model','should set aria-multiselectable to true on the selection list element','aria-multiselectable','should be able to reach list options that are indirect descendants',descendatsFixture,SelectionListWithIndirectChildOptions,'should disable list item ripples when the ripples on the list have been disabled','.mat-mdc-list-option:not(.mdc-list-item--disabled)',listRippleDisabled,'can bind both selected and value at the same time',componentFixture,SelectionListWithSelectedOptionAndValue,itemValue,'should hide the internal SVG','.mdc-checkbox svg','with list option selected',SelectionListWithSelectedOption,listOptionElements,MatListModule,'should set its initial selected state in the selectedOptions',optionEl,'should focus the first selected option on first focus if an item is pre-selected','with option disabled',SelectionListWithDisabledOption,listOptionEl,listOption,listOptionDebug,'should disable ripples for disabled option',disableItem,'Expected ripples to be disabled if option is disabled',"'should apply the ""mat-list-item-disabled"" class properly'",'with list disabled',SelectionListWithListDisabled,SelectionListWithListOptions,SelectionListWithCheckboxPositionAfter,SelectionListWithOnlyOneOption,'should not allow selection on disabled selection-list','should update state of options if list state has changed',testOption,'Expected ripples of list option to be disabled','Expected ripples of list option to be enabled','with checkbox position after','should be able to customize checkbox position','.mdc-list-item__end .mdc-checkbox','Expected checkbox to show up after content.','.mdc-list-item__start .mdc-checkbox','Expected no checkbox to show up before content.','with list item elements',SelectionListWithAvatar,SelectionListWithIcon,expectCheckboxAtPosition,listItemElement,MatListOptionCheckboxPosition,containerSelector,'before','.mdc-list-item__start','mdc-list-item__end',checkboxPositionClass,'mdc-list-item--with-leading-checkbox','mdc-list-item--with-trailing-checkbox',} .mdc-checkbox`,`Expected checkbox to be aligned ${,expectIconAt,'after','.mat-mdc-list-item-icon','mat-mdc-list-option-with-trailing-avatar','mdc-list-item__start','mdc-list-item--with-leading-icon','mdc-list-item--with-trailing-icon',expectAvatarAt,'.mat-mdc-list-item-avatar','should add a class to reflect that it has an avatar','.mat-mdc-list-option','should add a class to reflect that it has an icon','should align icons properly together with checkbox',checkboxPosition,'should align avatars properly together with checkbox','with single selection','should select one option at a time',testListItem1,'should not show check boxes','mat-pseudo-checkbox','should not deselect the target option on click','throws an exception when toggling single/multiple mode after bootstrap','Cannot change `multiple` mode of mat-selection-list after initialization.','should do nothing when pressing ctrl + a',"'should focus, but not toggle, the next item when pressing SHIFT + UP_ARROW in single '",'selection mode',"'should focus, but not toggle, the next item when pressing SHIFT + DOWN_ARROW '",'in single selection mode',ListOptionWithTwoWayBinding,optionElement,optionDebug,'should sync the value from the view to the option','should sync the value from the option to the view','MDC-based MatSelectionList with forms',SelectionListWithModel,SelectionListWithFormControl,SelectionListWithPreselectedOption,SelectionListWithPreselectedOptionAndModel,SelectionListWithPreselectedFormControlOnPush,SelectionListWithCustomComparator,'and ngModel',selectionListDebug,ngModel,NgModel,optionDebugEl,'should update the model if an option got selected programmatically','Expected no options to be selected by default','Expected first list option to be selected','should update the model if an option got clicked','should update the options if a model value is set','opt3','should not mark the model as touched when the list is blurred','Expected the selection-list to be untouched by default.','Expected the selection-list to remain untouched.','should mark the model as touched when a list item is blurred','Expected the selection-list to be touched after an item is blurred.','should be pristine by default','opt2',pristine,'Expected the selection-list to be pristine by default.','Expected the selection-list to be dirty after state change.','should remove a selected option from the value on destroy','should update the model if an option got selected via the model','opt1','should not dispatch the model change event if nothing changed using selectAll',modelChangeSpy,'should be able to programmatically set an array with duplicate values','should dispatch one change event per change when updating a single-selection list','and formControl','Expected every list option to be disabled.','should be able to update the disabled property after form control disabling','should be able to set the value through the form control','Expected every list option to be unselected.','Expected second option to be selected.','should deselect option whose value no longer matches','Expected option to be selected.','something-different','Expected option not to be selected.','should mark options as selected when the value is set before they are initialized','should not clear the form control when the list is destroyed',renderList,'should mark options added at a later point as selected','opt4',renderExtraOption,'preselected values','should add preselected options to the model value','should handle preselected option both through the model and the view','should show the item as selected when preselected inside OnPush parent','.mdc-checkbox__native-control','with custom compare function','should use a custom comparator to determine which options are selected',compareWith,'comparator',o1,o2,"`
  <mat-selection-list
    id=""selection-list-1""
    (selectionChange)=""onSelectionChange($event)""
    [disableRipple]=""listRippleDisabled""
    [color]=""selectionListColor""
    [multiple]=""multiple"">
    <mat-list-option checkboxPosition=""before"" disabled=""true"" value=""inbox""
                     [color]=""firstOptionColor"">
      Inbox (disabled selection-option)
    </mat-list-option>
    <mat-list-option id=""testSelect"" checkboxPosition=""before"" class=""test-native-focus""
                    value=""starred"">
      Starred
    </mat-list-option>
    <mat-list-option checkboxPosition=""before"" value=""sent-mail"">
      Sent Mail
    </mat-list-option>
    <mat-list-option checkboxPosition=""before"" value=""archive"">
      Archive
    </mat-list-option>
    <mat-list-option checkboxPosition=""before"" value=""drafts"" *ngIf=""showLastOption"">
      Drafts
    </mat-list-option>
  </mat-selection-list>`",showLastOption,_change,MatSelectionListChange,"`
  <mat-selection-list id=""selection-list-2"">
    <mat-list-option checkboxPosition=""after"">
      Inbox (disabled selection-option)
    </mat-list-option>
    <mat-list-option id=""testSelect"" checkboxPosition=""after"">
      Starred
    </mat-list-option>
    <mat-list-option checkboxPosition=""after"">
      Sent Mail
    </mat-list-option>
    <mat-list-option checkboxPosition=""after"">
      Drafts
    </mat-list-option>
  </mat-selection-list>`","`
  <mat-selection-list id=""selection-list-3"" [disabled]=""disabled"">
    <mat-list-option checkboxPosition=""after"">
      Inbox (disabled selection-option)
    </mat-list-option>
    <mat-list-option id=""testSelect"" checkboxPosition=""after"">
      Starred
    </mat-list-option>
    <mat-list-option checkboxPosition=""after"">
      Sent Mail
    </mat-list-option>
    <mat-list-option checkboxPosition=""after"">
      Drafts
    </mat-list-option>
  </mat-selection-list>`","`
  <mat-selection-list>
    <mat-list-option [disabled]=""disableItem"">Item</mat-list-option>
  </mat-selection-list>
  `","`
  <mat-selection-list>
    <mat-list-option>Not selected - Item #1</mat-list-option>
    <mat-list-option [selected]=""true"">Pre-selected - Item #2</mat-list-option>
    <mat-list-option [selected]=""true"">Pre-selected - Item #3</mat-list-option>
    <mat-list-option>Not selected - Item #4</mat-list-option>
  </mat-selection-list>`","`
  <mat-selection-list>
    <mat-list-option [selected]=""true"" [value]=""itemValue"">Item</mat-list-option>
  </mat-selection-list>`","`
  <mat-selection-list id=""selection-list-4"">
    <mat-list-option checkboxPosition=""after"" class=""test-focus"" id=""123"">
      Inbox
    </mat-list-option>
  </mat-selection-list>`","`
    <mat-selection-list
      [(ngModel)]=""selectedOptions""
      (ngModelChange)=""modelChangeSpy()""
      [multiple]=""multiple"">
      <mat-list-option *ngFor=""let option of options"" [value]=""option"">{{option}}</mat-list-option>
    </mat-selection-list>`",'model change spy',"`
    <mat-selection-list [formControl]=""formControl"" *ngIf=""renderList"">
      <mat-list-option value=""opt1"">Option 1</mat-list-option>
      <mat-list-option value=""opt2"">Option 2</mat-list-option>
      <mat-list-option value=""opt3"">Option 3</mat-list-option>
      <mat-list-option value=""opt4"" *ngIf=""renderExtraOption"">Option 4</mat-list-option>
    </mat-selection-list>
  `","`
    <mat-selection-list [(ngModel)]=""selectedOptions"">
      <mat-list-option value=""opt1"">Option 1</mat-list-option>
      <mat-list-option value=""opt2"" selected>Option 2</mat-list-option>
    </mat-selection-list>`","`
    <mat-selection-list [formControl]=""formControl"">
      <mat-list-option *ngFor=""let opt of opts"" [value]=""opt"">{{opt}}</mat-list-option>
    </mat-selection-list>
  `","`
    <mat-selection-list [(ngModel)]=""selectedOptions"" [compareWith]=""compareWith"">
      <mat-list-option *ngFor=""let option of options"" [value]=""option"">
        {{option.label}}
      </mat-list-option>
    </mat-selection-list>`","`
    <mat-selection-list>
      <mat-list-option [checkboxPosition]=""checkboxPosition"">
        <div matListItemAvatar>I</div>
        Inbox
      </mat-list-option>
    </mat-selection-list>
  `","`
    <mat-selection-list>
      <mat-list-option [checkboxPosition]=""checkboxPosition"">
        <div matListItemIcon>I</div>
        Inbox
      </mat-list-option>
    </mat-selection-list>
  `","`
    <mat-selection-list>
      <ng-container [ngSwitch]=""true"">
        <mat-list-option [value]=""1"">One</mat-list-option>
        <mat-list-option [value]=""2"">Two</mat-list-option>
      </ng-container>
    </mat-selection-list>`","`
  <mat-selection-list>
    <mat-list-option [(selected)]=""selected"">Item</mat-list-option>
  </mat-selection-list>
`",simpleListHarness,getFullText,/^Title/,/^Item 5/,'should get all items matching full text (deprecated filter)','should get all items matching full text',fullText,'should get all items matching title','should get all items matching secondary text',secondaryText,'Secondary Text',getSecondaryText,itemsWithoutSecondaryText,'should get all items matching tertiary text',tertiaryText,'Tertiary Text',getTertiaryText,itemsWithoutTertiaryText,'TitleText that will wrap into the third line.','should get all items of empty list',emptyListHarness,'Section 3','should get items by subheader for an empty list','should get items grouped by divider',getItemsGroupedByDividers,'should get items grouped by divider for an empty list',"'should get all items, subheaders, and dividers'",itemsSubheadersAndDividers,getItemsWithSubheadersAndDividers,listItemHarnessBase,MatListItemHarnessBase,MatSubheaderHarness,"'should get all items, subheaders, and dividers excluding some harness types'",divider,subheaders,'Item 5Secondary TextTertiary Text',"'should get all items, subheaders, and dividers with filters'",/1/,/2/,"'should get list item text, title, secondary and tertiary text'",'Text that will wrap into the third line.','Item 5','should check list item icons and avatars',hasAvatar,'should get harness loader for list item content',childHarness,TestItemContentHarness,'should be able to get content harness loader of list item',MatListItemSection,'should check disabled state of items',disableThirdItem,'MatListHarness',runBaseListFunctionalityTests,ListHarnessTest,MatListItemHarness,'MatActionListHarness',ActionListHarnessTest,MatActionListHarness,MatActionListItemHarness,'additional functionality','.test-base-list-functionality','should click items',lastClicked,'MatNavListHarness',NavListHarnessTest,MatNavListHarness,MatNavListItemHarness,'should get href',getHref,'/somestuff','should get item harness by href',/stuff/,'MatSelectionListHarness',SelectionListHarnessTest,MatSelectionListHarness,MatListOptionHarness,emptyHarness,'.test-empty','should check disabled state of list','should get all selected options','should check multiple options',selectItems,/3/,'should uncheck multiple options',deselectItems,'should get option checkbox position',getCheckboxPosition,'should toggle option selection','should check single option','should uncheck single option',"`
      <mat-list class=""test-base-list-functionality"">
        <mat-list-item>
          <div matListItemTitle>Item </div>
          <div matListItemLine>1</div>
          <div matListItemIcon>icon</div>
          <div matListItemAvatar>Avatar</div>
        </mat-list-item>
        <div matSubheader>Section 1</div>
        <mat-divider></mat-divider>
        <a mat-list-item>
          <span class=""test-item-content"">Item 2</span>
        </a>
        <button mat-list-item [disabled]=""disableThirdItem"">Item 3</button>
        <div matSubheader>Section 2</div>
        <mat-divider></mat-divider>
        <mat-list-item lines=""3"">
          <span matListItemTitle>Title</span>
          <span>Text that will wrap into the third line.</span>
        </mat-list-item>
        <mat-list-item>
          <span matListItemTitle>Item 5</span>
          <span matListItemLine>Secondary Text</span>
          <span matListItemLine>Tertiary Text</span>
        </mat-list-item>
        <div matSubheader>Section 3</div>
      </mat-list>

      <mat-list class=""test-empty""></mat-list>
  `","`
      <mat-action-list class=""test-base-list-functionality"">
        <mat-list-item (click)=""lastClicked = 'Item 1'"">
          <div matListItemTitle>Item </div>
          <div matListItemLine>1</div>
          <div matListItemIcon>icon</div>
          <div matListItemAvatar>Avatar</div>
        </mat-list-item>
        <div matSubheader>Section 1</div>
        <mat-divider></mat-divider>
        <a mat-list-item (click)=""lastClicked = 'Item 2'"">
          <span class=""test-item-content"">Item 2</span>
        </a>
        <button
          mat-list-item
          (click)=""lastClicked = 'Item 3'""
          [disabled]=""disableThirdItem"">Item 3</button>
        <div matSubheader>Section 2</div>
        <mat-divider></mat-divider>
        <button mat-list-item lines=""3"">
          <span matListItemTitle>Title</span>
          <span>Text that will wrap into the third line.</span>
        </button>
        <button mat-list-item>
          <span matListItemTitle>Item 5</span>
          <span matListItemLine>Secondary Text</span>
          <span matListItemLine>Tertiary Text</span>
        </button>
        <div matSubheader>Section 3</div>
      </mat-action-list>

      <mat-action-list class=""test-empty""></mat-action-list>
  `","`
      <mat-nav-list class=""test-base-list-functionality"">
        <a mat-list-item (click)=""onClick($event, 'Item 1')"">
          <div matListItemTitle>Item </div>
          <div matListItemLine>1</div>
          <div matListItemIcon>icon</div>
          <div matListItemAvatar>Avatar</div>
        </a>
        <div matSubheader>Section 1</div>
        <mat-divider></mat-divider>
        <a mat-list-item href (click)=""onClick($event, 'Item 2')"">
          <span class=""test-item-content"">Item 2</span>
        </a>
        <a
          mat-list-item
          href=""/somestuff""
          (click)=""onClick($event, 'Item 3')""
          [disabled]=""disableThirdItem"">Item 3</a>
        <div matSubheader>Section 2</div>
        <mat-divider></mat-divider>
        <a mat-list-item lines=""3"">
          <span matListItemTitle>Title</span>
          <span>Text that will wrap into the third line.</span>
        </a>
        <a mat-list-item>
          <span matListItemTitle>Item 5</span>
          <span matListItemLine>Secondary Text</span>
          <span matListItemLine>Tertiary Text</span>
        </a>
        <div matSubheader>Section 3</div>
      </mat-nav-list>

      <mat-nav-list class=""test-empty""></mat-nav-list>
  `","`
    <mat-selection-list class=""test-base-list-functionality"">
      <mat-list-option checkboxPosition=""before"">
        <div matListItemTitle>Item </div>
        <div matListItemLine>1</div>
        <div matListItemIcon>icon</div>
        <div matListItemAvatar>Avatar</div>
      </mat-list-option>
      <div matSubheader>Section 1</div>
      <mat-divider></mat-divider>
      <mat-list-option>
        <span class=""test-item-content"">Item 2</span>
      </mat-list-option>
      <mat-list-option [disabled]=""disableThirdItem"">Item 3</mat-list-option>
      <div matSubheader>Section 2</div>
      <mat-divider></mat-divider>
      <mat-list-option lines=""3"">
        <span matListItemTitle>Title</span>
        <span>Text that will wrap into the third line.</span>
      </mat-list-option>
      <mat-list-option>
        <span matListItemTitle>Item 5</span>
        <span matListItemLine>Secondary Text</span>
        <span matListItemLine>Tertiary Text</span>
      </mat-list-option>
      <div matSubheader>Section 3</div>
    </mat-selection-list>

    <mat-selection-list class=""test-empty"" disabled></mat-selection-list>
  `",hostSelector,'.test-item-content','should open menu when the trigger is clicked',menuSelector,'One\nTwo\nThree\nFour','should close menu when menu item is clicked','should run click handlers on regular menu items',getResultText,'should run not run click handlers on disabled menu items','should support multiple triggers opening the same menu',expectAlignedWith,'#trigger-two','should mirror classes on host to menu template in overlay','mat-mdc-menu-panel','custom','should auto-focus the first item when opened with ENTER','should auto-focus the first item when opened with SPACE','should focus the first item when opened by mouse',DOWN,UP,'should skip disabled items using arrow keys','should close the menu when tabbing past items','should wrap back to menu when arrow keying past items','should focus before and after trigger when tabbing past items',shiftTab,'position - ',"'should default menu alignment to ""after below"" when not set'","'should align overlay end to origin end when x-position is ""before""'",beforeTrigger,expectLocation,beforeMenu,"'should align overlay bottom to origin bottom when y-position is ""above""'",aboveTrigger,aboveMenu,44,"'should align menu to top left of trigger when ""below"" and ""above""'",combinedTrigger,combinedMenu,"'should show second page of list of 100, each page contains 10 items'",MatPaginatorApp,rangeElement,'.mat-mdc-paginator-range-label','11 – 20 of 100',"'should show third page of list of 200, each page contains 20 items'",'41 – 60 of 200',"'should show first page of list of 0, each page contains 5 items'",'0 of 0',"'should show third page of list of 12, each page contains 5 items'",'11 – 12 of 12',"'should show third page of list of 10, each page contains 5 items'",'11 – 15 of 10',"'should show third page of list of -5, each page contains 5 items'",'11 – 15 of 0','should show right aria-labels for select and buttons',getPreviousButton,'Previous page',getNextButton,'Next page','.mat-mdc-select',selectLabelIds,/\s/g,selectLabelTexts,'Items per page:','should re-render when the i18n labels change','.mat-mdc-paginator-page-size-label',intl,MatPaginatorIntl,itemsPerPageLabel,'1337 items per page',changes,'when navigating with the next and previous buttons','should be able to go to the next page',pageEvent,previousPageIndex,'should be able to go to the previous page','should be able to show the first/last buttons',getFirstButton,'Expected first button to not exist.',getLastButton,'Expected last button to not exist.',showFirstLastButtons,'Expected first button to be rendered.','Expected last button to be rendered.','should mark itself as initialized',isMarkedInitialized,initialized,'should not allow a negative pageSize','should not allow a negative pageIndex','should be able to set the color of the form field','should be able to pass options to the underlying mat-select',MatSelect,disableOptionCentering,selectConfig,'when showing the first and last button',MatPaginator,'should show right aria-labels for first/last buttons','First page','Last page','should be able to go to the last page via the last page button','should be able to go to the first page via the first page button','should disable navigating to the next page if at last page',hasNextPage,'should disable navigating to the previous page if at first page',hasPreviousPage,'should mark for check when inputs are changed directly','1 – 10 of 100','1 – 10 of 99','1 – 6 of 99','7 – 12 of 99',pageSizeOptions,'should default the page size options to the page size if no options provided',MatPaginatorWithoutOptionsApp,_displayedPageSizeOptions,'should default the page size to the first page size option if not provided',MatPaginatorWithoutPageSizeApp,'should show a sorted list of page size options including the current page size','should be able to change the page size while keeping the first item present',_changePageSize,'should keep track of the right number of pages',getNumberOfPages,'should show a select only if there are multiple options','should handle the number inputs being passed in as strings',MatPaginatorWithStringValues,withStringPaginator,'should be able to hide the page size select','.mat-mdc-paginator-page-size','Expected select to be rendered.',hidePageSize,'Expected select to be removed.','should be able to disable all the controls in the paginator via the binding','should be able to configure the default options via a provider',MatPaginatorWithoutInputsApp,MAT_PAGINATOR_DEFAULT_OPTIONS,MatPaginatorDefaultOptions,"'should set `role=""group""` on the host element'",'mat-paginator','should handle the page size options input being passed in as readonly array',MatPaginatorWithReadonlyOptions,'.mat-mdc-paginator-navigation-previous','.mat-mdc-paginator-navigation-next','.mat-mdc-paginator-navigation-first','.mat-mdc-paginator-navigation-last',"`
    <mat-paginator [pageIndex]=""pageIndex""
                   [pageSize]=""pageSize""
                   [pageSizeOptions]=""pageSizeOptions""
                   [hidePageSize]=""hidePageSize""
                   [selectConfig]=""selectConfig""
                   [showFirstLastButtons]=""showFirstLastButtons""
                   [length]=""length""
                   [color]=""color""
                   [disabled]=""disabled""
                   (page)=""pageEvent($event)"">
    </mat-paginator>
  `",'page event',MatPaginatorSelectConfig,"`
    <mat-paginator></mat-paginator>
  `","`
    <mat-paginator [pageSizeOptions]=""[10, 20, 30]""></mat-paginator>
  `","`
    <mat-paginator [pageSize]=""10""></mat-paginator>
  `","`
    <mat-paginator pageIndex=""0""
                   pageSize=""10""
                   [pageSizeOptions]=""['5', '10', '25', '100']""
                   length=""100"">
    </mat-paginator>
  `","`
    <mat-paginator [pageSizeOptions]=""pageSizeOptions"">
    </mat-paginator>
  `",'should render a determinate progress bar',"'mat-progress-bar[mode=""determinate""]'",'should render a buffer progress bar',"'mat-progress-bar[mode=""buffer""]'",'should render a query progress bar',"'mat-progress-bar[mode=""query""]'",'should render a indeterminate progress bar',"'mat-progress-bar[mode=""indeterminate""]'",'should have elements wrapped in aria-hidden div',BasicProgressBar,ariaHidden,'with animation','basic progress-bar',"'should apply a mode of ""determinate"" if no mode is provided.'",progressElement,'mat-progress-bar','should define default values for value and bufferValue attributes',bufferValue,'should clamp value and bufferValue between 0 and 100',progressComponent,1320,'should set the proper transform based on the current value',primaryStyles,'.mdc-linear-progress__primary-bar',bufferStyles,'.mdc-linear-progress__buffer-bar',getBufferValue,'scaleX(0.4)','scaleX(0.35)','buffer','scaleX(0.6)','should remove the `aria-valuenow` attribute in indeterminate mode','Expected aria-valuenow to be set in determinate mode.','50','Expect aria-valuenow to be cleared in indeterminate mode.','should remove the `aria-valuenow` attribute in query mode','query','Expect aria-valuenow to be cleared in query mode.','should be able to configure the default progress bar options via DI',MAT_PROGRESS_BAR_DEFAULT_OPTIONS,'should update the DOM transform when the value has changed','should update the DOM transform when the bufferValue has changed',bufferBar,'0%','animation trigger on determinate setting',MatProgressBar,primaryValueBar,'should trigger output event on primary value bar animation end',animationEndSpy,animationEnd,'animation trigger on buffer setting',BufferProgressBar,'should bind on transitionend eventListener on primaryBarValue','should trigger output event with value not bufferValue','should not run change detection if there are no `animationEnd` observers','<mat-progress-bar></mat-progress-bar>',"'<mat-progress-bar mode=""buffer""></mat-progress-bar>'",'should render a determinate progress spinner','mat-progress-spinner','should render an indeterminate progress spinner',"'mat-progress-spinner[mode=""indeterminate""]'",'should render a spinner','mat-spinner',BasicProgressSpinner,'should not modify the mode if a valid mode is provided.',IndeterminateProgressSpinner,'should define a default value of zero for the value attribute','should set the value to 0 when the mode is set to indeterminate',ProgressSpinnerWithValueAndBoundMode,'should retain the value if it updates while indeterminate','should clamp the value of the progress between 0 and 100','should default to a stroke width that is 10% of the diameter',ProgressSpinnerCustomDiameter,MatProgressSpinner,diameter,strokeWidth,6.7,'should allow a custom diameter','Expected the custom diameter to be applied to the host element width.','Expected the custom diameter to be applied to the host element height.','Expected the custom diameter to be applied to the svg element width.','Expected the custom diameter to be applied to the svg element height.','Expected the custom diameter to be applied to the svg viewBox.','0 0 25.2 25.2','should allow a custom stroke width',ProgressSpinnerCustomStrokeWidth,circleElement,'circle','Expected the custom stroke ','width to be applied to the circle element as a percentage of the element size.','Expected the viewBox to be adjusted based on the stroke width.','0 0 130 130','should allow floating point values for custom diameter',32.5,'0 0 25.75 25.75','should allow floating point values for custom stroke width',40.5,'0 0 130.5 130.5','should expand the host element if the stroke width is greater than the default','.mat-mdc-progress-spinner','should not collapse the host element if the stroke width is less than the default','should set the color class on the mat-spinner',SpinnerWithColor,'should set the color class on the mat-progress-spinner',ProgressSpinnerWithColor,'should remove the underlying SVG element from the tab order explicitly',ProgressSpinnerWithStringValues,'0 0 38 38','should update the element size when changed dynamically','32px','should be able to set a default diameter',MatProgressSpinnerModule,MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,'should be able to set a default stroke width','should be able to set a default color','should set `aria-valuenow` to the current value in determinate mode','37','should clear `aria-valuenow` in indeterminate mode',89,'should apply aria-hidden to child nodes','should be able to change the mode on a mat-spinner',SpinnerWithMode,'mode','<mat-progress-spinner></mat-progress-spinner>',"'<mat-progress-spinner [strokeWidth]=""strokeWidth""></mat-progress-spinner>'","'<mat-progress-spinner [diameter]=""diameter""></mat-progress-spinner>'","'<mat-progress-spinner mode=""indeterminate""></mat-progress-spinner>'","'<mat-progress-spinner [value]=""value"" [mode]=""mode""></mat-progress-spinner>'","`
    <mat-spinner [color]=""color""></mat-spinner>`","`
    <mat-progress-spinner value=""50"" [color]=""color""></mat-progress-spinner>`","`
    <mat-progress-spinner value=""25"" diameter=""37"" strokeWidth=""11""></mat-progress-spinner>
  `","`
    <mat-progress-spinner mode=""indeterminate"" [diameter]=""diameter""></mat-progress-spinner>
  `",IndeterminateSpinnerInShadowDom,"`
    <div *ngIf=""true"">
      <mat-progress-spinner mode=""indeterminate"" [diameter]=""diameter""></mat-progress-spinner>
    </div>
  `",IndeterminateSpinnerInShadowDomWithNgIf,"'<mat-spinner mode=""determinate""></mat-spinner>'",'should be checked when clicked','water','input:checked','should be disabled when disable the radio group','toggle-disable','input[id=water-input]','should set the role of the select to combobox','should point the aria-controls attribute to the listbox','aria-controls',ariaControls,'.mat-mdc-select-panel','should point the aria-owns attribute to the listbox on the trigger','.mat-mdc-select-trigger',ariaOwns,'should set aria-expanded based on the select open state','should be able to add an extra aria-labelledby on top of the default',valueId,'.mat-mdc-select-value','should set aria-labelledby to the value and label IDs','should trim the trigger aria-labelledby when there is no label','should set the tabindex of the select to 0 by default','should set `aria-describedby` to the id of the mat-hint',/^mat-mdc-hint-\d+$/,'should support user binding to `aria-describedby`','should be able to override the tabindex','should set aria-required for required selects',`Expected aria-required attr to be false for normal selects.`,`Expected aria-required attr to be true for required selects.`,'should set the mat-select-required class for required selects','mat-mdc-select-required',`Expected the mat-mdc-select-required class not to be set.`,`Expected the mat-mdc-select-required class to be set.`,'should set aria-invalid for selects that are invalid and touched',`Expected aria-invalid attr to be false for valid selects.`,`Expected aria-invalid attr to be true for invalid selects.`,'should set aria-disabled for disabled selects','should set the tabindex of the select to -1 if disabled','should set `aria-labelledby` to the value ID if there is no form field',labelFixture,SelectWithChangeEvent,'mat-select','should select options via the UP/DOWN arrow keys on a closed select','Expected no initial value.','Expected value from first option to have been set on the model.','Expected fourth option to be selected.','Expected value from fourth option to have been set on the model.','Expected value from second option to have been set on the model.','should go back to first option if value is reset after interacting using the','arrow keys on a closed select','Expected first option to be deselected.','Expected value to be reset.','Expected first option to be selected again.','Expected value from first option to have been set on the model again.','should select first/last options via the HOME/END keys on a closed select',lastOption,'Expected last option to be selected.','Expected value from last option to have been set on the model.',homeEvent,'should resume focus from selected item after selecting via click','should select options via LEFT/RIGHT arrow keys on a closed select','should announce changes via the keyboard on a closed select',liveAnnouncer,'should not throw when reaching a reset option using the arrow keys on a closed select','None','should open a single-selection select using ALT + DOWN_ARROW',selectInstance,'Expected select to be closed.','Expected select to be open.','Expected value not to have changed.','should open a single-selection select using ALT + UP_ARROW','should close when pressing ALT + DOWN_ARROW','Expected default action to be prevented.','should close when pressing ALT + UP_ARROW','should be able to select options by typing on a closed select',DEFAULT_TYPEAHEAD_DEBOUNCE_INTERVAL,'Expected sixth option to be selected.','Expected value from sixth option to have been set on the model.','should not open the select when pressing space while typing',typeaheadDebounceInterval,'Expected select to be closed on init.','Expected select to remain closed after space was pressed.','Expected select to be closed when the timer runs out.','should be able to customize the typeahead debounce interval','Expected no value after a bit of time has passed.','Expected second option to be selected after all the time has passed.','should open the panel when pressing a vertical arrow key on a closed multiple select',multiFixture,MultiSelect,initialValue,'Expected value to stay the same.','Expected default to be prevented.','should open the panel when pressing a horizontal arrow key on closed multiple select','should do nothing when typing on a closed multi-select','should do nothing if the key manager did not change the active item','Expected form control value to be empty.','Expected form control to be clean.','Expected form control value to stay empty.','Expected form control to stay clean.','should continue from the selected option when the value is set programmatically','should not shift focus when the selected options are updated programmatically ','in a multi select','Expected fourth option to be focused.','Expected fourth option to remain focused.','should not cycle through the options if the control is disabled','Expected value to remain unchaged.','should not wrap selection after reaching the end of the options','Expected last option to stay selected.','should not open a multiple select when tabbing through','Expected panel to be closed initially.','should toggle the next option when pressing shift + DOWN_ARROW on a multi-select','should toggle the previous option when pressing shift + UP_ARROW on a multi-select','should prevent the default action when pressing space','should prevent the default action when pressing enter','should not prevent the default actions on selection keys when pressing a modifier','should consider the selection a result of a user action when closed','should be able to focus the select trigger','Expected select element to be focused.','should set `aria-multiselectable` to true on the listbox inside multi select','should set aria-multiselectable false on single-selection instances','should set aria-activedescendant only while the panel is open','Expected no aria-activedescendant on init.','Expected aria-activedescendant to match the active option.','Expected no aria-activedescendant when closed.','should set aria-activedescendant based on the focused option','should not change the aria-activedescendant using the horizontal arrow keys','should restore focus to the trigger after selecting an option in multi-select mode','Expected trigger not to be focused.','Expected trigger to be focused.','should set a role of listbox on the select panel','should trim the custom panel aria-labelledby when there is no label','for options',BasicSelect,'should set the role of mat-option to option','should set aria-selected on each option for single select','Expected all unselected single-select options not to have ','aria-selected set.','Expected selected single-select option to have ',"'aria-selected=""true"".'",'should set aria-selected on each option for multi-select','Expected all unselected multi-select options to have ',"'aria-selected=""false"".'","'Expected selected multi-select option to have aria-selected=""true"".'",'should set the tabindex of each option according to disabled state','should set aria-disabled for disabled options','should remove the active state from options that have been deselected while closed',activeOptions,'Expected first option to have active styles.','Expected only selected option to be marked as active after it is ','clicked.','Expected only selected option to be marked as active after the ','value has changed.','for option groups',SelectWithGroups,'should set the appropriate role','should set the `aria-labelledby` attribute','.mat-mdc-optgroup-label','Expected label to have an id.','Expected `aria-labelledby` to match the label id.','should set the `aria-disabled` attribute if the group is disabled','overlay panel','should not throw when attempting to open too early','should open the panel when trigger is clicked','should close the panel when an item is clicked','should close the panel when a click occurs outside the panel','should set the width of the overlay based on the trigger','should update the width of the panel on resize',initialWidth,'should not attempt to open a select that does not have any options','should close the panel when tabbing out','should restore focus to the host before tabbing away','should close when tabbing out from inside the panel','should focus the first option when pressing HOME',_keyManager,'should focus the last option when pressing END','should be able to set extra classes on the panel','custom-one','custom-two','should update disableRipple properly on each option','Expected all options to have disableRipple set to false initially.','Expected all options to have disableRipple set to true.','should not show ripples if they were disabled','should be able to render options inside groups with an ng-container',SelectWithGroupsAndNgContainer,'.cdk-overlay-container mat-option','Expected at least one option to be rendered.','should not consider itself as blurred if the trigger loses focus while the ','panel is still open',selectElement,'Expected select to be focused.','Expected select element to remain focused.',HTMLLabelElement,'should not float label if no option is selected','mat-form-field-should-float','Label should not be floating','should focus the first option if no option is selected','should select an option when it is clicked','should be able to select an option using the MatOption API',optionNodes,'should deselect other options when one is selected','should deselect other options when one is programmatically selected','Expected first option to no longer be selected','Expected second option to be selected','should remove selection if option has been removed','should display the selected option in the trigger','Label should be floating','should focus the selected option if an option is selected','should update the trigger when the selected option label is changed','Calzone','should not select disabled options','should not select options inside a disabled group',disabledGroup,'should not throw if triggerValue accessed with no selected value',triggerValue,'should emit to `optionSelectionChanges` when an option is selected',optionSelectionChanges,'should handle accessing `optionSelectionChanges` before the options are initialized','should emit to `optionSelectionChanges` after the list of options has changed',selectFirstOption,'salad-8','Salad','fruit-9','Fruit','should not indicate programmatic value changes as user interactions',`Expected trigger to be populated by the control's initial value.`,`Expected option with the control's initial value to be selected.`,'Food',`Expected trigger to be populated by the control's new value.`,`Expected option with the control's new value to be selected.`,`Expected trigger to show the placeholder.`,`Expected trigger is cleared when option value is not found.`,`Expected option w/ the old value not to be selected.`,'should set the control to touched when the select is blurred',`Expected the control to start off as untouched.`,`Expected the control to stay untouched when menu opened.`,`Expected the control to be touched as soon as focus left the select.`,'should set the control to touched when the panel is closed','Expected the control to stay untouched when menu opened.','Expected the control to be touched when the panel was closed.','should not set touched when a disabled select is touched','should set the control to dirty when the select value changes in DOM','should set an asterisk after the label if control is required','.mat-mdc-form-field label',"`Expected label not to have an asterisk, as control was not required.`","`Expected label to have an asterisk, as control was required.`",'should propagate the value set through the `value` property to the form field','disabled behavior','should disable itself when control is disabled programmatically',`Expected cursor to be default arrow on disabled control.`,`Expected select panel to stay closed.`,`Expected select panelOpen property to stay false.`,`Expected cursor to be a pointer on enabled control.`,`Expected select panel to open normally on re-enabled control`,`Expected select panelOpen property to become true.`,'should keep the disabled state in sync if the form group is swapped and ','disabled at the same time',SelectInsideDynamicFormGroup,assignGroup,'keyboard scrolling',`value-${,`Option ${,'should not scroll to options that are completely in the view',initialScrollPosition,'Expected scroll position not to change','should scroll down to the active option','Expected scroll to be at the 16th option.',501,'should scroll up to the active option','Expected scroll to be at the 9th option.','should skip option group labels',309,'should scroll to the top when pressing HOME','Expected panel to be scrolled down.','Expected panel to be scrolled to the top','should scroll to the bottom of the panel when pressing END','Expected panel to be scrolled to the bottom',1173,'should scroll to the active option when typing','should scroll to top when going to first option in top group','when initialized without options',configureMatSelectTestingModule,SelectInitWithoutOptions,'should select the proper option when option list is initialized later',addOptions,'with a selectionChange event handler','should emit an event when the selected option has changed',changeListener,'should not emit multiple change events for the same option','should only emit one event when pressing arrow keys on closed select','with ngModel',NgModelSelect,'should disable itself when control is disabled using the property','with ngIf',NgIfSelect,'should handle nesting in an ngIf',isShowing,'with multiple mat-select elements in one view',ManySelects,'should set the option id',firstOptionID,`Expected option ID to have the correct prefix.`,`Expected option IDs to be unique.`,'with floatLabel',FloatLabelSelect,'should be able to always float the label',MatSelectModule,'should float the label on focus if it has a placeholder','with a sibling component that throws an error',SelectWithErrorSibling,ThrowsErrorOnInit,'should not crash the browser when a sibling throws an error on init','Oh no!','with tabindex',SelectWithPlainTabindex,'should be able to set the tabindex via the native attribute','change events','when initially hidden',BasicSelectInitiallyHidden,'should set the width of the overlay if the element was hidden initially','with no placeholder',BasicSelectNoPlaceholder,'should set the width of the overlay if there is no placeholder','with theming',BasicSelectWithTheming,'should transfer the theme to the select panel','when invalid inside a form',InvalidSelectInForm,'should not throw SelectionModel errors in addition to ngModel errors',/the name attribute must be set/g,'with ngModel using compareWith',NgModelCompareWithSelect,'comparing by value','should have a selection',selectedOption,'should update when making a new selection',_selectViaInteraction,selectedFood,'comparing by reference','compareByReference',useCompareByReference,'should use the comparator',compareByReference,'should initialize with no selection despite having a value','should not update the selection if value is copied on change','should throw an error when using a non-function comparator',useNullComparator,getMatSelectNonFunctionValueError,`when the select's value is accessed on initialization`,SelectEarlyAccessSibling,'should not throw when trying to access the selected value on init in the view','should not throw when reading selected value programmatically in single selection mode','should not throw when reading selected value programmatically in multi selection mode','with ngIf and mat-label',SelectWithNgIfAndLabel,'should not throw when using ngIf on a select with an associated label','inside of a form group',SelectInsideFormGroup,'should not set the invalid class on a clean select','Expected the form to be untouched.','Expected form control to be invalid.','mat-mdc-select-invalid','Expected select not to appear invalid.','Expected aria-invalid to be set to false.','should appear as invalid if it becomes touched','Expected select to appear invalid.','Expected aria-invalid to be set to true.','should not have the invalid class when the select becomes valid','should appear as invalid when the parent form group is submitted','should render the error messages when the parent form is submitted','Expected one error message','should override error matching behavior via injection token',errorStateMatcher,'error state matcher',errorFixture,'should notify that the state changed when the options have changed','stateChanges spy','should set an asterisk after the label if the FormControl is required','with custom error behavior',CustomErrorBehaviorSelect,'should be able to override the error matching behavior via an @Input',matcher,'with preselected array values',SingleSelectWithPreselectedArrayValues,'should be able to preselect an array value in single-selection mode','with custom value accessor',CompWithCustomSelect,CustomSelectAccessor,'should support use inside a custom value accessor',customAccessor,'writeValue',ngControl,'Expected mat-select NOT to inherit control from parent value accessor.','with a falsy value',FalsyValueSelect,'with OnPush',BasicSelectOnPush,BasicSelectOnPushPreselected,'should set the trigger text based on the value when initialized','should update the trigger based on the value','should sync up the form control value with the component value','with custom trigger',SelectWithCustomTrigger,'should allow the user to customize the label',"'Expected the displayed text to be ""Pizza"" in reverse.'",'azziP','when reseting the value by setting null or undefined',ResetValuesSelect,'should reset when an option with an undefined value is selected','Undefined','should reset when an option with a null value is selected','Null','should reset when a blank option is selected','should not mark the reset option as selected ','should not reset when any other falsy option is selected','Falsy','should not consider the reset values as selected when resetting the form control','with reset option and a form control',SelectWithResetOptionAndFormControl,'should set the select value','should reset the control value','should reflect the value in the form control','without Angular forms',BasicSelectWithoutForms,BasicSelectWithoutFormsPreselected,BasicSelectWithoutFormsMultiple,'should set the value when options are clicked','sandwich-2','should mark options as selected when the value is set','should reset the label when a null value is set','should reflect the preselected value','should be able to select multiple values',selectedFoods,"'Steak, Sandwich'","'Steak, Pizza, Sandwich'",'should restore focus to the host element','should not restore focus to the host element when clicking outside','should update the data binding before emitting the change event','should select the active option when tabbing away while open','should not select the active option when tabbing away while close','should not change the multiple value selection when tabbing away','Expected no value on init.','Expected no value after tabbing away.','should emit once when a reset value is selected','should not emit the change event multiple times when a reset option is ','selected twice in a row','with option centering disabled',SelectWithoutOptionCentering,'should not align the active option with the trigger if centering is disabled','.cdk-overlay-pane .mat-mdc-select-panel',formFieldWrapper,'should position the panel under the form field by default','10%',formFieldWrapperRect,'mat-mdc-select-panel-above',MultiSelectWithLotsOfOptions,testInstance,'should be able to toggle an option on and off','should update the label',"'Steak, Tacos, Eggs'","'Steak, Eggs'",'should be able to set the selected value by taking an array','should override the previously-selected value when setting an array','should not close the panel when clicking on options','should sort the selected options based on their order in the panel',"'Steak, Pizza, Tacos'",'should sort the selected options in reverse in rtl',"'Tacos, Pizza, Steak'",'should be able to customize the value sorting logic',sortComparator,optionsArray,'should sort the values that get set via the model based on the panel order',"'should reverse sort the values, that get set via the model in rtl'",'should throw an exception when trying to set a non-array value','not-an-array',getMatSelectNonArrayValueError,'should throw an exception when trying to change multiple mode after init',getMatSelectDynamicMultipleError,'should pass the `multiple` value to all of the option instances','Expected `multiple` to have been added to initial set of options.','cake-8','Expected `multiple` to have been set on dynamically-added option.','should update the active item index on click','should be to select an option with a `null` value','should select all options when pressing ctrl + a','should skip disabled options when using ctrl + a','should select all options when pressing ctrl + a when some options are selected','should deselect all options with ctrl + a if all options are selected','should not throw when selecting a large amount of options',lotsOfOptionsFixture,checkAll,'should update the option selected state if the same array is mutated and passed back in','should be able to provide default values through an injection token',MAT_SELECT_CONFIG,'test-panel-class',MatSelectConfig,'should not not throw if the select is inside an ng-container with ngIf',SelectInNgContainer,'basic-select',"`
    <div [style.height.px]=""heightAbove""></div>
    <mat-form-field>
      <mat-label *ngIf=""hasLabel"">Select a food</mat-label>
      <mat-select placeholder=""Food"" [formControl]=""control"" [required]=""isRequired""
        [tabIndex]=""tabIndexOverride"" [aria-describedby]=""ariaDescribedBy""
        [aria-label]=""ariaLabel"" [aria-labelledby]=""ariaLabelledby""
        [panelClass]=""panelClass"" [disableRipple]=""disableRipple""
        [typeaheadDebounceInterval]=""typeaheadDebounceInterval"">
        <mat-option *ngFor=""let food of foods"" [value]=""food.value"" [disabled]=""food.disabled"">
          {{ food.viewValue }}
        </mat-option>
      </mat-select>
      <mat-hint *ngIf=""hint"">{{ hint }}</mat-hint>
    </mat-form-field>
    <div [style.height.px]=""heightBelow""></div>
  `",'ng-model-select',"`
    <mat-form-field>
      <mat-select placeholder=""Food"" ngModel [disabled]=""isDisabled"">
        <mat-option *ngFor=""let food of foods""
                    [value]=""food.value"">{{ food.viewValue }}
        </mat-option>
      </mat-select>
    </mat-form-field>
  `",'many-selects',"`
    <mat-form-field>
      <mat-select placeholder=""First"">
        <mat-option value=""one"">one</mat-option>
        <mat-option value=""two"">two</mat-option>
      </mat-select>
    </mat-form-field>
    <mat-form-field>
      <mat-select placeholder=""Second"">
        <mat-option value=""three"">three</mat-option>
        <mat-option value=""four"">four</mat-option>
      </mat-select>
    </mat-form-field>
  `",'ng-if-select',"`
    <div *ngIf=""isShowing"">
      <mat-form-field>
        <mat-select placeholder=""Food I want to eat right now"" [formControl]=""control"">
          <mat-option *ngFor=""let food of foods"" [value]=""food.value"">
            {{ food.viewValue }}
          </mat-option>
        </mat-select>
      </mat-form-field>
    </div>
  `",'select-with-change-event',"`
    <mat-form-field>
      <mat-select (selectionChange)=""changeListener($event)"">
        <mat-option *ngFor=""let food of foods"" [value]=""food"">{{ food }}</mat-option>
      </mat-select>
    </mat-form-field>
  `",'MatSelect change listener','select-init-without-options',"`
    <mat-form-field>
      <mat-select placeholder=""Food I want to eat right now"" [formControl]=""control"">
        <mat-option *ngFor=""let food of foods"" [value]=""food.value"">
          {{ food.viewValue }}
        </mat-option>
      </mat-select>
    </mat-form-field>
  `",'custom-select-accessor',`<mat-form-field><mat-select></mat-select></mat-form-field>`,NG_VALUE_ACCESSOR,ControlValueAccessor,registerOnChange,changeFn,registerOnTouched,touchedFn,'comp-with-custom-select',"`<custom-select-accessor [formControl]=""ctrl""></custom-select-accessor>`",ctrl,'initial value','select-infinite-loop',"`
    <mat-form-field>
      <mat-select [(ngModel)]=""value""></mat-select>
    </mat-form-field>
    <throws-error-on-init></throws-error-on-init>
  `",'throws-error-on-init',OnInit,ngOnInit,'basic-select-on-push',"`
    <mat-form-field>
      <mat-select placeholder=""Food"" [formControl]=""control"">
        <mat-option *ngFor=""let food of foods"" [value]=""food.value"">
          {{ food.viewValue }}
        </mat-option>
      </mat-select>
    </mat-form-field>
  `",'basic-select-on-push-preselected','floating-label-select',"`
    <mat-form-field [floatLabel]=""floatLabel"">
      <mat-label>Select a food</mat-label>
      <mat-select [placeholder]=""placeholder"" [formControl]=""control"">
        <mat-option *ngFor=""let food of foods"" [value]=""food.value"">
          {{ food.viewValue }}
        </mat-option>
      </mat-select>
    </mat-form-field>
    `",'Food I want to eat right now','multi-select',"`
    <mat-form-field>
      <mat-select multiple placeholder=""Food"" [formControl]=""control""
        [sortComparator]=""sortComparator"">
        <mat-option *ngFor=""let food of foods""
                    [value]=""food.value"">{{ food.viewValue }}
        </mat-option>
      </mat-select>
    </mat-form-field>
  `",'select-with-plain-tabindex',"`<mat-form-field><mat-select tabindex=""5""></mat-select></mat-form-field>`",'select-early-sibling-access',"`
    <mat-form-field>
      <mat-select #select=""matSelect""></mat-select>
    </mat-form-field>
    <div *ngIf=""select.selected""></div>
  `",'basic-select-initially-hidden',"`
    <mat-form-field>
      <mat-select [style.display]=""isVisible ? 'block' : 'none'"">
        <mat-option value=""value"">There are no other options</mat-option>
      </mat-select>
    </mat-form-field>
  `",'basic-select-no-placeholder',"`
    <mat-form-field>
      <mat-select>
        <mat-option value=""value"">There are no other options</mat-option>
      </mat-select>
    </mat-form-field>
  `",'basic-select-with-theming',"`
    <mat-form-field [color]=""theme"">
      <mat-select placeholder=""Food"">
        <mat-option value=""steak-0"">Steak</mat-option>
        <mat-option value=""pizza-1"">Pizza</mat-option>
      </mat-select>
    </mat-form-field>
  `",'reset-values-select',"`
    <mat-form-field>
      <mat-label>Select a food</mat-label>
      <mat-select [formControl]=""control"">
        <mat-option *ngFor=""let food of foods"" [value]=""food.value"">
          {{ food.viewValue }}
        </mat-option>
        <mat-option>None</mat-option>
      </mat-select>
    </mat-form-field>
  `","`
    <mat-form-field>
      <mat-select [formControl]=""control"">
        <mat-option *ngFor=""let food of foods""
                    [value]=""food.value"">{{ food.viewValue }}
        </mat-option>
      </mat-select>
    </mat-form-field>
  `",'select-with-groups',"`
    <mat-form-field>
      <mat-select placeholder=""Pokemon"" [formControl]=""control"">
        <mat-optgroup *ngFor=""let group of pokemonTypes"" [label]=""group.name""
          [disabled]=""group.disabled"">
          <mat-option *ngFor=""let pokemon of group.pokemon"" [value]=""pokemon.value"">
            {{ pokemon.viewValue }}
          </mat-option>
        </mat-optgroup>
        <mat-option value=""mime-11"">Mr. Mime</mat-option>
      </mat-select>
    </mat-form-field>
  `",pokemonTypes,'Grass',pokemon,'bulbasaur-0','oddish-1','Oddish','bellsprout-2','Bellsprout','Water','squirtle-3','Squirtle','psyduck-4','Psyduck','horsea-5','Horsea','Fire','charmander-6','vulpix-7','Vulpix','flareon-8','Flareon','Psychic','mew-9','Mew','mewtwo-10','Mewtwo',"`
    <mat-form-field>
      <mat-select placeholder=""Pokemon"" [formControl]=""control"">
        <mat-optgroup *ngFor=""let group of pokemonTypes"" [label]=""group.name"">
          <ng-container *ngFor=""let pokemon of group.pokemon"">
            <mat-option [value]=""pokemon.value"">{{ pokemon.viewValue }}</mat-option>
          </ng-container>
        </mat-optgroup>
      </mat-select>
    </mat-form-field>
  `","`
    <form>
      <mat-form-field>
        <mat-select [(ngModel)]=""value""></mat-select>
      </mat-form-field>
    </form>
  `","`
    <form [formGroup]=""formGroup"">
      <mat-form-field>
        <mat-label>Food</mat-label>
        <mat-select formControlName=""food"">
          <mat-option *ngFor=""let option of options"" [value]=""option.value"">
            {{option.viewValue}}
          </mat-option>
        </mat-select>

        <mat-error>This field is required</mat-error>
      </mat-form-field>
    </form>
  `","`
    <mat-form-field>
      <mat-select placeholder=""Food"" [(value)]=""selectedFood"">
        <mat-option *ngFor=""let food of foods"" [value]=""food.value"">
          {{ food.viewValue }}
        </mat-option>
      </mat-select>
    </mat-form-field>
  `","`
    <mat-form-field>
      <mat-select placeholder=""Food"" [(value)]=""selectedFoods"" multiple>
        <mat-option *ngFor=""let food of foods"" [value]=""food.value"">
          {{ food.viewValue }}
        </mat-option>
      </mat-select>
    </mat-form-field>
  `",'select-with-custom-trigger',"`
    <mat-form-field>
      <mat-select placeholder=""Food"" [formControl]=""control"" #select=""matSelect"">
        <mat-select-trigger>
          {{ select.selected?.viewValue.split('').reverse().join('') }}
        </mat-select-trigger>
        <mat-option *ngFor=""let food of foods"" [value]=""food.value"">
          {{ food.viewValue }}
        </mat-option>
      </mat-select>
    </mat-form-field>
  `",'ng-model-compare-with',"`
    <mat-form-field>
      <mat-select [ngModel]=""selectedFood"" (ngModelChange)=""setFoodByCopy($event)""
                 [compareWith]=""comparator"">
        <mat-option *ngFor=""let food of foods"" [value]=""food"">{{ food.viewValue }}</mat-option>
      </mat-select>
    </mat-form-field>
  `",comparator,f1,f2,compareByValue,useCompareByValue,setFoodByCopy,"`
    <mat-select placeholder=""Food"" [formControl]=""control"" [errorStateMatcher]=""errorStateMatcher"">
      <mat-option *ngFor=""let food of foods"" [value]=""food.value"">
        {{ food.viewValue }}
      </mat-option>
    </mat-select>
  `","`
    <mat-form-field>
      <mat-select placeholder=""Food"" [(ngModel)]=""selectedFoods"">
        <mat-option *ngFor=""let food of foods""
                    [value]=""food.value"">{{ food.viewValue }}
        </mat-option>
      </mat-select>
    </mat-form-field>
  `",'steak-1','pizza-2','tacos-3','select-without-option-centering',"`
    <mat-form-field>
      <mat-select placeholder=""Food"" [formControl]=""control"" disableOptionCentering>
        <mat-option *ngFor=""let food of foods"" [value]=""food.value"">
          {{ food.viewValue }}
        </mat-option>
      </mat-select>
    </mat-form-field>
  `","`
    <mat-form-field>
      <mat-label>Select a thing</mat-label>

      <mat-select [placeholder]=""placeholder"">
        <mat-option value=""thing"">A thing</mat-option>
      </mat-select>
    </mat-form-field>
  `",SelectWithFormFieldLabel,"`
    <mat-form-field appearance=""fill"">
      <mat-label>Select something</mat-label>
      <mat-select *ngIf=""showSelect"">
        <mat-option value=""1"">One</mat-option>
      </mat-select>
    </mat-form-field>
  `",showSelect,"`
    <mat-form-field>
      <mat-select multiple [ngModel]=""value"">
        <mat-option *ngFor=""let item of items"" [value]=""item"">{{item}}</mat-option>
      </mat-select>
    </mat-form-field>
  `",uncheckAll,'basic-select-with-reset',"`
    <mat-form-field>
      <mat-select [formControl]=""control"">
        <mat-option>Reset</mat-option>
        <mat-option value=""a"">A</mat-option>
        <mat-option value=""b"">B</mat-option>
        <mat-option value=""c"">C</mat-option>
      </mat-select>
    </mat-form-field>
  `",'select-with-placeholder-in-ngcontainer-with-ngIf',"`
    <mat-form-field>
      <ng-container *ngIf=""true"">
        <mat-select placeholder=""Product Area"">
          <mat-option value=""a"">A</mat-option>
          <mat-option value=""b"">B</mat-option>
          <mat-option value=""c"">C</mat-option>
        </mat-select>
      </ng-container>
    </mat-form-field>
  `","`
    <form [formGroup]=""form"">
      <mat-form-field>
        <mat-select formControlName=""control"">
          <mat-option value=""1"">One</mat-option>
        </mat-select>
      </mat-form-field>
    </form>
  `",_formBuilder,FormBuilder,'should render a slide-toggle','should change the checked state on click',getButton,'Expect slide-toggle to be unchecked',getNormalToggle,'Expect slide-toggle to be checked','should not change the checked state on click when disabled','#disabled-slide-toggle','should move the thumb on state change',slideToggleEl,thumbEl,'#normal-slide-toggle .mdc-switch__handle',previousPosition,'should toggle the slide-toggle on space key',slideColor,slideToggleElement,'should correctly update the disabled property','should correctly update the checked property',slideChecked,'should set the toggle to checked on click','mat-mdc-slide-toggle-checked','should not trigger the click event multiple times',onSlideClick,'should trigger the change event properly',onSlideChange,'should not trigger the change event by changing the native value','should add a suffix to the element id',slideId,'myId',}-button`,'nextId',/mat-mdc-slide-toggle-\d+-button/,'should forward the tabIndex to the underlying element',slideTabindex,'should forward the specified name to the element',slideName,'myName','nextName','should forward the aria-label attribute to the element',slideLabel,'ariaLabel','should forward the aria-labelledby attribute to the element',slideLabelledBy,'ariaLabelledBy',/mat-mdc-slide-toggle-label-\d+/,'should forward the aria-describedby attribute to the element',slideAriaDescribedBy,'some-element','should set the `for` attribute to the id of the element','should emit the new values properly',lastEvent,'should support subscription on the change observable','should forward the required attribute','should focus on underlying element when focus() is called','should not manually move focus to underlying when focus comes from mouse or touch','should set a element class if labelPosition is set to before','.mdc-form-field','mdc-form-field--align-end',labelPosition,'should show ripples',rippleSelector,switchElement,'.mdc-switch','should not show ripples when disableRipple is set',rippleElement,'.mat-mdc-slide-toggle-ripple','custom template','should not trigger the change event on initialization',SlideToggleWithTabindexAttr,MatSlideToggle,'Expected tabIndex property to have been set based on the native attribute','should add the disabled class if disabled through attribute',SlideToggleCheckedAndDisabledAttr,switchEl,'mdc-switch--disabled','should add the checked class if checked through attribute','mdc-switch--checked','should remove the tabindex from the host node','should remove the tabindex from the host element when disabled','should not change value on click when click action is noop when using custom a ','action configuration',SlideToggleWithForm,'.mat-mdc-slide-toggle','should clear static aria attributes from the host node',SlideToggleWithStaticAriaAttributes,'MDC-based MatSlideToggle with forms',SlideToggleWithModel,SlideToggleWithFormControl,SlideToggleWithModelAndChangeEvent,'using ngModel',slideToggleModel,'should be initially set to ng-pristine','ng-pristine','ng-dirty','should update the model programmatically',modelValue,'should have the correct control state initially and after interaction','should not throw an error when disabling while focused','should not set the control to touched when changing the state programmatically','should not set the control to touched when changing the model','should update checked state on click if control is checked initially','Expected slide-toggle to be checked initially','Expected slide-toggle to be no longer checked after label click.','should be pristine if initial value is set from NgModel',modelInstance,'should set the model value when toggling via the `toggle` method','with a FormControl','should toggle the disabled state','with form element','should not submit the form when clicked',isSubmitted,'should have proper invalid state if unchecked','ng-invalid','ng-valid','should clear static name attribute from the slide toggle host node',hostNode,'with model and change event','should report changes to NgModel before emitting change event','Expected the model value to have changed before the change event fired.',"`
    <mat-slide-toggle [dir]=""direction"" [required]=""isRequired""
                     [disabled]=""isDisabled""
                     [color]=""slideColor""
                     [id]=""slideId""
                     [checked]=""slideChecked""
                     [name]=""slideName""
                     [aria-label]=""slideLabel""
                     [aria-labelledby]=""slideLabelledBy""
                     [aria-describedby]=""slideAriaDescribedBy""
                     [tabIndex]=""slideTabindex""
                     [labelPosition]=""labelPosition""
                     [disableRipple]=""disableRipple""
                     (toggleChange)=""onSlideToggleChange()""
                     (dragChange)=""onSlideDragChange()""
                     (change)=""onSlideChange($event)""
                     (click)=""onSlideClick($event)"">
      <span>Test Slide Toggle</span>
    </mat-slide-toggle>`",MatSlideToggleChange,onSlideToggleChange,onSlideDragChange,"`
    <form ngNativeValidate (ngSubmit)=""isSubmitted = true"">
      <mat-slide-toggle name=""slide"" ngModel [required]=""isRequired"">Required</mat-slide-toggle>
      <button type=""submit""></button>
    </form>`","`<mat-slide-toggle [(ngModel)]=""modelValue"" [disabled]=""isDisabled""
                               [checked]=""isChecked""></mat-slide-toggle>`",`<mat-slide-toggle checked disabled>Label</mat-slide-toggle>`,"`
    <mat-slide-toggle [formControl]=""formControl"">
      <span>Test Slide Toggle</span>
    </mat-slide-toggle>`","`<mat-slide-toggle tabindex=""5"" [disabled]=""disabled""></mat-slide-toggle>`",`<mat-slide-toggle>{{label}}</mat-slide-toggle>`,SlideToggleWithoutLabel,"`<mat-slide-toggle [(ngModel)]=""checked"" (change)=""onChange()""></mat-slide-toggle>`",`<mat-slide-toggle><some-text></some-text></mat-slide-toggle>`,SlideToggleProjectedLabel,'some-text',`<span>{{text}}</span>`,TextBindingComponent,'Some text',"`
    <mat-slide-toggle aria-label=""Slide toggle"" aria-labelledby=""something""></mat-slide-toggle>
  `",'should update the value on click',setValueByClick,getSliderValue,'should update the value on slide',slideToValue,'should display the value indicator when focused',focusSliderThumb,'return arguments[0].getBoundingClientRect();','.mdc-slider__value-indicator','should not cause passive event listener errors when changing the value','browser',Level,SEVERE,'disabled slider',getDisabledSlider,'should not update the value on click','should not update the value on slide',getRangeSlider,'should update the start thumb value on slide','should update the end thumb value on slide','should update the start thumb value on click between thumbs ','but closer to the start thumb','should update the end thumb value on click between thumbs ','but closer to the end thumb',thumbPosition,'.mdc-slider__input',getCoordsForValue,startCoords,endCoords,percent,'should set the default values',sliderInstance,'aria-valuetext','should update the value on mousedown','should update the value on a slide','should set the value as min when sliding before the track','should set the value as max when sliding past the track','should focus the slider input when clicking on the slider','should not break on when the page layout changes','should not throw if destroyed before initialization is complete',StandardSlider,'standard range slider',MatSlider,startInputInstance,MatSliderThumb,sliderElement,endInputInstance,StandardRangeSlider,sliderDebugElement,_getInput,'should update the start value on a slide','should update the end value on a slide','should update the start value on mousedown behind the start thumb',_setValue,'should update the end value on mousedown in front of the end thumb','should set the start value as min when sliding before the track','should set the end value as max when sliding past the track','should not let the start thumb slide past the end thumb','should not let the end thumb slide before the start thumb','should have a strong focus indicator in each of the thumbs',indicators,'.mat-mdc-slider-visual-thumb .mat-mdc-focus-indicator',DisabledSlider,'should be disabled','should have the disabled class on the root element','mdc-slider--disabled','should set the disabled attribute on the input element','should not update the value on mousedown','should not update the value on a slide','disabled range slider',DisabledRangeSlider,'should set the disabled attribute on the input elements','should not update the start value on a slide','should not update the end value on a slide','should not update the start value on mousedown behind the start thumb','ripple states',thumbInstance,MatSliderVisualThumb,thumbElement,thumbX,thumbY,_getThumb,_getHostElement,thumbDimensions,isRippleVisible,flushRippleTransitions,`.mat-mdc-slider-${,}-ripple`,mouseleave,pointerdown,dispatchPointerOrTouchEvent,PointerEventType,POINTER_DOWN,pointerup,POINTER_UP,'should show the hover ripple on mouseenter','hover','should hide the hover ripple on mouseleave','should show the focus ripple on pointerdown','should continue to show the focus ripple on pointerup','should hide the focus ripple on blur','should show the active ripple on pointerdown','should hide the active ripple on pointerup','should not show the hover ripple if the thumb is already focused','should hide the hover ripple if the thumb is focused','should not hide the focus ripple if the thumb is pressed','should not hide the hover ripple on blur if the thumb is hovered','should hide the focus ripple on drag end if the thumb already lost focus','slider with set min and max',SliderWithMinAndMax,'should set the default values from the attributes','should set the correct value on mousedown','should set the correct value on slide','should be able to set the min and max values when they are more precise ','than the step','range slider with set min and max',RangeSliderWithMinAndMax,'should set the correct start value on mousedown behind the start thumb','should set the correct end value on mousedown behind the end thumb','should set the correct start value on slide','should set the correct end value on slide','slider with set value',SliderWithValue,'should set the default value from the attribute','range slider with set value',RangeSliderWithValue,'should set the correct start value on mousedown in front of the end thumb','slider with set step',SliderWithStep,'should set the correct step value on mousedown','should set the correct step value on slide','should not add decimals to the value if it is a whole number','should truncate long decimal values when using a decimal step',55.555,55.5,'range slider with set step',RangeSliderWithStep,'should set the correct step value on mousedown behind the start thumb','should set the correct step value on mousedown in front of the end thumb','should set the correct start thumb step value on slide','should set the correct end thumb step value on slide','should not add decimals to the end value if it is a whole number','should not add decimals to the start value if it is a whole number','should truncate long decimal start values when using a decimal step',33.7,'should truncate long decimal end values when using a decimal step','slider with custom thumb label formatting',DiscreteSliderWithDisplayWith,valueIndicatorTextElement,sliderNativeElement,'.mdc-slider__value-indicator-text','should set the aria-valuetext attribute with the given `displayWith` function','$1','$10k','should invoke the passed-in `displayWith` function with the value','displayWith','should format the thumb label based on the passed-in `displayWith` function',200000,'$200k','range slider with custom thumb label formatting',DiscreteRangeSliderWithDisplayWith,startValueIndicatorTextElement,endValueIndicatorTextElement,startThumbElement,_getThumbElement,endThumbElement,'$1000k',250000,810000,'$250k','$810k','should invoke the passed-in `displayWith` function with the start value','should invoke the passed-in `displayWith` function with the end value',5996,'should format the start thumb label based on the passed-in `displayWith` function','should format the end thumb label based on the passed-in `displayWith` function',700000,'$700k','slider with value property binding',SliderWithOneWayBinding,'should update when bound value changes','range slider with value property binding',RangeSliderWithOneWayBinding,'should update when bound start value changes',startValue,'should update when bound end value changes',endValue,'slider with change handler',SliderWithChangeHandler,'should emit change on mouseup','should emit change on slide','should not emit multiple changes for the same value','should dispatch events when changing back to previously emitted value after ','programmatically setting value',dispatchSliderEvent,'range slider with change handlers',RangeSliderWithChangeHandler,'should emit change on mouseup on the start thumb',onStartThumbChange,onEndThumbChange,'should emit change on mouseup on the end thumb','should emit change on start thumb slide','should emit change on end thumb slide','should not emit multiple changes for the same start thumb value','should not emit multiple changes for the same end thumb value','programmatically setting the start value',onStartThumbInput,onEndThumbInput,'programmatically setting the end value','slider with input event','should emit an input event while sliding',POINTER_MOVE,'should emit an input event when clicking','range slider with input event','should emit an input event while sliding the start thumb','should emit an input event while sliding the end thumb','should emit an input event on the start thumb when clicking near it','should emit an input event on the end thumb when clicking near it','slider with direction','works in RTL languages','range slider with direction','slider with ngModel',SliderWithNgModel,'should update the model on mouseup',76,'should update the model on slide','should be able to reset a slider by setting the model back to undefined',RangeSliderWithNgModel,'should update the start thumb model on mouseup',startVal,'should update the end thumb model on mouseup',endVal,'should update the start thumb model on slide','should update the end thumb model on slide','should be able to reset a slider by setting the start thumb model back to undefined','should be able to reset a slider by setting the end thumb model back to undefined','slider as a custom form control',SliderWithFormControl,'should not update the control when the value is updated','should update the control on mouseup','should update the control on slide','should update the value when the control is set','should update the disabled state when control is disabled','should update the disabled state when the control is enabled',sliderControl,RangeSliderWithFormControl,'should not update the start input control when the value is updated',startInputControl,'should not update the end input control when the value is updated',endInputControl,'should update the start input control on mouseup','should update the end input control on mouseup','should update the start input control on slide','should update the end input control on slide','should update the start input value when the start input control is set','should update the end input value when the end input control is set','should update the disabled state if the start input control is disabled','should update the disabled state if the end input control is disabled','should update the disabled state when both input controls are enabled','should have the correct start input control state initially and after interaction','slider with a two-way binding',SliderWithTwoWayBinding,'should sync the value binding in both directions',sliderInput,'range slider with a two-way binding',RangeSliderWithTwoWayBinding,'should sync the start value binding in both directions',sliderInputs,'should sync the end value binding in both directions',SLIDER_STYLES,'.mat-mdc-slider { width: 300px; }',"`
  <mat-slider>
    <input matSliderThumb>
  </mat-slider>
  `","`
  <mat-slider>
    <input matSliderStartThumb>
    <input matSliderEndThumb>
  </mat-slider>
  `","`
  <mat-slider disabled>
    <input matSliderThumb>
  </mat-slider>
  `","`
  <mat-slider disabled>
    <input matSliderStartThumb>
    <input matSliderEndThumb>
  </mat-slider>
  `","`
  <mat-slider min=""25"" max=""75"">
    <input matSliderThumb>
  </mat-slider>
  `","`
  <mat-slider min=""25"" max=""75"">
    <input matSliderStartThumb>
    <input matSliderEndThumb>
  </mat-slider>
  `","`
  <mat-slider>
    <input value=""50"" matSliderThumb>
  </mat-slider>
  `","`
  <mat-slider>
    <input value=""25"" matSliderStartThumb>
    <input value=""75"" matSliderEndThumb>
  </mat-slider>
  `","`
  <mat-slider step=""25"">
    <input matSliderThumb>
  </mat-slider>
  `","`
  <mat-slider step=""25"">
    <input matSliderStartThumb>
    <input matSliderEndThumb>
  </mat-slider>
  `","`
  <mat-slider [displayWith]=""displayWith"" min=""1"" max=""1000000"" discrete>
    <input matSliderThumb>
  </mat-slider>
  `",`$${,}k`,"`
  <mat-slider [displayWith]=""displayWith"" min=""1"" max=""1000000"" discrete>
    <input matSliderStartThumb>
    <input matSliderEndThumb>
  </mat-slider>
  `","`
  <mat-slider>
    <input [value]=""value"" matSliderThumb>
  </mat-slider>
  `","`
  <mat-slider>
    <input [value]=""startValue"" matSliderStartThumb>
    <input [value]=""endValue"" matSliderEndThumb>
  </mat-slider>
  `","`
  <mat-slider>
    <input (change)=""onChange($event)"" (input)=""onInput($event)"" matSliderThumb>
  </mat-slider>
  `","`
  <mat-slider>
    <input
      (change)=""onStartThumbChange($event)""
      (input)=""onStartThumbInput($event)""
      matSliderStartThumb>
    <input
      (change)=""onEndThumbChange($event)""
      (input)=""onEndThumbInput($event)""
      matSliderEndThumb>
  </mat-slider>
  `",'onStartThumbChange','onStartThumbInput','onEndThumbChange','onEndThumbInput',"`
  <mat-slider>
    <input [(ngModel)]=""val"" matSliderThumb>
  </mat-slider>
  `","`
  <mat-slider>
    <input [(ngModel)]=""startVal"" matSliderStartThumb>
    <input [(ngModel)]=""endVal"" matSliderEndThumb>
  </mat-slider>
  `","`
  <mat-slider>
    <input [formControl]=""control"" matSliderThumb>
  </mat-slider>`","`
  <mat-slider>
    <input [formControl]=""startInputControl"" matSliderStartThumb>
    <input [formControl]=""endInputControl"" matSliderEndThumb>
  </mat-slider>`","`
  <mat-slider>
    <input [(value)]=""value"" matSliderThumb>
  </mat-slider>
  `","`
  <mat-slider>
    <input [(value)]=""startValue"" matSliderStartThumb>
    <input [(value)]=""endValue"" matSliderEndThumb>
  </mat-slider>
  `",enum,TouchEventType,TOUCH_START,TOUCH_END,TOUCH_MOVE,isIOS,startX,startY,endX,endY,pointerEventTypeToTouchEventType,pointerEventType,'should get whether is a range slider','should get whether a slider is disabled',singleSliderDisabled,'should get the min/max values of a single-thumb slider',getMinValue,'should get the min/max values of a range slider',rangeSliderMin,rangeSliderMax,'should get the thumbs within a slider',getEndThumb,getStartThumb,'should throw when trying to get the start thumb from a single point slider',toBeRejectedWithError,'`getStartThumb` is only applicable for range sliders. ','Did you mean to use `getEndThumb`?','should get the step of a slider',rangeSliderStep,'should get the position of a slider thumb in a range slider','#range',ThumbPosition,'should get the position of a slider thumb in a non-range slider',MatSliderThumbHarness,'#single','should get and set the value of a slider thumb','should dispatch input and change events when setting the value',changeSpy,'changeListener',inputSpy,'inputListener','should get the value of a thumb as a percentage',0.4,'should get the display value of a slider thumb',getDisplayValue,'#73','should get the min/max values of a slider thumb',rangeSliderEndValue,rangeSliderStartValue,'should get the disabled state of a slider thumb','should get the name of a slider thumb','price','should get the id of a slider thumb','price-input','should be able to focus and blur a slider thumb',"`
    <mat-slider id=""single"" [displayWith]=""displayFn"" [disabled]=""singleSliderDisabled"">
      <input
        name=""price""
        id=""price-input""
        matSliderThumb
        (input)=""inputListener()""
        (change)=""changeListener()"">
    </mat-slider>

    <mat-slider id=""range"" [min]=""rangeSliderMin"" [max]=""rangeSliderMax"" [step]=""rangeSliderStep"">
      <input [value]=""rangeSliderStartValue"" matSliderStartThumb>
      <input [value]=""rangeSliderEndValue"" matSliderEndThumb>
    </mat-slider>
  `",SliderHarnessTest,inputListener,'should open with content first in the inert region','Snack time!','Chew','mat-snack-bar-container',inertElement,'[aria-hidden]','Expected the non-live region to be aria-hidden','Expected non-live region to contain the snack bar content',liveElement,'[aria-live]','Expected live region to not contain any content','should move content to the live region after 150ms',announceDelay,'Expected live region to contain the snack bar content','Expected non-live region to not contain any content','should preserve focus when moving content to the live region',animationFrameDelay,'.mat-mdc-simple-snack-bar .mat-mdc-snack-bar-action','Expected the focus to move to the action button','Expected the focus to remain on the action button','should have aria-live of `assertive` with an `assertive` politeness if no announcement ','message is provided',openFromComponent,BurritosNotification,announcementMessage,"'Expected snack bar container live region to have aria-live=""assertive""'",'should have aria-live of `polite` with an `assertive` politeness if an announcement ','Yay Burritos',"'Expected snack bar container live region to have aria-live=""polite""'",'should have aria-live of `polite` with a `polite` politeness','should have aria-live of `off` if the politeness is turned off',"'Expected snack bar container live region to have aria-live=""off""'",'should have role of `alert` with an `assertive` politeness (Firefox only)','should have role of `status` with an `polite` politeness (Firefox only)','status','should have exactly one MDC label element when opened through simple snack bar',MatSnackBarConfig,simpleMessage,simpleActionLabel,'.mdc-snackbar__label','should open and close a snackbar without a ViewContainerRef','Expected snack bar to show a message without a ViewContainerRef','Expected snack bar to be dismissed without a ViewContainerRef','should open a simple message with a button',SimpleSnackBar,'Expected the snack bar content component to be SimpleSnackBar','Expected the snack bar reference to be placed in the component instance',`Expected the snack bar message to be '${,}'`,'button.mat-mdc-button','Expected snack bar action label to be a <button>','BUTTON',`Expected the snack bar action label to be '${,'should open a simple message with no button','Expected the query selection for action label to be null','should dismiss the snack bar and remove itself from the view',dismissCompleteSpy,'dismiss complete spy',childElementCount,'Expected overlay container element to have at least one child',afterDismissed,'mat-exit',"'Expected the snackbar container to have the ""exit"" attribute upon dismiss'",'Expected the overlay container element to have no child elements','should clear the announcement message if it is the same as main message','Expected the overlay with the default announcement message to be added','should be able to specify a custom announcement message','Custom announcement','Expected the overlay with a custom `announcementMessage` to be added','should be able to get dismissed through the service','should clean itself up when the view container gets destroyed',childComponentExists,'Expected snack bar to be removed after the view container was destroyed','should open a new snackbar after dismissing a previous snackbar','Dismiss','Second snackbar','should remove past snackbars when opening new snackbars','First snackbar','Third snackbar','should remove snackbar if another is shown while its still animating open',"'should dismiss the snackbar when the action is called, notifying of both action and dismiss'",dismissNextSpy,'dismiss next spy',actionNextSpy,'action next spy',actionCompleteSpy,'action complete spy','Some content',onAction,'should allow manually dismissing with an action',dismissWithAction,'should indicate in `afterClosed` whether it was dismissed by an action',dismissSpy,'dismiss spy',dismissedByAction,'should complete the onAction stream when not closing via an action','should dismiss automatically after a specified timeout',afterDismissSpy,'after dismiss spy','should clear the dismiss timeout when dismissed before timeout expiration','should clear the dismiss timeout when dismissed with action','should add extra classes to the container',containerClasses,'should set the layout direction','Expected the pane to be in RTL mode.','should be able to override the default config',MAT_SNACK_BAR_DEFAULT_OPTIONS,MatSnackBarModule,MatSnackBar,sb,'Expected class applied through the defaults to be applied.','should dismiss the open snack bar on destroy',MatSnackBarContainer,_mdcFoundation,'should cap the timeout to the maximum accepted delay in setTimeout','setTimeout','should only keep one snack bar in the DOM if multiple are opened at the same time','with custom component','should open a custom component','Expected the snack bar content component to be BurritosNotification','Expected component to have the proper text.','Burritos are on the way.','should inject the snack bar reference into the component','Expected component to have an injected snack bar reference.','should have exactly one MDC label element','should be able to inject arbitrary user data',burritoType,'Chimichanga','Expected component to have a data object.','Expected the injected data object to be the one the user provided.','with TemplateRef',templateFixture,'should be able to open a snack bar using a TemplateRef',openFromTemplate,'Fries','should be able to pass in contextual data when opening with a TemplateRef','Oranges','MatSnackBar with parent MatSnackBar',parentSnackBar,childSnackBar,ComponentThatProvidesMatSnackBar,'should close snackBars opened by parent when opening from child','Expected a snackBar to be opened','Taco','Expected parent snackbar msg to be dismissed by opening from child','should close snackBars opened by child when opening from parent','Expected child snackbar msg to be dismissed by opening from parent','should not dismiss parent snack bar if child is destroyed','MatSnackBar Positioning',overlayContainerEl,'Burritos are here!','pickup','should default to bottom center',overlayPaneEl,"'Expected margin-bottom to be ""0px""'","'Expected margin-top to be """"'","'Expected margin-right to be """"'","'Expected margin-left  to be """"'",'should be in the bottom left corner',verticalPosition,horizontalPosition,"'Expected margin-left  to be ""0px""'",'should be in the bottom right corner',"'Expected margin-right to be ""0px""'",'should be in the bottom center','should be in the top left corner',"'Expected margin-bottom to be """"'","'Expected margin-top to be ""0px""'",'should be in the top right corner','should be in the top center','should handle start based on direction (rtl)','should handle start based on direction (ltr)','should handle end based on direction (rtl)','should handle end based on direction (ltr)',"`<dir-with-view-container *ngIf=""childComponentExists""></dir-with-view-container>`","`
    <ng-template let-data>
      Fries {{localValue}} {{data?.value}}
    </ng-template>
  `",'<p>Burritos are on the way.</p>',MatSnackBarRef,MAT_SNACK_BAR_DATA,'should be able to get message of a snack-bar with custom content',openCustom,'My custom snack-bar.',openCustomWithAction,'My custom snack-bar with action.','should fail to get action description of a snack-bar with no action',/without an action/,'should be able to get action description of a snack-bar with an action','Ok','should be able to check whether a snack-bar with custom content has an action',"`
    <ng-template #custom>My custom snack-bar.</ng-template>
    <ng-template #customWithAction>
      <span matSnackBarLabel>My custom snack-bar with action.</span>
      <div matSnackBarActions><button matSnackBarAction>Ok</button></div>
    </ng-template>
  `",SnackbarHarnessTest,customTmpl,'customWithAction',customWithActionTmpl,'should show a table','should be able to create a table with the right content and without when row',MatTableApp,'fourth_row','should create a table with special when row',MatTableWithWhenRowApp,'should create a table with multiTemplateDataRows true','should be able to render a table correctly with native elements',NestedTableApp,initialData,'.mat-mdc-no-data-row','should set the content styling class on the tbody',tbodyElement,'mdc-data-table__content','should render with MatTableDataSource and sort',MatTableWithSortApp,'should render with MatTableDataSource and pagination',MatTableWithPaginatorApp,'should apply custom sticky CSS class to sticky cells',StickyTableApp,stuckCellElement,'table th','mat-mdc-table-sticky','should not throw when a row definition is on an ng-container',TableWithNgContainerRow,'should be able to render a flexbox-based table',MatFlexTableApp,'with MatTableDataSource and sort/pagination/filter',ArrayDataSourceMatTableApp,MatTableDataSource,'should create table and display data source contents','changing data should update the table contents',underlyingDataSource,modifiedData,'should update the page index when switching to a smaller data set from a page',lastPage,'a_0','b_0','c_0','should be able to filter the table contents',filteredData,'  A_2  ',filterPredicate,'elephant','monkey','should not match concatenated words','1b','should be able to sort the table contents',sortHeader,sortingDataAccessor,'should by default correctly sort an empty string','should by default correctly sort undefined values','should sort zero correctly','should be able to page the table contents','a_6','b_6','c_6','a_7','b_7','c_7','a_8','b_8','c_8','a_9','b_9','c_9','a_10','b_10','c_10','should sort strings with numbers larger than MAX_SAFE_INTEGER correctly','9563256840123535',larger,'9563256840123536',largest,'9563256840123537','should fall back to empty table if invalid data is passed in',"`
    <table mat-table [dataSource]=""dataSource"">
      <ng-container matColumnDef=""column_a"">
        <th mat-header-cell *matHeaderCellDef> Column A</th>
        <td mat-cell *matCellDef=""let row""> {{row.a}}</td>
        <td mat-footer-cell *matFooterCellDef> Footer A</td>
      </ng-container>

      <ng-container matColumnDef=""column_b"">
        <th mat-header-cell *matHeaderCellDef> Column B</th>
        <td mat-cell *matCellDef=""let row""> {{row.b}}</td>
        <td mat-footer-cell *matFooterCellDef> Footer B</td>
      </ng-container>

      <ng-container matColumnDef=""column_c"">
        <th mat-header-cell *matHeaderCellDef> Column C</th>
        <td mat-cell *matCellDef=""let row""> {{row.c}}</td>
        <td mat-footer-cell *matFooterCellDef> Footer C</td>
      </ng-container>

      <ng-container matColumnDef=""special_column"">
        <td mat-cell *matCellDef=""let row""> fourth_row </td>
      </ng-container>

      <tr mat-header-row *matHeaderRowDef=""columnsToRender""></tr>
      <tr mat-row *matRowDef=""let row; columns: columnsToRender""></tr>
      <tr mat-row *matRowDef=""let row; columns: ['special_column']; when: isFourthRow""></tr>
      <tr *matNoDataRow>
        <td>No data</td>
      </tr>
      <tr mat-footer-row *matFooterRowDef=""columnsToRender""></tr>
    </table>
  `",isFourthRow,MatTable,"`
    <table mat-table [dataSource]=""dataSource"">
      <ng-container matColumnDef=""column_a"">
        <th mat-header-cell *matHeaderCellDef> Column A</th>
        <td mat-cell *matCellDef=""let row""> {{row.a}}</td>
      </ng-container>

      <ng-container matColumnDef=""column_b"">
        <th mat-header-cell *matHeaderCellDef> Column B</th>
        <td mat-cell *matCellDef=""let row""> {{row.b}}</td>
      </ng-container>

      <ng-container matColumnDef=""column_c"">
        <th mat-header-cell *matHeaderCellDef> Column C</th>
        <td mat-cell *matCellDef=""let row""> {{row.c}}</td>
      </ng-container>

      <tr mat-header-row *matHeaderRowDef=""columnsToRender""></tr>
      <tr mat-row *matRowDef=""let row; columns: columnsToRender""></tr>
      <tr *matNoDataRow>
        <td>No data</td>
      </tr>
    </table>
  `","`
    <table mat-table [dataSource]=""dataSource"">
      <ng-container matColumnDef=""column_a"">
        <th mat-header-cell *matHeaderCellDef>Column A</th>
        <td mat-cell *matCellDef=""let row"">{{row.a}}</td>
      </ng-container>

      <ng-container matColumnDef=""column_b"">
        <th mat-header-cell *matHeaderCellDef>Column B</th>
        <td mat-cell *matCellDef=""let row"">
          <table mat-table [dataSource]=""dataSource"">
            <ng-container matColumnDef=""column_a"">
              <th mat-header-cell *matHeaderCellDef> Column A</th>
              <td mat-cell *matCellDef=""let row""> {{row.a}}</td>
              <td mat-footer-cell *matFooterCellDef> Footer A</td>
            </ng-container>

            <ng-container matColumnDef=""column_b"">
              <th mat-header-cell *matHeaderCellDef> Column B</th>
              <td mat-cell *matCellDef=""let row""> {{row.b}}</td>
              <td mat-footer-cell *matFooterCellDef> Footer B</td>
            </ng-container>

            <ng-container matColumnDef=""column_c"">
              <th mat-header-cell *matHeaderCellDef> Column C</th>
              <td mat-cell *matCellDef=""let row""> {{row.c}}</td>
              <td mat-footer-cell *matFooterCellDef> Footer C</td>
            </ng-container>

            <tr mat-header-row *matHeaderRowDef=""columnsToRender""></tr>
            <tr mat-row *matRowDef=""let row; columns: columnsToRender""></tr>
          </table>
        </td>
      </ng-container>

      <ng-container matColumnDef=""column_c"">
        <th mat-header-cell *matHeaderCellDef>Column C</th>
        <td mat-cell *matCellDef=""let row"">{{row.c}}</td>
      </ng-container>

      <tr mat-header-row *matHeaderRowDef=""columnsToRender""></tr>
      <tr mat-row *matRowDef=""let row; columns: columnsToRender""></tr>
    </table>
  `","`
    <table mat-table [dataSource]=""dataSource"">
      <ng-container matColumnDef=""column_a"">
        <th mat-header-cell *matHeaderCellDef> Column A </th>
        <td mat-cell *matCellDef=""let row""> {{row.a}} </td>
      </ng-container>

      <tr mat-header-row *matHeaderRowDef=""columnsToRender; sticky: true""></tr>
      <tr mat-row *matRowDef=""let row; columns: columnsToRender""></tr>
    </table>
  `","`
    <table mat-table [dataSource]=""dataSource"" [multiTemplateDataRows]=""multiTemplateDataRows"">
      <ng-container matColumnDef=""column_a"">
        <th mat-header-cell *matHeaderCellDef> Column A</th>
        <td mat-cell *matCellDef=""let row""> {{row.a}}</td>
        <td mat-footer-cell *matFooterCellDef> Footer A</td>
      </ng-container>

      <ng-container matColumnDef=""special_column"">
        <td mat-cell *matCellDef=""let row""> fourth_row </td>
      </ng-container>

      <tr mat-header-row *matHeaderRowDef=""['column_a']""></tr>
      <tr mat-row *matRowDef=""let row; columns: ['column_a']""></tr>
      <tr mat-row *matRowDef=""let row; columns: ['special_column']; when: isFourthRow""></tr>
      <tr mat-footer-row *matFooterRowDef=""['column_a']""></tr>
    </table>
  `","`
    <table mat-table [dataSource]=""dataSource"" matSort>
      <ng-container matColumnDef=""column_a"">
        <th mat-header-cell *matHeaderCellDef mat-sort-header=""a""> Column A</th>
        <td mat-cell *matCellDef=""let row""> {{row.a}}</td>
        <td mat-footer-cell *matFooterCellDef> Footer A</td>
      </ng-container>

      <ng-container matColumnDef=""column_b"">
        <th mat-header-cell *matHeaderCellDef> Column B</th>
        <td mat-cell *matCellDef=""let row""> {{row.b}}</td>
        <td mat-footer-cell *matFooterCellDef> Footer B</td>
      </ng-container>

      <ng-container matColumnDef=""column_c"">
        <th mat-header-cell *matHeaderCellDef> Column C</th>
        <td mat-cell *matCellDef=""let row""> {{row.c}}</td>
        <td mat-footer-cell *matFooterCellDef> Footer C</td>
      </ng-container>

      <tr mat-header-row *matHeaderRowDef=""columnsToRender""></tr>
      <tr mat-row *matRowDef=""let row; columns: columnsToRender""></tr>
      <tr mat-footer-row *matFooterRowDef=""columnsToRender""></tr>
    </table>

    <mat-paginator [pageSize]=""5""></mat-paginator>
  `",MatSort,MatSortHeader,"`
    <table mat-table [dataSource]=""dataSource"" matSort>
      <ng-container matColumnDef=""column_a"">
        <th mat-header-cell *matHeaderCellDef mat-sort-header=""a""> Column A</th>
        <td mat-cell *matCellDef=""let row""> {{row.a}}</td>
      </ng-container>

      <ng-container matColumnDef=""column_b"">
        <th mat-header-cell *matHeaderCellDef> Column B</th>
        <td mat-cell *matCellDef=""let row""> {{row.b}}</td>
      </ng-container>

      <ng-container matColumnDef=""column_c"">
        <th mat-header-cell *matHeaderCellDef> Column C</th>
        <td mat-cell *matCellDef=""let row""> {{row.c}}</td>
      </ng-container>

      <tr mat-header-row *matHeaderRowDef=""columnsToRender""></tr>
      <tr mat-row *matRowDef=""let row; columns: columnsToRender""></tr>
    </table>
  `","`
    <table mat-table [dataSource]=""dataSource"">
      <ng-container matColumnDef=""column_a"">
        <th mat-header-cell *matHeaderCellDef> Column A</th>
        <td mat-cell *matCellDef=""let row""> {{row.a}}</td>
      </ng-container>

      <ng-container matColumnDef=""column_b"">
        <th mat-header-cell *matHeaderCellDef> Column B</th>
        <td mat-cell *matCellDef=""let row""> {{row.b}}</td>
      </ng-container>

      <ng-container matColumnDef=""column_c"">
        <th mat-header-cell *matHeaderCellDef> Column C</th>
        <td mat-cell *matCellDef=""let row""> {{row.c}}</td>
      </ng-container>

      <tr mat-header-row *matHeaderRowDef=""columnsToRender""></tr>
      <tr mat-row *matRowDef=""let row; columns: columnsToRender""></tr>
    </table>

    <mat-paginator [pageSize]=""5""></mat-paginator>
  `","`
    <table mat-table [dataSource]=""dataSource"">
      <ng-container matColumnDef=""column_a"">
        <th mat-header-cell *matHeaderCellDef>Column A</th>
        <td mat-cell *matCellDef=""let row"">{{row.a}}</td>
      </ng-container>

      <tr mat-header-row *matHeaderRowDef=""columnsToRender""></tr>
      <ng-container *matRowDef=""let row; columns: columnsToRender"">
        <tr mat-row></tr>
      </ng-container>
    </table>
  `","`
    <mat-table [dataSource]=""dataSource"">
      <ng-container matColumnDef=""column_a"">
        <mat-header-cell *matHeaderCellDef> Column A</mat-header-cell>
        <mat-cell *matCellDef=""let row""> {{row.a}}</mat-cell>
        <mat-footer-cell *matFooterCellDef> Footer A</mat-footer-cell>
      </ng-container>

      <ng-container matColumnDef=""column_b"">
        <mat-header-cell *matHeaderCellDef> Column B</mat-header-cell>
        <mat-cell *matCellDef=""let row""> {{row.b}}</mat-cell>
        <mat-footer-cell *matFooterCellDef> Footer B</mat-footer-cell>
      </ng-container>

      <ng-container matColumnDef=""column_c"">
        <mat-header-cell *matHeaderCellDef> Column C</mat-header-cell>
        <mat-cell *matCellDef=""let row""> {{row.c}}</mat-cell>
        <mat-footer-cell *matFooterCellDef> Footer C</mat-footer-cell>
      </ng-container>

      <ng-container matColumnDef=""special_column"">
        <mat-cell *matCellDef=""let row""> fourth_row </mat-cell>
      </ng-container>

      <mat-header-row *matHeaderRowDef=""columnsToRender""></mat-header-row>
      <mat-row *matRowDef=""let row; columns: columnsToRender""></mat-row>
      <div *matNoDataRow>No data</div>
      <mat-footer-row *matFooterRowDef=""columnsToRender""></mat-footer-row>
    </mat-table>
  `",'.mat-mdc-header-row','.mat-mdc-footer-row','.mat-mdc-row','should be center position if origin is unchanged',SimpleTabBodyApp,tabBody,_position,'should be center position if origin is explicitly set to null','in LTR direction','should be left-origin-center position with negative or zero origin','left-origin-center','should be right-origin-center position with positive nonzero origin','right-origin-center','in RTL direction','should be right-origin-center position with negative or zero origin','should be left-origin-center position with positive nonzero origin','should properly set the position in LTR','to be left position with negative position','to be center position with zero position','to be left position with positive position','should properly set the position in RTL','to be right position with negative position','should update position if direction changed at runtime',dirChange,'should mark the tab body content as a scrollable container',MatRippleModule,MatTabBody,MatTabBodyPortal,tabBodyContent,'.mat-mdc-tab-body-content',"`
    <ng-template>Tab Body Content</ng-template>
    <mat-tab-body [content]=""content"" [position]=""position"" [origin]=""origin""></mat-tab-body>
  `",'should default to the first tab',checkSelectedIndex,'will properly load content on first change detection pass',tabBodies,'.mat-mdc-tab-body','should change selected index on click',tabLabel,'.mat-mdc-tab','should support two-way binding for selectedIndex','should set to correct tab on fast change','should change tabs based on selectedIndex',tabComponent,'mat-tab-group','handleSelection',handleSelection,selectEvent,'should update tab positions when selected index is changed',MatTabGroup,MatTab,_tabs,'should clamp the selected index to the size of the number of tabs','should not crash when setting the selected index to NaN','should show ripples for tab-group labels','Expected no ripples to show up initially.','Expected one ripple to show up on label mousedown.','should allow disabling ripples for tab-group labels','Expected no ripple to show up on label mousedown.','should set the isActive flag on each of the tabs','should fire animation done event','animationDone',animationDone,'should add the proper `aria-setsize` and `aria-posinset`','aria-posinset','aria-setsize','should emit focusChange event on click','handleFocus',tabLabels,'should emit focusChange on arrow key navigation',tabLabelContainer,'.mat-mdc-tab-label-container','should clean up the tabs QueryList on destroy',tabLabelNativeElements,'should emit focusChange when a tab receives focus','should be able to programmatically focus a particular tab',tabHeader,MatTabHeader,'mat-tab-header',focusIndex,focusTab,'should be able to set a tabindex on the inner content element',contentTabIndex,'mat-tab-body','should update the tabindex of the labels when navigating via keyboard','aria labelling',TabGroupWithAriaInputs,'should not set aria-label or aria-labelledby attributes if they are not passed in','should set the aria-label attribute','should set the aria-labelledby attribute','fruit-label','should not be able to set both an aria-label and aria-labelledby','Veggie','disable tabs',DisabledTabsTestApp,'should have one disabled tab','.mat-mdc-tab-disabled','should set the disabled flag on tab','dynamic binding tabs',SimpleDynamicTabsTestApp,"'should be able to add a new tab, select it, and have correct origin position'",'New tab','to right of index','to left of index','should update selected index if the last tab removed while selected',numberOfTabs,'should maintain the selected tab if a new tab is added','at the start','should maintain the selected tab if a tab is removed','should be able to select a new tab after creation','Last tab','at the end','should not fire `selectedTabChange` when the amount of tabs changes','should update the newly-selected tab if the previously-selected tab is replaced','async tabs',AsyncTabsTestApp,'should show tabs when they are available','with simple api',TabGroupWithSimpleApi,'should support a tab-group with the simple api',getSelectedLabel,'Junk food',getSelectedContent,"'Pizza, fries'","'Apples, grapes'",otherLabel,otherContent,"'Salt, vinegar'",'should support @ViewChild in the tab content',legumes,'should only have the active tab in the DOM','Peanuts','should support setting the header position',tabGroupNode,'mat-mdc-tab-group-inverted-header',headerPosition,'should be able to opt into keeping the inactive tab content in the DOM',preserveContent,'should visibly hide the content of inactive tabs','lazy loaded tabs','should lazy load the second tab',TemplateTabs,secondLabel,'.child','should not throw an error when binding isActive to the view',TabGroupWithIsActiveBinding,'pizza is active','should not pick up mat-tab-label from a child tab',NestedTabGroupWithLabel,'.mdc-tab__text-label','Parent 1','Parent 2','Parent 3','nested tabs','should not pick up the tabs from descendant tab groups',NestedTabs,textLabel,'Inner tab one','Inner tab two','should pick up indirect descendant tabs',TabGroupWithIndirectDescendantTabs,'tall tabs','should not scroll when changing tabs by clicking',TabGroupWithSpaceAbove,scrollY,'should not scroll when changing tabs programatically','tabs with custom css classes',TabsWithClassesTestApp,labelElements,bodyElements,'.mdc-tab','should apply label/body classes','hardcoded-label-class','hardcoded-body-class','should set classes as strings dynamically','custom-label-class','custom-body-class',labelClassList,bodyClassList,'should set classes as strings array dynamically',expectedIndex,tabLabelElement,`.mat-mdc-tab:nth-of-type(${,'mdc-tab--active',tabContentElement,`mat-tab-body:nth-of-type(${,'mat-mdc-tab-body-active','.mdc-tab--active','.mat-mdc-tab-body-active','nested MatTabGroup with enabled animations',MatTabsModule,TabsWithCustomAnimationDuration,'should not throw when creating a component with nested tab groups','should not throw when setting an animationDuration without units','MatTabGroup with ink bar fit to content',TabGroupWithInkBarFitToContent,'should properly nest the ink bar when fit to content',tabElement,'.mdc-tab__content',indicatorElement,'should be able to move the ink bar between content and full',fitInkBarToContent,'MatTabNavBar with a default config',SimpleTabsTestApp,MAT_TABS_CONFIG,dynamicHeight,'should set whether the ink bar fits to content','should set whether the height of the tab group is dynamic',"`
    <mat-tab-group class=""tab-group""
        [(selectedIndex)]=""selectedIndex""
        [headerPosition]=""headerPosition""
        [disableRipple]=""disableRipple""
        [contentTabIndex]=""contentTabIndex""
        (animationDone)=""animationDone()""
        (focusChange)=""handleFocus($event)""
        (selectedTabChange)=""handleSelection($event)"">
      <mat-tab>
        <ng-template mat-tab-label>Tab One</ng-template>
        Tab one content
      </mat-tab>
      <mat-tab>
        <ng-template mat-tab-label>Tab Two</ng-template>
        <span>Tab </span><span>two</span><span>content</span>
      </mat-tab>
      <mat-tab>
        <ng-template mat-tab-label>Tab Three</ng-template>
        Tab three content
      </mat-tab>
    </mat-tab-group>
  `",focusEvent,MatTabHeaderPosition,"`
    <mat-tab-group class=""tab-group""
        [(selectedIndex)]=""selectedIndex""
        (focusChange)=""handleFocus($event)""
        (selectedTabChange)=""handleSelection($event)"">
      <mat-tab *ngFor=""let tab of tabs"">
        <ng-template mat-tab-label>{{tab.label}}</ng-template>
        {{tab.content}}
      </mat-tab>
    </mat-tab-group>
  `",'Label 1','Content 1','Label 2','Content 2','Label 3','Content 3',"`
    <mat-tab-group class=""tab-group"" [(selectedIndex)]=""selectedIndex"">
      <mat-tab *ngFor=""let tab of tabs"" label=""{{tab.label}}"">
        {{tab.content}}
      </mat-tab>
    </mat-tab-group>
  `",BindedTabsTestApp,addNewActiveTab,'new tab','new content',"`
    <mat-tab-group class=""tab-group"">
      <mat-tab>
        <ng-template mat-tab-label>Tab One</ng-template>
        Tab one content
      </mat-tab>
      <mat-tab disabled>
        <ng-template mat-tab-label>Tab Two</ng-template>
        Tab two content
      </mat-tab>
      <mat-tab [disabled]=""isDisabled"">
        <ng-template mat-tab-label>Tab Three</ng-template>
        Tab three content
      </mat-tab>
    </mat-tab-group>
  `","`
    <mat-tab-group class=""tab-group"">
      <mat-tab *ngFor=""let tab of tabs | async"">
        <ng-template mat-tab-label>{{ tab.label }}</ng-template>
        {{ tab.content }}
      </mat-tab>
   </mat-tab-group>
  `","`
  <mat-tab-group [preserveContent]=""preserveContent"">
    <mat-tab label=""Junk food""> Pizza, fries </mat-tab>
    <mat-tab label=""Vegetables""> Broccoli, spinach </mat-tab>
    <mat-tab [label]=""otherLabel""> {{otherContent}} </mat-tab>
    <mat-tab label=""Legumes""> <p #legumes>Peanuts</p> </mat-tab>
  </mat-tab-group>
  `",'legumes',"`
    <mat-tab-group>
      <mat-tab label=""One"">Tab one content</mat-tab>
      <mat-tab label=""Two"">
        Tab two content
         <mat-tab-group [dynamicHeight]=""true"">
          <mat-tab label=""Inner tab one"">Inner content one</mat-tab>
          <mat-tab label=""Inner tab two"">Inner content two</mat-tab>
        </mat-tab-group>
      </mat-tab>
    </mat-tab-group>
  `","`
    <mat-tab-group>
      <mat-tab label=""One"">
        Eager
      </mat-tab>
      <mat-tab label=""Two"">
        <ng-template matTabContent>
          <div class=""child"">Hi</div>
        </ng-template>
      </mat-tab>
    </mat-tab-group>
  `","`
  <mat-tab-group>
    <mat-tab [aria-label]=""ariaLabel"" [aria-labelledby]=""ariaLabelledby""></mat-tab>
  </mat-tab-group>
  `","`
    <mat-tab-group>
      <mat-tab label=""Junk food"" #pizza> Pizza, fries </mat-tab>
      <mat-tab label=""Vegetables""> Broccoli, spinach </mat-tab>
    </mat-tab-group>

    <div *ngIf=""pizza.isActive"">pizza is active</div>
  `","`
    <mat-tab-group animationDuration=""500"">
      <mat-tab label=""One"">Tab one content</mat-tab>
      <mat-tab label=""Two"">Tab two content</mat-tab>
    </mat-tab-group>
  `","`
    <mat-tab-group>
      <ng-container [ngSwitch]=""true"">
        <mat-tab label=""One"">Tab one content</mat-tab>
        <mat-tab label=""Two"">Tab two content</mat-tab>
      </ng-container>
    </mat-tab-group>
  `","`
    <mat-tab-group [fitInkBarToContent]=""fitInkBarToContent"">
      <mat-tab label=""One"">Tab one content</mat-tab>
      <mat-tab label=""Two"">Tab two content</mat-tab>
    </mat-tab-group>
  `","`
    <div style=""height: 300px; background-color: aqua"">
      Top Content here
    </div>
    <mat-tab-group>
      <ng-container>
        <mat-tab label=""One"">
          <div style=""height: 3000px; background-color: red""></div>
        </mat-tab>
        <mat-tab label=""Two"">
          <div style=""height: 3000px; background-color: green""></div>
        </mat-tab>
      </ng-container>
    </mat-tab-group>
  `","`
    <mat-tab-group>
      <mat-tab label=""Parent 1"">
        <mat-tab-group>
          <mat-tab label=""Child 1"">Content 1</mat-tab>
          <mat-tab>
            <ng-template mat-tab-label>Child 2</ng-template>
            Content 2
          </mat-tab>
          <mat-tab label=""Child 3"">Child 3</mat-tab>
        </mat-tab-group>
      </mat-tab>
      <mat-tab label=""Parent 2"">Parent 2</mat-tab>
      <mat-tab label=""Parent 3"">Parent 3</mat-tab>
    </mat-tab-group>
  `","`
    <mat-tab-group class=""tab-group"">
      <mat-tab label=""Tab One"" [labelClass]=""labelClassList"" [bodyClass]=""bodyClassList"">
        Tab one content
      </mat-tab>
      <mat-tab label=""Tab Two"" labelClass=""hardcoded-label-class""
               bodyClass=""hardcoded-body-class"">
        Tab two content
      </mat-tab>
    </mat-tab-group>
  `",'should initialize to the selected index',SimpleTabHeaderApp,appComponent,tabListContainer,_tabListContainer,'should send focus change event','should not set focus a disabled tab',disabledTabIndex,'should move focus right and skip disabled tabs','should move focus left and skip disabled tabs','should support key down events to move and select focus',enterEvent,spaceEvent,'should not prevent the default space/enter action if the current is selected','should move focus to the first tab when pressing HOME','should skip disabled items when moving focus using HOME','should move focus to the last tab when pressing END','should skip disabled items when moving focus using END','should not do anything if a modifier key is pressed',rightArrowEvent,'pagination','should show width when tab list width exceeds container',_showPaginationControls,addTabsForScrolling,'should scroll to show the focused tab label',scrollDistance,_getMaxScrollDistance,'should show ripples for pagination buttons',buttonAfter,'.mat-mdc-tab-header-pagination-after','Expected no ripple to show up initially.','Expected one ripple to show up after mousedown','should allow disabling ripples for pagination buttons','Expected no ripple to show up after mousedown','should update the scroll distance if a tab is removed and no tabs are selected','scrolling when holding paginator',prevButton,headerElement,'.mat-mdc-tab-header-pagination-before','.mat-mdc-tab-header','should scroll towards the end while holding down the next button using a mouse',assertNextButtonScrolling,'should scroll towards the start while holding down the prev button using a mouse',assertPrevButtonScrolling,'should scroll towards the end while holding down the next button using touch','should scroll towards the start while holding down the prev button using touch','should not scroll if the sequence is interrupted quickly','Expected to start off not scrolled.','Expected not to have scrolled after a while.','should clear the timeouts on destroy','should clear the timeouts on click','should clear the timeouts on touchend','should clear the timeouts when reaching the end',60000,'should clear the timeouts when reaching the start','should stop scrolling if the pointer leaves the header','Expected not to scroll after short amount of time.','Expected to scroll after some time.',previousDistance,'should not scroll when pressing the right mouse button',startEventName,endEventName,'Expected to scroll again after some more time.',currentScroll,'Expected to start off scrolled.','disabling pagination','should not show the pagination controls if pagination is disabled',disablePagination,'should not change the scroll position if pagination is disabled','should re-align the ink bar when the direction changes',inkBar,_inkBar,'alignToElement',alignToElement,'should re-align the ink bar when the window is resized',discardPeriodicTasks,'should update arrows when the window is resized','_checkPaginationEnabled',_checkPaginationEnabled,'should update the pagination state if the content of the labels changes',tabHeaderElement,'.label-content',extraText,enabledClass,'mat-mdc-tab-header-pagination-controls-enabled',"`
  <div [dir]=""dir"">
    <mat-tab-header [selectedIndex]=""selectedIndex"" [disableRipple]=""disableRipple""
               (indexFocused)=""focusedIndex = $event""
               (selectFocusedIndex)=""selectedIndex = $event""
               [disablePagination]=""disablePagination"">
      <div matTabLabelWrapper class=""label-content"" style=""min-width: 30px; width: 30px""
           *ngFor=""let tab of tabs; let i = index""
           [disabled]=""!!tab.disabled""
           (click)=""selectedIndex = i"">
         {{tab.label}}
      </div>
    </mat-tab-header>
  </div>
  `","`
    :host {
      width: 130px;
    }
  `",focusedIndex,'tab one','should change active index on click',tabLink,'should add the active class if active',tabLink1,tabLink2,tabLinkElements,tabLinkDebugEl,'should add the disabled class if disabled',tabLinkEl,'mat-mdc-tab-disabled','Expected every tab link to not have the disabled class initially','Expected every tab link to have the disabled class if set through binding','should update aria-disabled if disabled',"'Expected aria-disabled to be set to ""false"" by default.'","'Expected aria-disabled to be set to ""true"" if link is disabled.'",'should update the tabindex if links are disabled','Expected first element to be keyboard focusable by default','Expected element to no longer be keyboard focusable if disabled.','should mark disabled links',tabLinkElement,tabNavBar,'should re-align the ink bar when the tabs list change','should re-align the ink bar when the tab labels change the width','label change','should hide the ink bar when all the links are inactive',tabLinks,'should update the focusIndex when a tab receives focus directly',thirdLink,'should hide the ink bar if no tabs are active on init',TabBarWithInactiveTabsOnInit,'.mdc-tab-indicator--active','should clean up the ripple event handlers on destroy',TabLinkWithNgIf,'.mat-mdc-tab-link',isDestroyed,'Expected no ripple to be created when ripple target is destroyed.',"'should select the proper tab, if the tabs come in after init'",SimpleTabNavBarTestApp,'should have the proper roles',tabBar,'.mat-mdc-tab-nav-bar','.mat-mdc-tab-nav-panel','should manage tabindex properly','should setup aria-controls properly','tab-panel','should not manage aria-current','should manage aria-selected properly','should activate a link when space is pressed','should be disabled on all tab links when they are disabled on the nav bar','Expected every tab link to have ripples enabled',disableRippleOnBar,'Expected every tab link to have ripples disabled','should have the `disableRipple` from the tab take precedence over the nav bar','Expected ripples to be enabled on first tab','Expected ripples to be disabled on first tab','should show up for tab link elements on mousedown','Expected one ripple to show up if user clicks on tab link.','should be able to disable ripples on an individual tab link',tabLinkDebug,disableRippleOnLink,'Expected no ripple to show up if ripples are disabled.','should be able to disable ripples through global options at runtime',tabLinkNativeElements,'with the ink bar fit to content',"`
    <nav mat-tab-nav-bar
         [disableRipple]=""disableRippleOnBar""
         [fitInkBarToContent]=""fitInkBarToContent""
         [tabPanel]=""tabPanel"">
      <a mat-tab-link
         *ngFor=""let tab of tabs; let index = index""
         [active]=""activeIndex === index""
         [disabled]=""disabled""
         (click)=""activeIndex = index""
         [disableRipple]=""disableRippleOnLink"">
        Tab link {{label}}
      </a>
    </nav>
    <mat-tab-nav-panel #tabPanel id=""tab-panel"">Tab panel</mat-tab-nav-panel>
  `",MatTabNav,MatTabLink,"`
    <nav mat-tab-nav-bar [tabPanel]=""tabPanel"">
      <a mat-tab-link *ngIf=""!isDestroyed"">Link</a>
    </nav>
    <mat-tab-nav-panel #tabPanel>Tab panel</mat-tab-nav-panel>
  `","`
    <nav mat-tab-nav-bar [tabPanel]=""tabPanel"">
      <a mat-tab-link *ngFor=""let tab of tabs"" [active]=""false"">Tab link {{label}}</a>
    </nav>
    <mat-tab-nav-panel #tabPanel>Tab panel</mat-tab-nav-panel>
  `",'should change tabs when the label is clicked',getLabelActiveStates,getBodyActiveStates,'should change focus with keyboard interaction',RIGHT,LEFT,getFocusStates,ElementArrayFinder,elementText,activeText,getClassStates,/ +/g,nativeMenubarItem,'should be a button type','should not set the aria-disabled attribute when false','aria.disabled','should coerce and set aria-disabled attribute',menubarItem,'should have cdk and material classes set','cdk-menu-item','mat-menubar-item','should open the attached menu on click','should have initial tab index set to -1',"`
    <mat-menubar>
      <mat-menubar-item [cdkMenuTriggerFor]=""sub"">File</mat-menubar-item>
    </mat-menubar>

    <ng-template #sub>
      <div #menu cdkMenu>
        <button cdkMenuItem></button>
      </div>
    </ng-template>
  `",SimpleMenuBarItem,MatMenuBarItem,'should have the menubar role',nativeMatMenubar,'menubar','should have the cdk and material classes set','cdk-menu-bar','mat-menubar','should have tabindex set to 0','should toggle focused items on left/right click',"`
    <mat-menubar>
      <mat-menubar-item id=""first""></mat-menubar-item>
      <mat-menubar-item id=""second""></mat-menubar-item>
    </mat-menubar>
  `",SimpleMatMenuBar,matMenubar,MatMenuBar,'moves focus to the next cell when focus leaves end of lens with matPopoverEditTabOut','matEditControlIgnoreSubmitUnlessValid = false',"'matEditControlClickOutBehavior = ""submit""'","'matEditControlClickOutBehavior = ""noop""'","'.mat-row, tr'","'.mat-cell, td'",DateTime,'should get month names in a czech locale','cs-CZ','leden','únor','březen','duben','květen','červen','červenec','srpen','září','říjen','listopad','prosinec','da-DK','ja-JP','should create Luxon date','should not create Luxon date with month over/under-flow','should not create Luxon date with date over/under-flow','L/d/yyyy',toISO,'d/L/yyyy','yyyy/d/L','LL/dd/yyyy',fromMillis,fromJSDate,'should parse DateTime','DD',/LuxonDateAdapter: Cannot format invalid date\./,'should count a Date as not a date instance','returned dates should have correct locale','should not change locale of DateTime passed as param',initialLocale,getNumDaysInMonth,toIso8601,'LuxonDateAdapter with MAT_DATE_LOCALE override',LuxonDateModule,'LuxonDateAdapter with LOCALE_ID override',LOCALE_ID,'fr-FR','should take the default locale id from the LOCALE_ID injection token','2 janv. 2017','LuxonDateAdapter with MAT_LUXON_DATE_ADAPTER_OPTIONS override',MAT_LUXON_DATE_ADAPTER_OPTIONS,useUtc,firstDayOfWeek,'use UTC','should create Luxon date in UTC',utc,'should create today in UTC',toUTC,'should parse dates to UTC','should return UTC date when deserializing','should get same day of week in a locale with a different first day of the week','fr','1月','2月','3月','4月','5月','6月','7月','8月','9月','10月','11月','12月','ar-AE','١','٢','٣','٤','٥','٦','٧','٨','٩','١٠','١١','١٢','١٣','١٤','١٥','١٦','١٧','١٨','١٩','٢٠','٢١','٢٢','٢٣','٢٤','٢٥','٢٦','٢٧','٢٨','٢٩','٣٠','٣١','Su','Mo','Tu','We','Th','Fr','Sa','٢٠١٧','should get first day of week in a different locale','should create Moment date','should not create Moment date with month over/under-flow','should not create Moment date with date over/under-flow','should create Moment date with low year number','should not create Moment date in utc format',isUTC,'MM/DD/YYYY','DD/MM/YYYY','should parse Moment date',parsedDate,'Expected string to have been fed through Date.parse',Moment,'02/01/2017','ll','2017年1月2日',/MomentDateAdapter: Cannot format invalid date\./,'should provide a method to return a valid date or null',getValidDateOrNull,'should clone the date when deserializing a Moment date','should deserialize dates with the correct locale','ja','setLocale should not modify global moment locale','returned Moments should have correct locale','should not change locale of Moments passed as params','MomentDateAdapter with MAT_DATE_LOCALE override',MomentDateAdapter,MomentDateModule,'MomentDateAdapter with LOCALE_ID override','MomentDateAdapter with MAT_MOMENT_DATE_ADAPTER_OPTIONS override',MAT_MOMENT_DATE_ADAPTER_OPTIONS,'should create Moment date in UTC',isUtc,'strict mode',strict,'should detect valid strings according to given format','D/M/YYYY',"'February 1, 2017'","'MMMM D, YYYY'",'should detect invalid strings according to given format',"'Jan 5, 2017'",'.mat-autocomplete-panel','mat-autocomplete-visible','mat-autocomplete-hidden','.mat-form-field','mat-active','.cdk-overlay-pane .mat-autocomplete-panel',272,464,96,'.mat-form-field-label','.mat-form-field-flex','mat-autocomplete-panel-above','should hide the label with a preselected form control value ','and a disabled floating label',AutocompleteWithFormsAndNonfloatingLabel,'mat-form-field-empty',"`
  <mat-form-field [floatLabel]=""floatLabel"" [style.width.px]=""width"">
    <mat-label *ngIf=""hasLabel"">State</mat-label>
    <input
      matInput
      [matAutocomplete]=""auto""
      [matAutocompletePosition]=""position""
      [matAutocompleteDisabled]=""autocompleteDisabled""
      [formControl]=""stateCtrl"">
  </mat-form-field>

  <mat-autocomplete [class]=""panelClass"" #auto=""matAutocomplete"" [displayWith]=""displayFn""
    [disableRipple]=""disableRipple"" [aria-label]=""ariaLabel"" [aria-labelledby]=""ariaLabelledby""
    (opened)=""openedSpy()"" (closed)=""closedSpy()"">
    <mat-option
      *ngFor=""let state of filteredStates""
      [value]=""state""
      [style.height.px]=""state.height""
      [disabled]=""state.disabled"">
      <span>{{ state.code }}: {{ state.name }}</span>
    </mat-option>
  </mat-autocomplete>
`",autocompleteHarness,'should load harness for autocomplete with value',ac,/Prefilled/,'prefilled','should be able to get value of the input','#prefilled','Prefilled value','should be able to clear the input','should be able to get the autocomplete panel options','should be able to get the autocomplete panel groups','#grouped',getOptionGroups,options2,'should be able to get filtered panel groups','should be able to get whether the autocomplete is open','should be able to select option',selectOption,'should throw when selecting an option that is not available','Texas',"/Could not find a mat-option matching {""text"":""Texas""}/","`
    <mat-autocomplete #autocomplete=""matAutocomplete"">
      <mat-option *ngFor=""let state of states"" [value]=""state.code"">{{ state.name }}</mat-option>
    </mat-autocomplete>

    <mat-autocomplete #groupedAutocomplete=""matAutocomplete"">
      <mat-optgroup *ngFor=""let group of stateGroups"" [label]=""group.name"">
        <mat-option
          *ngFor=""let state of group.states""
          [value]=""state.code"">{{ state.name }}</mat-option>
      </mat-optgroup>
    </mat-autocomplete>

    <input id=""plain"" [matAutocomplete]=""autocomplete"">
    <input id=""disabled"" disabled [matAutocomplete]=""autocomplete"">
    <textarea id=""textarea"" [matAutocomplete]=""autocomplete""></textarea>
    <input id=""prefilled"" [matAutocomplete]=""autocomplete"" value=""Prefilled value"">
    <input id=""grouped"" [matAutocomplete]=""groupedAutocomplete"">
  `",AutocompleteHarnessTest,stateGroups,'IA','Iowa','KY','Kentucky','LA','Louisiana','ME','Maine','RI','Rhode Island','SC','South Carolina','SD','South Dakota','TX','UT','Utah','WA','WI','Wisconsin','should update the badge based on attribute',badgeElement,badgeHostNativeElement,'.mat-badge-content',badgeContent,'should be able to pass in falsy values to the badge content','should treat null and undefined as empty strings in the badge content',badgeColor,'mat-badge-primary','mat-badge-accent','mat-badge-warn','should update the badge position on direction change','mat-badge-above','mat-badge-after',badgeDirection,'below before','mat-badge-below','mat-badge-before','should change visibility to hidden','mat-badge-hidden',badgeHidden,'should change badge sizes','mat-badge-medium',badgeSize,'small','mat-badge-small','large','mat-badge-large','should change badge overlap','mat-badge-overlap',badgeOverlap,'should toggle `aria-describedby` depending on whether the badge has a description',badgeDescription,'Describing a badge',describedById,'should toggle visibility based on whether the badge has content','should apply view encapsulation on create badge content',encapsulationAttr,Attr,'_ngcontent-','should toggle a class depending on the badge disabled state',badgeHostDebugElement,'mat-badge-disabled',badgeDisabled,'should clear any pre-existing badges',preExistingFixture,PreExistingBadge,'should not clear badge content from child elements',NestedBadge,'should expose the badge element',badgeInstance,getBadgeElement,'should throw if badge is not attached to an element node',BadgeOnTemplate,/matBadge must be attached to an element node/,Emulated,'span { color: hotpink; }',"`
    <span [matBadge]=""badgeContent""
          [matBadgeColor]=""badgeColor""
          [matBadgePosition]=""badgeDirection""
          [matBadgeHidden]=""badgeHidden""
          [matBadgeSize]=""badgeSize""
          [matBadgeOverlap]=""badgeOverlap""
          [matBadgeDescription]=""badgeDescription""
          [matBadgeDisabled]=""badgeDisabled"">
      home
    </span>
  `",BadgeTestApp,MatBadge,'above after','medium',"`
    <span matBadge=""Hello"">
      home
      <div class=""mat-badge-content"">Pre-existing badge</div>
    </span>
  `","`
    <span matBadge=""Hello"">
      home
      <span matBadge=""Hi"">Something</span>
    </span>
  `","`<ng-template matBadge=""1"">Notifications</ng-template>`",badgeHarness,'Simple badge','Changed simple badge','should load badge with exact text','should load badge with regex label match',/sized|disabled/i,'Sized badge','Disabled badge','should get whether a badge is hidden','#hidden','should get the position of a badge','#positioned','below after','above before','should get the size of a badge','#sized',"`
    <button id=""simple"" [matBadge]=""simpleContent"">Simple</button>
    <button
      id=""positioned""
      matBadge=""Positioned badge""
      [matBadgePosition]=""position"">Positioned</button>
    <button
      id=""sized""
      matBadge=""Sized badge""
      [matBadgeSize]=""size"">Sized</button>
    <button
      id=""overlapping""
      matBadge=""Overlapping badge""
      [matBadgeOverlap]=""overlap"">Overlapping</button>
    <button
      id=""hidden""
      matBadge=""Hidden badge""
      [matBadgeHidden]=""hidden"">Hidden</button>
    <button
      id=""disabled""
      matBadge=""Disabled badge""
      [matBadgeDisabled]=""disabled"">Disabled</button>
  `",BadgeHarnessTest,MatBadgePosition,MatBadgeSize,'should open a bottom sheet with a component',bottomSheetRef,'should open a bottom sheet with a template','should position the bottom sheet at the bottom center of the screen','mat-bottom-sheet-container','should emit when the bottom sheet opening animation is complete','afterOpened spy','should use the correct injector','should open a bottom sheet with a component and no ViewContainerRef','should apply the correct role to the container element','should close a bottom sheet via the escape key','should not close a bottom sheet via the escape key with a modifier','should dispose of bottom sheet if view container is destroyed while animating','should inject the correct direction in the instantiated component','should be able to set a custom panel class','should dismiss the bottom sheet when the service is destroyed','should open a new bottom sheet after dismissing a previous sheet',MatBottomSheetConfig,MatBottomSheetRef,TacoMsg,_animationState,`Expected the animation state would be 'visible'.`,'should remove past bottom sheets when opening new ones','should not throw when opening multiple bottom sheet in quick succession','should remove bottom sheet if another is shown while its still animating open','should emit after being dismissed','afterDismissed spy','should be able to pass a result back to the dismissed stream','should be able to pass data when dismissing through the service','should close the bottom sheet when going forwards/backwards in history','should close the bottom sheet when the location hash changes','should allow the consumer to disable closing a bottom sheet on navigation',BottomSheetWithInjectedData,'should focus the bottom sheet container by default','Expected bottom sheet container to be focused.','MAT-BOTTOM-SHEET-CONTAINER','should create a focus trap if autoFocus is disabled',focusTrapAnchors,'should focus the first tabbable element of the bottom sheet on open when',"'autoFocus is set to ""first-tabbable""'",'first-tabbable','should focus the bottom sheet element on open when autoFocus is set to ',"'""dialog"" (the default)'",'.mat-bottom-sheet-container',"'""first-heading""'",'should focus the first element that matches the css selector on open when ','autoFocus is set to a css selector','should re-focus trigger element when bottom sheet closes','bottom-sheet-trigger','Expected the focus to change when sheet was opened.','Expcted the focus not to have changed before the animation finishes.','Expected that the trigger was refocused after the sheet is closed.','Expected the trigger not to be refocused on close.','should not move focus if it was moved outside the sheet while animating','Expected the focus to change when the bottom sheet was opened.','should re-focus trigger element inside the shadow DOM when the bottom sheet is dismissed','MatBottomSheet with parent MatBottomSheet',parentBottomSheet,MatBottomSheet,childBottomSheet,ComponentThatProvidesMatBottomSheet,MatBottomSheetModule,bs,'should close bottom sheets opened by parent when opening from child','Expected a bottom sheet to be opened','Expected parent bottom sheet to be dismissed by opening from child','should close bottom sheets opened by child when opening from parent','Expected child bottom sheet to be dismissed by opening from parent','should not close parent bottom sheet when child is destroyed','Expected a bottom sheet to stay open','MatBottomSheet with default options',MAT_BOTTOM_SHEET_DEFAULT_OPTIONS,"`<ng-template let-data let-bottomSheetRef=""bottomSheetRef"">
      Cheese {{localValue}} {{data?.value}}{{setRef(bottomSheetRef)}}</ng-template>`",'<p>Taco</p>',"`
    <h1>This is the title</h1>
    <p>This is the paragraph</p>
  `",MAT_BOTTOM_SHEET_DATA,"`
    <ng-template>
      Hello from the bottom sheet!
    </ng-template>
  `",BottomSheetHarnessTest,'should show a button-toggle','mat-button-toggle',groupInstance,'should set the value','should register the on change callback','onChange callback','button toggle group with ngModel and change event',ButtonToggleGroupWithNgModel,groupDebugElement,buttonToggleDebugElements,MatButtonToggleGroup,buttonToggleInstances,MatButtonToggle,groupNgModel,innerButtons,'should update the model before firing change event','should set individual radio names based on the group name',buttonToggle,'new name','should update the name of radio DOM elements if the name of the group changes','Expected all buttons to have the initial name.',groupName,'changed-name','Expected all buttons to have the new name.','should check the corresponding button toggle on a group value change','should have the correct FormControl state initially and after interaction','should update the ngModel value when selecting a button toggle','should show a ripple on label click',groupElement,'should allow ripples to be disabled','should maintain the selected value when swapping out the list of toggles with one ','that still contains the value','should be able to pick up toggles that are not direct descendants',ButtonToggleGroupWithIndirectDescendantToggles,'.mat-button-toggle button',_buttonToggles,'MatButtonToggle without forms',MatButtonToggleModule,ButtonTogglesInsideButtonToggleGroup,ButtonTogglesInsideButtonToggleGroupMultiple,FalsyButtonTogglesInsideButtonToggleGroupMultiple,ButtonToggleGroupWithInitialValue,StandaloneButtonToggle,ButtonToggleWithAriaLabel,ButtonToggleWithAriaLabelledby,RepeatedButtonTogglesWithPreselectedValue,ButtonToggleWithTabindex,ButtonToggleWithStaticName,ButtonToggleWithStaticChecked,ButtonToggleWithStaticAriaAttributes,'inside of an exclusive selection group',groupNativeElement,buttonToggleNativeElements,buttonToggleLabelElements,'should set individual button toggle names based on the group name','should disable click interactions when the group is disabled',isGroupDisabled,'should set aria-disabled based on whether the group is disabled','should disable the underlying button when the group is disabled','should update the group value when one of the toggles changes','should propagate the value change back up via a two-way binding',groupValue,'should update the group and toggles when one of the button toggles is clicked','should check a button toggle upon interaction with underlying native radio button','should change the vertical state','mat-button-toggle-vertical','should emit a change event from button toggles','button-toggle change listener','should emit a change event from the button toggle group','button-toggle-group change listener','should update the group and button toggles when updating the group value','should deselect all of the checkboxes when the group value is cleared','should update the model if a selected toggle is removed',renderFirstToggle,'with initial value and change event','should not fire an initial change event','inside of a multiple selection group','should check a button toggle when clicked',nativeCheckboxLabel,'eggs','should allow for multiple toggles to be selected','flour','should check a button toggle upon interaction with underlying native checkbox',nativeCheckboxButton,'should deselect a button toggle when selected twice','should emit a change event for state changes','should throw when attempting to assign a non-array value',/Value must be an array/,'as standalone',buttonToggleDebugElement,buttonToggleNativeElement,buttonToggleLabelElement,buttonToggleInstance,buttonToggleButtonElement,'.mat-button-toggle-label-content','should toggle when clicked','should focus on underlying input element when focus() is called','should not assign a name to the underlying input if one is not passed in','should have correct aria-pressed attribute','aria-label handling ','should not set the aria-label attribute if none is provided',checkboxDebugElement,checkboxNativeElement,'should use the provided aria-label','Super effective','should clear the static aria from the host node','with provided aria-labelledby ','should use the provided aria-labelledby','some-id','should not assign aria-labelledby if none is provided','should forward the tabindex to the underlying button',"'should have role ""presentation""'",'.mat-button-toggle','should forward focus to the underlying button when the host is focused','should not throw on init when toggles are repeated and there is an initial value',toggleGroup,'custom-name','should maintain the selected state when the value and toggles are swapped out at ','the same time',possibleValues,'Seven','should select falsy button toggle value in multiple selection','should not throw if initial value is set during creation','mat-focus-indicator','should be able to pre-check a button toggle using a static checked binding',"`
  <mat-button-toggle-group [disabled]=""isGroupDisabled""
                           [vertical]=""isVertical""
                           [(value)]=""groupValue"">
    <mat-button-toggle value=""test1"" *ngIf=""renderFirstToggle"">Test1</mat-button-toggle>
    <mat-button-toggle value=""test2"">Test2</mat-button-toggle>
    <mat-button-toggle value=""test3"">Test3</mat-button-toggle>
  </mat-button-toggle-group>
  `",isVertical,"`
  <mat-button-toggle-group
    [name]=""groupName""
    [(ngModel)]=""modelValue""
    (change)=""lastEvent = $event"">
    <mat-button-toggle *ngFor=""let option of options"" [value]=""option.value""
                       [disableRipple]=""disableRipple"">
      {{option.label}}
    </mat-button-toggle>
  </mat-button-toggle-group>
  `",'group-name',MatButtonToggleChange,"`
  <mat-button-toggle-group [disabled]=""isGroupDisabled"" [vertical]=""isVertical"" multiple>
    <mat-button-toggle value=""eggs"">Eggs</mat-button-toggle>
    <mat-button-toggle value=""flour"">Flour</mat-button-toggle>
    <mat-button-toggle value=""sugar"">Sugar</mat-button-toggle>
  </mat-button-toggle-group>
  `","`
  <mat-button-toggle-group multiple [value]=""value"">
    <mat-button-toggle [value]=""0"">Eggs</mat-button-toggle>
    <mat-button-toggle [value]=""null"">Flour</mat-button-toggle>
    <mat-button-toggle [value]=""false"">Sugar</mat-button-toggle>
    <mat-button-toggle>Sugar</mat-button-toggle>
  </mat-button-toggle-group>
  `","`
  <mat-button-toggle>Yes</mat-button-toggle>
  `","`
  <mat-button-toggle-group (change)=""lastEvent = $event"" value=""red"">
    <mat-button-toggle value=""red"">Value Red</mat-button-toggle>
    <mat-button-toggle value=""green"">Value Green</mat-button-toggle>
  </mat-button-toggle-group>
  `","`
  <mat-button-toggle-group [formControl]=""control"">
    <mat-button-toggle value=""red"">Value Red</mat-button-toggle>
    <mat-button-toggle value=""green"">Value Green</mat-button-toggle>
    <mat-button-toggle value=""blue"">Value Blue</mat-button-toggle>
  </mat-button-toggle-group>
  `",ButtonToggleGroupWithFormControl,"`
    <mat-button-toggle-group [formControl]=""control"">
      <ng-container [ngSwitch]=""true"">
        <mat-button-toggle value=""red"">Value Red</mat-button-toggle>
        <mat-button-toggle value=""green"">Value Green</mat-button-toggle>
        <mat-button-toggle value=""blue"">Value Blue</mat-button-toggle>
      </ng-container>
    </mat-button-toggle-group>
  `","`<mat-button-toggle aria-label=""Super effective""></mat-button-toggle>`","`<mat-button-toggle aria-labelledby=""some-id""></mat-button-toggle>`","`
    <mat-button-toggle-group [(value)]=""value"">
      <mat-button-toggle *ngFor=""let toggle of possibleValues"" [value]=""toggle"">
        {{toggle}}
      </mat-button-toggle>
    </mat-button-toggle-group>
  `","`<mat-button-toggle tabindex=""3""></mat-button-toggle>`","`<mat-button-toggle name=""custom-name""></mat-button-toggle>`","`
    <mat-button-toggle-group>
      <mat-button-toggle value=""1"">One</mat-button-toggle>
      <mat-button-toggle value=""2"" checked>Two</mat-button-toggle>
    </mat-button-toggle-group>
  `","`
    <mat-button-toggle aria-label=""Toggle me"" aria-labelledby=""something""></mat-button-toggle>
  `",buttonToggleGroupHarness,'should get whether the group is vertical','should get whether the group appearance',"`
    <mat-button-toggle-group [disabled]=""disabled"" [vertical]=""vertical"" [appearance]=""appearance"">
      <mat-button-toggle value=""1"">One</mat-button-toggle>
      <mat-button-toggle value=""2"">Two</mat-button-toggle>
    </mat-button-toggle-group>
  `",ButtonToggleGroupHarnessTest,MatButtonToggleAppearance,'should load all button toggle harnesses',buttonToggleHarness,'should load a button toggle with exact label','should load a button toggle with regex label match',/^s/i,'should get the toggle checked state','should get the toggle disabled state','should get the toggle name','should get the toggle aria-label','First toggle','should get the toggle aria-labelledby',getAriaLabelledby,'second-label','should get the toggle label text','should get the toggle appearance','should focus the button toggle','should blur the button toggle','should toggle the button value','should check the button toggle','should uncheck the button toggle',uncheck,"`
      <mat-button-toggle
        name=""first-name""
        value=""first-value""
        aria-label=""First toggle""
        checked>First</mat-button-toggle>
      <mat-button-toggle
        [disabled]=""disabled""
        aria-labelledby=""second-label""
        appearance=""legacy"">Second</mat-button-toggle>
      <span id=""second-label"">Second toggle</span>
  `",ButtonToggleHarnessTest,attributeDebugElement,'should be able to focus button with a specific focus origin',buttonDebugEl,buttonInstance,'should not change focus origin if origin not specified',fabButtonInstance,miniFabButtonInstance,"`
    <button [tabIndex]=""tabIndex"" mat-button type=""button"" (click)=""increment()""
      [disabled]=""isDisabled"" [color]=""buttonColor"" [disableRipple]=""rippleDisabled"">
      Go
    </button>
    <a [tabIndex]=""tabIndex"" href=""http://www.google.com"" mat-button [disabled]=""isDisabled""
      [color]=""buttonColor"">
      Link
    </a>
    <button mat-fab>Fab Button</button>
    <button mat-mini-fab>Mini Fab Button</button>
  `",'can click button',disableToggle,'Disable buttons','#test-button',buttonHarness,'should load button with regex label match',/basic/i,'Basic anchor',disabledFlatButton,enabledFlatAnchor,/flat/i,enabledRaisedButton,disabledRaisedAnchor,/raised/i,'should get button text',secondButton,'Flat button','should focus and blur a button','should not click a disabled button','should be able to handle nested harnesses',homeBtn,'#home-icon',favBtn,'#favorite-icon',homeIcon,favIcon,"`
    <button id=""basic"" type=""button"" mat-button (click)=""clicked = true"">
      Basic button
    </button>
    <button id=""flat"" type=""button"" mat-flat-button disabled (click)=""clicked = true"">
      Flat button
    </button>
    <button id=""raised"" type=""button"" mat-raised-button>Raised button</button>
    <button id=""stroked"" type=""button"" mat-stroked-button>Stroked button</button>
    <button id=""home-icon"" type=""button"" mat-icon-button>
      <mat-icon>home</mat-icon>
    </button>
    <button id=""favorite-icon"" type=""button"" mat-icon-button>
      <mat-icon>favorite</mat-icon>
    </button>
    <button id=""fab"" type=""button"" mat-fab>Fab button</button>
    <button id=""mini-fab"" type=""button"" mat-mini-fab>Mini Fab button</button>

    <a id=""anchor-basic"" mat-button>Basic anchor</a>
    <a id=""anchor-flat"" mat-flat-button>Flat anchor</a>
    <a id=""anchor-raised"" mat-raised-button disabled>Raised anchor</a>
    <a id=""anchor-stroked"" mat-stroked-button>Stroked anchor</a>
    <a id=""anchor-icon"" mat-icon-button>Icon anchor</a>
    <a id=""anchor-fab"" mat-fab>Fab anchor</a>
    <a id=""anchor-mini-fab"" mat-mini-fab>Mini Fab anchor</a>
  `",ButtonHarnessTest,'should find all cards',cardHarness,'should find card with title','should find card with subtitle','Shiba InuDog Breed The Shiba Inu is the smallest of the six original and distinct spitz',"' breeds of dog from Japan. A small, agile dog that copes very well with mountainous'","' terrain, the Shiba Inu was originally bred for hunting. LIKESHAREWoof woof!'",'should get a harness loader for the card header',headerLoader,contentSelectors,MatCardSection,headerSubcomponents,DummyHarness,'should get a harness loader for the card content',contentLoader,contentSubcomponents,'should get a harness loader for the card actions',actionLoader,actionSubcomponents,'should get a harness loader for the card footer',footerLoader,footer,"`
      <mat-card></mat-card>
      <mat-card>
        <mat-card-header>
          <div mat-card-avatar></div>
          <mat-card-title>Shiba Inu</mat-card-title>
          <mat-card-subtitle>Dog Breed</mat-card-subtitle>
        </mat-card-header>
        <div mat-card-image></div>
        <mat-card-content>
          <p>
            The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from
            Japan. A small, agile dog that copes very well with mountainous terrain, the Shiba Inu
            was originally bred for hunting.
          </p>
        </mat-card-content>
        <mat-card-actions>
          <button mat-button>LIKE</button>
          <button mat-button>SHARE</button>
        </mat-card-actions>
        <mat-card-footer>
          <div>Woof woof!</div>
        </mat-card-footer>
      </mat-card>
  `",CardHarnessTest,"'div, p, button'",'should load all checkbox harnesses',checkboxHarness,'should load checkbox with exact label','should load checkbox with regex label match','should get indeterminate state',indeterminateCheckbox,enabledCheckbox,disabledCheckbox,'should get required state',requiredCheckbox,optionalCheckbox,'should get valid state','should get value','first-value','should get aria-label','First checkbox','should get aria-labelledby','should focus checkbox','should blur checkbox','should check checkbox','should uncheck checkbox','should not toggle disabled checkbox',"`
      <mat-checkbox
          [formControl]=""ctrl""
          required
          name=""first-name""
          value=""first-value""
          aria-label=""First checkbox"">
        First
      </mat-checkbox>
      <mat-checkbox indeterminate=""true"" [disabled]=""disabled"" aria-labelledby=""second-label"">
        Second
      </mat-checkbox>
      <span id=""second-label"">Second checkbox</span>
  `",CheckboxHarnessTest,'should propagate the dynamic `placeholder` value to the form field','add a chip',"""or don't""",chipListInstance,listElement,'.mat-chip-list','should not allow focus to escape when tabbing backwards','Expected tabindex to remain 0','mat-input-element','mat-chip-input',"`
    <mat-form-field>
      <mat-chip-list #chipList [required]=""required"">
        <mat-chip>Hello</mat-chip>
        <input [matChipInputFor]=""chipList""
                  [matChipInputAddOnBlur]=""addOnBlur""
                  (matChipInputTokenEnd)=""add($event)""
                  [placeholder]=""placeholder"" />
      </mat-chip-list>
    </mat-form-field>
  `",MatChipList,'should add the `mat-chip-list` class',chipListNativeElement,'mat-chip-list','should not have the aria-selected attribute when is not selectable','should preserve the disabled state of a chip if the list gets re-enabled',SelectedChipList,chipListDebugElement,'should not have aria-required when it has no role',setupStandardList,'should watch for chip focus','should be able to become focused when disabled','Expected list to not be focused.','Expected list to continue not to be focused','should remove the tabindex from the list if it is disabled','should not focus if chip list is not focused','should focus the list if the last focused item is removed','should move focus to the last chip when the focused chip was deleted inside a',StandardChipListWithAnimations,'mat-chip',lastNativeChip,HOME_EVENT,END_EVENT,_tabIndex,RIGHT_EVENT,'FormFieldChipList',setupInputList,'.mat-chip',chipRemoveDebugElements,ChipListWithRemove,MatChipRemove,'Expected the third chip to be removed.',BasicChipList,'should float placeholder if chip is selected','placeholder should be floating',firstChip,lastChip,disabledChip,'Expect chip list to have no initial value','should set the control to touched when the chip list is touched',nativeChipList,'should not set touched when a disabled chip list is touched',"""should set the control to dirty when the chip list's value changes in the DOM""",'.mat-form-field-required-marker',FalsyValueChipList,MultiSelectionChipList,ChipListInsideDynamicFormGroup,InputChipList,'Expect chip to not be selected',expectNoItemFocused,expectLastItemFocused,ChipListWithFormErrorMessages,chipListEl,'should display an error message when the list is touched and invalid','should hide the errors and show the hints once the chip list becomes valid','.mat-hint','.mat-error','should preselect chip as selected inside an OnPush component',PreselectedChipInsideOnPush,'Expected first chip to be selected.','mat-chip-selected','should not throw when accessing the selected value too early in single selection mode',StandardChipList,'should not throw when accessing the selected value too early in multi selection mode',FormFieldChipList,"`
    <mat-chip-list [tabIndex]=""tabIndex"" [selectable]=""selectable"">
      <mat-chip *ngFor=""let i of chips"" (select)=""chipSelect(i)"" (deselect)=""chipDeselect(i)"">
        {{name}} {{i + 1}}
      </mat-chip>
    </mat-chip-list>`","`
    <mat-form-field>
      <mat-label>Add a chip</mat-label>
      <mat-chip-list #chipList>
        <mat-chip *ngFor=""let chip of chips"" (removed)=""remove(chip)"">{{chip}}</mat-chip>
      </mat-chip-list>
      <input name=""test"" [matChipInputFor]=""chipList""/>
    </mat-form-field>
  `",'basic-chip-list',"`
    <mat-form-field>
      <mat-chip-list placeholder=""Food"" [formControl]=""control""
        [tabIndex]=""tabIndexOverride"" [selectable]=""selectable"">
        <mat-chip *ngFor=""let food of foods"" [value]=""food.value"" [disabled]=""food.disabled"">
          {{ food.viewValue }}
        </mat-chip>
      </mat-chip-list>
    </mat-form-field>
  `",'multi-selection-chip-list',"`
    <mat-form-field>
      <mat-chip-list [multiple]=""true"" placeholder=""Food"" [formControl]=""control""
        [required]=""isRequired""
        [tabIndex]=""tabIndexOverride"" [selectable]=""selectable"">
        <mat-chip *ngFor=""let food of foods"" [value]=""food.value"" [disabled]=""food.disabled"">
          {{ food.viewValue }}
        </mat-chip>
      </mat-chip-list>
    </mat-form-field>
  `",'input-chip-list',"`
    <mat-form-field>
      <mat-chip-list [multiple]=""true""
                    placeholder=""Food"" [formControl]=""control"" [required]=""isRequired"" #chipList1>
        <mat-chip *ngFor=""let food of foods"" [value]=""food.value"" (removed)=""remove(food)"">
          {{ food.viewValue }}
        </mat-chip>
      </mat-chip-list>

      <input placeholder=""New food...""
          [matChipInputFor]=""chipList1""
          [matChipInputSeparatorKeyCodes]=""separatorKeyCodes""
          [matChipInputAddOnBlur]=""addOnBlur""
          (matChipInputTokenEnd)=""add($event)""
      />
    </mat-form-field>
  `","`
    <mat-form-field>
      <mat-chip-list [formControl]=""control"">
        <mat-chip *ngFor=""let food of foods"" [value]=""food.value"">{{ food.viewValue }}</mat-chip>
      </mat-chip-list>
    </mat-form-field>
  `","`
    <mat-chip-list>
      <mat-chip *ngFor=""let food of foods"" [value]=""food.value"" [selected]=""food.selected"">
        {{ food.viewValue }}
      </mat-chip>
    </mat-chip-list>
  `","`
<form #form=""ngForm"" novalidate>
  <mat-form-field>
    <mat-chip-list [formControl]=""formControl"">
      <mat-chip *ngFor=""let food of foods"" [value]=""food.value"" [selected]=""food.selected"">
      {{food.viewValue}}
      </mat-chip>
    </mat-chip-list>
    <mat-hint>Please select a chip, or type to add a new chip</mat-hint>
    <mat-error>Should have value</mat-error>
  </mat-form-field>
</form>
  `","`
    <mat-chip-list>
      <mat-chip *ngFor=""let i of numbers"" (removed)=""remove(i)"">{{i}}</mat-chip>
    </mat-chip-list>`","`
    <mat-form-field>
      <mat-chip-list>
        <mat-chip [value]=""i"" (removed)=""removeChip($event)"" *ngFor=""let i of chips"">
          Chip {{i + 1}}
          <span matChipRemove>Remove</span>
        </mat-chip>
      </mat-chip-list>
    </mat-form-field>
  `","`
    <mat-form-field>
      <mat-chip-list [formControl]=""control"">
        <mat-chip>Pizza</mat-chip>
        <mat-chip>Pasta</mat-chip>
      </mat-chip-list>
    </mat-form-field>
  `","`
    <form [formGroup]=""form"">
      <mat-form-field>
        <mat-chip-list formControlName=""control"">
          <mat-chip>Pizza</mat-chip>
          <mat-chip>Pasta</mat-chip>
        </mat-chip-list>
      </mat-form-field>
    </form>
  `",'mat-chip-remove','span.mat-chip-remove','should emit (removed) on click','didRemove','should not remove if parent chip is disabled',"`
    <mat-chip
      [removable]=""removable""
      [disabled]=""disabled""
      (removed)=""didRemove()"">
      <button matChipRemove></button>
      <span matChipRemove></span>
    </mat-chip>
  `",'basic behaviors','should prevent the default click action when the chip is disabled',"`
    <mat-chip-list>
      <div *ngIf=""shouldShow"">
        <mat-chip [selectable]=""selectable"" [removable]=""removable""
                 [color]=""color"" [selected]=""selected"" [disabled]=""disabled""
                 (focus)=""chipFocus($event)"" (destroyed)=""chipDestroy($event)""
                 (selectionChange)=""chipSelectionChange($event)""
                 (removed)=""chipRemove($event)"" [value]=""value"">
          {{name}}
        </mat-chip>
      </div>
    </mat-chip-list>`","`<mat-basic-chip tabindex=""3"">Hello</mat-basic-chip>`","`<mat-basic-chip [tabIndex]=""tabindex"">Hello</mat-basic-chip>`",'should load the harnesses for a chip list',chipLists,chipListHarness,'should get whether a chip list is required','should get whether a chip list is in multi-selection mode','should get the chips in a chip list','should be able to get the input associated with a chip list',listboxHarness,'should be able to select chips based on a filter',/^Chip (2|4)$/,'Chip 4','should the load the harnesses for chips',chipHarness,'should get the text of a chip','Chip 3',chipOptionHarness,'should get the selected state of a chip','should the load the harnesses for chip inputs',chipInputHarness,'should get whether the chip input is disabled',inputDisabled,'should get whether the chip input is required',inputRequired,'should focus a chip input','should blur a chip input','should get the chip input placeholder','Enter a hobbit','should be able to set the chip input value','should be able to dispatch a separator key from the input harness',sendSeparatorKey,TestKey,'should get the chip remove button',formFieldChip,'should be able to trigger removal through the remove button',removeButton,chipRemoveHarness,'.mat-chip-with-avatar','.mat-chip-with-icon-avatar',iconHarness,"`
    <mat-chip-list
      [disabled]=""isDisabled""
      [required]=""isRequired""
      [multiple]=""isMultiple""
      [aria-orientation]=""orientation"">
      <mat-chip (removed)=""remove()"">Chip 1</mat-chip>
      <mat-chip (removed)=""remove()"">Chip 2 <span matChipRemove>remove_icon</span></mat-chip>
      <mat-chip
        disabled
        (removed)=""remove()"">
        Chip 3
        <span matChipTrailingIcon>trailing_icon</span>
      </mat-chip>
      <mat-chip class=""mat-chip-with-icon-avatar"" (removed)=""remove()"">
        <mat-icon matChipAvatar aria-label=""Coronavirus"" aria-hidden=""false"">coronavirus</mat-icon>
        Chip 4
      </mat-chip>
    </mat-chip-list>

    <mat-chip-list></mat-chip-list>

    <mat-form-field>
      <mat-chip-list #chipList required>
        <mat-chip (removed)=""remove()"">
          Frodo
          <button matChipRemove></button>
        </mat-chip>

        <mat-chip (removed)=""remove()"">
          Bilbo
          <button matChipRemove></button>
        </mat-chip>
      </mat-chip-list>

      <input
        placeholder=""Enter a hobbit""
        [matChipInputFor]=""chipList""
        [disabled]=""inputDisabled""
        [required]=""inputRequired""
        (matChipInputTokenEnd)=""add()""/>
    </mat-form-field>
  `",ChipsHarnessTest,'remove spy','add spy','should augment an existing class with a color property',classWithColor,mixinColor,TestClass,'Expected the mixed-into class to have a color property','Expected the mixed-into class to have an updated color property','should remove old color classes if new color is set','Expected the element to not have any classes at initialization',"'Expected the element to have the ""mat-primary"" class set'","'Expected the element to no longer have ""mat-primary"" set.'","'Expected the element to have the ""mat-accent"" class set'",'should allow having no color set','Expected the element to have no color class set.','should allow having a default color if specified',"'Expected the element to have the ""mat-accent"" class by default.'","'Expected the default color ""mat-accent"" to be set.'",'should allow for the default color to change after init',defaultColor,'should augment an existing class with a disableRipple property',classWithMixin,mixinDisableRipple,'Expected the mixed-into class to have a disable-ripple property','Expected the mixed-into class to have an updated disable-ripple property','should coerce values being passed to the disableRipple property','Expected disableRipple to be set to false initially','Expected disableRipple to be set to true if an empty string is set as value','should augment an existing class with a disabled property',EmptyClass,classWithDisabled,mixinDisabled,'Expected the mixed-into class to have a disabled property','Expected the mixed-into class to have an updated disabled property','should emit for subscriptions made before the directive was marked as initialized',_markInitialized,'should emit for subscriptions made after the directive was marked as initialized','should emit for multiple subscriptions made before and after marked as initialized',expectedNotificationCount,currentNotificationCount,onNotified,'should augment an existing class with a tabIndex property',mixinTabIndex,'Expected the mixed-into class to have a tabIndex property','Expected the mixed-into class to have an updated tabIndex property','should set tabIndex to `-1` if the disabled property is set to true','Expected tabIndex to be set to 0 initially','Expected tabIndex to be set to -1 if the disabled property is set to true','should allow having a custom default tabIndex value','Expected tabIndex to be set to 20 initially','Expected tabIndex to still support 0 as value','should allow for the default tabIndex to change after init',defaultTabIndex,'should get year name for low year numbers',createAndFormat,'99','2017年','should create Date','should create Date with low year number',getFullYear,'should format Date with low year number','1/1/50','1/1/99','1/1/100','should parse string','should format','should format with custom format','numeric',"'January 1, 2017'",'2017/1/1',/NativeDateAdapter: Cannot format invalid date\./,'should preserve time when cloning','should use UTC for formatting by default',1800,'Wed Jul 28 1993','1595204418000','should create dates from valid ISO strings','2017-01-01T00:00:00','2017-01-01T','should create an invalid date','should not throw when attempting to format a date with a year less than 1','should not throw when attempting to format a date with a year greater than 9999','NativeDateAdapter with MAT_DATE_LOCALE override',NativeDateAdapter,NativeDateModule,'søndag','mandag','tirsdag','onsdag','torsdag','fredag','lørdag','NativeDateAdapter with LOCALE_ID override','should cascade locale id from the LOCALE_ID injection token to MAT_DATE_LOCALE','sizes ripple to cover element',maxDistanceX,TARGET_WIDTH,maxDistanceY,TARGET_HEIGHT,expectedRadius,expectedLeft,expectedTop,pxStringToFloat,'creates ripple on mousedown','should launch ripples on touchstart',flushTransition,'should clear ripples if the touch sequence is cancelled','should launch multiple ripples for multi-touch',rippleElements,'should ignore synthetic mouse events after touchstart','should ignore fake mouse events from screen readers','removes ripple after timeout','should remove ripples after mouseup','creates ripples when manually triggered',rippleDirective,launch,'creates manual ripples with the default ripple config',centered,'cleans up the event handlers when the container gets destroyed',RippleContainerWithNgIf,'.mat-ripple','does not run events inside the NgZone','zone unstable callback',onUnstable,'should only persist the latest ripple on pointer down','when page is scrolled',pageScrollTop,pageScrollLeft,'create ripple with correct position',elementTop,elementLeft,'manual ripples',BasicRippleContainer,'should allow persistent ripple elements',rippleRef,persistent,fadeOut,'should remove ripples that are not done fading in',fadeOutAll,'Expected no ripples to be active after calling fadeOutAll.','should properly set ripple states',RippleState,FADING_IN,VISIBLE,FADING_OUT,'should allow setting a specific animation config for a ripple',enterDuration,exitDuration,'120ms','should allow passing only a configuration','global ripple options',rippleConfig,RippleGlobalOptions,extraImports,MAT_RIPPLE_GLOBAL_OPTIONS,'should work without having any binding set',RippleContainerWithoutBindings,'when disabled should not show any ripples on mousedown','when disabled should still allow manual ripples','should support changing the animation duration','100ms','150ms','should allow ripples to fade out immediately on pointer up',terminateOnPointerUp,'should not mutate the global options when NoopAnimationsModule is present','with disabled animations','should set the animation durations to zero','configuring behavior',controller,RippleContainerWithInputBindings,'sets ripple color',"'rgba(12, 34, 56, 0.8)'",'does not respond to events when disabled input is set','fades out non-persistent ripples when disabled input is set','fadeOutAllNonPersistent',fadeOutAllNonPersistent,'allows specifying custom trigger element',alternateTrigger,'.alternateTrigger','expands ripple from center if centered input is set','uses custom radius if set',customRadius,'should be able to specify animation config through binding',animationConfig,'edge cases','should handle forcibly disabled animations through CSS `transition: none`',RippleCssTransitionNone,'should handle forcibly disabled animations through CSS `transition-duration: 0ms`',RippleCssTransitionDurationZero,'should destroy the ripple if the transition is being canceled due to DOM removal',RippleWithDomRemovalOnClick,fadingRipple,'transitioncancel',"`
    <div id=""container"" #ripple=""matRipple"" matRipple
         style=""position: relative; width:300px; height:200px;"">
    </div>
  `",'ripple',"`
    <div id=""container"" style=""position: relative; width:300px; height:200px;""
      matRipple
      [matRippleTrigger]=""trigger""
      [matRippleCentered]=""centered""
      [matRippleRadius]=""radius""
      [matRippleDisabled]=""disabled""
      [matRippleAnimation]=""animationConfig""
      [matRippleColor]=""color"">
    </div>
    <div class=""alternateTrigger""></div>
  `",RippleAnimationConfig,"`<div id=""container"" #ripple=""matRipple"" matRipple></div>`","`<div id=""container"" matRipple *ngIf=""!isDestroyed""></div>`",`* { transition: none !important; }`,"`<div id=""container"" matRipple></div>`",`* { transition-duration: 0ms !important; }`,"`
    <div *ngIf=""show"" (click)=""show = false"" matRipple>
      Click to remove this element.
    </div>
  `",'should load all option group harnesses',optionGroupHarness,'should filter groups based on their text','Disabled group','should filter group label text by a pattern',/group/,'should get the group label text',texts,'Plain group','should get the group disabled state','should get the options inside the groups',optionTexts,'Option 1','Option 2',"`
    <mat-optgroup label=""Plain group"">
      <mat-option>Option 1</mat-option>
      <mat-option>Option 2</mat-option>
    </mat-optgroup>

    <mat-optgroup label=""Disabled group"" disabled>
      <mat-option>Disabled option 1</mat-option>
    </mat-optgroup>
  `",OptgroupHarnessTest,'should load all option harnesses',optionHarness,'should filter options by text','Disabled option','should filter options text by a pattern',/option/,'should filter options text by its selected state','should get the text of options','Plain option','should get whether an option is disabled','should get whether an option is selected','should get whether an option is active','should get whether an option is in multi-selection mode',OptionHarnessTest,"`
      <mat-option>Plain option</mat-option>
      <mat-option disabled>Disabled option</mat-option>
    `",MatOptionParentComponent,optionComponent,'should warn if color styles are duplicated',stderr,'write',transpile,"`
      $theme: mat-light-theme((
        color: (
          primary: $mat-red,
          accent: $mat-red,
        )
      ));

      @include angular-material-theme($theme);

      .dark-theme {
        @include angular-material-theme($theme);
      }
    `",expectWarning,/The same color styles are generated multiple times/,'should not warn if color styles and density are not duplicated',parsed,"`
      $theme: mat-light-theme((
        color: (
          primary: $mat-red,
          accent: $mat-red,
        )
      ));
      $theme2: mat-light-theme((
        color: (
          primary: $mat-red,
          accent: $mat-blue,
        )
      ));

      @include angular-material-theme($theme);

      .dark-theme {
        @include angular-material-color($theme2);
      }
    `",hasDensityStyles,'.dark-theme','should warn if default density styles are duplicated',"`
      @include angular-material-theme((color: null));

      .dark-theme {
        @include angular-material-theme((color: null));
      }
    `",/The same density styles are generated multiple times/,'should warn if density styles are duplicated',"`
      @include angular-material-theme((density: -1));

      .dark-theme {
        @include angular-material-theme((density: -1));
      }
    `",'should not warn if density styles are not duplicated',"`
      @include angular-material-theme((density: -1));

      .dark-theme {
        @include angular-material-theme((density: -2));
      }
    `",'should warn if typography styles are duplicated',"`
      $theme: (typography: mat-typography-config(), density: null);
      @include angular-material-theme($theme);

      .dark-theme {
        @include angular-material-theme($theme);
      }
    `",/The same typography styles are generated multiple times/,'should not warn if typography styles are not duplicated',"`
      @include angular-material-theme((
        typography: mat-typography-config(),
        density: null,
      ));

      .dark-theme {
        @include angular-material-theme((
          typography: mat-typography-config($font-family: ""sans-serif""),
          density: null,
        ));
      }
    `",'legacy API',"`
        $theme: mat-light-theme($mat-red, $mat-blue);
        @include angular-material-theme($theme);
        .dark-theme {
          @include angular-material-theme($theme);
        }
      `",'should only generate default density once',"`
        $light-theme: mat-light-theme($mat-red, $mat-blue);
        $dark-theme: mat-dark-theme($mat-red, $mat-blue);
        $third-theme: mat-dark-theme($mat-grey, $mat-blue);

        @include angular-material-theme($light-theme);

        .dark-theme {
          @include angular-material-theme($dark-theme);
        }

        .third-theme {
          @include angular-material-theme($third-theme);
        }
      `",'.third-theme','should always generate default density at root',"`
        $light-theme: mat-light-theme($mat-red, $mat-blue);

        .my-app-theme {
          @include angular-material-theme($light-theme);
        }
      `",'.my-app-theme','not warn if default density would be generated multiple times',"`
        $light-theme: mat-light-theme($mat-red, $mat-blue);
        $dark-theme: mat-dark-theme($mat-red, $mat-blue);

        @include angular-material-theme($light-theme);
        .dark-theme {
          @include angular-material-theme($dark-theme);
        }
      `",'should be possible to modify color configuration directly',"`
        $theme: mat-light-theme($mat-red, $mat-blue);

        // Updates the ""icon"" foreground color to ""canary"".
        $theme: map-merge($theme,
          (foreground: map-merge(map-get($theme, foreground), (icon: ""canary""))));

        @include angular-material-theme($theme);
      `","': ""canary""'",'should be possible to specify palettes by keyword',"`
        $light-theme: mat-light-theme(
          $primary: $mat-red,
          $accent: $mat-blue,
          $warn: $mat-red,
        );
        $dark-theme: mat-dark-theme(
          $primary: $mat-red,
          $accent: $mat-blue,
          $warn: $mat-red,
        );
      `",baseSelector,'partial','Expected CSS to be not empty.',knownDensitySelectors,missingDensitySelectors,baseSelectorRegex,`^${,} `,'rule','creates body',rowEls,labelEls,cellEls,'highlights today',todayCells,calendarBodyNativeElement,'.mat-calendar-body-today',todayCell,"'sets aria-current=""date"" on today'","'[aria-current=""date""] .mat-calendar-body-today'",'does not highlight today if today is not within the scope',todayValue,100000,"'does not set aria-current=""date"" on any cell if today is not '",'the scope','highlights selected',selectedCell,'.mat-calendar-body-selected','should set aria-pressed correctly',pressedCells,depressedCells,'Expected one cell to be marked as pressed.','Expected remaining cells to be marked as not pressed.','places label in first row if space is available',refreshElementLists,'first cell should be the label','mat-calendar-body-label','colspan','cell should be selected on click',todayElement,'today should be selected','mat-calendar-body-selected','should mark active date','mat-calendar-body-active','should set a class on even dates','even','.mat-focus-indicator','range calendar body',startClass,'mat-calendar-body-range-start',inRangeClass,'mat-calendar-body-in-range',endClass,'mat-calendar-body-range-end',comparisonStartClass,'mat-calendar-body-comparison-start',inComparisonClass,'mat-calendar-body-in-comparison-range',comparisonEndClass,'mat-calendar-body-comparison-end',bridgeStart,'mat-calendar-body-comparison-bridge-start',bridgeEnd,'mat-calendar-body-comparison-bridge-end',previewStartClass,'mat-calendar-body-preview-start',inPreviewClass,'mat-calendar-body-in-preview',previewEndClass,'mat-calendar-body-preview-end',RangeCalendarBody,'.mat-calendar-body-cell','should render a range','should render a comparison range',comparisonStart,comparisonEnd,'should be able to render two completely overlapping ranges','should mark a cell as a start bridge if it is the end of the main range ','and the start of the comparison','should not mark a cell as a start bridge if there is no end range value','should mark a cell as an end bridge if it is the start of the main range ','and the end of the comparison','should not mark a cell as an end bridge if there is no end range value','should be able to show a main range inside a comparison range','should be able to show a comparison range inside a main range','should be able to show a range that is larger than the calendar','should be able to show a comparison range that is larger than the calendar','should be able to show a range that starts before the beginning of the calendar','should be able to show a comparison range that starts before the beginning of the calendar','should be able to show a range that ends after the end of the calendar','should be able to show a comparison range that ends after the end of the calendar','should not to mark a date as both the start and end','should not mark a date as both the comparison start and end','should not mark a date as the range end if it comes before the start','should not mark a date as the comparison range end if it comes before the start','should not show a range if there is no start','should not show a comparison range if there is no start','should not show a comparison range if there is no end','should preview the selected range after the user clicks on a start and hovers away','should preview the selected range after the user selects a start and moves focus away','should not be able to extend the range before the start',"'should be able to show a range, starting before the beginning of the calendar, '",'while hovering','while moving focus','should remove the preview if the user moves their pointer away','should remove the preview if the user moves their focus away','should mark a cell as being identical to the comparison range',comparisonIdenticalCells,'.mat-calendar-body-comparison-identical',"`
    <table mat-calendar-body
          [label]=""label""
          [rows]=""rows""
          [todayValue]=""todayValue""
          [startValue]=""selectedValue""
          [endValue]=""selectedValue""
          [labelMinRequiredCells]=""labelMinRequiredCells""
          [numCols]=""numCols""
          [activeCell]=""10""
          (selectedValueChange)=""onSelect($event)"">
    </table>`",StandardCalendarBody,'Jan 2017',createCalendarCells,labelMinRequiredCells,numCols,MatCalendarUserEvent,"`
    <table mat-calendar-body
          [isRange]=""true""
          [rows]=""rows""
          [startValue]=""startValue""
          [endValue]=""endValue""
          [comparisonStart]=""comparisonStart""
          [comparisonEnd]=""comparisonEnd""
          [previewStart]=""previewStart""
          [previewEnd]=""previewEnd""
          (selectedValueChange)=""onSelect($event)""
          (previewChange)=""previewChanged($event)"">
    </table>`",previewStart,previewEnd,previewChanged,MatCalendarCell,compareValue,weeks,dayCounter,}-label`,'should be in month view with specified month active',calendarInstance,currentView,activeDate,'should toggle view when period clicked',periodButton,'multi-year',"""should emit viewChanged when view changed from 'month' to 'multi-year'""",viewChanged,"""should emit viewChanged when view changed from 'multi-year' to 'month'""","""should emit viewChanged when view changed from 'multi-year' to 'year'""",calendarElement,'.mat-calendar-body-active','year','should go to next and previous month','should go to previous and next year','should go to previous and next multi-year range',yearsPerPage,'should go back to month view after selecting year and month',yearCells,monthCells,'no date should be selected yet','should format the year in the period button using the date adapter','getYearName','FAKE_YEAR','should label and describe period button for assistive technology','span[id]','calendar with minDate only',CalendarWithMinMaxDate,MatCalendar,calendarDebugElement,'.mat-calendar-period-button','.mat-calendar-previous-button','.mat-calendar-next-button','should start the first page with minDate',2010,'2010 \u2013 2033','should disable the page before the one showing minDate','should enable the page after the one showing minDate','calendar with maxDate only','should end the last page with maxDate','1997 \u2013 2020','should disable the page after the one showing maxDate','should enable the page before the one showing maxDate','calendar with minDate and maxDate',1993,"`
    <mat-calendar
        [startAt]=""startDate""
        [(selected)]=""selected""
        (yearSelected)=""selectedYear=$event""
        (monthSelected)=""selectedMonth=$event"">
    </mat-calendar>`",StandardCalendar,selectedYear,selectedMonth,"`
    <mat-calendar
      [startAt]=""startAt""
      [minDate]=""minDate""
      [maxDate]=""maxDate"">
    </mat-calendar>
  `",startAt,'should select date in month view','should emit the selected month on cell clicked in year view',normalizedMonth,'should emit the selected year on cell clicked in multiyear view',normalizedYear,'should re-render when the i18n labels have changed',MatDatepickerIntl,switchToMultiYearViewLabel,'Go to multi-year view?',"'should set all buttons to be `type=""button""`'",invalidButtons,"'button:not([type=""button""])'",'should complete the stateChanges stream','a11y','calendar body',calendarBodyEl,'.mat-calendar-content','should initially set start date active','should make the calendar body focusable','should not move focus to the active cell on init',activeCell,'should move focus to the active cell when the view changes','year view','should return to month view on enter',tableBodyEl,'.mat-calendar-body','should return to month view on space','multi-year view','should go to year view on enter','should go to year view on space','should re-render the month view when the locale changes',monthView,'_init','bg-BG',_init,'should re-render the year view when the locale changes',yearView,'should re-render the multi-year view when the locale changes',multiYearView,'calendar with min and max date',CalendarWithMinMax,'should clamp startAt value below min date','should clamp startAt value above max date','should not go back past min date','previous button should not be disabled','previous button should be disabled','should not go forward past max date','next button should not be disabled','next button should be disabled','should re-render the month view when the minDate changes',NOV,'should not re-render the month view when the minDate changes to the same day at a different time','should re-render the month view when the maxDate changes','should re-render the year view when the minDate changes','should re-render the year view when the maxDate changes','should not re-render the year view when the maxDate changes to the same day at a different time','should re-render the multi-year view when the minDate changes','should re-render the multi-year view when the maxDate changes','should update the minDate in the child view if it changed after an interaction',dynamicFixture,CalendarWithSelectableMinDate,disabledClass,'mat-calendar-body-disabled','Expected dates up to the 10th to be disabled.','Expected dates after the 10th to be enabled.','Expected dates up to the 14th to be disabled.','Expected dates after the 14th to be enabled.','calendar with date filter',CalendarWithDateFilter,'should disable and prevent selection of filtered dates','should not allow selection of disabled date in month view','should allow entering month view at disabled month',"`
    <mat-calendar [startAt]=""startAt"" [minDate]=""minDate"" [maxDate]=""maxDate""></mat-calendar>
  `","`
    <mat-calendar [startAt]=""startDate"" [(selected)]=""selected"" [dateFilter]=""dateFilter"">
    </mat-calendar>
  `",dateFilter,"`
    <mat-calendar
      [startAt]=""startAt""
      (selectedChange)=""select($event)""
      [selected]=""selected""
      [minDate]=""selected"">
    </mat-calendar>
  `",JUL,'should mirror the input value from the start into the mirror element',StandardRangePicker,mirror,'.mat-date-range-input-mirror','Start date','should hide the mirror value from assistive technology','should be able to customize the separator',separator,'.mat-date-range-input-separator','–','should set the proper type on the input elements','should set the correct role on the range input',rangeInput,'.mat-date-range-input','should mark the entire range input as disabled if both inputs are disabled',controls,'should disable both inputs if the range is disabled',rangeDisabled,'should hide the placeholders once the start input has a value',hideClass,'mat-date-range-input-hide-placeholders','should point the label aria-owns to the id of the start input','should point the range input aria-labelledby to the form field label','should point the range input aria-labelledby to the form field hint element','should not set aria-labelledby if the form field does not have a label',RangePickerNoLabel,'should set aria-labelledby of the overlay to the form field label',rangePicker,popup,'.cdk-overlay-pane .mat-datepicker-content-container','should float the form field label when either input is focused',shouldLabelFloat,'should float the form field label when either input has a value','should consider the entire input as empty if both inputs are empty','should mark the range controls as invalid if the start value is after the end value',markAllAsTouched,matStartDateInvalid,matEndDateInvalid,'should pass the minimum date from the range input to the inner inputs',matDatepickerMin,'should pass the maximum date from the range input to the inner inputs',matDatepickerMax,'should pass the date filter function from the range input to the inner inputs',matDatepickerFilter,'should should revalidate when a new date filter function is assigned','should not dispatch the change event if a new filter function with the same result ','is assigned','should throw if there is no start input',RangePickerNoStart,'mat-date-range-input must contain a matStartDate input','should throw if there is no end input',RangePickerNoEnd,'mat-date-range-input must contain a matEndDate input','should focus the start input when clicking on the form field',formFieldContainer,'should focus the end input when clicking on the form field when start has a value','should revalidate if a validation field changes','should set the formatted date value as the input value','2/2/2020','should parse the value typed into an input to a date',expectedDate,'should set the min and max attributes on inputs based on the values from the wrapper','2020','should pass the range input value through to the calendar',rangeTexts,'.mat-calendar-body-range-start','.mat-calendar-body-in-range','.mat-calendar-body-range-end','should pass the comparison range through to the calendar','.mat-calendar-body-comparison-start','.mat-calendar-body-in-comparison-range','.mat-calendar-body-comparison-end','should preserve the preselected values when assigning through ngModel',RangePickerNgModel,'should preserve the values when assigning both together through ngModel',assignAndAssert,'should not be dirty on init when there is no value',startModel,endModel,'should not be dirty on init when there is a value','should mark the input as dirty once the user types in it','30/12/2020','12/12/2020','should mark both inputs as touched when the range picker is closed','should move focus to the start input when pressing backspace on an empty end input','should move not move focus when pressing backspace if the end input has a value','10/10/2020','should be able to get the input placeholder','Start date – End date','should emit to the stateChanges stream when typing a value into an input','should emit to the dateChange event only when typing in the relevant input',startSpy,'matStartDate spy',endSpy,'matEndDate spy',startSubscription,dateChange,endSubscription,'11/10/2020','12/10/2020','should emit to the dateChange event when setting the value programmatically','should not trigger validators if new date object for same date is set for `min`',RangePickerWithCustomValidator,CustomValidator,validator,validate,'should not trigger validators if new date object for same date is set for `max`',2120,'should not emit to `stateChanges` if new date object for same date is set for `min`','should not emit to `stateChanges` if new date object for same date is set for `max`','should be able to pass in a different error state matcher through an input',RangePickerErrorStateMatcher,'should only update model for input that changed',startDateModelChangeCount,endDateModelChangeCount,fromDate,toDate,'Start Date set once','End Date not set','Start Date unchanged (set once)','End Date set once',fromDate2,toDate2,'Start Date set twice','End Date set twice (nulled)','Start Date unchanged (set twice)','End date set three times',"`
    <mat-form-field hintLabel=""Pick between a start and an end"">
      <mat-label>Enter a date</mat-label>
      <mat-date-range-input
        [rangePicker]=""rangePicker""
        [formGroup]=""range""
        [disabled]=""rangeDisabled""
        [separator]=""separator""
        [min]=""minDate""
        [max]=""maxDate""
        [dateFilter]=""dateFilter""
        [comparisonStart]=""comparisonStart""
        [comparisonEnd]=""comparisonEnd"">
        <input #start formControlName=""start"" matStartDate placeholder=""Start date""/>
        <input #end formControlName=""end"" matEndDate placeholder=""End date""/>
      </mat-date-range-input>

      <mat-date-range-picker
        [startAt]=""startAt""
        #rangePicker></mat-date-range-picker>
    </mat-form-field>
  `",MatStartDate,MatEndDate,MatDateRangeInput,MatDateRangePicker,"`
    <mat-form-field>
      <mat-date-range-input [rangePicker]=""rangePicker"">
        <input matEndDate/>
      </mat-date-range-input>

      <mat-date-range-picker #rangePicker></mat-date-range-picker>
    </mat-form-field>
  `","`
    <mat-form-field>
      <mat-date-range-input [rangePicker]=""rangePicker"">
        <input matStartDate/>
      </mat-date-range-input>

      <mat-date-range-picker #rangePicker></mat-date-range-picker>
    </mat-form-field>
  `","`
    <mat-form-field>
      <mat-date-range-input [rangePicker]=""rangePicker"">
        <input matStartDate [(ngModel)]=""start""/>
        <input matEndDate [(ngModel)]=""end""/>
      </mat-date-range-input>

      <mat-date-range-picker #rangePicker></mat-date-range-picker>
    </mat-form-field>
  `",_start,aStart,_end,anEnd,"`
    <mat-form-field>
      <mat-date-range-input [rangePicker]=""rangePicker"">
        <input #start matStartDate/>
        <input #end matEndDate/>
      </mat-date-range-input>

      <mat-date-range-picker #rangePicker></mat-date-range-picker>
    </mat-form-field>
  `",'[customValidator]',NG_VALIDATORS,Validator,'validate spy',"`
    <mat-form-field>
      <mat-date-range-input [rangePicker]=""rangePicker"" [min]=""min"" [max]=""max"">
        <input matStartDate [(ngModel)]=""start"" customValidator/>
        <input matEndDate [(ngModel)]=""end"" customValidator/>
      </mat-date-range-input>

      <mat-date-range-picker #rangePicker></mat-date-range-picker>
    </mat-form-field>
  `","`
    <mat-form-field>
      <mat-date-range-input [rangePicker]=""rangePicker"">
        <input matStartDate [errorStateMatcher]=""matcher""/>
        <input matEndDate [errorStateMatcher]=""matcher""/>
      </mat-date-range-input>

      <mat-date-range-picker #rangePicker></mat-date-range-picker>
    </mat-form-field>
  `",'should render the actions inside calendar panel in popup mode',DatepickerWithActions,datepicker,'.mat-datepicker-content .mat-datepicker-actions','.cancel','.apply','should render the actions inside calendar panel in touch UI mode',touchUi,'should not assign the value or close the datepicker when a value is selected',onDateChange,'.mat-datepicker-content','should close without changing the value when clicking on the cancel button','should close while keeping the previous control value when clicking on cancel','should close and accept the value when clicking on the apply button','should revert to the default behavior if the actions are removed','.mat-datepicker-actions',renderActions,"`
    <mat-form-field>
      <mat-label>Pick a date</mat-label>
      <input
          #input
          matInput
          [matDatepicker]=""picker""
          [formControl]=""control""
          (dateChange)=""onDateChange()"">
      <mat-datepicker #picker [touchUi]=""touchUi"" [startAt]=""startAt"">
        <mat-datepicker-actions *ngIf=""renderActions"">
          <button mat-button class=""cancel"" matDatepickerCancel>Cancel</button>
          <button mat-raised-button class=""apply"" matDatepickerApply>Apply</button>
        </mat-datepicker-actions>
      </mat-datepicker>
    </mat-form-field>
  `",MatDatepicker,'dateChange spy','should initialize with correct value shown in input',SUPPORTS_INTL,'open non-touch should open popup','.cdk-overlay-pane.mat-datepicker-popup','touch should open dialog','.mat-datepicker-dialog','should not be able to open more than one dialog','should open datepicker if opened input is set to true','open in disabled mode should not open the calendar','disabled datepicker input should open the calendar if datepicker is enabled',datepickerInput,'close should close popup','should close the popup when pressing ESCAPE','Expected datepicker to be open.','Expected datepicker to be closed.','should not close the popup when pressing ESCAPE with a modifier key','Expected datepicker to stay open.','should set the proper role on the popup','.mat-datepicker-content-container',"'should set aria-labelledby to the one from the input, if not placed inside '",'a mat-form-field','test-label','close should close dialog','setting selected via click should update input and close calendar','setting selected via enter press should update input and close calendar','clicking the currently selected date should close the calendar ','without firing selectedChanged','selectionChanged spy',selectedSubscription,selectionChanged,currentDay,'mat-datepicker-content','pressing enter on the currently selected date should close the calendar without ','firing selectedChanged','startAt should fallback to input value','should attach popup to native input',attachToRef,getConnectedOverlayOrigin,'popup should be attached to native input','input should aria-owns calendar after opened in non-touch mode',ownedElementId,ownedElement,'mat-calendar','input should aria-owns calendar after opened in touch mode','should not throw when given wrong data type','should clear out the backdrop subscriptions on close','close event spy',closedStream,'should reset the datepicker when it is closed externally',StandardDatepicker,MatNativeDateModule,MAT_DATEPICKER_SCROLL_STRATEGY,'should close the datepicker using ALT + UP_ARROW','should open the datepicker using ALT + DOWN_ARROW','should not open for ALT + DOWN_ARROW on readonly input','readonly','should show the invisible close button on focus','.mat-datepicker-close-button','should close the overlay when clicking on the invisible close button','datepicker with too many inputs','should throw when multiple inputs registered',MultiInputDatepicker,'datepicker that is assigned to input at a later point','should not throw on ALT + DOWN_ARROW for input without datepicker',DelayedDatepicker,'should handle value changes when a datepicker is assigned after init',toSelect,MatDateSelectionModel,assignedDatepicker,'datepicker with no inputs',NoInputDatepicker,'should not throw when accessing disabled property','should throw when opened with no registered inputs','datepicker with startAt',DatepickerWithStartAt,'explicit startAt should override input value','datepicker with startView set to year',DatepickerWithStartViewYear,'should start at the specified view',firstCalendarCell,'Expected the calendar to be in year-view','JAN','should fire yearSelected when user selects calendar year in year view','onYearSelection',onYearSelection,'datepicker with startView set to multiyear',DatepickerWithStartViewMultiYear,'onMultiYearSelection','Expected the calendar to be in multi-year-view','2016','should fire yearSelected when user selects calendar year in multiyear view',onMultiYearSelection,'datepicker with ngModel',DatepickerWithNgModel,'should update datepicker when model changes','should update model when date is selected','should mark input dirty after input event','2001-01-01','should mark input dirty after date selected','should mark input dirty after invalid value is typed in','hello there','should not mark dirty after model change','should mark input touched on blur','ng-untouched','ng-touched','should mark input as touched when the datepicker is closed','should reformat the input value on blur','1/1/2001','should not reformat invalid dates on blur','very-valid-date','should mark input touched on calendar selection','datepicker with formControl',DatepickerWithFormControl,'should update datepicker when formControl changes','should update formControl when date is selected','should disable input when form control disabled','should disable toggle when form control disabled',datepickerToggle,'should not dispatch FormControl change event for invalid values on input when set ','to update on blur',updateOn,'10/10/2010','10/10/','10/10','should set the matDatepickerParse error when an invalid value is typed for the first time',hasError,'matDatepickerParse','Today','datepicker with mat-datepicker-toggle',DatepickerWithToggle,'should set `aria-haspopup` on the toggle button','should set a default `aria-label` on the toggle button','Open calendar','should be able to change the button `aria-label`','Toggle the datepicker','should open calendar when toggle clicked','should not open calendar when toggle clicked if datepicker is disabled','should not open calendar when toggle clicked if input is disabled','should set the `button` type on the trigger to prevent form submissions','should remove the underlying SVG icon from the tab order','should restore focus to the toggle after the calendar is closed',touchUI,'Expected toggle to be focused.','Expected calendar to be open.','Expected focus to be inside the calendar.','Expected focus to be restored to toggle.','should restore focus when placed inside a shadow root',DatepickerWithToggleInShadowDom,'Expected focus not to be restored to toggle.','should not override focus if it was moved inside the closed event in touchUI mode',focusTarget,'Expected input to be focused on init.','Expected input not to be focused while dialog is open.','Expected alternate focus target to be focused after closing.',openCalendarLabel,"'Open the calendar, perhaps?'",'should toggle the active state of the datepicker toggle','mat-datepicker-toggle','mat-datepicker-toggle-active','datepicker with custom mat-datepicker-toggle icon','should be able to override the mat-datepicker-toggle icon',DatepickerWithCustomIcon,'.mat-datepicker-toggle .custom-icon','Expected custom icon to be rendered.','.mat-datepicker-toggle mat-icon','Expected default icon to be removed.','datepicker with tabindex on mat-datepicker-toggle',DatepickerWithTabindexOnToggle,'.mat-datepicker-toggle button','should remove the tabindex from the mat-datepicker-toggle host','.mat-datepicker-toggle','datepicker inside mat-form-field',FormFieldDatepicker,'should float the placeholder when an invalid value is entered','totally-not-a-date','should pass the form field theme color to the overlay','should prefer the datepicker color over the form field one','datepicker with min and max dates and validation',DatepickerWithMinAndMaxValidation,revalidate,'should use min and max dates specified by the input',_getMinDate,_getMaxDate,'should mark invalid when value is before min',2009,'should mark invalid when value is after max','should not mark invalid when value equals min','should not mark invalid when value equals max','should not mark invalid when value is between min and max','should update validity when switching between null and invalid','abcdefg','should update validity when a value is assigned',validDate,updateSelection,'should update the calendar when the min/max dates change',getDisabledCells,'.mat-calendar-body-disabled',disabledCellCount,'datepicker with filter and validation',DatepickerWithFilterAndValidation,'should mark input invalid','should disable filtered calendar cells','should revalidate when a new function is assigned','should not dispatch the change event if a new function with the same result is assigned','datepicker with change and input events',DatepickerWithChangeAndInputEvents,'onInput','onDateChange','onDateInput','should fire input and dateInput events when user types input',onDateInput,'should fire change and dateChange events when user commits typed input','should fire dateChange and dateInput events when user selects calendar date','should not fire the dateInput event if the value has not changed','12/12/2012','should have updated the native input value when the dateChange event is emitted',valueDuringChangeEvent,'should not fire dateInput when typing an invalid value','with ISO 8601 strings as input',DatepickerWithISOStrings,'should coerce ISO strings',JUN,'with events',DatepickerWithEvents,'should dispatch an event when a datepicker is opened','should dispatch an event when a datepicker is closed','datepicker that opens on focus',DatepickerOpeningOnFocus,'should not reopen if the browser fires the focus event asynchronously',_focusedElementBeforeOpen,'datepicker directionality','should pass along the directionality to the popup','should update the popup direction if the directionality value changes','should pass along the directionality to the dialog in touch mode','with missing DateAdapter and MAT_DATE_FORMATS','should throw when created',/MatDatepicker: No provider found for .*/,'datepicker directives without a datepicker','should not throw on init if toggle does not have a datepicker',DatepickerToggleWithNoDatepicker,'should not set aria-haspopup if toggle does not have a datepicker','should not throw on init if input does not have a datepicker',DatepickerInputWithNoDatepicker,'should not set aria-haspopup if input does not have a datepicker','popup positioning','should be below and to the right when there is plenty of space','Expected popup to align to input bottom.','Expected popup to align to input left.','should be above and to the right when there is no space below','Expected popup to align to input top.','should be below and to the left when there is no space on the right','Expected popup to align to input right.','should be above and to the left when there is no space on the bottom','should be able to customize the calendar position along the X axis',xPosition,'should be able to customize the calendar position along the Y axis',yPosition,'internationalization',DatepickerWithi18n,'de-DE','should have the correct input value even when inverted date format',SEP,/0?1\.0?9\.2017/,'datepicker with custom header',DatepickerWithCustomHeader,CustomHeaderForDatepicker,'should instantiate a datepicker with a custom header','should find the standard header element','mat-calendar-header','should find the custom element','.custom-element',DatepickerInputWithCustomValidator,'panelClass input',PanelClassDatepicker,'should accept a single class','should accept multiple classes','should work with ngClass',actualClasses,'.mat-datepicker-content .mat-calendar',inputFixedWidthStyles,"`
  input {
    width: 100%;
    max-width: 150px;
    border: none;
    box-sizing: border-box;
  }
`","`
    <input [matDatepicker]=""d"" [value]=""date"" [min]=""min"" [max]=""max"">
    <mat-datepicker
      #d
      [touchUi]=""touch""
      [disabled]=""disabled""
      [opened]=""opened""
      [xPosition]=""xPosition""
      [yPosition]=""yPosition""></mat-datepicker>
  `",MatDatepickerInput,DatepickerDropdownPositionX,DatepickerDropdownPositionY,"`
    <input [matDatepicker]=""d""><input [matDatepicker]=""d""><mat-datepicker #d></mat-datepicker>
  `",`<mat-datepicker #d></mat-datepicker>`,"`
    <input [matDatepicker]=""d"" [value]=""date"">
    <mat-datepicker #d [startAt]=""startDate""></mat-datepicker>
  `","`
    <input [matDatepicker]=""d"" [value]=""date"">
    <mat-datepicker #d startView=""year"" (monthSelected)=""onYearSelection()""></mat-datepicker>
  `","`
    <input [matDatepicker]=""d"" [value]=""date"">
    <mat-datepicker #d startView=""multi-year""
        (yearSelected)=""onMultiYearSelection()""></mat-datepicker>
  `","`
    <input [(ngModel)]=""selected"" [matDatepicker]=""d"">
    <mat-datepicker #d></mat-datepicker>
  `","`
    <input [formControl]=""formControl"" [matDatepicker]=""d"">
    <mat-datepicker-toggle [for]=""d""></mat-datepicker-toggle>
    <mat-datepicker #d></mat-datepicker>
  `",MatDatepickerToggle,"`
    <input [matDatepicker]=""d"">
    <mat-datepicker-toggle [for]=""d"" [aria-label]=""ariaLabel""></mat-datepicker-toggle>
    <mat-datepicker #d [touchUi]=""touchUI"" [restoreFocus]=""restoreFocus""></mat-datepicker>
  `","`
    <input [matDatepicker]=""d"">
    <mat-datepicker-toggle [for]=""d"">
      <div class=""custom-icon"" matDatepickerToggleIcon></div>
    </mat-datepicker-toggle>
    <mat-datepicker #d></mat-datepicker>
  `","`
      <mat-form-field>
        <mat-label>Pick a date</mat-label>
        <input matInput [matDatepicker]=""d"">
        <mat-datepicker #d></mat-datepicker>
      </mat-form-field>
  `","`
    <input [matDatepicker]=""d"" [(ngModel)]=""date"" [min]=""minDate"" [max]=""maxDate"">
    <mat-datepicker-toggle [for]=""d""></mat-datepicker-toggle>
    <mat-datepicker #d></mat-datepicker>
  `","`
    <input [matDatepicker]=""d"" [(ngModel)]=""date"" [matDatepickerFilter]=""filter"">
    <mat-datepicker-toggle [for]=""d""></mat-datepicker-toggle>
    <mat-datepicker #d [touchUi]=""true""></mat-datepicker>
  `","`
    <input [matDatepicker]=""d"" (change)=""onChange()"" (input)=""onInput()""
           (dateChange)=""onDateChange()"" (dateInput)=""onDateInput()"">
    <mat-datepicker #d [touchUi]=""true""></mat-datepicker>
  `","`
    <input [matDatepicker]=""d"" [(ngModel)]=""date"">
    <mat-datepicker #d></mat-datepicker>
  `","`
    <input [matDatepicker]=""d"" [(ngModel)]=""value"" [min]=""min"" [max]=""max"">
    <mat-datepicker #d [startAt]=""startAt""></mat-datepicker>
  `","`
    <input [(ngModel)]=""selected"" [matDatepicker]=""d"">
    <mat-datepicker (opened)=""openedSpy()"" (closed)=""closedSpy()"" #d></mat-datepicker>
  `",'opened spy','closed spy',"`
    <input (focus)=""d.open()"" [matDatepicker]=""d"">
    <mat-datepicker #d=""matDatepicker""></mat-datepicker>
  `","`
    <input [matDatepicker]=""ch"">
    <mat-datepicker #ch [calendarHeaderComponent]=""customHeaderForDatePicker""></mat-datepicker>
  `",'ch',customHeaderForDatePicker,"`
    <div class=""custom-element"">Custom element</div>
    <mat-calendar-header></mat-calendar-header>
  `","`
    <input [matDatepicker]=""assignedDatepicker"" [value]=""date"">
    <mat-datepicker #d [touchUi]=""touch""></mat-datepicker>
  `","`
    <input [matDatepicker]=""d"">
    <mat-datepicker-toggle tabIndex=""7"" [for]=""d"" [disabled]=""disabled"">
      <div class=""custom-icon"" matDatepickerToggleIcon></div>
    </mat-datepicker-toggle>
    <mat-datepicker #d></mat-datepicker>
  `","`
    <mat-datepicker-toggle></mat-datepicker-toggle>
  `","`
    <input [matDatepicker]=""d"">
  `","`
    <input [matDatepicker]=""d"" [(ngModel)]=""value"" [min]=""min"" [max]=""max"" customValidator>
    <mat-datepicker #d></mat-datepicker>
  `","`
  <input [matDatepicker]=""d"" [value]=""date"">
  <mat-datepicker [panelClass]=""panelClass"" touchUi #d></mat-datepicker>
  `",'has correct month label',monthViewNativeElement,'.mat-calendar-body-label','has 31 days','shows selected date if in same month',selectedEl,'does not show selected date if in different month','fires selected change event on cell clicked','should set the correct role on the internal table node','should set the correct scope on the table headers',nonDividerHeaders,'.mat-calendar-table-header th:not(.mat-calendar-table-header-divider)',dividerHeader,'.mat-calendar-table-header-divider','scope',StandardMonthView,'should decrement date on left arrow press','should increment date on left arrow press in rtl','should increment date on right arrow press','should decrement date on right arrow press in rtl','should go up a row on up arrow press','should go down a row on down arrow press','should go to beginning of the month on home press','should go to end of the month on end press','should go back one month on page up press',PAGE_UP,'should go forward one month on page down press',PAGE_DOWN,'should select active date on enter','should select active date on space','should cancel the current range selection when pressing escape',DateRange,'.mat-calendar-body-preview-start','.mat-calendar-body-in-preview','.mat-calendar-body-preview-end','should not cancel the current range selection when pressing escape with a ','modifier key',rangeStarts,rangeMids,rangeEnds,'should clear the preview range when the user is done selecting','should not clear the range when pressing escape while there is no preview',getRangeElements,'Expected range to be present on init.','Expected range to be present after pressing the escape key.','should not fire the selected change event when clicking on an already-selected ','date while selecting a single date',selectedChangeSpy,'should fire the selected change event when clicking on an already-selected ','date while selecting a range',selectedDate,'should fire the _userSelection event with the correct value when clicking ','on a selected date',userSelectionSpy,'should go to month that is focused',jan11Cell,"'[data-mat-row=""1""][data-mat-col=""3""] button'",'should not call `.focus()` when the active date is focused',jan5Cell,"'[data-mat-row=""0""][data-mat-col=""4""] button'",focusSpy,'cellFocused','month view with date filter','should disable filtered dates',MonthViewWithDateFilter,'should not call the date filter function if the date is before the min date','dateFilter','should not call the date filter function if the date is after the max date','month view with custom date classes',MonthViewWithDateClass,dateClassSpy,'dateClass',monthViewDebugElement,MatMonthView,'should be able to add a custom class to some dates','should call dateClass with the correct view name','month view with custom date formats',MatCalendarBody,MAT_DATE_RANGE_SELECTION_STRATEGY,DefaultMatCalendarRangeStrategy,MAT_DATE_FORMATS,dateInput,monthLabel,monthYearLabel,dateA11yLabel,monthYearA11yLabel,"`
    <mat-month-view
      [(activeDate)]=""date""
      [(selected)]=""selected""
      (selectedChange)=""selectedChangeSpy($event)""
      (_userSelection)=""userSelectionSpy($event)""></mat-month-view>`",'selectedChange','userSelection',"`
    <mat-month-view
      [activeDate]=""activeDate""
      [dateFilter]=""dateFilter""
      [minDate]=""minDate""
      [maxDate]=""maxDate""></mat-month-view>`","`<mat-month-view [activeDate]=""activeDate"" [dateClass]=""dateClass""></mat-month-view>`",dateClass,'has correct number of years',multiYearViewNativeElement,'shows selected year if in same range','does not show selected year if in different range',2040,'2039','should emit the selected year on cell clicked',StandardMultiYearView,'should decrement year on left arrow press','should increment year on right arrow press',yearsPerRow,'should go to first year in current range on home press','should go to last year in current range on end press',2039,'should go to same index in previous year range page up press','should go to same index in next year range on page down press','should go to the year that is focused',year2022Cell,"'[data-mat-row=""1""][data-mat-col=""2""] button'",2022,year2017Cell,"'[data-mat-row=""0""][data-mat-col=""1""] button'",'multi year view with date filter','should disable years with no enabled days',MultiYearViewWithDateFilter,'multi year view with minDate only',MultiYearViewWithMinMaxDate,multiYearViewDebugElement,MatMultiYearView,'should begin first page with minDate',2014,'2014','multi year view with maxDate only','should end last page with maxDate','multi year view with minDate and maxDate',2006,'should disable dates before minDate','multi-year view with custom date classes',MultiYearViewWithDateClass,"`
    <mat-multi-year-view [(activeDate)]=""date"" [(selected)]=""selected""
                         (yearSelected)=""selectedYear=$event""></mat-multi-year-view>`","`
    <mat-multi-year-view
      [(activeDate)]=""activeDate""
      [dateFilter]=""dateFilter""
      [minDate]=""minDate""
      [maxDate]=""maxDate""></mat-multi-year-view>
    `","`
    <mat-multi-year-view [(activeDate)]=""activeDate"" [minDate]=""minDate"" [maxDate]=""maxDate"">
    </mat-multi-year-view>
    `","`
    <mat-multi-year-view [activeDate]=""activeDate"" [dateClass]=""dateClass""></mat-multi-year-view>
  `",'should load all calendar harnesses',calendars,calendarHarness,'should go to a different view',getCurrentView,CalendarView,changeView,MULTI_YEAR,'should get the current view label',getCurrentViewLabel,'AUG 2020','2016 – 2039','should go to the next page in the view','SEP 2020','should go to the previous page in the view',previous,'JUL 2020','should get all of the date cells inside the calendar','should get the text of a calendar cell','should be able to select a specific cell through the calendar',targetCell,selectCell,'should get the aria-label of a cell',"'August 1, 2020'","'August 16, 2020'","'August 31, 2020'",'should get the disabled state of a cell',calendarDate,'should select a cell','should get whether a cell is active','should get the state of the cell within the main range',allCells,initialStartStates,initialInRangeStates,initialEndStates,isRangeStart,isInRange,isRangeEnd,'should get the state of the cell within the comparison range',isComparisonRangeStart,isInComparisonRange,isComparisonRangeEnd,'should get the state of the cell within the preview range',isPreviewRangeStart,isInPreviewRange,isPreviewRangeEnd,'should filter cells by their text',/^3/,'should filter cells by their selected state',selectedCells,'should filter cells by their active state','should filter cells by their disabled state','should filter cells based on whether they are inside the comparison range',inComparisonRange,'should filter cells based on whether they are inside the preview range',inPreviewRange,"`
    <mat-calendar
      id=""single""
      [startAt]=""startAt""
      [minDate]=""minDate""
      [selected]=""singleValue""
      (selectedChange)=""singleValue = $event""></mat-calendar>

    <mat-calendar
      id=""range""
      [startAt]=""startAt""
      [minDate]=""minDate""
      [selected]=""rangeValue""
      [comparisonStart]=""comparisonStart""
      [comparisonEnd]=""comparisonEnd""
      (selectedChange)=""rangeChanged($event)""></mat-calendar>
  `",CalendarHarnessTest,singleValue,rangeValue,rangeChanged,'should load all date range input harnesses',dateRangeInputHarness,'should get whether the input is disabled','[basic]','should get the input separator',getSeparator,'should get the combined input value including the separator','1/1/2020 – 2/2/2020','should get harnesses for the inner inputs',getStartInput,getEndInput,startInputHarness,endInputHarness,'should be able to open and close a calendar in touch mode','should be able to get the harness for the associated calendar',getCalendar,'should get whether the inner inputs are disabled',subInputsDisabled,'should get whether the inner inputs are required',subInputsRequired,'should get the values of the inner inputs','should set the values of the inner inputs','should get the placeholders of the inner inputs','End date','should be able to change the inner input focused state','should get the minimum date of the inner inputs','should get the maximum date of the inner inputs','should dispatch the dateChange event when the inner input values have changed',startDateChangeCount,endDateChangeCount,"`
    <mat-date-range-input
      basic
      [disabled]=""disabled""
      [required]=""required""
      [min]=""minDate""
      [max]=""maxDate""
      [rangePicker]=""picker"">
      <input
        matStartDate
        [(ngModel)]=""startDate""
        (dateChange)=""startDateChangeCount = startDateChangeCount + 1""
        [disabled]=""subInputsDisabled""
        [required]=""subInputsRequired""
        placeholder=""Start date"">
      <input
        matEndDate
        [(ngModel)]=""endDate""
        (dateChange)=""endDateChangeCount = endDateChangeCount + 1""
        [disabled]=""subInputsDisabled""
        [required]=""subInputsRequired""
        placeholder=""End date"">
    </mat-date-range-input>
    <mat-date-range-picker #picker [touchUi]=""touchUi""></mat-date-range-picker>

    <mat-date-range-input no-range-picker>
      <input matStartDate>
      <input matEndDate>
    </mat-date-range-input>
  `",DateRangeInputHarnessTest,datepickerInputHarness,'should filter inputs based on their value',/2020/,'should filter inputs based on their placeholder',/^Type/,'#basic','should get the input value','should set the input value based on date adapter validation and formatting',validValues,invalidValues,'FORMATTED_VALUE','deserialize','getValidDateOrNull','should get the input placeholder','Type a date','should be able to change the input focused state','should get the maximum date of the input','should emit the `dateChange` event when the value is changed',dateChangeCount,"`
    <input
      id=""basic""
      matInput
      [matDatepicker]=""picker""
      (dateChange)=""dateChangeCount = dateChangeCount + 1""
      [(ngModel)]=""date""
      [min]=""minDate""
      [max]=""maxDate""
      [disabled]=""disabled""
      [required]=""required""
      placeholder=""Type a date"">
    <mat-datepicker #picker [touchUi]=""touchUi""></mat-datepicker>
    <input id=""no-datepicker"" matDatepicker>
  `",DatepickerInputHarnessTest,'should load all toggle harnesses',datepickerToggleHarness,'should get whether the toggle is disabled','should get whether the toggle has a calendar associated with it',"`
    <input [matDatepicker]=""picker"">
    <mat-datepicker-toggle id=""basic"" [for]=""picker"" [disabled]=""disabled""></mat-datepicker-toggle>
    <mat-datepicker #picker [touchUi]=""touchUi""></mat-datepicker>

    <mat-datepicker-toggle id=""no-calendar""></mat-datepicker-toggle>
  `",DatepickerToggleHarnessTest,'has correct year label',yearViewNativeElement,'has 12 months','shows selected month if in same year','MAR','does not show selected month if in different year','DEC','should emit the selected month on cell clicked','should allow selection of month with less days than current active date',_monthSelected,StandardYearView,'should decrement month on left arrow press','should increment month on left arrow press in rtl','should increment month on right arrow press','should decrement month on right arrow press in rtl',AUG,MAY,OCT,'should go to first month of the year on home press','should go to last month of the year on end press','should go back one year on page up press','should go forward one year on page down press','should go to date that is focused',juneCell,"'[data-mat-row=""1""][data-mat-col=""1""] button'",janCell,"'[data-mat-row=""0""][data-mat-col=""0""] button'",'year view with date filter','should disable months with no enabled days',YearViewWithDateFilter,'year view with custom date classes',YearViewWithDateClass,yearViewDebugElement,MatYearView,'should be able to add a custom class to some month cells',"`
    <mat-year-view [(activeDate)]=""date"" [(selected)]=""selected""
                   (monthSelected)=""selectedMonth=$event""></mat-year-view>`","`
    <mat-year-view
      [activeDate]=""activeDate""
      [dateFilter]=""dateFilter""
      [minDate]=""minDate""
      [maxDate]=""maxDate""></mat-year-view>`","`<mat-year-view [activeDate]=""activeDate"" [dateClass]=""dateClass""></mat-year-view>`",'should set the proper animation states',MatDialogContainer,_state,'exit','.mat-dialog-container',"'.mat-dialog-title[tabindex=""-1""]'",'Expected the trigger button to be focused via program','Expected action buttons to not have class mat-dialog-actions-align-center','mat-dialog-actions-align-center','Expected action buttons to have class mat-dialog-actions-align-end','mat-dialog-actions-align-end','MatDialog with a parent MatDialog','MatDialog with default options',enterAnimationDuration,exitAnimationDuration,'50ms','MatDialog with animations enabled',dialogHarness,'should be able to get id of dialog','should be able to get aria-label of dialog','should be able to get aria-labelledby of dialog','dialog-label',/-dialog-title-\d+/,'should be able to get aria-describedby of dialog','dialog-description',getAriaDescribedby,'should get the text content of each section',`I'm the dialog titleI'm the dialog contentCancelOk`,`I'm the dialog title`,getContentText,`I'm the dialog content`,getActionsText,`CancelOk`,"`
    <ng-template>
      <div matDialogTitle>I'm the dialog title</div>
      <div matDialogContent>I'm the dialog content</div>
      <div matDialogActions>
        <button>Cancel</button>
        <button>Ok</button>
      </div>
    </ng-template>
    `",DialogHarnessTest,dialogTmpl,MatDialogConfig,'should apply vertical class to vertical divider','mat-divider','mat-divider-vertical','should apply horizontal class to horizontal divider','mat-divider-horizontal','should apply inset class to inset divider',inset,'mat-divider-inset','should apply inset and vertical classes to vertical inset divider',"`<mat-divider [vertical]=""vertical"" [inset]=""inset""></mat-divider>`",MatDividerTestComponent,dividerHarness,"`
    <mat-divider></mat-divider>
    <mat-divider inset vertical></mat-divider>
  `",DividerHarnessTest,'.mat-expansion-panel',panelInstances,'mat-expanded','should expand or collapse all enabled items','should not expand or collapse disabled items','should not register nested panels to the same accordion',NestedPanel,innerPanel,outerPanel,'should update the expansion panel if hideToggle changed',AccordionWithHideToggle,MatExpansionPanel,'.mat-expansion-indicator','Expected the expansion indicator to be present.',hideToggle,'Expected the expansion indicator to be removed.','should update the expansion panel if togglePosition changed',AccordionWithTogglePosition,'.mat-expansion-toggle-indicator-after','Expected the expansion indicator to be positioned after.','.mat-expansion-toggle-indicator-before','Expected the expansion indicator to be positioned before.','should move focus to the next header when pressing the down arrow',headerElements,'mat-expansion-panel-header','should not move focus into nested accordions',NestedAccordions,firstInnerHeader,secondOuterHeader,'should move focus to the next header when pressing the up arrow','should skip disabled items when moving focus with the keyboard','should focus the first header when pressing the home key','should not handle the home key when it is pressed with a modifier',eventTarget,'should focus the last header when pressing the end key','should not handle the end key when it is pressed with a modifier',"`
  <mat-accordion [multi]=""multi"">
    <mat-expansion-panel *ngFor=""let i of [0, 1, 2, 3]"">
      <mat-expansion-panel-header>Summary {{i}}</mat-expansion-panel-header>
      <p>Content</p>
    </mat-expansion-panel>
  </mat-accordion>`",MatAccordion,MatExpansionPanelHeader,"`
  <mat-accordion>
    <mat-expansion-panel>
      <mat-expansion-panel-header>Summary 0</mat-expansion-panel-header>
      Content 0

      <mat-expansion-panel>
        <mat-expansion-panel-header #firstInnerHeader>Summary 0-0</mat-expansion-panel-header>
        Content 0-0
      </mat-expansion-panel>
    </mat-expansion-panel>

    <mat-expansion-panel>
      <mat-expansion-panel-header #secondOuterHeader>Summary 1</mat-expansion-panel-header>
      Content 1
    </mat-expansion-panel>
  </mat-accordion>`",'secondOuterHeader','firstInnerHeader',"`
  <mat-accordion>
    <mat-expansion-panel #outerPanel=""matExpansionPanel"">
      <mat-expansion-panel-header>Outer Panel</mat-expansion-panel-header>
      <mat-expansion-panel #innerPanel=""matExpansionPanel"">
        <mat-expansion-panel-header>Inner Panel</mat-expansion-panel-header>
        <p>Content</p>
      </mat-expansion-panel>
    </mat-expansion-panel>
  </mat-accordion>`",'outerPanel','innerPanel',"`
  <mat-accordion [hideToggle]=""hideToggle"">
    <mat-expansion-panel>
      <mat-expansion-panel-header>Header</mat-expansion-panel-header>
      <p>Content</p>
    </mat-expansion-panel>
  </mat-accordion>`","`
  <mat-accordion [togglePosition]=""togglePosition"">
    <mat-expansion-panel>
      <mat-expansion-panel-header>Header</mat-expansion-panel-header>
      <p>Content</p>
    </mat-expansion-panel>
  </mat-accordion>`",'should show an accordion','.mat-accordion','should show two panels','should hide contents of the expansion panel on click',panelHeader,'.mat-expansion-panel-header',panelContent,'.mat-expansion-panel-content','should emit events for expanding and collapsing',panelDescription,'.mat-expansion-panel-header mat-panel-description','Currently I am open','Currently I am closed','should expand and collapse the panel',PanelWithContent,headerEl,'should add strong focus indication','should be able to render panel content lazily',LazyPanelWithContent,'Expected content element to be empty.','Expected content to be rendered.','should render the content for a lazy-loaded panel that is opened on init',LazyPanelOpenOnLoad,'should not render lazy content from a child panel inside the parent',NestedLazyPanelWithContent,parentExpanded,parentContent,'.parent-panel .mat-expansion-panel-content','.child-panel .mat-expansion-panel-content','Parent content','Expected only parent content to be rendered.','Expected child content element to be empty.',childExpanded,'Child content','Expected child content element to be rendered.','emit correct events for change in panel expanded state',openCallback,closeCallback,'should create a unique panel id for each panel',fixtureOne,headerElOne,fixtureTwo,headerElTwo,panelIdOne,panelIdTwo,'should set `aria-labelledby` of the content to the header id',headerId,contentLabel,'should set the proper role on the content element','region','should toggle the panel when pressing SPACE on the header','should toggle the panel when pressing ENTER on the header','should not toggle if a modifier key is pressed','should not be able to focus content while closed','Expected button to start off focusable.','visibility','Expected button to no longer be focusable.','should restore focus to header if focused element is inside panel on close','Expected header to be focused.',headerInstance,'should not override the panel margin if it is not inside an accordion',PanelWithCustomMargin,'mat-expansion-panel',_hasSpacing,'should be able to hide the toggle','Expected indicator to be shown.','Expected indicator to be hidden.','should update the indicator rotation when the expanded state is toggled programmatically',arrow,'Expected no rotation.','rotate(0deg)','Expected 180 degree rotation.','should make sure accordion item runs ngOnDestroy when expansion panel is destroyed',PanelWithContentInNgIf,destroyedOk,expansionShown,'should support two-way binding of the `expanded` property',PanelWithTwoWayBinding,'should emit events for body expanding and collapsing animations',afterExpand,afterCollapse,'should be able to set the default options through the injection token',MatExpansionModule,MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,expandedHeight,collapsedHeight,'16px','should be able to set a custom tabindex on the header',PanelWithHeaderTabindex,'should toggle the aria-disabled attribute on the header','should toggle the expansion indicator','should not be able to toggle the panel via a user action if disabled','should be able to toggle a disabled expansion panel programmatically','should be able to toggle a disabled expansion panel programmatically via the ','open/close methods',panelInstance,'toggle method','should update the tabindex if the header becomes disabled',"`
  <mat-expansion-panel [expanded]=""expanded""
                      [hideToggle]=""hideToggle""
                      [disabled]=""disabled""
                      (opened)=""openCallback()""
                      (closed)=""closeCallback()"">
    <mat-expansion-panel-header>Panel Title</mat-expansion-panel-header>
    <p>Some content</p>
    <button>I am a button</button>
  </mat-expansion-panel>`",'openCallback','closeCallback',"`
  <div *ngIf=""expansionShown"">
    <mat-expansion-panel>
      <mat-expansion-panel-header>Panel Title</mat-expansion-panel-header>
    </mat-expansion-panel>
  </div>`","`mat-expansion-panel {
      margin: 13px 37px;
    }`","`
  <mat-expansion-panel [expanded]=""expanded"">
    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores officia, aliquam dicta
    corrupti maxime voluptate accusamus impedit atque incidunt pariatur.
  </mat-expansion-panel>`","`
  <mat-expansion-panel [expanded]=""expanded"">
    <mat-expansion-panel-header>Panel Title</mat-expansion-panel-header>

    <ng-template matExpansionPanelContent>
      <p>Some content</p>
      <button>I am a button</button>
    </ng-template>
  </mat-expansion-panel>`","`
  <mat-expansion-panel [expanded]=""true"">
    <mat-expansion-panel-header>Panel Title</mat-expansion-panel-header>

    <ng-template matExpansionPanelContent>
      <p>Some content</p>
    </ng-template>
  </mat-expansion-panel>`","`
  <mat-expansion-panel [(expanded)]=""expanded"">
    <mat-expansion-panel-header>Panel Title</mat-expansion-panel-header>
  </mat-expansion-panel>`","`
  <mat-expansion-panel>
    <mat-expansion-panel-header tabindex=""7"">Panel Title</mat-expansion-panel-header>
  </mat-expansion-panel>`","`
    <mat-expansion-panel class=""parent-panel"" [expanded]=""parentExpanded"">
      Parent content

      <mat-expansion-panel class=""child-panel"" [expanded]=""childExpanded"">
        <ng-template matExpansionPanelContent>Child content</ng-template>
      </mat-expansion-panel>
    </mat-expansion-panel>
  `",accordionHarness,'should be able to load an accordion by selector','#accordion2',expansionPanelHarness,'should be able to load expansion panel by title matching regex',/Panel#2/,'Title of Panel#2','should be able to load expansion panel by title matching exact text','Standalone Panel Title','should be able to load expansion panel without title','should be able to load expansion panel by description matching regex','Description of Panel#2','should be able to load expansion panel by description matching exact text','Description of Panel#1','should be able to load expansion panel without description','should be able to load expanded panels','should be able to load collapsed panels','Title of Panel#1','Accordion #2 - Content','Disabled Panel Title','should be able to load expansion panel by content matching regex',/Accordion #2/,'should be able to load expansion panel by content matching exact string','Content of Panel#2','should be able to load expansion panels based on disabled state','should be able to get expansion state of panel',/Panel#1/,panel1Expanded,'should be able to get title of panel',panel1Title,'new title','should be able to get description of panel',panel1Description,'new description','should be able to get disabled state of panel','#disabledPanel','should be able to expand a panel','should be able to collapse a panel','Content of Panel#1',panel1Content,'should be able to get harness loader for content of panel','#standalonePanel',matchedHarnesses,TestContentHarness,'Part of expansion panel','should be able to focus expansion panel',getActiveElementTag,'should be able to blur expansion panel','should be able to check if expansion panel has toggle indicator',standalonePanel,expansionPanels,toggleIndicatorChecks,hasToggleIndicator,hideToggleIndicators,'should be able to get toggle indicator position of panels',togglePositions,getToggleIndicatorPosition,toggleIndicatorsPosition,'should be able to get expansion panels of accordion with filter','should be able to check if accordion has multi panel support enabled',isMulti,multiMode,"`
    <mat-accordion id=""accordion1"" [hideToggle]=""hideToggleIndicators""
                   [togglePosition]=""toggleIndicatorsPosition""
                   [multi]=""multiMode"">
      <mat-expansion-panel [expanded]=""panel1Expanded"" id=""panel1"">
        <mat-expansion-panel-header>
          <mat-panel-title>{{panel1Title}}</mat-panel-title>
          <mat-panel-description>{{panel1Description}}</mat-panel-description>
        </mat-expansion-panel-header>
        {{panel1Content}}
      </mat-expansion-panel>
      <mat-expansion-panel expanded>
        <mat-expansion-panel-header>
          <mat-panel-title>
            Title of Panel#2
          </mat-panel-title>
          <mat-panel-description>
            Description of Panel#2
          </mat-panel-description>
        </mat-expansion-panel-header>
        Content of Panel#2
      </mat-expansion-panel>
    </mat-accordion>

    <mat-accordion id=""accordion2"">
      <mat-expansion-panel>
        <mat-expansion-panel-header>
          Accordion #2 - Header
        </mat-expansion-panel-header>
        <p>Accordion #2 - Content</p>
      </mat-expansion-panel>
    </mat-accordion>

    <mat-expansion-panel id=""standalonePanel"" expanded
                         [hideToggle]=""hideToggleIndicators""
                         [togglePosition]=""toggleIndicatorsPosition"">
      <mat-expansion-panel-header>
        <mat-panel-title>Standalone Panel Title</mat-panel-title>
      </mat-expansion-panel-header>
      <div>
        <span>Standalone Panel Body</span>
        <div class=""test-content-harness"">Part of expansion panel</div>
      </div>
    </mat-expansion-panel>

    <mat-expansion-panel id=""disabledPanel"" [disabled]=""isDisabled"">
      <mat-expansion-panel-header>
        <mat-panel-title>Disabled Panel Title</mat-panel-title>
      </mat-expansion-panel-header>
    </mat-expansion-panel>

    <div class=""test-content-harness"">Outside of expansion panel</div>
  `",ExpansionHarnessTestComponent,MatAccordionTogglePosition,'.test-content-harness',formFieldHarness,'should be able to load form-field that matches specific selector',formFieldMatches,'#first-form-field','should be able to get appearance of form-field',isMdcImplementation,inputHarness,selectHarness,'should be able to get custom control of form-field',CustomControlHarness,'should be able to get custom control of form-field using a predicate','should be able to check whether form-field has label','should be able to check whether label is floating',isLabelFloating,'should be able to check whether form-field is disabled','should be able to check whether form-field is auto-filled',autofillTriggerEvent,createFakeEvent,'#first-form-field input','should be able to get theme color of form-field',getThemeColor,'should be able to get label of form-field','With placeholder','autocomplete_label','should be able to get error messages of form-field','#with-errors input','Error 1','Error 2','should be able to get hint messages of form-field','Hint 1','Hint 2','should be able to get the prefix text of a form-field',prefixTexts,getPrefixText,'prefix_textprefix_text_2','should be able to get the suffix text of a form-field',suffixTexts,getSuffixText,'suffix_text','should be able to check if form field has been touched',isControlTouched,'should be able to check if form field is dirty',isControlDirty,'should be able to check if form field is pending async validation',isControlPending,setupAsyncValidator,"`
    <mat-form-field id=""first-form-field"" [floatLabel]=""shouldLabelFloat"">
      <span matPrefix *ngIf=""!isMdc"">prefix_text</span>
      <span matPrefix *ngIf=""!isMdc"">prefix_text_2</span>
      <span matTextPrefix *ngIf=""isMdc"">prefix_text</span>
      <span matTextPrefix *ngIf=""isMdc"">prefix_text_2</span>
      <input matInput value=""Sushi"" name=""favorite-food"" placeholder=""With placeholder""
             [disabled]=""isDisabled"">
      <span matSuffix *ngIf=""!isMdc"">suffix_text</span>
      <span matTextSuffix *ngIf=""isMdc"">suffix_text</span>
    </mat-form-field>

    <mat-form-field appearance=""standard"" color=""warn"" id=""with-errors"">
      <span class=""custom-control"">Custom control harness</span>
      <input matInput [formControl]=""requiredControl"">

      <mat-error>Error 1</mat-error>
      <mat-error>Error 2</mat-error>
      <mat-hint align=""start"">Hint 1</mat-hint>
      <mat-hint align=""end"">Hint 2</mat-hint>
    </mat-form-field>

    <mat-form-field appearance=""fill"" color=""accent"">
      <mat-label>Label</mat-label>
      <mat-select [disabled]=""isDisabled"">
        <mat-option>First</mat-option>
      </mat-select>
    </mat-form-field>

    <mat-form-field floatLabel=""always"" appearance=""outline"" color=""primary"">
      <mat-label>autocomplete_label</mat-label>
      <input type=""text"" matInput [matAutocomplete]=""auto"">
    </mat-form-field>

    <mat-autocomplete #auto=""matAutocomplete"">
      <mat-option>autocomplete_option</mat-option>
    </mat-autocomplete>

    <mat-form-field id=""last-form-field"" [floatLabel]=""shouldLabelFloat"">
      <mat-label>Label</mat-label>
      <input matInput>
    </mat-form-field>

    <mat-form-field>
      <mat-label>Date</mat-label>
      <input matInput [matDatepicker]=""datepicker"">
      <mat-datepicker #datepicker></mat-datepicker>
    </mat-form-field>

    <mat-form-field>
      <mat-label>Date range</mat-label>
      <mat-date-range-input [rangePicker]=""rangePicker"">
        <input matStartDate placeholder=""Start date""/>
        <input matEndDate placeholder=""End date""/>
      </mat-date-range-input>
      <mat-date-range-picker #rangePicker></mat-date-range-picker>
    </mat-form-field>
  `",FormFieldHarnessTest,'Initial value',isMdc,setValidators,setAsyncValidators,'.custom-control','should render a grid list container','mat-grid-list','should render list items inside the grid list container','mat-grid-list mat-grid-tile','should throw error if cols is not defined',GridListWithoutCols,/must pass in number of columns/,'should throw error if rowHeight ratio is invalid',GridListWithInvalidRowHeightRatio,/invalid ratio given for row-height/,'should throw error if tile colspan is wider than total cols',GridListWithTooWideColspan,/tile with colspan 5 is wider than grid/,'should not throw when setting the `rowHeight` programmatically before init',GridListWithUnspecifiedRowHeight,MatGridList,rowHeight,12.3,32.1,'should preserve value when zero is set as row height','should set the columns to zero if a negative number is passed in',GridListWithDynamicCols,'should default to 1:1 row height if undefined ',tile,MatGridTile,inlineStyles,getDimension,'should use a ratio row height if passed in',GirdListWithRowHeightRatio,'4:1','2:1',"'should divide row height evenly in ""fit"" mode'",GridListWithFitRowHeightMode,totalHeight,149.5,99.5,'should use the fixed row height if passed in',GridListWithFixedRowHeightMode,'should default to pixels if row height units are missing',GridListWithUnitlessFixedRowHeight,'should default gutter size to 1px',GridListWithUnspecifiedGutterSize,'mat-grid-tile',getComputedLeft,100.5,'should be able to set the gutter size to zero',gutterSize,'should lay out the tiles correctly for a nested grid list',NestedGridList,innerTiles,'mat-grid-tile mat-grid-list mat-grid-tile','should set the gutter size if passed',GridListWithGutterSize,102,'should use pixels if gutter units are missing',GridListWithUnitlessGutterSize,'should allow alternate units for the gutter size','should set the correct list height in ratio mode',GridListWithRatioHeightAndMulipleRows,paddingBottom,201,'should set the correct list height in fixed mode',GridListWithFixRowHeightAndMultipleRows,'should allow adjustment of tile colspan',GridListWithColspanBinding,199.5,299.75,'should allow adjustment of tile rowspan',GridListWithRowspanBinding,rowspan,302,'should lay out tiles correctly for a complex layout',GridListWithComplexLayout,99.25,300.75,100.25,'should lay out tiles correctly',GridListWithLayout,'should lay out tiles correctly when single cell to be placed at the beginning',GridListWithSingleCellAtBeginning,'should add not add any classes to footers without lines',GridListWithFootersWithoutLines,MatGridTileText,'mat-2-line','should add class to footers with two lines',GridListWithFooterContainingTwoLines,'should add class to footers with two indirect descendant lines',GridListWithFooterContainingTwoIndirectDescendantLines,'should not use calc() that evaluates to 0',firstTile,'should reset the old styles when switching to a new tile styler',listInlineStyles,tileInlineStyles,'Expected tile padding to be reset.','Expected list padding to be reset.','should ensure that all tiles are inside the grid when there are no matching gaps',GridListWithoutMatchingGap,'Expected none of the tiles to have a negative `left`','should default to LTR if empty directionality is given',GridListWithEmptyDirectionality,'should set `right` styles for RTL',GridListWithRtl,'should lay out the tiles if they are not direct descendants of the list',GridListWithIndirectTileDescendants,'should throw if an invalid value is set as the `rowHeight`','350px;',/^Invalid value/,dimension,`Unknown dimension ${,bodyRect,'<mat-grid-list></mat-grid-list>',"'<mat-grid-list cols=""4"" rowHeight=""4:3:2""></mat-grid-list>'","'<mat-grid-list cols=""4""><mat-grid-tile colspan=""5""></mat-grid-tile></mat-grid-list>'","'<mat-grid-list [cols]=""cols""></mat-grid-list>'","`
    <div style=""width:200px"">
      <mat-grid-list cols=""1"">
        <mat-grid-tile></mat-grid-tile>
      </mat-grid-list>
    </div>`","`
    <div style=""width:400px"">
      <mat-grid-list cols=""1"" [rowHeight]=""rowHeight"">
        <mat-grid-tile></mat-grid-tile>
      </mat-grid-list>
    </div>`","`
    <mat-grid-list cols=""1"" rowHeight=""fit"" [style.height]=""totalHeight"">
      <mat-grid-tile></mat-grid-tile>
      <mat-grid-tile></mat-grid-tile>
    </mat-grid-list>`","`
    <mat-grid-list cols=""4"" [rowHeight]=""rowHeight"">
      <mat-grid-tile></mat-grid-tile>
    </mat-grid-list>`","`
    <mat-grid-list cols=""4"" rowHeight=""100"">
      <mat-grid-tile></mat-grid-tile>
    </mat-grid-list>`","`
    <div style=""width:200px"">
      <mat-grid-list cols=""2"" rowHeight=""100px"">
        <mat-grid-tile></mat-grid-tile>
        <mat-grid-tile></mat-grid-tile>
        <mat-grid-tile></mat-grid-tile>
      </mat-grid-list>
    </div>`","`
    <div style=""width:200px"">
      <mat-grid-list cols=""2"" gutterSize=""2px"" rowHeight=""100px"">
        <mat-grid-tile></mat-grid-tile>
        <mat-grid-tile></mat-grid-tile>
        <mat-grid-tile></mat-grid-tile>
      </mat-grid-list>
    </div>`","`
    <div style=""width:200px"">
      <mat-grid-list cols=""2"" gutterSize=""2"" rowHeight=""100px"">
        <mat-grid-tile></mat-grid-tile>
        <mat-grid-tile></mat-grid-tile>
        <mat-grid-tile></mat-grid-tile>
      </mat-grid-list>
    </div>`","`
    <div style=""width:400px"">
      <mat-grid-list cols=""1"" rowHeight=""4:1"">
        <mat-grid-tile></mat-grid-tile>
        <mat-grid-tile></mat-grid-tile>
      </mat-grid-list>
    </div>`","`
    <mat-grid-list cols=""1"" rowHeight=""100px"">
      <mat-grid-tile></mat-grid-tile>
      <mat-grid-tile></mat-grid-tile>
    </mat-grid-list>`","`
    <div style=""width:400px"">
      <mat-grid-list cols=""4"">
        <mat-grid-tile [colspan]=""colspan""></mat-grid-tile>
      </mat-grid-list>
    </div>`","`
    <mat-grid-list cols=""1"" rowHeight=""100px"">
      <mat-grid-tile [rowspan]=""rowspan""></mat-grid-tile>
    </mat-grid-list>`","`
    <div style=""width:400px"">
      <mat-grid-list cols=""4"" rowHeight=""100px"">
        <mat-grid-tile *ngFor=""let tile of tiles"" [colspan]=""tile.cols"" [rowspan]=""tile.rows""
                      [style.background]=""tile.color"">
          {{tile.text}}
        </mat-grid-tile>
      </mat-grid-list>
    </div>`","`
  <div style=""width:100px"">
    <mat-grid-list [cols]=""10"" gutterSize=""0px"" rowHeight=""10px"">
      <mat-grid-tile [colspan]=""4"" [rowspan]=""4""></mat-grid-tile>
      <mat-grid-tile [colspan]=""2"" [rowspan]=""2""></mat-grid-tile>
      <mat-grid-tile [colspan]=""4"" [rowspan]=""4""></mat-grid-tile>
      <mat-grid-tile [colspan]=""4"" [rowspan]=""4""></mat-grid-tile>
      <mat-grid-tile [colspan]=""4"" [rowspan]=""4""></mat-grid-tile>
    </mat-grid-list>
  </div>`","`
  <div style=""width:100px"">
    <mat-grid-list [cols]=""10"" gutterSize=""0px"" rowHeight=""10px"">
      <mat-grid-tile [colspan]=""4"" [rowspan]=""4""></mat-grid-tile>
      <mat-grid-tile [colspan]=""2"" [rowspan]=""4""></mat-grid-tile>
      <mat-grid-tile [colspan]=""4"" [rowspan]=""4""></mat-grid-tile>
      <mat-grid-tile [colspan]=""1"" [rowspan]=""2""></mat-grid-tile>
    </mat-grid-list>
  </div>`","`
    <mat-grid-list cols=""1"">
      <mat-grid-tile>
        <mat-grid-tile-footer>
          I'm a footer!
        </mat-grid-tile-footer>
      </mat-grid-tile>
    </mat-grid-list>`","`
    <mat-grid-list cols=""1"">
      <mat-grid-tile>
        <mat-grid-tile-footer>
          <h3 mat-line>First line</h3>
          <span mat-line>Second line</span>
        </mat-grid-tile-footer>
      </mat-grid-tile>
    </mat-grid-list>`","`
    <mat-grid-list cols=""1"">
      <mat-grid-tile>
        <mat-grid-tile-footer>
          <ng-container [ngSwitch]=""true"">
            <h3 mat-line>First line</h3>
            <span mat-line>Second line</span>
          </ng-container>
        </mat-grid-tile-footer>
      </mat-grid-tile>
    </mat-grid-list>`","`
  <mat-grid-list cols=""5"">
    <mat-grid-tile [rowspan]=""1"" [colspan]=""3"">1</mat-grid-tile>
    <mat-grid-tile [rowspan]=""2"" [colspan]=""2"">2</mat-grid-tile>
    <mat-grid-tile [rowspan]=""1"" [colspan]=""2"">3</mat-grid-tile>
    <mat-grid-tile [rowspan]=""2"" [colspan]=""2"">4</mat-grid-tile>
  </mat-grid-list>
`","`<mat-grid-list cols=""1""><mat-grid-tile>Hello</mat-grid-tile></mat-grid-list>`","`
    <div style=""width:200px"">
      <mat-grid-list cols=""1"">
        <ng-container [ngSwitch]=""true"">
          <mat-grid-tile></mat-grid-tile>
        </ng-container>
      </mat-grid-list>
    </div>
  `","`
    <div style=""width:200px"">
      <mat-grid-list cols=""2"" rowHeight=""100px"">
        <mat-grid-tile></mat-grid-tile>
        <mat-grid-tile>
          <mat-grid-list cols=""1"" rowHeight=""100px"">
            <mat-grid-tile></mat-grid-tile>
            <mat-grid-tile></mat-grid-tile>
            <mat-grid-tile></mat-grid-tile>
          </mat-grid-list>
        </mat-grid-tile>
      </mat-grid-list>
    </div>`",gridListHarness,gridTileHarness,'should be able to load grid-tile harness by header text',/Tile 3/,'should be able to load grid-tile harness by footer text',footerText,getHeaderText,'Tile 3','should be able to get all tiles of a grid-list','#second','should be able to get amount of columns of grid-list',gridLists,getColumns,'should be able to get tile by position',getTileAtPosition,'Four (second row)','should be able to get tile by position with respect to tile span',/Could not find tile/,tile4Rowspan,foundTile,'Four (second and third row)','should be able to check whether tile has avatar','should be able to get rowspan of tile',getRowspan,'should be able to get colspan of tile',getColspan,'should be able to get header text of tile',firstTileText,'should be able to get footer text of tile',showFooter,'Footer',"`
    <mat-grid-list [cols]=""columns"">
      <mat-grid-tile>
        <mat-grid-tile-header>{{firstTileText}}</mat-grid-tile-header>
        <mat-grid-tile-footer *ngIf=""showFooter"">Footer</mat-grid-tile-footer>
      </mat-grid-tile>
      <mat-grid-tile>
        <mat-grid-tile-header>Two</mat-grid-tile-header>
        <div matGridAvatar class=""css-rendered-avatar""></div>
      </mat-grid-tile>
      <mat-grid-tile colspan=""2"">
        <mat-grid-tile-header>Three</mat-grid-tile-header>
      </mat-grid-tile>
      <mat-grid-tile [rowspan]=""tile4Rowspan"">
        <mat-grid-tile-header>
          Four (second {{tile4Rowspan === 2 ? 'and third ' : ''}}row)
        </mat-grid-tile-header>
      </mat-grid-tile>
    </mat-grid-list>

    <mat-grid-list id=""second"" cols=""2"" rowHeight=""100px"">
      <mat-grid-tile>Tile 1 (no header, no footer)</mat-grid-tile>
      <mat-grid-tile>
        <mat-grid-tile-header>Tile 2</mat-grid-tile-header>
      </mat-grid-tile>
      <mat-grid-tile colspan=""2"">
        <mat-grid-tile-header>Tile 3</mat-grid-tile-header>
        <mat-grid-tile-footer>Tile 3 footer</mat-grid-tile-footer>
      </mat-grid-tile>
      <mat-grid-tile>
        <mat-grid-tile-header>Tile 4</mat-grid-tile-header>
      </mat-grid-tile>
    </mat-grid-list>
  `",GridListHarnessTest,'should have the correct class when used',testIcon,'material-icons','should have the correct role when used','should include notranslate class by default',IconWithColor,matIconElement,'notranslate','Expected the mat-icon element to include the notranslate class',iconName,iconColor,sortedClassNames,'should apply a class if there is no color','mat-icon-no-color','should mark mat-icon as aria-hidden by default',IconWithLigature,iconElement,"'Expected the mat-icon element has aria-hidden=""true"" by default'",'should not override a user-provided aria-hidden attribute',IconWithAriaHiddenFalse,'Expected the mat-icon element has the user-provided aria-hidden value','should apply inline styling',InlineIcon,'mat-icon-inline','Expected the mat-icon element to not include the inline styling class','Expected the mat-icon element to include the inline styling class','Ligature icons','should add material-icons class by default','should use alternate icon font if set',iconRegistry,setDefaultFontSetClass,'myfont','should not clear the text of a ligature icon if the svgIcon is bound to something falsy',IconWithLigatureAndSvgBinding,'house','should be able to provide multiple alternate icon set classes','myfont-48x48','Icons from URLs','should register icon URLs by name',addSvgIcon,'fluffy',trustUrl,'cat.svg','fido','dog.svg','felix','auth-cat.svg',withCredentials,IconFromSvgName,SVGElement,testRequest,TestRequest,http,expectOne,FAKE_SVGS,dog,verifyAndGetSingleSvgChild,verifyPathChildElement,'woof',cat,'meow',expectNone,getSvgIconFromUrl,'should be able to set the viewBox when registering a single SVG icon','0 0 27 27','0 0 43 43','should throw an error when using an untrusted icon url','farm-set-1.svg',/unsafe value used in a resource URL context/,'should throw an error when using an untrusted icon set url',addSvgIconSetInNamespace,'farm','farm:pig','should delegate http error logging to the ErrorHandler',ErrorEvent,'Network error',errorHandler,'Loading icon set URL: farm-set-1.svg failed: Http failure response ','for farm-set-1.svg: 0 ',`Error retrieving icon ${,}! `,"'Unable to find icon with the name ""pig""'",'should delegate an error getting an SVG icon to the ErrorHandler','farm:DNE',farmSet1,"'Unable to find icon with the name ""DNE""'",'should extract icon from SVG icon set',svgChild,'pig','oink','farm:cow','cow','moo','should handle unescape characters in icon names','farm-set-4.svg','farm:pig with spaces',farmSet4,'should never parse the same icon set multiple times','_svgElementFromString',getNamedSvgIcon,_svgElementFromString,'should allow multiple icon sets in a namespace','farm-set-2.svg',farmSet2,'moo moo','should clear the id attribute from the svg node','should unwrap <symbol> nodes','farm-set-3.svg','farm:duck',farmSet3,'path','quack','should copy over the attributes when unwrapping <symbol> nodes','farm-set-5.svg',farmSet5,'0 0 13 37','should not wrap <svg> elements in icon sets in another svg tag',addSvgIconSet,'arrow-set.svg','left-arrow',arrows,'should return unmodified copies of icons from icon sets','0 0 100 100','right-arrow','should not throw when toggling an icon that has a binding in IE11',IconWithBindingAndNgIf,showIcon,'should be able to configure the viewBox for the icon set','should remove the SVG element from the DOM when the binding is cleared','should keep non-SVG user content inside the icon element',SvgIconWithUserContent,userDiv,'should cancel in-progress fetches if the icon changes',addSvgIconLiteral,trustHtml,cancelled,'should cancel in-progress fetches if the component is destroyed','Icons from HTML string','should register icon HTML strings by name','should be able to configure the icon viewBox','should throw an error when using untrusted HTML','<svg><circle></svg>',/was not trusted as safe HTML/,'should extract an icon from SVG icon set',addSvgIconSetLiteralInNamespace,addSvgIconSetLiteral,'should prepend the current path to attributes with `url()` references',"`
        <svg>
          <filter id=""blur"">
            <feGaussianBlur in=""SourceGraphic"" stdDeviation=""5"" />
          </filter>

          <circle cx=""170"" cy=""60"" r=""50"" fill=""green"" filter=""url('#blur')"" />
        </svg>
      `",'mat-icon svg circle',"/^url\(['""]?\/\$fake-path#blur['""]?\)$/",'should use latest path when prefixing the `url()` references',fakePath,'/$another-fake-path',"/^url\(['""]?\/\$another-fake-path#blur['""]?\)$/",'should update the `url()` references when the path changes','/$different-path',"/^url\(['""]?\/\$different-path#blur['""]?\)$/",'custom fonts','should apply CSS classes for custom font and icon',registerFontClassAlias,'f1','font1','f2',IconWithCustomFontCss,fontSet,fontIcon,'igloo','f3','tent','should handle values with extraneous spaces being passed in to `fontSet`','font set','font',' changed','should handle values with extraneous spaces being passed in to `fontIcon`','font icon','Icons resolved through a resolver function','should resolve icons through a resolver function',addSvgIconResolver,'should fall back to second resolver if the first one returned null','should be able to set the viewBox when resolving an icon with a function','should throw an error when the resolver returns an untrusted URL','not-trusted.svg','should handle assigning an icon through the setter',BlankIcon,svgIcon,iconUrl,SafeResourceUrl,sanitizer,bypassSecurityTrustResourceUrl,iconHtml,SafeHtml,bypassSecurityTrustHtml,'MatIcon without HttpClientModule',MatIconRegistry,DomSanitizer,mir,ds,'should throw an error when trying to load a remote icon',getMatIconNoHttpProviderError,'MatIcon with default options','should be able to configure color globally',MAT_ICON_DEFAULT_OPTIONS,'should use passed color rather then color provided','should use default color if no color passed','should be able to configure font set globally','custom-font-set','should use passed fontSet rather then default one','default-font-set','should use passed empty fontSet rather then default one',`<mat-icon>{{iconName}}</mat-icon>`,"`<mat-icon [color]=""iconColor"">{{iconName}}</mat-icon>`","`<mat-icon [fontSet]=""fontSet"" [fontIcon]=""fontIcon""></mat-icon>`","`<mat-icon [svgIcon]=""iconName""></mat-icon>`","'<mat-icon aria-hidden=""false"">face</mat-icon>'","`<mat-icon [svgIcon]=""iconName"" *ngIf=""showIcon"">{{iconName}}</mat-icon>`","`<mat-icon [inline]=""inline"">{{iconName}}</mat-icon>`","`<mat-icon [svgIcon]=""iconName""><div>Hello</div></mat-icon>`","'<mat-icon [svgIcon]=""iconName"">house</mat-icon>'",`<mat-icon></mat-icon>`,'should filter icon harnesses based on their type',svgIcons,fontIcons,IconType,SVG,FONT,'should filter icon harnesses based on their name',regexFilterResults,stringFilterResults,/^font/,'should filter icon harnesses based on their namespace',nullFilterResults,'should get the type of each icon',"`
    <mat-icon fontSet=""fontIcons"" fontIcon=""fontIcon""></mat-icon>
    <mat-icon svgIcon=""svgIcons:svgIcon""></mat-icon>
    <mat-icon inline>ligature_icon</mat-icon>
  `",IconHarnessTest,'should default to floating label type provided by global default options','should be empty','should not be empty','mat-form-field-float',"""validates there's only one placeholder""",MatInputInvalidPlaceholderTestController,getMatFormFieldPlaceholderConflictError,hintLabelEl,'supports placeholder attribute',MatInputPlaceholderAttrTestComponent,'Other placeholder','should not render the native placeholder when its value is mirrored in the label','Enter a name','supports placeholder element',MatInputPlaceholderElementTestComponent,'Default Placeholder','supports placeholder required star',MatInputPlaceholderRequiredTestComponent,'hello *','Hello *','should hide the required star if input is disabled','should hide the required star from screen readers',matFormFieldElement,'hide placeholder required star when set to hide the required marker','mat-form-field-type-mat-native-select',/^custom-error mat-error-\d+$/,'mat-form-field-hint-end','.mat-hint:not(.mat-form-field-hint-end)','.mat-hint.mat-form-field-hint-end','mat-form-field-can-float','should always float the label when floatLabel is set to true','mat-native-select-inline','should never float the label when floatLabel is set to false','Expected input to be considered empty.','Expected input to be considered not empty.','.mat-form-field-prefix','.mat-form-field-suffix','Input initially empty','Input no longer empty','should be able to animate the label up and lock it in position',_shouldAlwaysFloat,'should not throw when trying to animate and lock too early',"'should only show the native placeholder, when there is a label, on focus'","'should always show the native placeholder when floatLabel is set to ""always""'","'should not show the native placeholder when floatLabel is set to ""never""'",'should not throw when there is a default ngIf on the label element',MatInputWithDefaultNgIf,'should not throw when there is a default ngIf on the input element',MatInputWithAnotherNgIf,'MatInput with forms','MatInput with appearance',nonLegacyAppearances,'legacy appearance should promote placeholder to label','mat-form-field-appearance-legacy',_hasFloatingLabel,_hideControlPlaceholder,'non-legacy appearances should not promote placeholder to label',`mat-form-field-appearance-${,'legacy appearance should respect float never','non-legacy appearances should not respect float never','should recalculate gaps when switching to outline appearance after init',outlineFixture,MatInputWithAppearanceAndLabel,wrapperElement,outlineStart,'.mat-form-field-outline-start',outlineGap,'.mat-form-field-outline-gap','should calculate the gap when starting off in RTL','should not set an outline gap if the label is empty',labelContent,'should calculate the gaps if the default appearance is provided through DI','should update the outline gap when the prefix/suffix is added or removed','updateOutlineGap',showPrefix,updateOutlineGap,'should calculate the outline gaps if the element starts off invisible',invisibleFixture,MatInputWithOutlineInsideInvisibleElement,'should update the outline gap if the direction changes',fakeDirectionality,'should update the outline gap correctly if the direction changes multiple times',maxOutlineStart,'8px','should calculate the outline gaps inside the shadow DOM',MatInputWithOutlineAppearanceInShadowDOM,'should recalculate the outline gap when the label changes to empty after init','should be legacy appearance if no default options provided','should be legacy appearance if empty default options provided',"`
    <mat-form-field>
      <input matNativeControl id=""test-id"" placeholder=""test"">
    </mat-form-field>`","`<mat-form-field [hideRequiredMarker]=""hideRequiredMarker"">
                <input matInput required [disabled]=""disabled"" placeholder=""hello"">
             </mat-form-field>`","`
    <mat-form-field>
      <input matInput>
      <mat-placeholder>{{placeholder}}</mat-placeholder>
    </mat-form-field>`","`<mat-form-field><input matInput [placeholder]=""placeholder""></mat-form-field>`","`
    <mat-form-field>
      <input matInput placeholder=""Hello"">
      <mat-placeholder>World</mat-placeholder>
    </mat-form-field>`","`
    <mat-form-field>
      <input matInput type=""text"" placeholder=""Placeholder"">
    </mat-form-field>`","`
    <mat-form-field floatLabel=""never"">
      <input matInput placeholder=""Label"">
    </mat-form-field>
  `","`
    <mat-form-field [floatLabel]=""shouldFloat"">
      <input matInput placeholder=""Label"">
    </mat-form-field>`","`
    <mat-form-field>
      <div matPrefix>Prefix</div>
      <input matInput>
      <div matSuffix>Suffix</div>
    </mat-form-field>
  `","`
    <mat-form-field>
      <input matInput placeholder=""Label"" [formControl]=""formControl"">
    </mat-form-field>
  `","`
    <mat-form-field [appearance]=""appearance"" floatLabel=""never"">
      <input matInput placeholder=""Placeholder"">
    </mat-form-field>
  `","`
    <mat-form-field [appearance]=""appearance"">
      <span matPrefix *ngIf=""showPrefix"">Somewhat long prefix</span>
      <mat-label>{{labelContent}}</mat-label>
      <input matInput>
    </mat-form-field>
  `","`
    <mat-form-field appearance=""outline"" style=""display: none;"">
      <mat-label>Label</mat-label>
      <input matInput>
    </mat-form-field>
  `","`
    <mat-form-field appearance=""outline"" #formField>
      <mat-label>Hello</mat-label>
      <input matInput>
    </mat-form-field>
  `",'formField',"`
    <mat-form-field>
      <select matNativeControl id=""test-id"" [disabled]=""disabled"" [required]=""required"">
        <option value=""volvo"">Volvo</option>
        <option value=""saab"">Saab</option>
        <option value=""mercedes"">Mercedes</option>
        <option value=""audi"">Audi</option>
      </select>
    </mat-form-field>`","`
    <mat-form-field>
      <select matNativeControl>
        <option value="""" disabled selected></option>
        <option value=""saab"">Saab</option>
        <option value=""mercedes"">Mercedes</option>
        <option value=""audi"">Audi</option>
      </select>
    </mat-form-field>`","`
    <mat-form-field>
      <select matNativeControl>
        <option value="""" label=""select a car""></option>
        <option value=""saab"">Saab</option>
        <option value=""mercedes"">Mercedes</option>
        <option value=""audi"">Audi</option>
      </select>
    </mat-form-field>`","`
    <mat-form-field>
      <select matNativeControl>
        <option value="""">select a car</option>
        <option value=""saab"">Saab</option>
        <option value=""mercedes"">Mercedes</option>
        <option value=""audi"">Audi</option>
      </select>
    </mat-form-field>`","`
    <mat-form-field floatLabel=""never"">
      <input matInput customInputAccessor placeholder=""Placeholder"">
    </mat-form-field>`","`
    <mat-form-field appearance=""outline"">
      <mat-label *ngIf=""true"">My Label</mat-label>
      <ng-container *ngIf=""true"">
        <input matInput>
      </ng-container>
    </mat-form-field>
  `","`
    <mat-form-field>
      <mat-label>App name</mat-label>
      <input matInput *ngIf=""true"" placeholder=""My placeholder"" [value]=""inputValue"">
    </mat-form-field>
  `",'should load input with specific id','#myTextarea','should load input with specific name',"'[name=""favorite-food""]'",'should load input with a value that matches a regex',/shi$/,'should load input with a specific placeholder','Favorite food','should load input with a placeholder that matches a regex',/ food$/,'should be able to get id of input',/mat-input-\d+/,'myTextarea','nativeControl','has-ng-model','should be able to get name of input','favorite-food','should be able to get value of input','should be able to get readonly state',isReadonly,'should be able to get required state','should be able to get placeholder of input','Leave a comment','Native control','should be able to focus input','should be able to blur input','should be able to set the value of a control that cannot be typed in','#colorControl','#000000','#00ff00',"`
    <mat-form-field>
      <input matInput placeholder=""Favorite food"" value=""Sushi"" name=""favorite-food"">
    </mat-form-field>

    <mat-form-field>
      <input matInput [type]=""inputType""
                      [readonly]=""readonly""
                      [disabled]=""disabled""
                      [required]=""required"">
    </mat-form-field>

    <mat-form-field>
      <textarea id=""myTextarea"" matInput placeholder=""Leave a comment""></textarea>
    </mat-form-field>

    <mat-form-field>
      <input matNativeControl placeholder=""Native control"" id=""nativeControl"">
    </mat-form-field>

    <mat-form-field>
      <textarea matNativeControl></textarea>
    </mat-form-field>

    <mat-form-field>
      <!--
        Select native controls should not be handled as part of the input harness. We add this
        to assert that the harness does not accidentally match it.
      -->
      <select matNativeControl>
        <option value=""first"">First</option>
      </select>
    </mat-form-field>

    <mat-form-field>
      <input [(ngModel)]=""ngModelValue"" [name]=""ngModelName"" id=""has-ng-model"" matNativeControl>
    </mat-form-field>

    <mat-form-field>
      <input matNativeControl placeholder=""Color control"" id=""colorControl"" type=""color"">
    </mat-form-field>
  `",InputHarnessTest,ngModelValue,ngModelName,'should get the id of a select','food','drink','should get the name of a select','favorite-drink','should get whether a select is disabled',favoriteDrinkDisabled,'should get whether the select is in multi-selection mode','should get whether a select is required',favoriteFoodRequired,'should be able to focus a select','#food','should be able to blur a select','should get the options of a select','should select an option inside of a single-selection select',favoriteFood,'Ramen','ramen','should select an option inside of a multi-selection select','#drink',favoriteDrink,/Water|Juice/,'juice','should get the text of select options','Soda','Coffee','Juice','should get the index of select options',getIndex,'should get the disabled state of select options',pastaDisabled,'should get the selected state of an option in a single-selection list','should get the selected state of an option in a multi-selection list',/Water|Coffee/,"`
    <mat-form-field>
      <select
        id=""food""
        matNativeControl
        name=""favorite-food""
        [(ngModel)]=""favoriteFood""
        [required]=""favoriteFoodRequired"">
        <option value=""pizza"">Pizza</option>
        <option value=""pasta"" [disabled]=""pastaDisabled"">Pasta</option>
        <option value=""ramen"">Ramen</option>
      </select>
    </mat-form-field>

    <mat-form-field>
      <select
        id=""drink""
        matNativeControl
        name=""favorite-drink""
        [(ngModel)]=""favoriteDrink""
        [disabled]=""favoriteDrinkDisabled""
        multiple>
        <option value=""water"">Water</option>
        <option value=""soda"">Soda</option>
        <option value=""coffee"">Coffee</option>
        <option value=""juice"">Juice</option>
      </select>
    </mat-form-field>
  `",SelectHarnessTest,'should render a list container','mat-list','should render list items inside the list container','mat-list mat-list-item','should not apply any additional class to a list without lines','mat-3-line','should apply a particular class to lists with more than 3 lines','mat-multi-line','mat-list-item-with-avatar','.mat-list-item','.mat-list-item-content','mat-list-item-disabled',"`
  <mat-list>
    <mat-list-item *ngFor=""let item of items"">
      <img src="""">
      <h3 mat-line>{{item.name}}</h3>
      <p mat-line>{{item.description}}</p>
    </mat-list-item>
  </mat-list>`","`
  <mat-list>
    <mat-list-item *ngFor=""let item of items"">
      <h3 mat-line>{{item.name}}</h3>
      <p mat-line>{{item.description}}</p>
      <p mat-line>Some other text</p>
    </mat-list-item>
  </mat-list>`","`
  <mat-list>
    <mat-list-item *ngFor=""let item of items"">
      <h3 mat-line>Line 1</h3>
      <p mat-line>Line 2</p>
      <p mat-line>Line 3</p>
      <p mat-line>Line 4</p>
    </mat-list-item>
  </mat-list>`","`
  <mat-list>
    <mat-list-item>
      <img src="""" mat-list-avatar>
      Paprika
    </mat-list-item>
    <mat-list-item>
      Pepper
    </mat-list-item>
  </mat-list>`","`
  <mat-list>
    <mat-list-item class=""test-class"" *ngFor=""let item of items"">
      <h3 mat-line>{{item.name}}</h3>
      <p mat-line>{{item.description}}</p>
    </mat-list-item>
  </mat-list>`","`
  <mat-list>
    <mat-list-item *ngFor=""let item of items"">
      <h3 mat-line>{{item.name}}</h3>
      <p mat-line>{{item.description}}</p>
      <p mat-line *ngIf=""showThirdLine"">Some other text</p>
    </mat-list-item>
  </mat-list>`",'should not add the mat-list-single-selected-option class (in multiple mode)',_handleClick,'mat-list-single-selected-option','should not be able to toggle an item when pressing a modifier key','should not move focus to the first item if focus originated from a mouse interaction','should restore focus if active option is destroyed',_handleFocus,'should not attempt to focus the next option when the destroyed option was not focused',_handleBlur,UP_EVENT,'should focus and toggle the next item when pressing SHIFT + UP_ARROW',upKeyEvent,'should not change focus when pressing HOME with a modifier key','should not change focus when pressing END with a modifier key','.mat-list-option:not(.mat-list-item-disabled) .mat-list-item-content','with changing option value',SelectionListWithChangingOptionValue,'should use `compareWith` function when updating option selection state',listOptionRipple,listItemContent,'mat-list-item-content-reverse','.mat-list-option','MatSelectionList with forms','should only be in the tab order if it has options','.mat-pseudo-checkbox-checked',"`
  <mat-selection-list>
    <mat-list-option [selected]=""true"">Item</mat-list-option>
  </mat-selection-list>`","`
    <mat-selection-list [compareWith]=""compareWith"">
      <mat-list-option [value]=""value"" [selected]=""value.id === 1"">
        One
      </mat-list-option>
    </mat-selection-list>`","`
    <mat-selection-list>
      <mat-list-option>
        <div mat-list-avatar>I</div>
        Inbox
      </mat-list-option>
    </mat-selection-list>
  `","`
    <mat-selection-list>
      <mat-list-option>
        <div mat-list-icon>I</div>
        Inbox
      </mat-list-option>
    </mat-selection-list>
  `",subheaderHarness,runHarnessTests,listModule,listHarness,actionListHarness,navListHarness,selectionListHarness,"`
      <mat-list class=""test-base-list-functionality"">
        <mat-list-item>
          <div matLine>Item </div>
          <div matLine>1</div>
          <div matListIcon>icon</div>
          <div matListAvatar>Avatar</div>
        </mat-list-item>
        <div matSubheader>Section 1</div>
        <mat-divider></mat-divider>
        <a mat-list-item>
          <span class=""test-item-content"">Item 2</span>
        </a>
        <button mat-list-item [disabled]=""disableThirdItem"">Item 3</button>
        <div matSubheader>Section 2</div>
        <mat-divider></mat-divider>
      </mat-list>

      <mat-list class=""test-empty""></mat-list>
  `","`
      <mat-action-list class=""test-base-list-functionality"">
        <mat-list-item (click)=""lastClicked = 'Item 1'"">
          <div matLine>Item </div>
          <div matLine>1</div>
          <div matListIcon>icon</div>
          <div matListAvatar>Avatar</div>
        </mat-list-item>
        <div matSubheader>Section 1</div>
        <mat-divider></mat-divider>
        <a mat-list-item (click)=""lastClicked = 'Item 2'"">
          <span class=""test-item-content"">Item 2</span>
        </a>
        <button
          mat-list-item
          [disabled]=""disableThirdItem""
          (click)=""lastClicked = 'Item 3'"">Item 3</button>
        <div matSubheader>Section 2</div>
        <mat-divider></mat-divider>
      </mat-action-list>

      <mat-action-list class=""test-empty""></mat-action-list>
  `","`
      <mat-nav-list class=""test-base-list-functionality"">
        <a mat-list-item (click)=""onClick($event, 'Item 1')"">
          <div matLine>Item </div>
          <div matLine>1</div>
          <div matListIcon>icon</div>
          <div matListAvatar>Avatar</div>
        </a>
        <div matSubheader>Section 1</div>
        <mat-divider></mat-divider>
        <a mat-list-item href (click)=""onClick($event, 'Item 2')"">
          <span class=""test-item-content"">Item 2</span>
        </a>
        <a
          mat-list-item
          href=""/somestuff""
          (click)=""onClick($event, 'Item 3')""
          [disabled]=""disableThirdItem"">Item 3</a>
        <div matSubheader>Section 2</div>
        <mat-divider></mat-divider>
      </mat-nav-list>

      <mat-nav-list class=""test-empty""></mat-nav-list>
  `","`
    <mat-selection-list class=""test-base-list-functionality"">
      <mat-list-option checkboxPosition=""before"">
        <div matLine>Item </div>
        <div matLine>1</div>
        <div matListIcon>icon</div>
        <div matListAvatar>Avatar</div>
      </mat-list-option>
      <div matSubheader>Section 1</div>
      <mat-divider></mat-divider>
      <mat-list-option>
        <span class=""test-item-content"">Item 2</span>
      </mat-list-option>
      <mat-list-option [disabled]=""disableThirdItem"">Item 3</mat-list-option>
      <div matSubheader>Section 2</div>
      <mat-divider></mat-divider>
    </mat-selection-list>

    <mat-selection-list class=""test-empty"" disabled></mat-selection-list>
  `",'mat-menu-panel',menuHarness,'should load menu with exact text','should load menu with regex label match',/settings/i,'should focus and blur a menu','should get filtered items','Account','multi-level menu',NestedMenuHarnessTest,HarnessLoader,menuModule,'should get submenus',menu1,'Menu 1',submenus,hasSubmenu,menu2,getSubmenu,menu3,'Menu 2','Menu 3',menu4,'Menu 4','should select item in top-level menu',clickItem,/Leaf/,lastClickedLeaf,'should throw when item is not found','Fake Item',"/Could not find item matching {""text"":""Fake Item""}/",'should select item in nested menu','should throw when intermediate item does not have submenu','Leaf Item 1',"/Item matching {""text"":""Leaf Item 1""} does not have a submenu/","`
      <button type=""button"" id=""settings"" [matMenuTriggerFor]=""settingsMenu"">Settings</button>
      <button type=""button"" disabled [matMenuTriggerFor]=""settingsMenu"">Disabled menu</button>

      <mat-menu #settingsMenu>
        <menu mat-menu-item>Profile</menu>
        <menu mat-menu-item>Account</menu>
      </mat-menu>
  `",MenuHarnessTest,"`
      <button [matMenuTriggerFor]=""menu1"">Menu 1</button>

      <mat-menu #menu1>
        <button mat-menu-item [matMenuTriggerFor]=""menu2"">Menu 2</button>
        <button mat-menu-item (click)=""lastClickedLeaf = 1"">Leaf Item 1</button>
        <button mat-menu-item [matMenuTriggerFor]=""menu3"">Menu 3</button>
      </mat-menu>

      <mat-menu #menu2>
        <button mat-menu-item (click)=""lastClickedLeaf = 2"">Leaf Item 2</button>
      </mat-menu>

      <mat-menu #menu3>
        <button mat-menu-item [matMenuTriggerFor]=""menu4"">Menu 4</button>
      </mat-menu>

      <mat-menu #menu4>
        <button mat-menu-item (click)=""lastClickedLeaf = 3"">Leaf Item 3</button>
      </mat-menu>
  `",'.mat-paginator-range-label','.mat-select','.mat-paginator-page-size-label','.mat-paginator-page-size','.mat-paginator-navigation-previous','.mat-paginator-navigation-next','.mat-paginator-navigation-first','.mat-paginator-navigation-last',paginatorHarness,'should be able to go to the first page',goToFirstPage,'should be able to get the page size',getPageSize,'should be able to get the range label',getRangeLabel,'1 – 10 of 500','should throw an error if the first page button is not available',/Could not find first page button inside paginator/,'should return whether or not the previous page is disabled',isPreviousPageDisabled,'should return whether or not the next page is disabled',isNextPageDisabled,'should throw an error if the last page button is not available',/Could not find last page button inside paginator/,'should throw an error if the page size selector is not available',/Cannot find page size selector in paginator/,"`
    <mat-paginator
      (page)=""handlePageEvent($event)""
      [length]=""length""
      [pageSize]=""pageSize""
      [showFirstLastButtons]=""showFirstLastButtons""
      [pageSizeOptions]=""pageSizeOptions""
      [pageIndex]=""pageIndex"">
    </mat-paginator>
  `",PaginatorHarnessTest,handlePageEvent,PageEvent,'should return the transform attribute for bufferValue and mode',_primaryTransform,"'scale3d(0, 1, 1)'",_bufferTransform,"'scale3d(0.4, 1, 1)'","'scale3d(0.35, 1, 1)'","'scale3d(0.55, 1, 1)'","'scale3d(0.6, 1, 1)'",'should prefix SVG references with the current path',"/^url\(['""]?\/fake-path#.*['""]?\)$/",'should account for location hash when prefixing the SVG references','/fake-path#anchor','#anchor#','should not be able to tab into the underlying SVG element','should use latest path when prefixing the SVG references','/another-fake-path',"/^url\(['""]?\/another-fake-path#.*['""]?\)$/",'.mat-progress-bar-primary','.mat-progress-bar-buffer',progressBarHarness,"`
    <mat-progress-bar mode=""determinate"" [value]=""value""></mat-progress-bar>
    <mat-progress-bar mode=""indeterminate""></mat-progress-bar>
  `",ProgressBarHarnessTest,'should use different `circle` elements depending on the mode',indeterminateCircle,'should add a style tag with the indeterminate animation to the document head when using a ','non-default diameter',"'style[mat-spinner-animation=""32""]'","'style[mat-spinner-animation=""64""]'",'should handle creating animation style tags based on a floating point diameter',IndeterminateSpinnerCustomDiameter,'Expected the spinner circle element to have an animation name based on ','the custom diameter','mat-progress-spinner-stroke-rotate-32_5',"'style[mat-spinner-animation=""32_5""]'",'Expected a style tag with the indeterminate animation to be ','attached to the document head','.mat-progress-spinner','should add the indeterminate animation style tag to the Shadow root',_getShadowRoot,"'style[mat-spinner-animation=""27""]'",'should not duplicate style tags inside the Shadow root',"'style[mat-spinner-animation=""39""]'","'style[mat-spinner-animation=""61""]'",'should add the indeterminate animation style tag to the Shadow root if the element is ','inside an ngIf',"`<mat-spinner [color]=""color""></mat-spinner>`","`<mat-progress-spinner value=""50"" [color]=""color""></mat-progress-spinner>`",progressSpinnerHarness,"`
    <mat-progress-spinner mode=""determinate"" [value]=""value""></mat-progress-spinner>
    <mat-progress-spinner mode=""indeterminate""></mat-progress-spinner>
    <mat-spinner></mat-spinner>
  `",ProgressSpinnerHarnessTest,'mat-radio-checked','input[id=leaf-input]','mat-radio-disabled','.mat-radio-disabled',radioGroupHarness,'should load radio-group with exact id','#my-group-2','should load radio-group by name','my-group-2-name','my-group-2','my-group-1-name','my-group-1','should throw when finding radio-group with specific name that has mismatched ','radio-button names',thirdGroupButtonName,'other-name','third-group-name',"/locator found a radio-group with name ""third-group-name"".*have mismatching names/",secondGroupId,'new-group','new-group-name','other-button-name',/Radio buttons in radio-group have mismatching names./,'should get id of radio-group','should get checked value of radio-group',getCheckedValue,'should get radio-button harnesses of radio-group',getRadioButtons,'should get radio buttons from group with filter','should get checked radio-button harnesses of radio-group',groupOneChecked,getCheckedRadioButton,groupTwoChecked,groupThreeChecked,'opt2-group-one','should check radio button in group',checkRadioButton,'should throw error when checking invalid radio button',"/Could not find radio button matching {""label"":""opt4""}/",'MatRadioButtonHarness','should load all radio-button harnesses',radios,radioButtonHarness,'should load radio-button with exact label','Option #2','should load radio-button with regex label match',/#3$/i,'Option #3','should load radio-button with id','#opt3','should load radio-buttons with same name','group1',uncheckedRadio,checkedRadio,'Option #1',disableAll,'should focus radio-button','#opt2','should blur radio-button','should check radio-button','should not be able to check disabled radio-button','#required-radio',"`
    <mat-radio-button *ngFor=""let value of values, let i = index""
                      [name]=""value === 'opt3' ? 'group2' : 'group1'""
                      [disabled]=""disableAll""
                      [checked]=""value === 'opt2'""
                      [id]=""value""
                      [required]=""value === 'opt2'""
                      [value]=""value"">
      Option #{{i + 1}}
    </mat-radio-button>

    <mat-radio-group id=""my-group-1"" name=""my-group-1-name"">
      <mat-radio-button *ngFor=""let value of values""
                        [checked]=""value === 'opt2'""
                        [value]=""value""
                        [id]=""value + '-group-one'"">
        {{value}}
      </mat-radio-button>
    </mat-radio-group>


    <mat-radio-group [id]=""secondGroupId"" [name]=""secondGroupId + '-name'"">
      <mat-radio-button id=""required-radio"" required [value]=""true"">
        Accept terms of conditions
      </mat-radio-button>
    </mat-radio-group>

    <mat-radio-group [name]=""thirdGroupName"">
      <mat-radio-button [value]=""true"">First</mat-radio-button>
      <mat-radio-button [value]=""false"" [name]=""thirdGroupButtonName""></mat-radio-button>
    </mat-radio-group>
  `",MultipleRadioButtonsHarnessTest,thirdGroupName,'should update package.json',removePackageJsonDependency,'@angular/animations',angularCoreVersion,'@angular/core','@angular/material','@angular/forms','Expected the @angular/forms package to have the same version as @angular/core.','Expected the @angular/animations package to have the same ','version as @angular/core.','run-schematic','Expected the setup-project schematic to be scheduled.','should add default theme','ng-add-setup-project',workspace,getWorkspace,project,getProjectFromWorkspace,expectProjectStyleFile,'./node_modules/@angular/material/prebuilt-themes/indigo-pink.css','should support adding a custom theme',expectedStylesPath,normalize,`/${,}/src/styles.scss`,themeContent,`$material-primary: mat.define-palette(`,'should create a custom theme file if no SCSS file could be found','css',}/src/custom-theme.scss`,'Expected a custom theme file to be created','projects/material/src/custom-theme.scss','should add font links',indexFiles,getProjectIndexFiles,indexPath,htmlContent,"'  <link rel=""preconnect"" href=""https://fonts.gstatic.com"">'","'  <link href=""https://fonts.googleapis.com/icon?family=Material+Icons""'","'  <link href=""https://fonts.googleapis.com/css2?family=Roboto:wght@'","'300;400;500&display=swap""'",'should add material app styles',defaultStylesPath,getProjectStyleFile,"'html, body { height: 100%; }'","'body { margin: 0; font-family: Roboto, ""Helvetica Neue"", sans-serif; }'",'animations enabled','should add the BrowserAnimationsModule to the project module',fileContent,"'Expected the project app module to import the ""BrowserAnimationsModule"".'",'BrowserAnimationsModule','should not add BrowserAnimationsModule if NoopAnimationsModule is set up',addModuleImportToRootModule,'NoopAnimationsModule','@angular/platform-browser/animations',errorOutput,"/Could not set up ""BrowserAnimationsModule""/",'animations disabled','should add the NoopAnimationsModule to the project module',"'Expected the project app module to import the ""NoopAnimationsModule"".'",'should not add NoopAnimationsModule if BrowserAnimationsModule is set up',"'Expected the project app module to not import the ""NoopAnimationsModule"".'",'animations excluded','should not add any animations code if animations are excluded','excluded','custom project builders',overwriteTargetBuilder,Tree,targetName,newBuilder,sourceRoot,'projects/material/src','app',builder,'@angular-devkit/build-angular:browser',outputPath,'dist/material','projects/material/src/index.html','projects/material/src/main.ts','projects/material/src/styles.css',"'should throw an error if the ""build"" target has been changed'",'thirdparty-builder',/not using the default builders.*build/,"'should warn if the ""test"" target has been changed'",'thirdparty-test-builder',warnOutput,/not using the default builders.*cannot add the configured theme/,'theme files',defaultPrebuiltThemePath,writeStyleFileToWorkspace,stylePath,'should replace existing prebuilt theme files',existingThemePath,'./node_modules/@angular/material/prebuilt-themes/purple-green.css',getProjectTargetOptions,'Expected the existing prebuilt theme file to be removed.','Expected the default prebuilt theme to be added.','should not replace existing custom theme files','./projects/material/custom-theme.scss','Expected the default prebuilt theme to be not configured.',/Could not add the selected theme/,'should not add a theme file multiple times',"'Expected the ""styles.css"" file and default prebuilt theme to be '",'the only styles','should not overwrite existing custom theme files','/projects/material/custom-theme.scss','custom-theme','Expected the old custom theme content to be unchanged.','should add the global typography class if the body has no classes',typography,"'<body class=""mat-typography"">'",'should add the global typography class if the body has existing classes',"`
      <html>
        <head></head>
        <body class=""one two""></body>
      </html>
    `","'<body class=""one two mat-typography"">'",'should not add the global typography class if it exists already',"`
      <html>
        <head></head>
        <body class=""one mat-typography two""></body>
      </html>
    `","'<body class=""one mat-typography two"">'",'should not add the global typography class if the user did not opt into it',"'<body class=""one two"">'",'ng-add schematic - library project',SchematicTestRunner,libraryTree,'schematics','../collection.json',createTestLibrary,'should warn if a library project is targeted','material',/There is no additional setup required/,'should create address-form files and add them to module','address-form','should add address-form imports to module','MatInputModule','MatButtonModule','MatSelectModule','MatRadioModule','ReactiveFormsModule','should throw if no name has been specified',/required property 'name'/,'styles: [`','template: `','should create dashboard files and add them to module','dashboard','should add dashboard imports to module','MatGridListModule','MatCardModule','MatMenuModule','MatIconModule',`import { MatGridListModule } from '@angular/material/grid-list';`,`import { MatCardModule } from '@angular/material/card';`,`import { MatMenuModule } from '@angular/material/menu';`,`import { MatIconModule } from '@angular/material/icon';`,`import { MatButtonModule } from '@angular/material/button';`,'should create navigation files and add them to module','navigation','should add navigation imports to module',expectNavigationSchematicModuleImports,'should support `nav` as schematic alias','nav','router option','should respect the option value if routing true',routing,"'<a mat-list-item routerLink=""/"">Link 1</a>'",'should respect the option value if routing false',"'<a mat-list-item href=""#"">Link 1</a>'",'should create table files and add them to module','/projects/material/src/app/foo/foo-datasource.ts',datasourceContent,'FooItem','FooDataSource',componentContent,'should add table imports to module','MatTableModule','MatPaginatorModule','MatSortModule',`import { MatTableModule } from '@angular/material/table';`,`import { MatSortModule } from '@angular/material/sort';`,`import { MatPaginatorModule } from '@angular/material/paginator';`,'should create tree component files and add them to module','should add tree imports to module','MatTreeModule',"'should report if class does not declare ""shouldLabelFloat""'",'./class-inheritance_input.ts',"/Found class ""WithoutLabelProp"".*extends ""MatFormFieldControl.*must define ""shouldLabelFloat""/","/Found class ""WithLabelProp"".*extends ""MatFormFieldControl"".*must define ""shouldLabelFloat""/",'should properly report invalid constructor expression signatures','./constructor-checks_input.ts','Expected the constructor checks to report if an argument is not assignable.',"/@22:13 - Found ""NativeDateAdapter""/",'Expected the constructor to not report if an argument is assignable.',"/@24.*Found ""NativeDateAdapter"".*/","/Found ""NonMaterialClass"".*: new NonMaterialClass\(\)/","/Found ""NativeDateAdapter"".*super.*: super\(string, Platform\)/","/Found ""NativeDateAdapter"".*: new \w+\(string, Platform\)/","/Found ""MatAutocomplete"".*super.*: super\(any, any, string\[]\)/","/Found ""MatAutocomplete"".*: new \w+\(any, any, string\[]\)/","/Found ""MatTooltip"".*super.*: super\((any, ){10}{ opt1: string; }\)/","/Found ""MatTooltip"".*: new \w+\((any, ){10}{ opt1: string; }\)/","/Found ""MatIconRegistry"".*super.*: super\(any, any, Document\)/","/Found ""MatIconRegistry"".*: new \w+\(any, any, Document\)/","/Found ""MatCalendar"".*super.*: super\(any, any, any, any\)/","/Found ""MatCalendar"".*: new \w+\(any, any, any, any\)/","/Found ""MatDrawerContent"".*super.*: super\((any, ){4}any\)/","/Found ""MatDrawerContent"".*: new \w+\((any, ){4}any\)/","/Found ""MatSidenavContent"".*super.*: super\((any, ){4}any\)/","/Found ""MatSidenavContent"".*: new \w+\((any, ){4}any\)/","/Found ""ExtendedDateAdapter"".*super.*: super\(string, Platform\)/","/Found ""ExtendedDateAdapter"".*: new \w+\(string, Platform\)/",'should report imports for deleted animation constants','./import-checks_input.ts',"/Found deprecated symbol ""SHOW_ANIMATION""/","/Found deprecated symbol ""HIDE_ANIMATION""/",'should report symbols that have been removed','migration-v13','./symbol-removal_input.ts','Expected check not to report symbols that have not been removed.','MatRipple','Expected check not to report symbols with the same name as a ',"'removed symbol, but from a different module.'",'HasInitializedCtor','Expected check to report a removed symbol','@2:3 - `CanColorCtor` is no longer necessary and has been removed.','Expected check to report a removed symbol that has been aliased','@3:3 - `CanDisableRippleCtor` is no longer necessary and has been removed.','should migrate a theme based on the theming API',THEME_PATH,`$candy-app-primary: mat-palette($mat-indigo);`,"`$candy-app-accent: mat-palette($mat-pink, A200, A100, A400);`",`$candy-app-theme: mat-light-theme((`,`color: (`,"`primary: $candy-app-primary,`","`accent: $candy-app-accent,`",`));`,`@include angular-material-theme($candy-app-theme);`,`$dark-primary: mat-palette($mat-blue-grey);`,"`$dark-accent: mat-palette($mat-amber, A200, A100, A400);`",`$dark-warn: mat-palette($mat-deep-orange);`,`$dark-theme: mat-dark-theme((`,"`primary: $dark-primary,`","`accent: $dark-accent,`","`warn: $dark-warn,`",`.unicorn-dark-theme {`,`@include angular-material-color($dark-theme);`,`}`,`$candy-app-primary: mat.define-palette(mat.$indigo-palette);`,"`$candy-app-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);`",`$candy-app-theme: mat.define-light-theme((`,`@include mat.all-component-themes($candy-app-theme);`,`$dark-primary: mat.define-palette(mat.$blue-grey-palette);`,"`$dark-accent: mat.define-palette(mat.$amber-palette, A200, A100, A400);`",`$dark-warn: mat.define-palette(mat.$deep-orange-palette);`,`$dark-theme: mat.define-dark-theme((`,`@include mat.all-component-colors($dark-theme);`,'should migrate files using CDK APIs through the theming import',`@include cdk-overlay();`,`.my-dialog {`,`z-index: $cdk-z-index-overlay-container + 1;`,"`@include cdk-high-contrast(active, off) {`",`button {`,`outline: solid 1px;`,`@use '@angular/cdk' as cdk;`,`@include cdk.overlay();`,`z-index: cdk.$overlay-container-z-index + 1;`,"`@include cdk.high-contrast(active, off) {`",'should migrate files using both Material and CDK APIs',`@import './foo'`,'should detect imports using double quotes',"`@import ""@angular/material/theming"";`",'should migrate mixins that are invoked without parentheses',`@include mat-base-typography;`,`@include mat.typography-hierarchy;`,'should migrate files that import the Material APIs transitively',`@import 're-exports-material-symbols';`,`@include mat-button-theme();`,'should allow an arbitrary number of spaces after @include and @import',`@import                  '@angular/material/theming';`,`@include     mat-core;`,`@include mat.core;`,'should insert the new @use statement above other @import statements',`@import './bar'`,'should account for other @use statements when inserting the new Material @use',`@use './foo'`,'should account for multi-line comment file headers placed aboved the @import statements',`/** This is a license. */`,'should account for single-line comment file headers placed aboved the @import statements',`// This is a license.`,'should migrate multiple files within the same project',componentPath,PROJECT_PATH,'components/dialog.scss',`@include angular-material-theme();`,`@include mat.all-component-themes();`,'should handle variables whose names overlap',`$one: $mat-blue-grey;`,`$two: $mat-blue;`,'$three: $mat-blue','$four: $mat-blue-gray',`$one: mat.$blue-grey-palette;`,`$two: mat.$blue-palette;`,'$three: mat.$blue-palette','$four: mat.$blue-gray-palette','should migrate individual component themes',`@include mat-button-theme($candy-app-theme);`,`@include mat-table-theme($candy-app-theme);`,`@include mat-expansion-panel-theme($candy-app-theme);`,`@include mat-datepicker-theme($candy-app-theme);`,`@include mat-option-theme($candy-app-theme);`,`@include mat.button-theme($candy-app-theme);`,`@include mat.table-theme($candy-app-theme);`,`@include mat.expansion-theme($candy-app-theme);`,`@include mat.datepicker-theme($candy-app-theme);`,`@include mat.option-theme($candy-app-theme);`,'should migrate deep imports',`@import '@angular/material/core/theming/palette';`,`@import '@angular/material/core/theming/theming';`,`@import '@angular/material/button/button-theme';`,`@import '@angular/material/table/table-theme';`,`@import '@angular/cdk/overlay';`,`@import '@angular/material/datepicker/datepicker-theme';`,`@import '@angular/material/option/option-theme';`,"'should migrate usages of @use, with and without namespaces'",`@use '@angular/material/core/theming/palette' as palette;`,`@use '@angular/material/core/theming/theming';`,`@use '@angular/material/button/button-theme' as button;`,`@use '@angular/material/table/table-theme' as table;`,`@use '@angular/cdk/overlay' as cdk;`,`@use '@angular/material/datepicker/datepicker-theme' as datepicker;`,`@include cdk.cdk-overlay();`,`$candy-app-primary: theming.mat-palette(palette.$mat-indigo);`,"`$candy-app-accent: theming.mat-palette(palette.$mat-pink, A200, A100, A400);`",`$candy-app-theme: theming.mat-light-theme((`,`@include button.mat-button-theme($candy-app-theme);`,`@include table.mat-table-theme($candy-app-theme);`,`@include datepicker.mat-datepicker-theme($candy-app-theme);`,'should handle edge case inferred Sass import namespaces',`@use '@angular/material/core/index';`,`@use '@angular/material/button/_button-theme';`,`@use '@angular/material/table/table-theme.import';`,`@use '@angular/material/datepicker/datepicker-theme.scss';`,`@include core.mat-core();`,`@include button-theme.mat-button-theme();`,`@include table-theme.mat-table-theme();`,`@include datepicker-theme.mat-datepicker-theme();`,`@include mat.table-theme();`,`@include mat.datepicker-theme();`,'should drop the old import path even if the file is not using any symbols',`color: red;`,'should replace removed variables with their values',`@include mat-button-toggle-theme();`,`.my-button-toggle {`,`height: $mat-button-toggle-standard-height + 10px;`,`transition: $swift-ease-out;`,`@media ($mat-small) {`,`height: $mat-button-toggle-standard-minimum-height;`,`@include mat.button-toggle-theme();`,`height: 48px + 10px;`,"`transition: all 400ms cubic-bezier(0.25, 0.8, 0.25, 1);`",`@media (max-width: 959px) {`,`height: 24px;`,'should not replace removed variables whose name overlaps with other variables',`$swift-ease-in-duration: 300ms !default`,'should not replace assignments to removed variables',`$mat-button-toggle-standard-height: 50px;`,`$mat-button-toggle-standard-minimum-height   : 12px;`,`$mat-toggle-padding:10px;`,`$mat-toggle-size:     11px;`,'should not migrate files in the node_modules','/node_modules/theme.scss','should only migrate unprefixed variables if there is a theming import',otherTheme,'other-theme.scss',`.my-button {`,`z-index: $z-index-fab;`,`.my-drawer {`,`z-index: $z-index-drawer;`,`z-index: 20;`,"'should insert the @use statement at the top of the file, if the theming import is '",'the only import in the file and there is other content before it',`:host {`,`display: block;`,`width: 100%;`,`.button {`,`@include mat-elevation(4);`,`padding: 8px;`,`@include mat.elevation(4);`,'should migrate extra given mixins and functions',originalContent,`$something: mat-mdc-typography-config();`,`@include mat-mdc-button-theme();`,`$another: $mat-vermillion`,migratedContent,migrateFileContent,'@angular/material/','@angular/cdk/',mixins,'mat-mdc-button-theme','mdc-button-theme',functions,'mat-mdc-typography-config','mdc-typography-config','mat-vermillion','vermillion-palette',`$something: mat.mdc-typography-config();`,`@include mat.mdc-button-theme();`,`$another: mat.$vermillion-palette`,'should not drop imports of prebuilt styles',`@import '@angular/material/prebuilt-themes/indigo-pink.css';`,'should not add duplicate @use statements',`$something: mat.$red-palette;`,`$another: $mat-pink;`,`$another: mat.$pink-palette;`,'should insert @use before other code when only Angular imports are first',`$something: 123;`,`@import 'some/other/file';`,'should not rename variables appended with extra characters',`$mat-light-theme-background-override: 123;`,'should not rename functions prepended with extra characters',`@function gmat-palette() {`,`  @return white;`,'should not migrate commented out code',`// @import '@angular/material/theming';`,'/* @include mat-core(); */','should not migrate single-line commented code at the end of the file','// @include mat-core();','// @include mat-button-theme();','should handle mixed commented and non-commented content','@include mat-core();','@include mat-button-theme();','@include mat.core();','@include mat.button-theme();','should migrate files that import using the tilde','should migrate deep imports using a tilde',`@import '~@angular/material/core/theming/palette';`,`@import '~@angular/material/core/theming/theming';`,`@import '~@angular/material/button/button-theme';`,`@import '~@angular/material/table/table-theme';`,`@import '~@angular/cdk/overlay';`,`@import '~@angular/material/datepicker/datepicker-theme';`,`@import '~@angular/material/option/option-theme';`,'should re-map top-level material imports to the proper entry points','migration-v8','./material-imports_input.ts',materialPath,'/node_modules/@angular/material',}/index.d.ts`,"`
      export * from './a';
      export * from './b';
      export * from './c';
      export * from './core';
      export * from './types';
    `",}/a/index.d.ts`,`export const a = '';`,}/b/index.d.ts`,`export const b = '';`,}/c/index.d.ts`,`export const c = '';`,}/core/index.d.ts`,`export const VERSION = '';`,}/types/index.d.ts`,"`
      export declare interface SomeInterface {
        event: any;
      }
    `",'/projects/cdk-testing/src/test-cases/material-imports_input.ts',readFileContent,'./material-imports_expected_output.ts','should not throw if project tsconfig does not have explicit root file names',runExternalSchematicAsync,'@schematics/angular','second-project','/projects/cdk-testing/tsconfig.app.json','../../tsconfig.json',compilerOptions,outDir,'../../out-tsc/app','hammerjs','0.0.0','hammerjs not used',"'should remove hammerjs from ""package.json"" file'",getDependencyVersion,'should remove import to load hammerjs',appendContent,"`
        import 'hammerjs';
      `",'General notice: The HammerJS v9 migration for Angular Components is not able to ','migrate tests. Please manually clean up tests in your project if they rely on HammerJS.','should remove empty named import to load hammerjs',"`
        import {} 'hammerjs';
      `",'should remove references to gesture config','/projects/cdk-testing/src/test.module.ts',dedent,"`
        import {NgModule} from '@angular/core';
        import {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser'; // some comment
        import {GestureConfig} from '@angular/material/core';

        @NgModule({
          providers: [
            {provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig},
            OtherProvider,
          ]
        })
        export class TestModule {}
      `","`
        import {NgModule} from '@angular/core';

        @NgModule({
          providers: [
            OtherProvider,
          ]
        })
        export class TestModule {}`",'should remove references to HammerModule',"`
        import {NgModule} from '@angular/core';
        import {
          HAMMER_GESTURE_CONFIG,
          HammerModule
        } from '@angular/platform-browser'; // some comment
        import {GestureConfig} from '@angular/material/core';

        @NgModule({
          providers: [
            {provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig},
            OtherProvider,
          ],
          imports: [
            HammerModule,
            OtherModule
          ],
        })
        export class TestModule {}
      `","`
        import {NgModule} from '@angular/core';

        @NgModule({
          providers: [
            OtherProvider,
          ],
          imports: [
            OtherModule
          ],
        })
        export class TestModule {}`",'should remove references to gesture config if imports are aliased',"`
        import {NgModule} from '@angular/core';
        import {
          HAMMER_GESTURE_CONFIG as configToken
        } from '@angular/platform-browser'; // some comment
        import {GestureConfig as gestureConfig} from '@angular/material/core';

        @NgModule({
          providers: [
            {provide: configToken, useClass: gestureConfig},
            OtherProvider,
          ]
        })
        export class TestModule {}
      `",'should report error if unable to remove reference to gesture config',"`
        import {NgModule} from '@angular/core';
        import {NOT_KNOWN_TOKEN, HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';
        import {GestureConfig} from '@angular/material/core';

        const myProvider = {provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig}

        @NgModule({
          providers: [
            {provide: NOT_KNOWN_TOKEN, useClass: GestureConfig},
            {provide: HAMMER_GESTURE_CONFIG, useFactory: () => GestureConfig},
            OtherProvider,
          ]
        })
        export class TestModule {
          constructor() {
            doSomethingWith(GestureConfig);
          }
        }
      `",`projects/cdk-testing/src/test.module.ts@5:20 - `,"`Unable to delete provider definition for ""GestureConfig"" completely. `",`Please clean up the provider.`,`projects/cdk-testing/src/test.module.ts@9:42 - `,"`Cannot remove reference to ""GestureConfig"". Please remove manually.`",`projects/cdk-testing/src/test.module.ts@10:56 - `,`projects/cdk-testing/src/test.module.ts@16:21 - `,"`
        import {NgModule} from '@angular/core';
        import {NOT_KNOWN_TOKEN, HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';

        const myProvider = /* TODO: remove */ {}

        @NgModule({
          providers: [
            {provide: NOT_KNOWN_TOKEN, useClass: GestureConfig},
            {provide: HAMMER_GESTURE_CONFIG, useFactory: () => GestureConfig},
            OtherProvider,
          ]
        })
        export class TestModule {
          constructor() {
            doSomethingWith(GestureConfig);
          }
        }`",'should preserve import for hammer gesture token if used elsewhere',"`
        import {NgModule, Inject} from '@angular/core';
        import {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';
        import {GestureConfig} from '@angular/material/core';

        @NgModule({
          providers: [
            {provide: ProviderAbove},
            {provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig},
            OtherProvider,
          ]
        })
        export class TestModule {
          constructor(@Inject(HAMMER_GESTURE_CONFIG) config?: any) {
            console.log(config);
          }
        }
      `","`
        import {NgModule, Inject} from '@angular/core';
        import {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';

        @NgModule({
          providers: [
            {provide: ProviderAbove},
            OtherProvider,
          ]
        })
        export class TestModule {`",'should remove import scripts in project index files if found','/projects/cdk-testing/src/index.html',"`
        <!doctype html>
        <html lang=""en"">
            <head>
                <title>Hello</title>
                <script type=""text/javascript"" src=""https://cdnjs.cloudflare.com/ajax/libs/hammer.js/2.0.8/hammer.js""></script>
                <script type=""text/javascript"" src=""https://cdnjs.cloudflare.com/ajax/libs/hammer.js/2.0.8/hammer.min.js""></script>
                <script type=""text/javascript"" src=""https://cdnjs.cloudflare.com/ajax/libs/core-js/latest/core.js""></script>
                <script type=""text/javascript"" src=""node_modules/hammerjs/dist/hammer.js""></script>
                <script type=""text/javascript"" src=""https://hammerjs.github.io/dist/hammer.min.js""></script>
            </head>
            <body>
                <app-root></app-root>
            </body>
            <script src=""some-other-script.js""></script>
            <script src=""https://ajax.googleapis.com/ajax/libs/hammerjs/2.0.8/hammer.min.js""></script>
        </html>
      `","`
        <!doctype html>
        <html lang=""en"">
            <head>
                <title>Hello</title>
                <script type=""text/javascript"" src=""https://cdnjs.cloudflare.com/ajax/libs/core-js/latest/core.js""></script>
            </head>
            <body>
                <app-root></app-root>
            </body>
            <script src=""some-other-script.js""></script>
        </html>`",'hammerjs used programmatically','should detect global reference to Hammer through types',writeHammerTypes,'/projects/cdk-testing/src/app/hammer.ts',"`
        export function createHammerInstance(el: HTMLElement) {
          // this works since there are types for HammerJS installed.
          return new Hammer(el);
        }
      `",`import 'hammerjs';`,'migrate tests. Please manually clean up tests in your project if they rely on the ','deprecated Angular Material gesture config.','should ignore global reference to Hammer if not resolved to known types',"`
        import {Hammer} from 'workbench';

        export function createWorkbenchHammer() {
          return new Hammer();
        }
      `",'should not create gesture config if hammer is only used programmatically',"`
        export function createHammerInstance(el: HTMLElement) {
          return new (window as any).Hammer(el);
        }
      `",exists,'/projects/cdk-testing/src/gesture-config.ts','should remove gesture config setup if hammer is only used programmatically',"`
        import {NgModule} from '@angular/core';
        import {HAMMER_GESTURE_CONFIG, HammerModule} from '@angular/platform-browser';
        import {GestureConfig} from '@angular/material/core';

        @NgModule({
          providers: [
            {provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig},
            OtherProvider,
          ],
          imports: [HammerModule],
        })
        export class TestModule {}
      `","`
        import {NgModule} from '@angular/core';

        @NgModule({
          providers: [
            OtherProvider,
          ],
          imports: [],
        })
        export class TestModule {}`",'used in template with standard HammerJS events','should not create gesture config file','/projects/cdk-testing/src/app/app.component.html',"`
        <span (panstart)=""onPanStart()""></span>
      `",'should not setup custom gesture config provider in root module','/projects/cdk-testing/src/app/app.module.ts',"`\
        import { NgModule } from '@angular/core';
        import { BrowserModule, HammerModule } from '@angular/platform-browser';

        import { AppComponent } from './app.component';

        @NgModule({
          declarations: [
            AppComponent
          ],
          imports: [
            BrowserModule,
            HammerModule
          ],
          providers: [],
          bootstrap: [AppComponent]
        })
        export class AppModule { }`",'should remove references to the deprecated gesture config',"`
        import {NgModule} from '@angular/core';
        import {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';
        import {GestureConfig} from '@angular/material/core';

        @NgModule({
          providers: [{provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig}]
        })
        export class TestModule {}
      `","`
        import {NgModule} from '@angular/core';

        @NgModule({
          providers: []
        })
        export class TestModule {}`",'used in template with custom Material gesture events','should create gesture config file',"`
        <span (panstart)=""onPanStart()"">
          <span (longpress)=""onPress()""></span>
        </span>
      `",GESTURE_CONFIG_TEMPLATE_PATH,'should create gesture config file if used in inline template','/projects/cdk-testing/src/app/test.component.ts',"`
        import {Component} from '@angular/core';

        @Component({
          template: \`<span (slide)=""onSlide()""></span>\`
        })
        export class TestComponent {}
      `",'should print a notice message if hammer is only used in template',"`
        <!--
            This event could also be a component output! So it's ambiguous unless
            we instantiate the AOT compiler to understand how the template will be
            interpreted. This is out of scope for this migration and in the worst
            case we just keep HammerJS.. and the app will continue to work.
        -->
        <my-comp (slide)=""onSlide()""></my-comp>
      `",'The HammerJS v9 migration for Angular Components migrated the project to ',"'keep HammerJS installed, but detected ambiguous usage of HammerJS. Please manually '",'check if you can remove HammerJS from your application.','should create gesture config file if used in template and programmatically',"`
        <span (slide)=""onSlide($event)""></span>
      `",'should create gesture config file with different name if it would conflict',"`
        <span (slideright)=""onSlideRight()""></span>
      `",'/projects/cdk-testing/src/gesture-config-1.ts','should rewrite references to gesture config',"`
        <span (slidestart)=""onSlideStart()""></span>
      `",'/projects/cdk-testing/src/nested/test.module.ts',"`
        import {NgModule} from '@angular/core';
        import {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';
        import {GestureConfig} from '@angular/material/core'; // some-comment

        @NgModule({
          providers: [
            {provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig},
            OtherProvider,
          ]
        })
        export class TestModule {}
      `","`
        import {NgModule} from '@angular/core';
        import {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';
        import { GestureConfig } from ""../gesture-config""; // some-comment

        @NgModule({
          providers: [
            {provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig},
            OtherProvider,
          ]
        })
        export class TestModule {}`",'should rewrite references to gesture config without causing conflicts',"`
        <span (slideend)=""onSlideEnd()""></span>
      `","`
        import {NgModule} from '@angular/core';
        import {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';
        import {GestureConfig} from 'ngx-hammer-events';
        import * as core from '@angular/material/core';

        @NgModule({
          providers: [
            {provide: HAMMER_GESTURE_CONFIG, useClass: core.GestureConfig},
          ]
        })
        export class TestModule {}
      `","`
        import {NgModule} from '@angular/core';
        import {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';
        import {GestureConfig} from 'ngx-hammer-events';
        import * as core from '@angular/material/core';
        import { GestureConfig as GestureConfig_1 } from ""./gesture-config"";

        @NgModule({
          providers: [
            {provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig_1},
          ]
        })
        export class TestModule {}`",'should set up Hammer gestures in app module',"`
        <span (longpress)=""onLongPress($event)""></span>
      `","`\
        import { NgModule } from '@angular/core';
        import { BrowserModule, HAMMER_GESTURE_CONFIG, HammerModule } from '@angular/platform-browser';

        import { AppComponent } from './app.component';
        import { GestureConfig } from ""../gesture-config"";

        @NgModule({
          declarations: [
            AppComponent
          ],
          imports: [
            BrowserModule,
            HammerModule
          ],
          providers: [{ provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig }],
          bootstrap: [AppComponent]
        })
        export class AppModule { }`",'should add gesture config provider to app module if module is referenced through ','re-exports in bootstrap',"`
        import 'hammerjs';
        import { enableProdMode } from '@angular/core';
        import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';

        import { AppModule } from './app/';
        import { environment } from './environments/environment';

        if (environment.production) {
          enableProdMode();
        }

        platformBrowserDynamic().bootstrapModule(AppModule)
          .catch(err => console.error(err));
      `",'/projects/cdk-testing/src/app/index.ts',`export * from './app.module';`,'should not add gesture config provider multiple times if already provided',"`
        import {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';
        import {NgModule} from '@angular/core';
        import {GestureConfig} from '@angular/material/core';

        @NgModule({
          providers: [
            {
              provide: HAMMER_GESTURE_CONFIG,
              useClass: GestureConfig
            },
          ],
        })
        export class AppModule {}
      `","`
        import { HAMMER_GESTURE_CONFIG, HammerModule } from '@angular/platform-browser';
        import {NgModule} from '@angular/core';
        import { GestureConfig } from ""../gesture-config"";

        @NgModule({
          providers: [
            {
              provide: HAMMER_GESTURE_CONFIG,
              useClass: GestureConfig
            },
          ],
          imports: [HammerModule],
        })
        export class AppModule {}`",'should not add HammerModule multiple times if already provided',"`
        import {HammerModule as myHammerModule} from '@angular/platform-browser';
        import {NgModule} from '@angular/core';

        @NgModule({
          imports: [myHammerModule],
        })
        export class AppModule {}
      `","`
        import { HammerModule as myHammerModule, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';
        import {NgModule} from '@angular/core';
        import { GestureConfig } from ""../gesture-config"";

        @NgModule({
          imports: [myHammerModule],
          providers: [{ provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig }],
        })
        export class AppModule {}`",'should not remove hammerjs if test target compilation scope does not contain hammerjs usage',"`
          import {Component} from '@angular/core';

          @Component({
            template: \`<span (slide)=""onSlide()""></span>\`
          })
          export class TestComponent {}
        `","'should not remove hammerjs from ""package.json"" file if used in one project while '",'unused in other project','/projects/second-project/src/main.ts',"`
      new (window as any).Hammer(document.body);
    `",'with custom gesture config','should not setup copied gesture config if hammer is used in template','/projects/cdk-testing/src/test.component.ts',"`
        import {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';
        import {NgModule} from '@angular/core';
        import {CustomGestureConfig} from ""../gesture-config"";

        @NgModule({
          providers: [
            {
              provide: HAMMER_GESTURE_CONFIG,
              useClass: CustomGestureConfig
            },
          ],
        })
        export class TestModule {}
      `","`
        <span (longpress)=""onPress()""></span>
      `","`
        import {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';
        import {NgModule} from '@angular/core';
        import {CustomGestureConfig} from ""../gesture-config"";

        @NgModule({
          providers: [
            {
              provide: HAMMER_GESTURE_CONFIG,
              useClass: CustomGestureConfig
            },
          ],
        })
        export class TestModule {}`",'should warn if hammer is used in template and references to Material gesture config ','were detected',"`
          import {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';
          import {NgModule} from '@angular/core';
          import {CustomGestureConfig} from ""../gesture-config"";

          @NgModule({
            providers: [
              {
                provide: HAMMER_GESTURE_CONFIG,
                useClass: CustomGestureConfig
              },
            ],
          })
          export class TestModule {}
        `",subModuleFileContent,"`
          import {NgModule} from '@angular/core';
          import {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';
          import {GestureConfig} from '@angular/material/core';

          @NgModule({
            providers: [
              {
                provide: HAMMER_GESTURE_CONFIG,
                useClass: GestureConfig
              },
            ],
          })
          export class SubModule {}
        `",'/projects/cdk-testing/src/sub.module.ts',"`
          <span (longpress)=""onPress()""></span>
        `",'This target cannot be migrated completely. Please manually remove references ','to the deprecated Angular Material gesture config.',"`
          import {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';
          import {NgModule} from '@angular/core';
          import {CustomGestureConfig} from ""../gesture-config"";

          @NgModule({
            providers: [
              {
                provide: HAMMER_GESTURE_CONFIG,
                useClass: CustomGestureConfig
              },
            ],
          })
          export class TestModule {}`",'should not remove hammerjs if no usage could be detected','/projects/cdk-testing/src/sub.component.ts',"`
        import {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';
        import {NgModule} from '@angular/core';
        import {GestureConfig} from '@angular/material/core';

        @NgModule({
          providers: [
            {
              provide: HAMMER_GESTURE_CONFIG,
              useClass: GestureConfig
            },
          ],
        })
        export class SubModule {}
      `","'This target cannot be migrated completely, but all references to the '",'deprecated Angular Material gesture have been removed.',"`
        import {NgModule} from '@angular/core';

        @NgModule({
          providers: [
          ],
        })
        export class SubModule {}`",'should re-map top-level material imports to the proper entry points when top-level ','@angular/material package does not exist','migration-v9','should not accidentally persist ripples','.mat-option',ripples,'.mat-select-trigger','.mat-select-value','mat-select-required',`Expected the mat-select-required class not to be set.`,`Expected the mat-select-required class to be set.`,/^mat-hint-\d+$/,"'Expected selected single-select option to have aria-selected=""true"".'",'Expected selected multi-select option to have ','Expected only selected option to be marked as active after ','it is clicked.',scrollContainerWidth,'Expected select panel width to be 100% + 32px of the select field trigger','should set the width of the overlay based on a larger trigger width','mat-selected','animations','should float the label when the panel is open and unselected','Expected label to initially have a normal position.','Expected label to animate up to floating position.','Expected placeholder to animate back down to normal position.',512,432,1184,'should be able to disable the floating label','Floating label should be disabled','Label should be able to float','mat-select-invalid',SelectWithIndirectDescendantGroups,vr,overlayTop,triggerExtraLineSpaceAbove,topDifference,`Expected trigger to align with option ${,expectedOrigin,rawYOrigin,`Expected panel animation to originate in the center of option ${,'ample space to open','285px','should align the first option with trigger text if no option is selected','should align a selected option too high to be centered with the trigger text','should align a selected option in the middle with the trigger text',`Expected overlay panel to be scrolled to center the selected option.`,'should align a selected option at the scroll max with the trigger text',`Expected overlay panel to be scrolled to its maximum position.`,'should account for preceding label groups when aligning the option',376,'should account for indirect preceding label groups when aligning the option','limited space to open vertically',"'should fall back to ""below"" positioning if scroll adjustment won\'t help'",'85px',`Expected panel to be at max scroll.`,`Expected trigger top to align with overlay top.`,`Expected panel animation to originate at the top.`,`top`,'limited space to open horizontally','should stay within the viewport when overflowing on the left in ltr',`Expected select panel to be inside the viewport in ltr.`,'should stay within the viewport when overflowing on the left in rtl',`Expected select panel to be inside the viewport in rtl.`,'should stay within the viewport when overflowing on the right in ltr',panelRight,'should stay within the viewport when overflowing on the right in rtl','should align the first option properly when scrolled',requiredSpaceBelow,'should align a centered option properly when scrolled',"'should fall back to ""below"" positioning properly when scrolled'",1950,'x-axis positioning','should align the trigger and the selected option on the x-axis in ltr',triggerLeft,firstOptionLeft,`Expected trigger to align with the selected option on the x-axis in LTR.`,'should align the trigger and the selected option on the x-axis in rtl',triggerRight,firstOptionRight,`Expected trigger to align with the selected option on the x-axis in RTL.`,'x-axis positioning in multi select mode','should adjust for the checkbox in ltr',"`Expected trigger label to align along x-axis, accounting for the checkbox.`",'should adjust for the checkbox in rtl','x-axis positioning with groups','should adjust for the group padding in ltr','.cdk-overlay-pane mat-optgroup',selectedOptionLeft,'mat-option.mat-selected',"`Expected trigger label to align along x-axis, accounting for the `",`padding in ltr.`,'should adjust for the group padding in rtl',selectedOptionRight,`padding in rtl.`,"'should not adjust if all options are within a group, except the selected one'",'mime-11','.cdk-overlay-pane mat-option.mat-selected','should not adjust if option centering is disabled any option under a group is selected',"`
    <div [style.height.px]=""heightAbove""></div>
    <mat-form-field>
      <mat-select placeholder=""Food"" [formControl]=""control"" [required]=""isRequired""
        [tabIndex]=""tabIndexOverride"" [aria-describedby]=""ariaDescribedBy""
        [aria-label]=""ariaLabel"" [aria-labelledby]=""ariaLabelledby""
        [panelClass]=""panelClass"" [disableRipple]=""disableRipple""
        [typeaheadDebounceInterval]=""typeaheadDebounceInterval"">
        <mat-option *ngFor=""let food of foods"" [value]=""food.value"" [disabled]=""food.disabled"">
          {{ food.viewValue }}
        </mat-option>
      </mat-select>
      <mat-hint *ngIf=""hint"">{{ hint }}</mat-hint>
    </mat-form-field>
    <div [style.height.px]=""heightBelow""></div>
  `","`
    <mat-form-field [floatLabel]=""floatLabel"">
      <mat-select [placeholder]=""placeholder"" [formControl]=""control"">
        <mat-option *ngFor=""let food of foods"" [value]=""food.value"">
          {{ food.viewValue }}
        </mat-option>
      </mat-select>
    </mat-form-field>
    `","`
    <mat-form-field>
      <mat-select [formControl]=""control"">
        <mat-option *ngFor=""let food of foods"" [value]=""food.value"">
          {{ food.viewValue }}
        </mat-option>
        <mat-option>None</mat-option>
      </mat-select>
    </mat-form-field>
  `",'select-with-indirect-groups',"`
    <mat-form-field>
      <mat-select placeholder=""Pokemon"" [formControl]=""control"">
        <ng-container [ngSwitch]=""true"">
          <mat-optgroup *ngFor=""let group of pokemonTypes"" [label]=""group.name""
            [disabled]=""group.disabled"">
            <mat-option *ngFor=""let pokemon of group.pokemon"" [value]=""pokemon.value"">
              {{ pokemon.viewValue }}
            </mat-option>
          </mat-optgroup>
          <mat-option value=""mime-11"">Mr. Mime</mat-option>
        </ng-container>
      </mat-select>
    </mat-form-field>
  `","`
    <form [formGroup]=""formGroup"">
      <mat-form-field>
        <mat-select placeholder=""Food"" formControlName=""food"">
          <mat-option *ngFor=""let option of options"" [value]=""option.value"">
            {{option.viewValue}}
          </mat-option>
        </mat-select>

        <mat-error>This field is required</mat-error>
      </mat-form-field>
    </form>
  `",'#single-selection',multipleSelection,'#multiple-selection',withFormControl,'#with-form-control','should focus and blur a select','should be able to open and close a single-selection select','should be able to open and close a multi-selection select','should be able to get the select options','should be able to get the select panel groups','should be able to get the select options when there are multiple open selects',groupedSelect,singleOptions,'should be able to get the value text from a single-selection select','should be able to get the value text from a multi-selection select',"'Kansas, New York'",'should be able to get whether a single-selection select is empty','should be able to get whether a multi-selection select is empty','should be able to click an option',"`
    <mat-form-field>
      <mat-select [disabled]=""isDisabled"" [required]=""isRequired"" id=""single-selection"">
        <mat-option *ngFor=""let state of states"" [value]=""state.code"">{{ state.name }}</mat-option>
      </mat-select>
    </mat-form-field>
    <mat-form-field>
      <mat-select multiple id=""multiple-selection"">
        <mat-option *ngFor=""let state of states"" [value]=""state.code"">{{ state.name }}</mat-option>
      </mat-select>
    </mat-form-field>
    <mat-form-field>
      <mat-select id=""grouped"">
        <mat-optgroup *ngFor=""let group of stateGroups"" [label]=""group.name"">
          <mat-option
            *ngFor=""let state of group.states""
            [value]=""state.code"">{{ state.name }}</mat-option>
        </mat-optgroup>
      </mat-select>
    </mat-form-field>
    <mat-form-field>
      <mat-select [formControl]=""formControl"" id=""with-form-control"">
        <mat-option *ngFor=""let state of states"" [value]=""state.code"">{{ state.name }}</mat-option>
      </mat-select>
    </mat-form-field>
  `",'should be able to open',BasicTestApp,'mat-drawer-container','.open',openCount,openStartCount,'mat-drawer-container-has-open','should be able to close','.close',closeCount,closeStartCount,'should resolve the open method promise with the new state of the drawer',MatDrawer,'should resolve the close method promise with the new state of the drawer',drawerInstance,'should be able to close while the open animation is running','does not throw when created without a drawer','should emit the backdropClick event when the backdrop is clicked',openButtonElement,backdropClickedCount,'.mat-drawer-backdrop','Expected one open event.','Expected one open start event.','Expected no close events.','Expected no close start events.','Expected one close event.','Expected one close start event.','Expected still no close events.','Expected still no close start events.','should fire the open event when open on init',DrawerSetToOpenedTrue,'should not close by pressing escape when disableClose is set','should not close by clicking on the backdrop when disableClose is set','should restore focus on close if backdrop has been clicked','Expected focus to be restored to the open button on close.','should restore focus on close if focus is on drawer',drawerButton,'should restore focus to an SVG element','Expected focus to be restored to the SVG element on close.','should not restore focus on close if focus is outside drawer','Expected focus not to be restored to the open button on close.','should pick up drawers that are not direct descendants',IndirectDescendantDrawer,'should not pick up drawers from nested containers',NestedDrawerContainers,outerDrawer,innerDrawer,outerContainer,innerContainer,'attributes',"'should correctly parse opened=""false""'",DrawerSetToOpenedFalse,"'should correctly parse opened=""true""'",'should remove align attr from DOM',drawerEl,'mat-drawer','align','Expected drawer not to have a native align attribute.','should throw when multiple drawers have the same position',DrawerDynamicPosition,drawer1Position,'should not throw when drawers swap positions',drawer2Position,'should bind 2-way bind on opened property',DrawerOpenBinding,'should not throw when a two-way binding is toggled quickly while animating',MatSidenavModule,'focus trapping behavior',DrawerWithFocusableElements,lastFocusableElement,'.input1','.input2',"'should trap focus when opened in ""over"" mode'",'over',"'should trap focus when opened in ""push"" mode'",'push',"'should not auto-focus by default when opened in ""side"" mode'","'should auto-focus to first tabbable element when opened in ""side"" mode'",'when enabled explicitly','should focus the drawer if there are no focusable elements',nonFocusableFixture,DrawerWithoutFocusableElements,'should be able to disable auto focus','should update the focus trap enable state if the mode changes while open','Expected focus trap anchors to be disabled in side mode.','Expected focus trap anchors to be enabled in over mode.','should mark the drawer content as scrollable','.mat-drawer-inner-container','DOM position','should project start drawer before the content',allNodes,getDrawerNodesArray,drawerIndex,'.mat-drawer',contentIndex,'.mat-drawer-content','Expected drawer to be inside the container','Expected content to be inside the container','Expected drawer to be before the content','should project end drawer after the content','Expected drawer to be after the content','should move the drawer before/after the content when its position changes after being ','initialized at `start`',startDrawerIndex,startContentIndex,'Expected drawer to be before the content on init','Expected drawer to be after content when position changes to `end`','Expected drawer to be before content when position changes back to `start`','initialized at `end`','Expected drawer to be after the content on init','Expected drawer to be before content when position changes to `start`','Expected drawer to be after content when position changes back to `end`','.mat-drawer-container','MatDrawerContainer',DrawerContainerTwoDrawerTestApp,DrawerDelayed,DrawerContainerStateChangesTestApp,AutosizeDrawer,DrawerContainerWithContent,'should be able to open and close all drawers',drawerContainer,'should animate the content when a drawer is added at a later point',showDrawer,'should recalculate the margin if a drawer is destroyed',initialMargin,renderDrawer,'should recalculate the margin if the drawer mode is changed','should recalculate the margin if the direction has changed','should not animate when the sidenav is open on load','mat-drawer-transition','should recalculate the margin if a drawer changes size while open in autosize mode',fillerWidth,'should not set a style property if it would be zero','Margin should be omitted when drawer is closed','Margin should be present when drawer is open','Margin should be removed after drawer close.','should be able to toggle whether the container has a backdrop','should be able to explicitly enable the backdrop in `side` mode','.mat-drawer-backdrop.mat-drawer-shown','should expose a scrollable when the consumer has not specified drawer content','should expose a scrollable when the consumer has specified drawer content','should clean up the drawers stream on destroy',_drawers,'should position the drawers before/after the content in the DOM based on their position',drawerDebugElements,startNode,endNode,contentNode,startIndex,endIndex,'Expected start drawer to be inside the container','Expected end drawer to be inside the container','Expected start drawer to be before content','Expected end drawer to be after content',`<mat-drawer-container></mat-drawer-container>`,DrawerContainerNoDrawerTestApp,"`
    <mat-drawer-container>
      <mat-drawer position=""start""></mat-drawer>
      <mat-drawer position=""end""></mat-drawer>
    </mat-drawer-container>`",MatDrawerContainer,"`
    <mat-drawer-container (backdropClick)=""backdropClicked()"" [hasBackdrop]=""hasBackdrop"">
      <mat-drawer #drawer=""matDrawer"" [position]=""position""
                 (opened)=""open()""
                 (openedStart)=""openStart()""
                 (closed)=""close()""
                 (closedStart)=""closeStart()"">
        <button #drawerButton>Content</button>
      </mat-drawer>
      <button (click)=""drawer.open()"" class=""open"" #openButton></button>
      <button (click)=""drawer.close()"" class=""close"" #closeButton></button>
      <svg
        viewBox=""0 0 100 100""
        xmlns=""http://www.w3.org/2000/svg""
        tabindex=""0""
        focusable=""true""
        #svg>
        <circle cx=""50"" cy=""50"" r=""50""/>
      </svg>
    </mat-drawer-container>`",'drawer','drawerButton','openButton','closeButton',openStart,closeStart,backdropClicked,"`
    <mat-drawer-container>
      <mat-drawer #drawer mode=""side"" opened=""false"">
        Closed Drawer.
      </mat-drawer>
    </mat-drawer-container>`","`
    <mat-drawer-container>
      <mat-drawer #drawer mode=""side"" opened=""true"" (opened)=""openCallback()"">
        Closed Drawer.
      </mat-drawer>
    </mat-drawer-container>`",'open callback',"`
    <mat-drawer-container>
      <mat-drawer #drawer mode=""side"" [(opened)]=""isOpen"">
        Closed Drawer.
      </mat-drawer>
    </mat-drawer-container>`","`
    <mat-drawer-container>
      <mat-drawer #drawer1 [position]=""drawer1Position""></mat-drawer>
      <mat-drawer #drawer2 [position]=""drawer2Position""></mat-drawer>
    </mat-drawer-container>`","`
    <mat-drawer-container>
      <mat-drawer position=""start"" [mode]=""mode"">
        <input type=""text"" class=""input1""/>
      </mat-drawer>
      <input type=""text"" class=""input2""/>
    </mat-drawer-container>`","`
    <mat-drawer-container>
      <mat-drawer position=""start"" mode=""over"">
        <button disabled>Not focusable</button>
      </mat-drawer>
    </mat-drawer-container>`","`
    <mat-drawer-container>
      <mat-drawer *ngIf=""showDrawer"" #drawer mode=""side"">Drawer</mat-drawer>
    </mat-drawer-container>
  `","`
    <mat-drawer-container [dir]=""direction"">
      <mat-drawer *ngIf=""renderDrawer"" [mode]=""mode"" style=""width:100px""></mat-drawer>
    </mat-drawer-container>`","`
    <mat-drawer-container autosize style=""min-height: 200px;"">
      <mat-drawer mode=""push"" [position]=""drawer1Position"">
        Text
        <div [style.width.px]=""fillerWidth"" style=""height: 200px; background: red;""></div>
      </mat-drawer>
    </mat-drawer-container>`","`
    <mat-drawer-container>
      <mat-drawer>Drawer</mat-drawer>
      <mat-drawer-content>Content</mat-drawer-content>
    </mat-drawer-container>
  `","`
    <mat-drawer-container #container>
      <ng-container [ngSwitch]=""true"">
        <mat-drawer #drawer>Drawer</mat-drawer>
      </ng-container>
    </mat-drawer-container>`","`
    <mat-drawer-container #outerContainer>
      <mat-drawer #outerDrawer>Drawer</mat-drawer>
      <mat-drawer-content>
        <mat-drawer-container #innerContainer>
          <mat-drawer #innerDrawer>Drawer</mat-drawer>
        </mat-drawer-container>
      </mat-drawer-content>
    </mat-drawer-container>
  `",'outerContainer','outerDrawer','innerContainer','innerDrawer',sidenav,'should open',buttonText,'Open sidenav','should close again','should be fixed position when in fixed mode',SidenavWithFixedPosition,sidenavEl,MatSidenav,'mat-sidenav-fixed',fixed,'should set fixed bottom and top when in fixed mode','should pick up sidenavs that are not direct descendants',IndirectDescendantSidenav,'should not pick up sidenavs from nested containers',NestedSidenavContainers,outerSidenav,innerSidenav,"`
    <mat-sidenav-container>
      <mat-sidenav
          #drawer
          [fixedInViewport]=""fixed""
          [fixedTopGap]=""fixedTop""
          [fixedBottomGap]=""fixedBottom"">
        Drawer.
      </mat-sidenav>
      <mat-sidenav-content>
        Some content.
      </mat-sidenav-content>
    </mat-sidenav-container>`",fixedTop,fixedBottom,"`
    <mat-sidenav-container #container>
      <ng-container [ngSwitch]=""true"">
        <mat-sidenav #sidenav>Sidenav.</mat-sidenav>
      </ng-container>
      <mat-sidenav-content>Some content.</mat-sidenav-content>
    </mat-sidenav-container>`",MatSidenavContainer,'sidenav',"`
    <mat-sidenav-container #outerContainer>
      <mat-sidenav #outerSidenav>Sidenav</mat-sidenav>
      <mat-sidenav-content>
        <mat-sidenav-container #innerContainer>
          <mat-sidenav #innerSidenav>Sidenav</mat-sidenav>
        </mat-sidenav-container>
      </mat-sidenav-content>
    </mat-sidenav-container>
  `",'outerSidenav','innerSidenav',drawerHarness,'should load drawer harness based on position','should be able to get whether the drawer is open',threeOpened,'should be able to get the position of a drawer','should load all drawer container harnesses',containers,drawerContainerHarness,firstContainerDrawers,secondContainerDrawers,drawerContentHarness,SidenavHarnessTest,sidenavModule,'should be able to get whether a sidenav is fixed in the viewport',sidenavs,sidenavHarness,isFixedInViewport,'should load all sidenav container harnesses',sidenavContainerHarness,'should get the sidenavs within a container',firstContainerSidenavs,secondContainerSidenavs,getSidenavs,'should load all sidenav content harnesses',sidenavContentHarness,"`
    <mat-drawer-container>
      <mat-drawer id=""one"" position=""start"">One</mat-drawer>
      <mat-drawer id=""two"" mode=""side"" position=""end"">Two</mat-drawer>
      <mat-drawer-content>Content</mat-drawer-content>
    </mat-drawer-container>

    <mat-drawer-container>
      <mat-drawer id=""three"" mode=""push"" [opened]=""threeOpened"">Three</mat-drawer>
      <mat-drawer-content>Content</mat-drawer-content>
    </mat-drawer-container>
  `",DrawerHarnessTest,"`
    <mat-sidenav-container>
      <mat-sidenav id=""one"" position=""start"">One</mat-sidenav>
      <mat-sidenav id=""two"" position=""end"">Two</mat-sidenav>
      <mat-sidenav-content>Content</mat-sidenav-content>
    </mat-sidenav-container>

    <mat-sidenav-container>
      <mat-sidenav id=""three"" fixedInViewport>Three</mat-sidenav>
      <mat-sidenav-content>Content</mat-sidenav-content>
    </mat-sidenav-container>
  `",'#normal-slide-toggle .mat-slide-toggle-thumb-container','mat-checked',}-input`,/mat-slide-toggle-\d+-input/,'mat-slide-toggle-label-before','.mat-ripple-element:not(.mat-slide-toggle-persistent-ripple)',slideToggleRippleNativeElement,'.mat-slide-toggle-ripple','default options','.mat-slide-toggle','without label',slideToggleBarElement,slideToggleDebugEl,'.mat-slide-toggle-bar','should remove margin for slide-toggle without a label','mat-slide-toggle-bar-no-side-margin','should not remove margin if initial label is set through binding','should re-add margin if label is added asynchronously',flushMutationObserver,'label margin','should properly update margin if label content is projected','MatSlideToggle with forms','should prevent the form from submit when being required',reportValidity,"`
    <mat-slide-toggle [required]=""isRequired""
                     [disabled]=""isDisabled""
                     [color]=""slideColor""
                     [id]=""slideId""
                     [checked]=""slideChecked""
                     [name]=""slideName""
                     [aria-label]=""slideLabel""
                     [aria-labelledby]=""slideLabelledBy""
                     [aria-describedby]=""slideAriaDescribedBy""
                     [tabIndex]=""slideTabindex""
                     [labelPosition]=""labelPosition""
                     [disableRipple]=""disableRipple""
                     (toggleChange)=""onSlideToggleChange()""
                     (dragChange)=""onSlideDragChange()""
                     (change)=""onSlideChange($event)""
                     (click)=""onSlideClick($event)"">
      <span>Test Slide Toggle</span>
    </mat-slide-toggle>`","`<mat-slide-toggle [(ngModel)]=""modelValue""></mat-slide-toggle>`",slideToggleHarness,'should load slide-toggle with exact label','should load slide-toggle with disabled=true predicate','should load slide-toggle with disabled=false predicate','should load slide-toggle with regex label match',requiredToggle,optionalToggle,'Expected optional toggle to be valid','Expected required checked toggle to be valid','Expected required unchecked toggle to be invalid','First slide-toggle','should focus slide-toggle','should blur slide-toggle','should check slide-toggle','should uncheck slide-toggle','should not toggle disabled slide-toggle',"`
      <mat-slide-toggle
          [formControl]=""ctrl""
          required
          name=""first-name""
          aria-label=""First slide-toggle"">
        First
      </mat-slide-toggle>
      <mat-slide-toggle [disabled]=""disabled"" aria-labelledby=""second-label"">
        Second
      </mat-slide-toggle>
      <span id=""second-label"">Second slide-toggle</span>
  `",SlideToggleHarnessTest,'should load slider harness by id','#my-slider','should get id of slider','my-slider',225,'should get min value of slider','should get display value of slider','#225','should get orientation of slider','should be able to focus slider','should be able to blur slider','should be able to set value of slider in rtl','should get disabled state of slider','should be able to set value of inverted slider',invertSliders,'should be able to set value of inverted slider in rtl',"`
    <mat-slider value=""50"" disabled></mat-slider>
    <div [dir]=""dir"">
      <mat-slider [id]=""sliderId"" [displayWith]=""displayFn""
                  [invert]=""invertSliders"" thumbLabel></mat-slider>
    </div>
    <mat-slider min=""200"" max=""250"" value=""225"" [displayWith]=""displayFn"" vertical
                [invert]=""invertSliders"" thumbLabel>
    </mat-slider>
    `",sliderId,'snack-bar-container','.mat-simple-snackbar-action > button','button.mat-button','should set the animation state to visible on entry',`Expected the animation state would be 'hidden'.`,'should set the animation state to complete on exit','mat-snack-bar-center','mat-snack-bar-top',openSimple,'Hello!',snackBarHarness,'should load harness for custom snack-bar','should load snack-bar harness by selector','my-snack-bar','.my-snack-bar','should be able to get role of snack-bar','should be able to get aria-live of snack-bar',getAriaLive,'should be able to dismiss simple snack-bar with action',actionCount,isDismissed,'The snackbar should be present in the DOM before dismiss','The snackbar should be absent from the DOM after dismiss',`<ng-template>My custom snack-bar.</ng-template>`,snackBarToken,'should fail to get message of a snack-bar with custom content',/custom content/,'should fail to get action description of a snack-bar with custom content','should fail to check whether a snack-bar with custom content has an action','should have the sort headers register and deregister themselves',sortables,matSort,'defaultA',defaultA,'defaultB',defaultB,'should use the column definition if used within a cdk table',cdkTableMatSortAppFixture,CdkTableMatSortApp,cdkTableMatSortAppComponent,'should use the column definition if used within an mat table',matTableMatSortAppFixture,MatTableMatSortApp,matTableMatSortAppComponent,'checking correct arrow direction and view state for its various states',expectedStates,viewState,arrowDirection,'overrideStart','overrideDisableClear',expectViewAndDirectionStates,'should be correct when mousing over headers and leaving on mouseleave','asc-to-hint','hint-to-asc','desc-to-hint','should be correct when mousing over header and then sorting','active-asc','should be correct when cycling through a default sort header','asc-to-active','active-desc','active-to-desc','should not enter sort with animations if an animations is disabled',_disableViewStateAnimation,'should be correct when sort has changed while a header is active','active-to-asc','should be correct when sort has been disabled',disabledColumnSort,'should be correct when sorting programmatically','should be able to cycle from asc -> desc from either start point',disableClear,testSingleColumnSortDirectionSequence,'should be able to cycle asc -> desc -> [none]','should be able to cycle desc -> asc -> [none]','should allow for the cycling the sort direction to be disabled per column','#defaultA .mat-sort-header-container','should allow for the cycling the sort direction to be disabled for all columns',disableAllSort,'should reset sort direction when a different column is sorted','should throw an error if an MatSortable is not contained within an MatSort ','directive',MatSortHeaderMissingMatSortApp,getSortHeaderNotContainedWithinSortError,'should throw an error if two MatSortables have the same id',MatSortDuplicateMatSortableIdsApp,getSortDuplicateSortableIdError,'duplicateId','should throw an error if an MatSortable is missing an id',MatSortableMissingIdApp,getSortHeaderMissingIdError,'should throw an error if the provided direction is invalid',MatSortableInvalidDirection,getSortInvalidDirectionError,'should allow let MatSortable override the default sort parameters','should toggle indicator hint on button focus/blur and hide on click',blurEvent,_showIndicatorHint,'should toggle indicator hint on mouseenter/mouseleave and hide on click','#defaultA',mouseenterEvent,mouseleaveEvent,'should apply the aria-sort label to the header when sorted',sortHeaderElement,'should not render the arrow if sorting is disabled for that column','.mat-sort-header-arrow','should render the arrow if a disabled column is being sorted by',headerNativeElement,'.mat-sort-header-container','should add a default aria description to sort buttons',descriptionId,descriptionElement,'Sort','should add a custom aria description to sort buttons','#defaultB .mat-sort-header-container','Sort second column',secondColumnDescription,'Sort 2nd column','should render arrows after sort header by default',matSortWithArrowPositionFixture,MatSortWithArrowPosition,containerA,containerB,'mat-sort-header-position-before','should render arrows before if appropriate parameter passed',matSortWithArrowPositionComponent,arrowPosition,'should render arrows in proper position based on arrowPosition parameter','with default options',MatSortWithoutExplicitInputs,MatSortModule,MatTableModule,MAT_SORT_DEFAULT_OPTIONS,'with default arrowPosition',MatSortWithoutInputs,'should render arrows in proper position',SimpleMatSortApp,expectedSequence,SortDirection,SimpleMatSortAppColumnIds,actualSequence,latestSortEvent,"`
    <div matSort
         [matSortActive]=""active""
         [matSortDisabled]=""disableAllSort""
         [matSortStart]=""start""
         [matSortDirection]=""direction""
         [matSortDisableClear]=""disableClear""
         (matSortChange)=""latestSortEvent = $event"">
      <div id=""defaultA""
           #defaultA
           mat-sort-header=""defaultA""
           [disabled]=""disabledColumnSort"">
        A
      </div>
      <div id=""defaultB""
           #defaultB
           mat-sort-header=""defaultB""
           [sortActionDescription]=""secondColumnDescription"">
        B
      </div>
      <div id=""overrideStart""
           #overrideStart
           mat-sort-header=""overrideStart"" start=""desc"">
        D
      </div>
      <div id=""overrideDisableClear""
           #overrideDisableClear
           mat-sort-header=""overrideDisableClear""
           disableClear>
        E
      </div>
    </div>
  `",Sort,overrideStart,overrideDisableClear,sortElement,viewStates,sortHeaders,_getArrowViewState,_getArrowDirectionState,"`
    <cdk-table [dataSource]=""dataSource"" matSort>
      <ng-container cdkColumnDef=""column_a"">
        <cdk-header-cell *cdkHeaderCellDef #sortHeaderA mat-sort-header> Column A </cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.a}} </cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""column_b"">
        <cdk-header-cell *cdkHeaderCellDef #sortHeaderB mat-sort-header> Column B </cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.b}} </cdk-cell>
      </ng-container>

      <ng-container cdkColumnDef=""column_c"">
        <cdk-header-cell *cdkHeaderCellDef #sortHeaderC mat-sort-header> Column C </cdk-header-cell>
        <cdk-cell *cdkCellDef=""let row""> {{row.c}} </cdk-cell>
      </ng-container>

      <cdk-header-row *cdkHeaderRowDef=""columnsToRender""></cdk-header-row>
      <cdk-row *cdkRowDef=""let row; columns: columnsToRender""></cdk-row>
    </cdk-table>
  `","`
    <mat-table [dataSource]=""dataSource"" matSort>
      <ng-container matColumnDef=""column_a"">
        <mat-header-cell *matHeaderCellDef #sortHeaderA mat-sort-header> Column A </mat-header-cell>
        <mat-cell *matCellDef=""let row""> {{row.a}} </mat-cell>
      </ng-container>

      <ng-container matColumnDef=""column_b"">
        <mat-header-cell *matHeaderCellDef #sortHeaderB mat-sort-header> Column B </mat-header-cell>
        <mat-cell *matCellDef=""let row""> {{row.b}} </mat-cell>
      </ng-container>

      <ng-container matColumnDef=""column_c"">
        <mat-header-cell *matHeaderCellDef #sortHeaderC mat-sort-header> Column C </mat-header-cell>
        <mat-cell *matCellDef=""let row""> {{row.c}} </mat-cell>
      </ng-container>

      <mat-header-row *matHeaderRowDef=""columnsToRender""></mat-header-row>
      <mat-row *matRowDef=""let row; columns: columnsToRender""></mat-row>
    </mat-table>
  `","`<div mat-sort-header=""a""> A </div>`","`
    <div matSort>
      <div mat-sort-header=""duplicateId""> A </div>
      <div mat-sort-header=""duplicateId""> A </div>
    </div>
  `","`
    <div matSort>
      <div mat-sort-header> A </div>
    </div>
  `","`
    <div matSort matSortDirection=""ascending"">
      <div mat-sort-header=""a""> A </div>
    </div>
  `","`
    <div matSort
         [matSortActive]=""active""
         [matSortStart]=""start""
         (matSortChange)=""latestSortEvent = $event"">
      <div id=""defaultA"" #defaultA mat-sort-header=""defaultA"">
        A
      </div>
    </div>
  `","`
    <div matSort>
      <div id=""defaultA"" #defaultA mat-sort-header=""defaultA"" [arrowPosition]=""arrowPosition"">
        A
      </div>
      <div id=""defaultB"" #defaultB mat-sort-header=""defaultB"" [arrowPosition]=""arrowPosition"">
        B
      </div>
    </div>
  `","`
    <div matSort>
      <div id=""defaultA"" #defaultA mat-sort-header=""defaultA"">
        A
      </div>
      <div id=""defaultB"" #defaultB mat-sort-header=""defaultB"">
        B
      </div>
    </div>
  `",sortHarness,'should load the harnesses for all the headers in a mat-sort','should be able to filter headers by their label text','should be able to filter headers by their labels via a regex',/^C/,'should get the active state of a header','should get the sorte direction of a header','should get the active header',fifthHeader,getActiveHeader,activeHeader,"`
    <table matSort (matSortChange)=""sortData($event)"">
      <tr>
        <th mat-sort-header=""name"">Dessert</th>
        <th mat-sort-header=""calories"">Calories</th>
        <th mat-sort-header=""fat"" [disabled]=""disableThirdHeader"">Fat</th>
        <th mat-sort-header=""carbs"">Carbs</th>
        <th mat-sort-header=""protein"">Protein</th>
      </tr>

      <tr *ngFor=""let dessert of sortedData"">
        <td>{{dessert.name}}</td>
        <td>{{dessert.calories}}</td>
        <td>{{dessert.fat}}</td>
        <td>{{dessert.carbs}}</td>
        <td>{{dessert.protein}}</td>
      </tr>
    </table>
  `",SortHarnessTest,desserts,'Frozen yogurt',calories,159,fat,carbs,protein,'Ice cream sandwich',237,'Eclair','Cupcake',305,'Gingerbread',356,sortedData,sortData,aValue,bValue,'should render a stepper','mat-stepper','basic behavior','should change steps correctly when stepper button is clicked',previousButton,'Back',"'mat-step-header[aria-selected=""true""]'",'1\nFill out your name','2\nFill out your address',stepHeaders,'mat-step-header','linear stepper',linearButton,'toggle-linear','should not move to next step when stepper button is clicked','should default to the first step',stepperComponent,MatStepper,'should throw when a negative `selectedIndex` is assigned',/Cannot assign out-of-bounds/,'should throw when an out-of-bounds `selectedIndex` is assigned','should change selected index on header click','.mat-vertical-stepper-header',MatStep,stepHeaderEl,"'should set the ""tablist"" role on stepper'",stepperEl,'should set aria-expanded of content correctly',stepContents,`.mat-vertical-stepper-content`,firstStepContentEl,secondStepContentEl,'should display the correct label',selectedLabel,"'[aria-selected=""true""]'",'Step 1','Step 3',inputLabel,'New Label','should go to next available step when the next button is clicked',nextButtonNativeEl,MatStepperNext,"'should set the next stepper button type to ""submit""'","`Expected the button to have ""submit"" set as type.`",'should go to previous available step when the previous button is clicked',previousButtonNativeEl,MatStepperPrevious,"'should set the previous stepper button type to ""button""'","`Expected the button to have ""button"" set as type.`",'should set the correct step position for animation',_getAnimationDirection,'previous','should not set focus on header of selected step if header is not clicked','should focus next step header if focus is inside the stepper','should focus next step header if focus is inside the stepper with shadow DOM',SimpleMatVerticalStepperApp,'should only be able to return to a previous step if it is editable','should set create icon if step is editable and completed',_getIndicatorType,'edit','should set done icon if step is not editable and is completed','should emit an event when the enter animation is done',selectionChangeSpy,animationDoneSpy,'animationDone spy',selectionChangeSubscription,animationDoneSubscription,'should set the correct aria-posinset and aria-setsize','.mat-step-header','should adjust the index when removing a step before the current one',showStepTwo,'should not do anything when pressing the ENTER key with a modifier',assertSelectKeyWithModifierInteraction,'should not do anything when pressing the SPACE key with a modifier',stepHeaderNativeElements,'should hide the header icons from assistive technology','.mat-step-icon span','should add units to unit-less values passed in to animationDuration',animationDuration,'1337ms','basic stepper when attempting to set the selected step too early','should not throw','basic stepper with i18n label change',i18nFixture,SimpleMatHorizontalStepperApp,MatStepperIntl,optionalLabel,'.mat-step-optional','Optional','Valgfri','basic stepper with completed label change','should re-render when the completed labels change',stepperDebugElement,completedLabel,'.cdk-visually-hidden','Completed','Completada','basic stepper with editable label change','should re-render when the editable label changes',editableLabel,'Editable','Modificabile','icon overrides',IconOverridesStepper,'should allow for the `edit` icon to be overridden','Custom edit','should allow for the `done` icon to be overridden','Custom done','should allow for the `number` icon to be overridden with context','III','should reverse animation in RTL mode',LinearMatVerticalStepperApp,'should have true linear attribute',linear,'should not move to next step if current step is invalid',oneGroup,'oneCtrl','answer','should not move to next step if current step is pending',twoGroup,'twoCtrl',pending,validationTrigger,'should be able to focus step header upon click if it is unable to be selected','should be able to move to next step even when invalid if current step is optional',threeGroup,'threeCtrl','Expected selectedIndex to change when optional step input is empty.','Expected selectedIndex to change when optional step input is invalid.','should be able to reset the stepper to its initial state',interacted,completed,'should reset back to the first step when some of the steps are not editable','should not clobber the `complete` binding when resetting',CdkStep,fillOutStepper,'Expected third step to be considered complete after the first run through.','Expected third step to be considered complete when doing a run after ','a reset.','should be able to skip past the current step if a custom `completed` value is set','should set aria-disabled if the user is not able to navigate to a step','linear stepper with a pre-defined selectedIndex',preselectedFixture,SimplePreselectedMatHorizontalStepperApp,'selectedIndex should be typeof number','value of selectedIndex should be the pre-defined value','linear stepper with no `stepControl`',noStepControlFixture,SimpleStepperWithoutStepControl,'should not move to the next step if the current one is not completed ','.mat-horizontal-stepper-header','linear stepper with `stepControl`',controlAndBindingFixture,SimpleStepperWithStepControlAndCompletedBinding,'should have the `stepControl` take precedence when `completed` is set','vertical stepper',"'should set the aria-orientation to ""vertical""'",'should support using the left/right arrows to move focus',assertCorrectKeyboardInteraction,'should support using the up/down arrows to move focus','should reverse arrow key focus in RTL mode',assertArrowKeyInteractionInRtl,'should be able to disable ripples',MatStepHeader,headerRipples,headerDebugEl,'should be able to set the theme for all steps',stepperTheme,'should be able to set the theme for a specific step',secondStepTheme,'horizontal stepper',"'should set the aria-orientation to ""horizontal""'",'should maintain the correct navigation order when a step is added later on',HorizontalStepperWithDelayedStep,renderSecondStep,'should reverse arrow key focus when switching into RTL after init','should be able to mark all steps as interacted','should emit when the user has interacted with a step',interactedSteps,merge,interactedStream,'should set a class on the host if the header is positioned at the bottom',stepperHost,'.mat-stepper-horizontal','mat-stepper-header-position-bottom','linear stepper with valid step',LinearStepperWithValidOptionalStep,'must be visited if not optional','can be skipped entirely if optional',step2Optional,StepperWithAriaInputs,stepHeader,'First step','first-step-label','stepper with error state',MatHorizontalStepperWithErrorsApp,showErrorByDefault,STEPPER_GLOBAL_OPTIONS,'should show error state',STEP_STATE,ERROR,'should respect a custom falsy hasError value',"'should show error state if explicitly enabled, even when disabled globally'",'stepper using Material UI Guideline logic',displayDefaultIndicatorType,'should show done state when step is completed and its not the current step',DONE,'should show edit state when step is editable and its the current step',EDIT,'indirect descendants','should be able to change steps when steps are indirect descendants',StepperWithIndirectDescendantSteps,IndirectDescendantIconOverridesStepper,'should be able to toggle steps via ngIf',StepperWithNgIf,showStep2,'should not pick up the steps from descendant steppers',NestedSteppers,'should not throw when trying to change steps after initializing to an out-of-bounds index',StepperWithStaticOutOfBoundsIndex,'stepper with lazy content','should render the content of the selected step on init',StepperWithLazyContent,'Step 1 content','Step 2 content','Step 3 content','should render the content of steps when the user navigates to them',StepperOrientation,nextKey,prevKey,_getFocusIndex,'Expected index of focused step to increase by 1 after pressing the next key.','Expected index of selected step to remain unchanged after pressing the next key.','Expected index of focused step to remain unchanged after ENTER event.','Expected index of selected step to change to index of focused step ','after ENTER event.','Expected index of focused step to decrease by 1 after pressing the ','previous key.','Expected index of selected step to remain unchanged after pressing the ','Expected index of focused step to cycle through to index 0 after pressing ','the next key.','Expected index of selected step to remain unchanged after pressing ','Expected index of focused to remain unchanged after SPACE event.','after SPACE event.','Expected last step to be focused when pressing END.','Expected default END action to be prevented.','Expected first step to be focused when pressing HOME.','Expected default HOME action to be prevented.',selectionKey,modifiers,'Expected index of focused step to increase by 1 after pressing ',`Expected selected index to remain unchanged `,`when pressing the selection key with ${,} modifier.`,asyncValidator,AsyncValidatorFn,AbstractControl,ValidationErrors,asyncValidation,MatStepperModule,overrideComponent,"`
  <form [formGroup]=""formGroup"">
    <mat-stepper>
      <mat-step errorMessage=""This field is required""
        [stepControl]=""formGroup.get('firstNameCtrl')"">
        <ng-template matStepLabel>Step 1</ng-template>
        <mat-form-field>
          <mat-label>First name</mat-label>
          <input matInput formControlName=""firstNameCtrl"" required>
          <mat-error>This field is required</mat-error>
        </mat-form-field>
        <div>
          <button mat-button matStepperPrevious>Back</button>
          <button mat-button matStepperNext>Next</button>
        </div>
      </mat-step>
      <mat-step>
        <ng-template matStepLabel>Step 2</ng-template>
        Content 2
        <div>
          <button mat-button matStepperPrevious>Back</button>
          <button mat-button matStepperNext>Next</button>
        </div>
      </mat-step>
    </mat-stepper>
  </form>
  `",firstNameCtrl,lastNameCtrl,"`
    <mat-stepper
      [disableRipple]=""disableRipple""
      [color]=""stepperTheme""
      [headerPosition]=""headerPosition"">
      <mat-step>
        <ng-template matStepLabel>Step 1</ng-template>
        Content 1
        <div>
          <button mat-button matStepperPrevious>Back</button>
          <button mat-button matStepperNext>Next</button>
        </div>
      </mat-step>
      <mat-step [color]=""secondStepTheme"">
        <ng-template matStepLabel>Step 2</ng-template>
        Content 2
        <div>
          <button mat-button matStepperPrevious>Back</button>
          <button mat-button matStepperNext>Next</button>
        </div>
      </mat-step>
      <mat-step [label]=""inputLabel"" optional>
        Content 3
        <div>
          <button mat-button matStepperPrevious>Back</button>
          <button mat-button matStepperNext>Next</button>
        </div>
      </mat-step>
    </mat-stepper>
  `","`
    <mat-stepper orientation=""vertical"" [disableRipple]=""disableRipple"" [color]=""stepperTheme"">
      <mat-step>
        <ng-template matStepLabel>Step 1</ng-template>
        Content 1
        <div>
          <button mat-button matStepperPrevious>Back</button>
          <button mat-button matStepperNext>Next</button>
        </div>
      </mat-step>
      <mat-step *ngIf=""showStepTwo"" [color]=""secondStepTheme"">
        <ng-template matStepLabel>Step 2</ng-template>
        Content 2
        <div>
          <button mat-button matStepperPrevious>Back</button>
          <button mat-button matStepperNext>Next</button>
        </div>
      </mat-step>
      <mat-step [label]=""inputLabel"">
        Content 3
        <div>
          <button mat-button matStepperPrevious>Back</button>
          <button mat-button matStepperNext>Next</button>
        </div>
      </mat-step>
    </mat-stepper>
  `","`
    <mat-stepper orientation=""vertical"" linear>
      <mat-step [stepControl]=""oneGroup"">
        <form [formGroup]=""oneGroup"">
          <ng-template matStepLabel>Step one</ng-template>
          <input formControlName=""oneCtrl"" required>
          <div>
            <button mat-button matStepperPrevious>Back</button>
            <button mat-button matStepperNext>Next</button>
          </div>
        </form>
      </mat-step>
      <mat-step [stepControl]=""twoGroup"">
        <form [formGroup]=""twoGroup"">
          <ng-template matStepLabel>Step two</ng-template>
          <input formControlName=""twoCtrl"" required>
          <div>
            <button mat-button matStepperPrevious>Back</button>
            <button mat-button matStepperNext>Next</button>
          </div>
        </form>
      </mat-step>
      <mat-step [stepControl]=""threeGroup"" optional>
        <form [formGroup]=""threeGroup"">
          <ng-template matStepLabel>Step two</ng-template>
          <input formControlName=""threeCtrl"">
          <div>
            <button mat-button matStepperPrevious>Back</button>
            <button mat-button matStepperNext>Next</button>
          </div>
        </form>
      </mat-step>
      <mat-step>
        Done
      </mat-step>
    </mat-stepper>
  `",oneCtrl,twoCtrl,threeCtrl,VALID_REGEX,"`
    <mat-stepper [linear]=""true"" [selectedIndex]=""index"">
      <mat-step label=""One""></mat-step>
      <mat-step label=""Two""></mat-step>
      <mat-step label=""Three""></mat-step>
    </mat-stepper>
  `","`
    <mat-stepper linear>
      <mat-step
        *ngFor=""let step of steps""
        [label]=""step.label""
        [completed]=""step.completed""></mat-step>
    </mat-stepper>
  `","`
    <mat-stepper linear>
      <mat-step
        *ngFor=""let step of steps""
        [label]=""step.label""
        [stepControl]=""step.control""
        [completed]=""step.completed""></mat-step>
    </mat-stepper>
  `","`
    <mat-stepper>
      <ng-template matStepperIcon=""edit"">Custom edit</ng-template>
      <ng-template matStepperIcon=""done"">Custom done</ng-template>
      <ng-template matStepperIcon=""number"" let-index=""index"">
        {{getRomanNumeral(index + 1)}}
      </ng-template>

      <mat-step>Content 1</mat-step>
      <mat-step>Content 2</mat-step>
      <mat-step>Content 3</mat-step>
    </mat-stepper>
`",getRomanNumeral,numberMap,'II','IV','V','VI','VII','VIII','IX',"`
    <mat-stepper>
      <ng-container [ngSwitch]=""true"">
        <ng-template matStepperIcon=""edit"">Custom edit</ng-template>
        <ng-template matStepperIcon=""done"">Custom done</ng-template>
        <ng-template matStepperIcon=""number"" let-index=""index"">
          {{getRomanNumeral(index + 1)}}
        </ng-template>
      </ng-container>

      <mat-step>Content 1</mat-step>
      <mat-step>Content 2</mat-step>
      <mat-step>Content 3</mat-step>
    </mat-stepper>
`","`
    <mat-stepper linear>
      <mat-step label=""Step 1"" [stepControl]=""controls[0]""></mat-step>
      <mat-step label=""Step 2"" [stepControl]=""controls[1]"" [optional]=""step2Optional""></mat-step>
      <mat-step label=""Step 3"" [stepControl]=""controls[2]""></mat-step>
    </mat-stepper>
  `","`
    <mat-stepper>
      <mat-step [aria-label]=""ariaLabel"" [aria-labelledby]=""ariaLabelledby"" label=""One""></mat-step>
    </mat-stepper>
  `","`
    <mat-stepper orientation=""vertical"">
      <ng-container [ngSwitch]=""true"">
        <mat-step label=""Step 1"">Content 1</mat-step>
        <mat-step label=""Step 2"">Content 2</mat-step>
        <mat-step label=""Step 3"">Content 3</mat-step>
      </ng-container>
    </mat-stepper>
  `","`
    <mat-stepper orientation=""vertical"">
      <mat-step>
        <ng-template matStepLabel>Step 1</ng-template>
      </mat-step>

      <mat-step *ngIf=""showStep2"">
        <ng-template matStepLabel>Step 2</ng-template>
      </mat-step>
    </mat-stepper>
  `","`
    <mat-stepper orientation=""vertical"">
      <mat-step label=""Step 1"">Content 1</mat-step>
      <mat-step label=""Step 2"">Content 2</mat-step>
      <mat-step label=""Step 3"">
        <mat-stepper>
          <mat-step label=""Sub-Step 1"">Sub-Content 1</mat-step>
          <mat-step label=""Sub-Step 2"">Sub-Content 2</mat-step>
        </mat-stepper>
      </mat-step>
    </mat-stepper>
  `","`
    <mat-stepper orientation=""vertical"" selectedIndex=""1337"">
      <mat-step label=""Step 1"">Content 1</mat-step>
      <mat-step label=""Step 2"">Content 2</mat-step>
      <mat-step label=""Step 3"">Content 3</mat-step>
    </mat-stepper>
  `","`
    <mat-stepper orientation=""vertical"" [selectedIndex]=""selectedIndex"">
      <mat-step>
        <ng-template matStepLabel>Step 1</ng-template>
        <ng-template matStepContent>Step 1 content</ng-template>
      </mat-step>
      <mat-step>
        <ng-template matStepLabel>Step 2</ng-template>
        <ng-template matStepContent>Step 2 content</ng-template>
      </mat-step>
      <mat-step>
        <ng-template matStepLabel>Step 3</ng-template>
        <ng-template matStepContent>Step 3 content</ng-template>
      </mat-step>
    </mat-stepper>
  `","`
    <mat-stepper>
      <mat-step label=""Step 1"">Content 1</mat-step>
      <mat-step label=""Step 2"" *ngIf=""renderSecondStep"">Content 2</mat-step>
      <mat-step label=""Step 3"">Content 3</mat-step>
    </mat-stepper>
  `",stepperHarness,'should filter steppers by their orientation',verticalSteppers,horizontalSteppers,VERTICAL,HORIZONTAL,'should get the orientation of a stepper','should filter the steps of a stepper','#one-stepper',/Two|Four/,'should be able to select a particular step that matches a filter',selectStep,'should be able to get the text-based label of a step','#two-stepper','should be able to get the aria-label of a step','Fourth step','should be able to get the aria-labelledby of a step','some-label','should get the selected state of a step','should be able to select a step','should get whether a step is optional',isOptional,'should be able to get harness loader for an element inside a tab',stepperNextHarness,stepperPreviousHarness,'Previous','should go backward when pressing the previous button','should get whether a step has errors','#three-stepper',hasErrors,'should get whether a step has been completed',isCompleted,"`
    <mat-stepper orientation=""vertical"" id=""one-stepper"">
      <mat-step label=""One"">
        <button matStepperNext>Next</button>
      </mat-step>
      <mat-step label=""Two"">
        <button matStepperPrevious>Previous</button>
        <button matStepperNext>Next</button>
      </mat-step>
      <mat-step label=""Three"" aria-labelledby=""some-label"">
        <button matStepperPrevious>Previous</button>
        <button matStepperNext>Next</button>
      </mat-step>
      <mat-step label=""Four"" aria-label=""Fourth step"">
        <button matStepperPrevious>Previous</button>
      </mat-step>
    </mat-stepper>

    <mat-stepper id=""two-stepper"">
      <mat-step>
        <ng-template matStepLabel>One</ng-template>
      </mat-step>
      <mat-step optional>
        <ng-template matStepLabel>Two</ng-template>
      </mat-step>
      <mat-step optional>
        <ng-template matStepLabel>Three</ng-template>
      </mat-step>
    </mat-stepper>

    <mat-stepper orientation=""vertical"" id=""three-stepper"">
      <mat-step [stepControl]=""oneGroup"" label=""One"">
        <form [formGroup]=""oneGroup"">
          <input formControlName=""oneCtrl"" required>
        </form>
      </mat-step>
      <mat-step [stepControl]=""twoGroup"" label=""Two"">
        <form [formGroup]=""twoGroup"">
          <input formControlName=""twoCtrl"" required>
        </form>
      </mat-step>
    </mat-stepper>
  `",StepperHarnessTest,'should be able to correctly sort an array of numbers',testSortWithValues,'should be able to correctly sort an array of string','apples','bananas','cherries','lemons','strawberries','should be able to correctly sort an array of strings and numbers','should unsubscribe from the re-render stream when disconnected',_renderChangesSubscription,'unsubscribe','should re-subscribe to the sort stream when re-connecting after being disconnected',sortChange,'subscribe','should update filteredData even if the data source is disconnected',"`<div matSort matSortDirection=""asc""></div>`",MatSortApp,'.mat-table','.mat-no-data-row','.mat-table th','mat-table-sticky',"`
    <mat-table [dataSource]=""dataSource"">
      <ng-container matColumnDef=""column_a"">
        <mat-header-cell *matHeaderCellDef> Column A</mat-header-cell>
        <mat-cell *matCellDef=""let row""> {{row.a}}</mat-cell>
        <mat-footer-cell *matFooterCellDef> Footer A</mat-footer-cell>
      </ng-container>

      <ng-container matColumnDef=""column_b"">
        <mat-header-cell *matHeaderCellDef> Column B</mat-header-cell>
        <mat-cell *matCellDef=""let row""> {{row.b}}</mat-cell>
        <mat-footer-cell *matFooterCellDef> Footer B</mat-footer-cell>
      </ng-container>

      <ng-container matColumnDef=""column_c"">
        <mat-header-cell *matHeaderCellDef> Column C</mat-header-cell>
        <mat-cell *matCellDef=""let row""> {{row.c}}</mat-cell>
        <mat-footer-cell *matFooterCellDef> Footer C</mat-footer-cell>
      </ng-container>

      <ng-container matColumnDef=""special_column"">
        <mat-cell *matCellDef=""let row""> fourth_row </mat-cell>
      </ng-container>

      <mat-header-row *matHeaderRowDef=""columnsToRender""></mat-header-row>
      <mat-row *matRowDef=""let row; columns: columnsToRender""></mat-row>
      <mat-row *matRowDef=""let row; columns: ['special_column']; when: isFourthRow""></mat-row>
      <div *matNoDataRow>No data</div>
      <mat-footer-row *matFooterRowDef=""columnsToRender""></mat-footer-row>
    </mat-table>
  `","`
    <table mat-table [dataSource]=""dataSource"">
      <ng-container matColumnDef=""column_a"">
        <th mat-header-cell *matHeaderCellDef> Column A</th>
        <td mat-cell *matCellDef=""let row"">{{row.a}}</td>
      </ng-container>

      <ng-container matColumnDef=""column_b"">
        <th mat-header-cell *matHeaderCellDef> Column B</th>
        <td mat-cell *matCellDef=""let row"">
          <table mat-table [dataSource]=""dataSource"">
            <ng-container matColumnDef=""column_a"">
              <th mat-header-cell *matHeaderCellDef> Column A</th>
              <td mat-cell *matCellDef=""let row""> {{row.a}}</td>
            </ng-container>

            <ng-container matColumnDef=""column_b"">
              <th mat-header-cell *matHeaderCellDef> Column B</th>
              <td mat-cell *matCellDef=""let row""> {{row.b}}</td>
            </ng-container>

            <ng-container matColumnDef=""column_c"">
              <th mat-header-cell *matHeaderCellDef> Column C</th>
              <td mat-cell *matCellDef=""let row""> {{row.c}}</td>
            </ng-container>

            <tr mat-header-row *matHeaderRowDef=""columnsToRender""></tr>
            <tr mat-row *matRowDef=""let row; columns: columnsToRender""></tr>
          </table>
        </td>
      </ng-container>

      <ng-container matColumnDef=""column_c"">
        <th mat-header-cell *matHeaderCellDef> Column C</th>
        <td mat-cell *matCellDef=""let row"">{{row.c}}</td>
      </ng-container>

      <tr mat-header-row *matHeaderRowDef=""columnsToRender""></tr>
      <tr mat-row *matRowDef=""let row; columns: columnsToRender""></tr>
    </table>
  `","`
    <mat-table [dataSource]=""dataSource"" [multiTemplateDataRows]=""multiTemplateDataRows"">
      <ng-container matColumnDef=""column_a"">
        <mat-header-cell *matHeaderCellDef> Column A</mat-header-cell>
        <mat-cell *matCellDef=""let row""> {{row.a}}</mat-cell>
        <mat-footer-cell *matFooterCellDef> Footer A</mat-footer-cell>
      </ng-container>

      <ng-container matColumnDef=""special_column"">
        <mat-cell *matCellDef=""let row""> fourth_row </mat-cell>
      </ng-container>

      <mat-header-row *matHeaderRowDef=""['column_a']""></mat-header-row>
      <mat-row *matRowDef=""let row; columns: ['column_a']""></mat-row>
      <mat-row *matRowDef=""let row; columns: ['special_column']; when: isFourthRow""></mat-row>
      <mat-footer-row *matFooterRowDef=""['column_a']""></mat-footer-row>
    </mat-table>
  `","`
    <mat-table [dataSource]=""dataSource"" matSort>
      <ng-container matColumnDef=""column_a"">
        <mat-header-cell *matHeaderCellDef mat-sort-header=""a""> Column A</mat-header-cell>
        <mat-cell *matCellDef=""let row""> {{row.a}}</mat-cell>
        <mat-footer-cell *matFooterCellDef> Footer A</mat-footer-cell>
      </ng-container>

      <ng-container matColumnDef=""column_b"">
        <mat-header-cell *matHeaderCellDef> Column B</mat-header-cell>
        <mat-cell *matCellDef=""let row""> {{row.b}}</mat-cell>
        <mat-footer-cell *matFooterCellDef> Footer B</mat-footer-cell>
      </ng-container>

      <ng-container matColumnDef=""column_c"">
        <mat-header-cell *matHeaderCellDef> Column C</mat-header-cell>
        <mat-cell *matCellDef=""let row""> {{row.c}}</mat-cell>
        <mat-footer-cell *matFooterCellDef> Footer C</mat-footer-cell>
      </ng-container>

      <mat-header-row *matHeaderRowDef=""columnsToRender""></mat-header-row>
      <mat-row *matRowDef=""let row; columns: columnsToRender""></mat-row>
      <mat-footer-row *matFooterRowDef=""columnsToRender""></mat-footer-row>
    </mat-table>

    <mat-paginator [pageSize]=""5""></mat-paginator>
  `","`
    <mat-table [dataSource]=""dataSource"" matSort>
      <ng-container matColumnDef=""column_a"">
        <mat-header-cell *matHeaderCellDef mat-sort-header=""a""> Column A</mat-header-cell>
        <mat-cell *matCellDef=""let row""> {{row.a}}</mat-cell>
      </ng-container>

      <ng-container matColumnDef=""column_b"">
        <mat-header-cell *matHeaderCellDef> Column B</mat-header-cell>
        <mat-cell *matCellDef=""let row""> {{row.b}}</mat-cell>
      </ng-container>

      <ng-container matColumnDef=""column_c"">
        <mat-header-cell *matHeaderCellDef> Column C</mat-header-cell>
        <mat-cell *matCellDef=""let row""> {{row.c}}</mat-cell>
      </ng-container>

      <mat-header-row *matHeaderRowDef=""columnsToRender""></mat-header-row>
      <mat-row *matRowDef=""let row; columns: columnsToRender""></mat-row>
    </mat-table>
  `","`
    <mat-table [dataSource]=""dataSource"">
      <ng-container matColumnDef=""column_a"">
        <mat-header-cell *matHeaderCellDef> Column A</mat-header-cell>
        <mat-cell *matCellDef=""let row""> {{row.a}}</mat-cell>
      </ng-container>

      <ng-container matColumnDef=""column_b"">
        <mat-header-cell *matHeaderCellDef> Column B</mat-header-cell>
        <mat-cell *matCellDef=""let row""> {{row.b}}</mat-cell>
      </ng-container>

      <ng-container matColumnDef=""column_c"">
        <mat-header-cell *matHeaderCellDef> Column C</mat-header-cell>
        <mat-cell *matCellDef=""let row""> {{row.c}}</mat-cell>
      </ng-container>

      <mat-header-row *matHeaderRowDef=""columnsToRender""></mat-header-row>
      <mat-row *matRowDef=""let row; columns: columnsToRender""></mat-row>
    </mat-table>

    <mat-paginator [pageSize]=""5""></mat-paginator>
  `","`
    <mat-table [dataSource]=""dataSource"">
      <ng-container matColumnDef=""column_a"">
        <mat-header-cell *matHeaderCellDef>Column A</mat-header-cell>
        <mat-cell *matCellDef=""let row"">{{row.a}}</mat-cell>
      </ng-container>

      <mat-header-row *matHeaderRowDef=""columnsToRender""></mat-header-row>
      <ng-container *matRowDef=""let row; columns: columnsToRender"">
        <mat-row></mat-row>
      </ng-container>
    </mat-table>
  `",'.mat-header-row','.mat-footer-row','.mat-row','mat-cell','mat-header-cell','mat-footer-cell',tableHarness,'should be able to filter cells by regex',/^H/,'should be able to get the table text organized by columns',getCellTextByColumnName,'No.','Number of the element','Name','Name of the element','Carbon','Nitrogen','Oxygen','Fluorine','Neon','Weight','Weight of the element','6.941','9.0122','10.811','12.0107','14.0067','15.9994','18.9984','20.1797','Symbol','Symbol of the element','Ne','should be able to get the table text organized by rows',getCellTextByIndex,'should be able to get the cell text in a row organized by index','should be able to get the cell text in a row organized by columns',"`
    <table mat-table [dataSource]=""dataSource"">
      <ng-container matColumnDef=""position"">
        <th mat-header-cell *matHeaderCellDef>No.</th>
        <td mat-cell *matCellDef=""let element"">{{element.position}}</td>
        <td mat-footer-cell *matFooterCellDef>Number of the element</td>
      </ng-container>

      <ng-container matColumnDef=""name"">
        <th mat-header-cell *matHeaderCellDef>Name</th>
        <td mat-cell *matCellDef=""let element"">{{element.name}}</td>
        <td mat-footer-cell *matFooterCellDef>Name of the element</td>
      </ng-container>

      <ng-container matColumnDef=""weight"">
        <th mat-header-cell *matHeaderCellDef>Weight</th>
        <td mat-cell *matCellDef=""let element"">{{element.weight}}</td>
        <td mat-footer-cell *matFooterCellDef>Weight of the element</td>
      </ng-container>

      <ng-container matColumnDef=""symbol"">
        <th mat-header-cell *matHeaderCellDef>Symbol</th>
        <td mat-cell *matCellDef=""let element"">{{element.symbol}}</td>
        <td mat-footer-cell *matFooterCellDef>Symbol of the element</td>
      </ng-container>

      <tr mat-header-row *matHeaderRowDef=""displayedColumns""></tr>
      <tr mat-footer-row *matFooterRowDef=""displayedColumns""></tr>
      <tr mat-row *matRowDef=""let row; columns: displayedColumns;""></tr>
    </table>
  `",TableHarnessTest,12.0107,14.0067,15.9994,18.9984,20.1797,'should be able to render the basic columns',"`
    <mat-table [dataSource]=""data"">
      <mat-text-column name=""propertyA""></mat-text-column>
      <mat-text-column name=""propertyB""></mat-text-column>
      <mat-text-column name=""propertyC""></mat-text-column>

      <mat-header-row *matHeaderRowDef=""displayedColumns""></mat-header-row>
      <mat-row *matRowDef=""let row; columns: displayedColumns""></mat-row>
    </mat-table>
  `",'.mat-tab-body-content','.mat-tab-body','.mat-tab-label','.mat-tab-label-container','.mat-tab-disabled','mat-tab-group-inverted-header','.mat-tab-label-content',`.mat-tab-label:nth-of-type(${,'mat-tab-label-active','mat-tab-body-active','.mat-tab-label-active','.mat-tab-body-active','.mat-tab-header-pagination-after','.mat-tab-header-pagination-before','.mat-tab-header','mat-tab-header-pagination-controls-enabled','mat-tab-disabled','.mat-ink-bar','.mat-tab-link','.mat-tab-nav-bar','.mat-tab-nav-panel',tabLinkInstance,'without panel','should have no explicit roles',TabBarWithoutPanel,'should not setup aria-controls','should not manage aria-selected','should not activate a link when space is pressed','should manage aria-current','should support the native tabindex attribute',TabBarWithoutPanelWithNativeTabindexAttr,'Expected the tabIndex to be set from the native tabindex attribute.','should support binding to the tabIndex',TabBarWithoutPanelWithTabIndexBinding,'Expected the tabIndex to be set to 0 by default.','Expected the tabIndex to be have been set to 3.',"`
    <nav mat-tab-nav-bar [disableRipple]=""disableRippleOnBar"" [tabPanel]=""tabPanel"">
      <a mat-tab-link
         *ngFor=""let tab of tabs; let index = index""
         [active]=""activeIndex === index""
         [disabled]=""disabled""
         (click)=""activeIndex = index"">
        Tab link {{label}}
      </a>
    </nav>
    <mat-tab-nav-panel #tabPanel id=""tab-panel"">Tab panel</mat-tab-nav-panel>
  `","`
    <nav mat-tab-nav-bar [tabPanel]=""tabPanel"">
      <a mat-tab-link *ngIf=""!isDestroyed"">Link</a>
    </nav>
    <mat-tab-nav-panel #tabPanel >Tab panel</mat-tab-nav-panel>
  `","`
    <nav mat-tab-nav-bar>
      <a mat-tab-link
         *ngFor=""let tab of tabs; let index = index""
         [active]=""index === activeIndex""
         (click)=""activeIndex = index"">
         Tab link
      </a>
    </nav>
  `","`
    <nav mat-tab-nav-bar>
      <a mat-tab-link [tabIndex]=""tabIndex"">TabIndex Link</a>
    </nav>
  `","`
    <nav mat-tab-nav-bar>
      <a mat-tab-link tabindex=""5"">Link</a>
    </nav>
  `",tabGroupHarness,'should load harness for tab-group with matching tab label regex',/f.*st/i,'should be able to get filtered tabs','Third','should throw error when attempting to select invalid tab','Fake',"/Cannot find mat-tab matching filter {""label"":""Fake""}/",'should be able to get label of tabs','should be able to get aria-label of tabs','First tab','Second tab','should be able to get aria-labelledby of tabs','tabLabelId','should be able to get harness for content element of active tab',tabContentHarness,TestTabContentHarness,'should be able to get disabled state of tab','should be able to select specific tab',"`
    <mat-tab-group>
      <mat-tab label=""First"" aria-label=""First tab"">
        <span class=""test-tab-content"">Content 1</span>
      </mat-tab>
      <mat-tab label=""Second"" aria-label=""Second tab"">
        <span class=""test-tab-content"">Content 2</span>
      </mat-tab>
      <mat-tab label=""Third"" aria-labelledby=""tabLabelId"" [disabled]=""isDisabled"">
        <ng-template matTabLabel>Third</ng-template>
        <span class=""test-tab-content"">Content 3</span>
      </mat-tab>
    </mat-tab-group>
  `",TabGroupHarnessTest,'.test-tab-content','should load harness for tab nav bar',navBars,tabNavBarHarness,'should be able to get links of nav bar',navBar,getLinks,'should be able to get filtered links','should be able to click tab from nav bar',getActiveLink,clickLink,'should throw error when attempting to click invalid link',"/Cannot find mat-tab-link matching filter {""label"":""Fake""}/",'should be able to get label of links','should be able to get disabled state of link','should be able to click specific link','should be able to get the associated tab panel',navPanel,'Tab content',"`
    <nav mat-tab-nav-bar [tabPanel]=""tabPanel"">
      <a href=""#"" (click)=""select(0, $event)"" [active]=""activeLink === 0"" matTabLink>First</a>
      <a href=""#"" (click)=""select(1, $event)"" [active]=""activeLink === 1"" matTabLink>Second</a>
      <a
        href=""#""
        (click)=""select(2, $event)""
        [active]=""activeLink === 2""
        [disabled]=""isDisabled""
        matTabLink>Third</a>
    </nav>
    <mat-tab-nav-panel #tabPanel id=""tab-panel"">
      Tab content
    </mat-tab-nav-panel>
  `",TabNavBarHarnessTest,activeLink,toolbarHarness,'should get harness loaders for toolbar row',toolbar,/Button/,rowLoaders,MatToolbarSection,ROW,row1Subcomponents,row2,row2Subcomponents,"`
    <mat-toolbar><span>My App</span></mat-toolbar>
    <mat-toolbar>
      <mat-toolbar-row><span>Row 1</span></mat-toolbar-row>
      <mat-toolbar-row><span>Row 2</span>
        <button mat-button>
          Button 1
        </button>
        <button mat-button>
          Button 2
        </button>
      </mat-toolbar-row>
    </mat-toolbar>
  `",ToolbarHarnessTest,"'span, button'",'Custom Toolbar','Second Lineverified_user','Third Linefavoritedelete','should have multiple rows','should show a toolbar','mat-toolbar',toolbarColor,toolbarElement,'should not wrap the first row contents inside of a generated element','Expected the <span> element of the first row to be a direct child ','of the toolbar','with multiple rows','should project each toolbar-row element inside of the toolbar',ToolbarMultipleRows,'.mat-toolbar > .mat-toolbar-row','Expected one toolbar row to be present while no content is projected.','should throw an error if different toolbar modes are mixed',ToolbarMixedRowModes,/attempting to combine different/i,'should throw an error if a toolbar-row is added later',showToolbarRow,'should pick up indirect descendant rows',ToolbarMultipleIndirectRows,'.mat-toolbar','mat-toolbar-multiple-rows',"`
    <mat-toolbar [color]=""toolbarColor"">
      <span>First Row</span>
    </mat-toolbar>
  `",ToolbarSingleRow,"`
    <mat-toolbar>
      <mat-toolbar-row>First Row</mat-toolbar-row>
      <mat-toolbar-row>Second Row</mat-toolbar-row>
    </mat-toolbar>
  `","`
    <mat-toolbar>
      First Row
      <mat-toolbar-row *ngIf=""showToolbarRow"">Second Row</mat-toolbar-row>
    </mat-toolbar>
  `","`
    <mat-toolbar>
      <ng-container [ngSwitch]=""true"">
        <mat-toolbar-row>First Row</mat-toolbar-row>
        <mat-toolbar-row>Second Row</mat-toolbar-row>
      </ng-container>
    </mat-toolbar>
  `",tooltipHarness,"`
    <button [matTooltip]=""message"" id=""one"">Trigger 1</button>
    <button matTooltip=""Static message"" id=""two"">Trigger 2</button>
  `",TooltipHarnessTest,'should load harness with 2 tress',trees,treeHarness,flatTree,nestedTree,flatTreeDescendants,nestedDescendants,'should correctly get correct node with text (flat tree)',flatTreeNodes,'should correctly get correct node with text (nested tree)',nestedTreeNodes,/2./,thirdGroup,'Nested Leaf 2.1.1','should toggle expansion',/Flat Group 2/,'Flat Group 2.1','Nested Group 1','Nested Group 2',/Nested Group 1/,'Nested Leaf 1.1','Nested Leaf 1.2','Nested Leaf 1.3',/Nested Group 2/,'Nested Group 2.1',FLAT_TREE_DATA,'Flat Leaf 2.1.1','Flat Leaf 2.1.2','Flat Leaf 2.1.3',NESTED_TREE_DATA,'Nested Leaf 2.1.2',ExampleFlatNode,expandable,"`
    <mat-tree [dataSource]=""flatTreeDataSource"" [treeControl]=""flatTreeControl"">
      <!-- This is the tree node template for leaf nodes -->
      <mat-tree-node *matTreeNodeDef=""let node"" matTreeNodePadding>
        {{node.name}}
      </mat-tree-node>
      <!-- This is the tree node template for expandable nodes -->
      <mat-tree-node *matTreeNodeDef=""let node;when: flatTreeHasChild"" matTreeNodePadding>
        <button matTreeNodeToggle>
          Toggle
        </button>
        {{node.name}}
      </mat-tree-node>
    </mat-tree>
    <mat-tree [dataSource]=""nestedTreeDataSource"" [treeControl]=""nestedTreeControl"">
      <!-- This is the tree node template for leaf nodes -->
      <mat-tree-node *matTreeNodeDef=""let node"" matTreeNodeToggle>
        {{node.name}}
      </mat-tree-node>
      <!-- This is the tree node template for expandable nodes -->
      <mat-nested-tree-node *matTreeNodeDef=""let node; when: nestedTreeHasChild"">
        <button matTreeNodeToggle>
          Toggle
        </button>
        {{node.name}}
        <ul [class.example-tree-invisible]=""!nestedTreeControl.isExpanded(node)"">
          <ng-container matTreeNodeOutlet></ng-container>
        </ul>
      </mat-nested-tree-node>
    </mat-tree>
  `",TreeHarnessTest,_transformer,treeFlattener,MatTreeFlattener,flatTreeControl,flatTreeDataSource,MatTreeFlatDataSource,nestedTreeControl,nestedTreeDataSource,MatTreeNestedDataSource,flatTreeHasChild,nestedTreeHasChild,'with the right aria-level attrs',"`_, topping_4 - cheese_4 + base_4`",MatTreeAppWithToggle,configureMatTreeTestingModule,'mat-tree',`Expect node expanded one level`,WhenNodeMatTreeApp,`>>> topping_4 - cheese_4 + base_4`,'flat tree with undefined or null children',MatTreeWithNullOrUndefinedChild,'nested tree with undefined or null children',MatNestedTreeWithNullOrUndefinedChild,NestedMatTreeApp,WhenNodeNestedMatTreeApp,NestedMatTreeAppWithToggle,isSpecial,"'.mat-tree-node, .mat-nested-tree-node'",`Expected node level to be 0px but was ${,"`
    <mat-tree [dataSource]=""dataSource"" [treeControl]=""treeControl"">
      <mat-tree-node *matTreeNodeDef=""let node"" class=""customNodeClass""
                     matTreeNodePadding [matTreeNodePaddingIndent]=""28""
                     matTreeNodeToggle>
                     {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}
      </mat-tree-node>
    </mat-tree>
  `",SimpleMatTreeApp,transformer,MatTree,FoodNode,TREE_DATA,'Apple','Banana','Fruit loops','Vegetables','Broccoli','Brussels sprouts','Orange','Pumpkins','Carrots',"`
    <mat-tree [dataSource]=""dataSource"" [treeControl]=""treeControl"">
      <mat-tree-node *matTreeNodeDef=""let node"" class=""customNodeClass""
                     matTreeNodePadding matTreeNodeToggle>
        {{node.name}}
      </mat-tree-node>
    </mat-tree>
  `",hasChild,"`
    <mat-tree [dataSource]=""dataSource"" [treeControl]=""treeControl"">
      <mat-nested-tree-node *matTreeNodeDef=""let node"" class=""customNodeClass"">
        {{node.name}}
        <ng-template matTreeNodeOutlet></ng-template>
      </mat-nested-tree-node>
    </mat-tree>
  `","`
    <mat-tree [dataSource]=""dataSource"" [treeControl]=""treeControl"">
      <mat-nested-tree-node *matTreeNodeDef=""let node"" class=""customNodeClass"">
                     {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}
         <ng-template matTreeNodeOutlet></ng-template>
      </mat-nested-tree-node>
    </mat-tree>
  `","`
    <mat-tree [dataSource]=""dataSource"" [treeControl]=""treeControl"">
      <mat-nested-tree-node *matTreeNodeDef=""let node"">
                     {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}
         <ng-template matTreeNodeOutlet></ng-template>
      </mat-nested-tree-node>
       <mat-nested-tree-node *matTreeNodeDef=""let node; when: isSpecial""
                             matTreeNodeToggle>
                     >>> {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}
         <div *ngIf=""treeControl.isExpanded(node)"">
            <ng-template matTreeNodeOutlet></ng-template>
         </div>
      </mat-nested-tree-node>
    </mat-tree>
  `","`
    <mat-tree [dataSource]=""dataSource"" [treeControl]=""treeControl"">
      <mat-tree-node *matTreeNodeDef=""let node"" class=""customNodeClass""
                     matTreeNodePadding
                     matTreeNodeToggle [matTreeNodeToggleRecursive]=""toggleRecursively"">
                     {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}
      </mat-tree-node>
    </mat-tree>
  `","`
    <mat-tree [dataSource]=""dataSource"" [treeControl]=""treeControl"">
      <mat-nested-tree-node *matTreeNodeDef=""let node"" class=""customNodeClass""
                            matTreeNodeToggle [matTreeNodeToggleRecursive]=""toggleRecursively"">
                     {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}
        <div *ngIf=""treeControl.isExpanded(node)"">
          <ng-template matTreeNodeOutlet></ng-template>
        </div>
      </mat-nested-tree-node>
    </mat-tree>
  `","`
    <mat-tree [dataSource]=""dataSource"" [treeControl]=""treeControl"">
      <mat-tree-node *matTreeNodeDef=""let node"" class=""customNodeClass""
                     matTreeNodePadding [matTreeNodePaddingIndent]=""28""
                     matTreeNodeToggle>
                     {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}
      </mat-tree-node>
       <mat-tree-node *matTreeNodeDef=""let node; when: isSpecial"" class=""customNodeClass""
                     matTreeNodePadding [matTreeNodePaddingIndent]=""28""
                     matTreeNodeToggle>
                     >>> {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}
      </mat-tree-node>
    </mat-tree>
  `",'initializes a youtube player',playerCtorSpy,videoId,VIDEO_ID,DEFAULT_PLAYER_WIDTH,DEFAULT_PLAYER_HEIGHT,playerVars,'destroys the iframe when the component is destroyed',onReady,playerSpy,'responds to changes in video id','otherId',cueVideoById,'otherId2','responds to changes in size',setSize,youtubePlayer,'passes the configured playerVars to the player',YT,PlayerVars,modestbranding,ModestBranding,Modest,'initializes the player with start and end seconds',startSeconds,endSeconds,getPlayerState,PlayerState,CUED,'sets the suggested quality',suggestedQuality,setPlaybackQuality,'proxies events as output',onStateChange,onPlaybackQualityChange,onPlaybackRateChange,onApiChange,'proxies methods to the player',playVideo,pauseVideo,stopVideo,mute,unMute,isMuted,seekTo,setVolume,getVolume,setPlaybackRate,getPlaybackRate,getAvailablePlaybackRates,getVideoLoadedFraction,getCurrentTime,getPlaybackQuality,getAvailableQualityLevels,getDuration,getVideoUrl,getVideoEmbedCode,'should play on init if playVideo was called before the API has loaded',PLAYING,'should pause on init if pauseVideo was called before the API has loaded',PAUSED,'should stop on init if stopVideo was called before the API has loaded','should set the playback rate on init if setPlaybackRate was called before ','the API has loaded','should set the volume on init if setVolume was called before the API has loaded','should mute on init if mute was called before the API has loaded','should unmute on init if umMute was called before the API has loaded','should seek on init if seekTo was called before the API has loaded','API loaded asynchronously',api,onYouTubeIframeAPIReady,'waits until the api is ready before initializing',YT_LOADING_STATE_MOCK,'should not override any pre-existing API loaded callbacks','other API loaded spy','should pick up static startSeconds and endSeconds values',staticSecondsApp,StaticStartEndSecondsApp,'should be able to subscribe to events after initialization',noEventsApp,NoEventsApp,player,readySpy,'ready spy',stateChangeSpy,'stateChange spy',playbackQualityChangeSpy,'playbackQualityChange spy',playbackRateChangeSpy,'playbackRateChange spy',errorSpy,'error spy',apiChangeSpy,'apiChange spy',ready,stateChange,playbackQualityChange,playbackRateChange,apiChange,"`
    <youtube-player #player [videoId]=""videoId"" *ngIf=""visible"" [width]=""width"" [height]=""height""
      [startSeconds]=""startSeconds"" [endSeconds]=""endSeconds"" [suggestedQuality]=""suggestedQuality""
      [playerVars]=""playerVars""
      (ready)=""onReady($event)""
      (stateChange)=""onStateChange($event)""
      (playbackQualityChange)=""onPlaybackQualityChange($event)""
      (playbackRateChange)=""onPlaybackRateChange($event)""
      (error)=""onError($event)""
      (apiChange)=""onApiChange($event)"">
    </youtube-player>
  `",SuggestedVideoQuality,'onReady','onStateChange','onPlaybackQualityChange','onPlaybackRateChange','onError','onApiChange','player',YouTubePlayer,"`
    <youtube-player [videoId]=""videoId"" [startSeconds]=""42"" [endSeconds]=""1337""></youtube-player>
  `","`<youtube-player [videoId]=""videoId""></youtube-player>`","""should navigate to Contact after clicking a Gatsby link""","""http://localhost:8888""","""pathname""","""eq""","""/contact/""","""main""","""include.text""","""Contact""","""should link back to the homepage from Contact""","""http://localhost:8888/contact""","""/""","""What a world.""","""Has no detectable accessibility violations on load""",checkA11y,"""Navigates to page 2 and checks for accessibility violations""",/go to page 2/i,"""Focuses on the footer link and asserts its attributes""",findAllByText,"""Gatsby""","""have.text""","""have.attr""","""href""","""https://www.gatsbyjs.com""","""not.have.css""","""outline-width""","""0px""","""Has a skip link""","""[data-reach-skip-link]""","""exist""","""focuses skip link on navigation""","""[data-cy-page-link]""","""data-reach-skip-link""","""has no content in the body""",dm,danger,github,issue,emptybody,toBeCalled,"""only contains whitespace in body""","""\n""","""has a body with content""","""Moya is awesome""","""was merged and authored by a first-time contributor""",pr,merged,inviteCollaborator,issues,addTeamMembership,"""was merged and authored by an existing collaborator""",getTeamMembership,"""204 No Content""","""does not comment if invitation failed""","""422 Unprocessable Entity""","""with question mark in a title""","""Help - Has anyone hosted a gatsby.js site on Platform.sh?""",labeler,addLabels,repo,"""gatsby""",owner,"""gatsbyjs""","""type: question or discussion""","""with existing labels""","""How are labels handled?""","""good first issue""","""starting with how""","""How do you justify Gatsby’s bundle size to clients""","""including tutorial""","""Tutorial template + gold standard example""","""type: documentation""","""including readme""","""[v2] default starter: update README""","""not recognised""","""Supporting HSTS and how to HSTS preloading""","""error logging""",apiError,"""Mocked error""","""log error""",logApiError,"""issues.addLabel""","""was closed with a comment""",closePullRequestAndComment,pullRequests,"""peril-gatsbyjs""",comment,"""someUser""",labeltestclass,predictedclass
112,17,1.0,0.0,1,0,0,0.0,0,0,0.0,0.0,0.0,0.0,1,0.0,0.0,0,0.0,0,0,1,0,0.0,0,1,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0.0,0,0,0.0,1,0.0,1,0.0,0.0,0,1,0.0,0.0,0,0,0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0,0.0,0,1,0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0.0,1,1,0,0,1,0,0,1,0,1,0,1,0,1,1,0.0,0,0,0.0,0,0,0,0,0,0.0,0,0,0,0,0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0,0,0,0,0.0,0,0,0.0,0.0,1,0,0.0,0,0.0,0,0.0,0,0.0,0.0,0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0,1,0.0,0,0.0,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,1,0,0.0,1,0.0,1,0,1,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,1,1,1,0,1,1,0,0,0.0,0,0.0,1,0.0,0,0.0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0,0,0,0.0,0,0.0,0,0,0,0,0,0.0,0,0,0,0.0,0,0,0,0,0,0,0.0,0,0,0.0,0.0,0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0,0.0,0,0.0,0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0,0.0,0,0,0.0,0.0,0,0.0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0,0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0,0,0,0,0,0,0,0,0,0.0,0,0.0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0.0,0,0,0,0.0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0,0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0,0,0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0,0,0,0,0.0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0,0,0,0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0,0,0.0,0,0.0,0.0,0,0,0.0,0,0.0,0.0,0,0.0,0,0.0,0,0,0.0,0,0.0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0,0,0,0,0,0.0,0,0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,True,False
369,22,0.0,0.0,0,0,0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0,1,0,0.0,0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0.0,0,0,0.0,0,0.0,1,0.0,0.0,0,1,0.0,0.0,0,0,0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0,0.0,0,0,0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0.0,0,0,0.0,0,0,0,0,0,0.0,0,0,0,0,0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,1,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0,0,1.0,0,0,0,1,0.0,0,0,0.0,0.0,0,0,0.0,1,0.0,0,0.0,0,0.0,0.0,0,0,0,1,0.0,0,0.0,0.0,0.0,0.0,0,1,0.0,0,0.0,0,0,0.0,0,0,0.0,0,0,0.0,0,1,0.0,0,0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1,0.0,0.0,0.0,1,0.0,0.0,0.0,0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0.0,0,0.0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.0,1.0,1.0,1,1,1,1.0,1,1.0,1,1,1,1.0,1,1.0,1,1,1,1,1,1.0,1,1,1,1.0,1,1,1,1,1,1,0.0,0,0,0.0,0.0,0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0,0.0,0,0.0,0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0,0.0,0,0,0.0,0.0,0,0.0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0,0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0,0,0,0,0,0,0,0,0,0.0,0,0.0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0.0,0,0,0,0.0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0,0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0,0,0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0,0,0,0,0.0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0,0,0,0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0,0,0.0,0,0.0,0.0,0,0,0.0,0,0.0,0.0,0,0.0,0,0.0,0,0,0.0,0,0.0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0,0,0,0,0,0.0,0,0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,True,False
1010,92,1.0,0.0,0,0,0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0,0,0,0.0,0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0.0,0,0,0.0,0,0.0,0,0.0,0.0,0,1,0.0,0.0,0,0,0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0,0.0,0,0,0,0,0.0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,1,0.0,0,0,0,0,0,0.0,0,0,0,0,0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0,0,0,0,0.0,0,0,0.0,0.0,1,0,0.0,0,0.0,0,0.0,0,0.0,0.0,0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0,1,0.0,0,0.0,0,0,0.0,0,0,0.0,0,1,0.0,0,0,0.0,0,0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0.0,0,0.0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0,0,0,0.0,0,0.0,0,0,0,0,0,0.0,0,0,0,0.0,0,0,0,0,0,0,0.0,0,0,0.0,0.0,0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,1,1,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0,0.0,0,0.0,0,0,1,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0,0.0,0,0,0.0,0.0,0,0.0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0,0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,1,0,0.0,0,1,0,0,1,0,0,0,0,0,1,0.0,0.0,0.0,0.0,0,0,0,0,0,0,0,0,0,0.0,0,0.0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0.0,0,0,0,0.0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0,0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0,0,0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0,0,0,0,0.0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,1,1,1,1,1,1,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0,0,0,0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0,0,0.0,0,0.0,0.0,0,0,0.0,0,0.0,0.0,0,0.0,0,0.0,0,0,0.0,0,0.0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0,0,0,0,0,0.0,0,0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,True,False
1038,7,0.0,0.0,0,0,0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0,0,0,0.0,0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0.0,0,0,0.0,0,0.0,1,0.0,0.0,0,0,0.0,0.0,0,0,0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0,0.0,0,1,0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0.0,0,0,0.0,0,0,0,0,0,0.0,0,0,0,0,0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0,0,0,0,0.0,0,0,0.0,0.0,0,0,0.0,1,0.0,0,0.0,0,0.0,0.0,0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0,1,0.0,0,0.0,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0,0,0,0.0,1,0.0,0,0,1,0,1,0.0,0.0,0.0,0.0,0.0,1,1.0,1.0,1,1,1.0,0,0,0.0,0.0,0.0,1.0,1.0,1,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0.0,0,0.0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0,0,0,0.0,0,0.0,0,0,0,0,0,0.0,0,0,0,0.0,0,0,0,0,0,0,0.0,0,0,0.0,0.0,0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0,0.0,0,0.0,0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0,0.0,0,0,0.0,0.0,0,0.0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0,0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0,0,0,0,0,0,0,0,0,0.0,0,0.0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0.0,0,0,0,0.0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0,0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0,0,0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0,0,0,0,0.0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0,0,0,0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0,0,0.0,0,0.0,0.0,0,0,0.0,0,0.0,0.0,0,0.0,0,0.0,0,0,0.0,0,0.0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0,0,0,0,0,0.0,0,0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,True,False
1133,108,0.0,0.0,1,0,0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,1,0,0,0.0,0,0,0,0.0,0.0,1,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0.0,0,0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0.0,0,0,1,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0,0.0,0,0,0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0,0.0,0,0,0,0,0,0.0,0,0,0,0,0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0,0,0,0,0.0,0,0,0.0,0.0,0,0,0.0,0,0.0,0,0.0,0,0.0,0.0,0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0,1,0.0,0,0.0,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0.0,0,0.0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0,0,0,0.0,0,0.0,0,0,0,0,0,0.0,0,0,0,0.0,0,0,0,1,0,0,0.0,0,0,0.0,0.0,0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0,0.0,0,0.0,0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0,0.0,0,0,0.0,0.0,0,0.0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,1,0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0,0,0,0,0,0,0,0,0,0.0,0,0.0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0.0,0,0,0,0.0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0,0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0,0,0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0,0,0,0,0.0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0,0,0,0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0,0,0.0,0,0.0,0.0,0,0,0.0,0,0.0,0.0,0,0.0,0,0.0,0,0,0.0,0,0.0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,1,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0,0,0,0,0,0.0,0,0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,True,False
1647,65,1.0,0.0,1,0,0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0,1,0,0.0,0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,1,0.0,0.0,0,0,0.0,0,0.0,0,0.0,0.0,0,1,0.0,0.0,0,0,0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0,0.0,0,0,0,0,0.0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,1,0.0,0,0,0,0,0,0.0,0,0,0,0,0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0,0,0,0,0.0,0,0,0.0,0.0,0,0,0.0,0,0.0,0,0.0,0,0.0,0.0,0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0,1,0.0,0,0.0,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0.0,0,0.0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0,0,0,0.0,0,0.0,0,0,0,0,0,0.0,0,0,0,0.0,0,0,0,1,0,0,0.0,0,0,0.0,0.0,0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,1,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0,0.0,0,0.0,0,0,1,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0,0.0,0,0,0.0,0.0,0,0.0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0,0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,1,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0,0.0,0,1,0,0,1,0,0,0,0,0,1,0.0,0.0,0.0,0.0,0,0,0,0,0,0,0,0,0,0.0,0,0.0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0.0,0,0,0,0.0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,1,0,0,1,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0,0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0,0,0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0,0,0,0,0.0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0,0,0,0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0,0,0.0,0,0.0,0.0,0,0,0.0,0,0.0,0.0,0,0.0,0,0.0,0,0,0.0,0,0.0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0,0,0,0,0,0.0,0,0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,True,False
1867,38,1.0,0.0,1,0,0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0,0,0,0.0,0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0.0,0,0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0.0,0,0,0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0,0.0,0,0,0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0,0.0,0,0,0,0,0,0.0,0,0,0,0,0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0,0,0,0,0.0,0,0,0.0,0.0,0,0,0.0,0,0.0,0,0.0,0,0.0,0.0,0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0,1,0.0,0,0.0,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0.0,0,0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,1,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0.0,0,0.0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0,0,0,0.0,0,0.0,0,0,0,0,0,0.0,0,0,0,0.0,0,0,0,1,0,0,0.0,0,0,0.0,0.0,0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,1,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,1,1.0,1.0,1.0,1.0,1.0,1.0,1,1,1.0,1,1.0,1,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0,0.0,0,0.0,0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0,0.0,0,0,0.0,0.0,0,0.0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0,0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0,0,0,0,0,0,0,0,0,0.0,0,0.0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0.0,0,0,0,0.0,0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,0,0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0,0,0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0,0,0,0,0.0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0,0,0,0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0,0,0.0,0,0.0,0.0,0,0,0.0,0,0.0,0.0,0,0.0,0,0.0,0,0,0.0,0,0.0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0,0,0,0,0,0.0,0,0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0,0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,True,False
